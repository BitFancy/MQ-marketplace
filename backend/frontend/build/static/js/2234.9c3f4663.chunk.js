(self.webpackChunknft_market=self.webpackChunknft_market||[]).push([[2234],{92234:(e,t,n)=>{"use strict";n.r(t),n.d(t,{fromCognitoIdentity:()=>l,fromCognitoIdentityPool:()=>g,fromHttp:()=>C,fromTemporaryCredentials:()=>I,fromWebToken:()=>b});var o=n(43419);function r(e){return Promise.all(Object.keys(e).reduce(((t,n)=>{const o=e[n];return"string"===typeof o?t.push([n,o]):t.push(o().then((e=>[n,e]))),t}),[])).then((e=>e.reduce(((e,t)=>{let[n,o]=t;return e[n]=o,e}),{})))}function i(e){return async()=>{var t,o,i,l,d,u;null===(t=e.logger)||void 0===t||t.debug("@aws-sdk/credential-provider-cognito-identity","fromCognitoIdentity");const{GetCredentialsForIdentityCommand:m,CognitoIdentityClient:w}=await Promise.all([n.e(1057),n.e(5487),n.e(1012)]).then(n.bind(n,11012)),{Credentials:{AccessKeyId:h=s(),Expiration:g,SecretKey:f=a(),SessionToken:p}=c()}=await(null!==(o=e.client)&&void 0!==o?o:new w(Object.assign({},null!==(i=e.clientConfig)&&void 0!==i?i:{},{region:null!==(l=null===(d=e.clientConfig)||void 0===d?void 0:d.region)&&void 0!==l?l:null===(u=e.parentClientConfig)||void 0===u?void 0:u.region}))).send(new m({CustomRoleArn:e.customRoleArn,IdentityId:e.identityId,Logins:e.logins?await r(e.logins):void 0}));return{identityId:e.identityId,accessKeyId:h,secretAccessKey:f,sessionToken:p,expiration:g}}}function s(){throw new o.C1("Response from Amazon Cognito contained no access key ID")}function c(){throw new o.C1("Response from Amazon Cognito contained no credentials")}function a(){throw new o.C1("Response from Amazon Cognito contained no secret key")}const l=e=>i({...e}),d="IdentityIds";class u{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"aws:cognito-identity-ids";this.dbName=e}getItem(e){return this.withObjectStore("readonly",(t=>{const n=t.get(e);return new Promise((e=>{n.onerror=()=>e(null),n.onsuccess=()=>e(n.result?n.result.value:null)}))})).catch((()=>null))}removeItem(e){return this.withObjectStore("readwrite",(t=>{const n=t.delete(e);return new Promise(((e,t)=>{n.onerror=()=>t(n.error),n.onsuccess=()=>e()}))}))}setItem(e,t){return this.withObjectStore("readwrite",(n=>{const o=n.put({id:e,value:t});return new Promise(((e,t)=>{o.onerror=()=>t(o.error),o.onsuccess=()=>e()}))}))}getDb(){const e=self.indexedDB.open(this.dbName,1);return new Promise(((t,n)=>{e.onsuccess=()=>{t(e.result)},e.onerror=()=>{n(e.error)},e.onblocked=()=>{n(new Error("Unable to access DB"))},e.onupgradeneeded=()=>{const t=e.result;t.onerror=()=>{n(new Error("Failed to create object store"))},t.createObjectStore(d,{keyPath:"id"})}}))}withObjectStore(e,t){return this.getDb().then((n=>{const o=n.transaction(d,e);return o.oncomplete=()=>n.close(),new Promise(((e,n)=>{o.onerror=()=>n(o.error),e(t(o.objectStore(d)))})).catch((e=>{throw n.close(),e}))}))}}const m=new class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.store=e}getItem(e){return e in this.store?this.store[e]:null}removeItem(e){delete this.store[e]}setItem(e,t){this.store[e]=t}};function w(){return"object"===typeof self&&self.indexedDB?new u:"object"===typeof window&&window.localStorage?window.localStorage:m}function h(){throw new o.C1("Response from Amazon Cognito contained no identity ID")}const g=e=>function(e){let{accountId:t,cache:o=w(),client:s,clientConfig:c,customRoleArn:a,identityPoolId:l,logins:d,userIdentifier:u=(d&&0!==Object.keys(d).length?void 0:"ANONYMOUS"),logger:m,parentClientConfig:g}=e;null===m||void 0===m||m.debug("@aws-sdk/credential-provider-cognito-identity","fromCognitoIdentity");const f=u?"aws:cognito-identity-credentials:".concat(l,":").concat(u):void 0;let p=async()=>{var e;const{GetIdCommand:u,CognitoIdentityClient:m}=await Promise.all([n.e(1057),n.e(5487),n.e(1012)]).then(n.bind(n,11012)),w=null!==s&&void 0!==s?s:new m(Object.assign({},null!==c&&void 0!==c?c:{},{region:null!==(e=null===c||void 0===c?void 0:c.region)&&void 0!==e?e:null===g||void 0===g?void 0:g.region}));let y=f&&await o.getItem(f);if(!y){const{IdentityId:e=h()}=await w.send(new u({AccountId:t,IdentityPoolId:l,Logins:d?await r(d):void 0}));y=e,f&&Promise.resolve(o.setItem(f,y)).catch((()=>{}))}return p=i({client:w,customRoleArn:a,logins:d,identityId:y}),p()};return()=>p().catch((async e=>{throw f&&Promise.resolve(o.removeItem(f)).catch((()=>{})),e}))}({...e});var f=n(28344);var p=n(92776),y=n(20889),v=n(63058);const C=e=>{var t,n,r;let i;null===(t=e.logger)||void 0===t||t.debug("@aws-sdk/credential-provider-http","fromHttp");const s=e.credentialsFullUri;if(!s)throw new o.C1("No HTTP credential provider host provided.");i=s;const c=new URL(i);(e=>{if("https:"!==e.protocol&&"169.254.170.2"!==e.hostname&&"169.254.170.23"!==e.hostname&&"[fd00:ec2::23]"!==e.hostname){if(e.hostname.includes("[")){if("[::1]"===e.hostname||"[0000:0000:0000:0000:0000:0000:0000:0001]"===e.hostname)return}else{if("localhost"===e.hostname)return;const t=e.hostname.split("."),n=e=>{const t=parseInt(e,10);return 0<=t&&t<=255};if("127"===t[0]&&n(t[1])&&n(t[2])&&n(t[3])&&4===t.length)return}throw new o.C1("URL not accepted. It must either be HTTPS or match one of the following:\n  - loopback CIDR 127.0.0.0/8 or [::1/128]\n  - ECS container host 169.254.170.2\n  - EKS container host 169.254.170.23 or [fd00:ec2::23]")}})(c);const a=new f.NC;return l=async()=>{const t=function(e){return new p.Kd({protocol:e.protocol,hostname:e.hostname,port:Number(e.port),path:e.pathname,query:Array.from(e.searchParams.entries()).reduce(((e,t)=>{let[n,o]=t;return e[n]=o,e}),{}),fragment:e.hash})}(c);return e.authorizationToken&&(t.headers.Authorization=e.authorizationToken),async function(e){var t,n;const r=null!==(t=null!==(n=null===e||void 0===e?void 0:e.headers["content-type"])&&void 0!==n?n:null===e||void 0===e?void 0:e.headers["Content-Type"])&&void 0!==t?t:"";r.includes("json")||console.warn("HTTP credential provider response header content-type was not application/json. Observed: "+r+".");const i=(0,v.c9)(e.body),s=await i.transformToString();if(200===e.statusCode){const e=JSON.parse(s);if("string"!==typeof e.AccessKeyId||"string"!==typeof e.SecretAccessKey||"string"!==typeof e.Token||"string"!==typeof e.Expiration)throw new o.C1("HTTP credential provider response not of the required format, an object matching: { AccessKeyId: string, SecretAccessKey: string, Token: string, Expiration: string(rfc3339) }");return{accessKeyId:e.AccessKeyId,secretAccessKey:e.SecretAccessKey,sessionToken:e.Token,expiration:(0,y.EI)(e.Expiration)}}if(e.statusCode>=400&&e.statusCode<500){let t={};try{t=JSON.parse(s)}catch(c){}throw Object.assign(new o.C1("Server responded with status: ".concat(e.statusCode)),{Code:t.Code,Message:t.Message})}throw new o.C1("Server responded with status: ".concat(e.statusCode))}((await a.handle(t)).response)},d=null!==(n=e.maxRetries)&&void 0!==n?n:3,u=null!==(r=e.timeout)&&void 0!==r?r:1e3,async()=>{for(let t=0;t<d;++t)try{return await l()}catch(e){await new Promise((e=>setTimeout(e,u)))}return await l()};var l,d,u},I=e=>{let t;return async()=>{var r,i;null===(r=e.logger)||void 0===r||r.debug("@aws-sdk/credential-providers","fromTemporaryCredentials (STS)");const s={...e.params,RoleSessionName:null!==(i=e.params.RoleSessionName)&&void 0!==i?i:"aws-sdk-js-"+Date.now()};if(null!==s&&void 0!==s&&s.SerialNumber){if(!e.mfaCodeProvider)throw new o.C1("Temporary credential requires multi-factor authentication, but no MFA code callback was provided.",!1);s.TokenCode=await e.mfaCodeProvider(null===s||void 0===s?void 0:s.SerialNumber)}const{AssumeRoleCommand:c,STSClient:a}=await Promise.all([n.e(1057),n.e(6790),n.e(712)]).then(n.bind(n,70712));if(t||(t=new a({...e.clientConfig,credentials:e.masterCredentials})),e.clientPlugins)for(const n of e.clientPlugins)t.middlewareStack.use(n);const{Credentials:l}=await t.send(new c(s));if(!l||!l.AccessKeyId||!l.SecretAccessKey)throw new o.C1("Invalid response from STS.assumeRole call with role ".concat(s.RoleArn));return{accessKeyId:l.AccessKeyId,secretAccessKey:l.SecretAccessKey,sessionToken:l.SessionToken,expiration:l.Expiration,credentialScope:l.CredentialScope}}};n(2747);const b=e=>(e=>async()=>{var t;null===(t=e.logger)||void 0===t||t.debug("@aws-sdk/credential-provider-web-identity","fromWebToken");const{roleArn:o,roleSessionName:r,webIdentityToken:i,providerId:s,policyArns:c,policy:a,durationSeconds:l}=e;let{roleAssumerWithWebIdentity:d}=e;if(!d){const{getDefaultRoleAssumerWithWebIdentity:t}=await Promise.all([n.e(1057),n.e(6790),n.e(2427)]).then(n.bind(n,72427));d=t({...e.clientConfig,credentialProviderLogger:e.logger,parentClientConfig:e.parentClientConfig},e.clientPlugins)}return d({RoleArn:o,RoleSessionName:null!==r&&void 0!==r?r:"aws-sdk-js-session-".concat(Date.now()),WebIdentityToken:i,ProviderId:s,PolicyArns:c,Policy:a,DurationSeconds:l})})({...e})},2747:()=>{}}]);
//# sourceMappingURL=2234.9c3f4663.chunk.js.map