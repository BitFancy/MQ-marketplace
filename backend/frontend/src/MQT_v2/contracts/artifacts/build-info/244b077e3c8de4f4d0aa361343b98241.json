{
	"id": "244b077e3c8de4f4d0aa361343b98241",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\";\r\n\r\ncontract MQNFT is ERC721URIStorage, Ownable,ReentrancyGuardUpgradeable {\r\n    uint256 public _tokenIdCounter;\r\n    uint256 public _mintPrice;\r\n    address public _masterAddress;\r\n    address public _marketPlaceAddress;\r\n\r\n    event TokenCreated(uint256 indexed tokenId, address indexed owner, string tokenURI);\r\n\r\n    constructor(uint256 mintPrice) ERC721(\"MQNFT\", \"MQT\") Ownable(msg.sender) {\r\n        require(mintPrice > 0, \"mintPrice is greater than zero\");\r\n        _tokenIdCounter = 0;\r\n        _mintPrice = mintPrice;\r\n        _masterAddress = msg.sender;\r\n    }\r\n\r\n    function setMarketPlaceAddress(address marketPlaceAddress)  public onlyOwner{\r\n        _marketPlaceAddress = marketPlaceAddress;\r\n        for (uint256 i=0; i<_tokenIdCounter; i++){\r\n            approve(_marketPlaceAddress, i);\r\n        }\r\n    }\r\n\r\n    function setMintPrice(uint256 mintPrice) public onlyOwner {\r\n        _mintPrice = mintPrice;\r\n    }\r\n\r\n    function setMasterAddress(address masterAddress) public onlyOwner {\r\n        _masterAddress = masterAddress;\r\n    }\r\n\r\n    function mintNFT(string memory tokenURI) public payable nonReentrant returns (uint256){\r\n        uint256 tokenId = _tokenIdCounter;\r\n        require(msg.value >= _mintPrice, \"Not enough ETH\");\r\n        _safeMint(msg.sender, tokenId);\r\n        _setTokenURI(tokenId, tokenURI);\r\n        approve(_marketPlaceAddress, tokenId);\r\n        emit TokenCreated(tokenId, msg.sender, tokenURI);\r\n        _tokenIdCounter++;\r\n        return tokenId;\r\n    }\r\n\r\n    function withDraw() external {\r\n        require(msg.sender == _masterAddress, \"Not master address\");\r\n        // Transfer the entire balance of this contract to the master address\r\n        (bool success, ) = _masterAddress.call{value: address(this).balance}(\"\");\r\n        require(success, \"Transfer failed.\");\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ReentrancyGuardUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f\",\"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 268,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 337,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 347,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 688,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 690,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 694,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 698,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 702,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 708,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 688,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 690,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 694,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 698,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 702,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 708,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1827,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D ADD 0x1F PUSH10 0xBF6E659C6D111FB8052 0xDA EXTCODESIZE SWAP11 PUSH3 0x6D292B 0x25 MSIZE TLOAD PUSH16 0xC5A403F14A616B64736F6C6343000819 STOP CALLER ",
							"sourceMap": "251:2847:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D ADD 0x1F PUSH10 0xBF6E659C6D111FB8052 0xDA EXTCODESIZE SWAP11 PUSH3 0x6D292B 0x25 MSIZE TLOAD PUSH16 0xC5A403F14A616B64736F6C6343000819 STOP CALLER ",
							"sourceMap": "251:2847:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE LOG2 0xEF EXTCODEHASH DUP9 0xBE DUP5 STOP 0xCE 0xBD SWAP8 CALLDATACOPY 0xB8 0xCB MLOAD PUSH28 0xF9973BFA41911F1861C42B7B76811B3164736F6C6343000819003300 ",
							"sourceMap": "216:1047:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE LOG2 0xEF EXTCODEHASH DUP9 0xBE DUP5 STOP 0xCE 0xBD SWAP8 CALLDATACOPY 0xB8 0xCB MLOAD PUSH28 0xF9973BFA41911F1861C42B7B76811B3164736F6C6343000819003300 ",
							"sourceMap": "216:1047:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFT.sol": {
				"MQNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "mintPrice",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "tokenURI",
									"type": "string"
								}
							],
							"name": "TokenCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_marketPlaceAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_masterAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_mintPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_tokenIdCounter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenURI",
									"type": "string"
								}
							],
							"name": "mintNFT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "marketPlaceAddress",
									"type": "address"
								}
							],
							"name": "setMarketPlaceAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "masterAddress",
									"type": "address"
								}
							],
							"name": "setMasterAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "mintPrice",
									"type": "uint256"
								}
							],
							"name": "setMintPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withDraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFT.sol\":283:2110  contract MQNFT is ERC721URIStorage, Ownable,ReentrancyGuardUpgradeable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFT.sol\":601:851  constructor(uint256 mintPrice) ERC721(\"MQNFT\", \"MQT\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/NFT.sol\":663:673  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x4d514e4654000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4d51540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/NFT.sol\":706:707  0 */\n  0x00\n    /* \"contracts/NFT.sol\":694:703  mintPrice */\n  dup2\n    /* \"contracts/NFT.sol\":694:707  mintPrice > 0 */\n  gt\n    /* \"contracts/NFT.sol\":686:742  require(mintPrice > 0, \"mintPrice is greater than zero\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"contracts/NFT.sol\":771:772  0 */\n  0x00\n    /* \"contracts/NFT.sol\":753:768  _tokenIdCounter */\n  0x3a\n    /* \"contracts/NFT.sol\":753:772  _tokenIdCounter = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFT.sol\":796:805  mintPrice */\n  dup1\n    /* \"contracts/NFT.sol\":783:793  _mintPrice */\n  0x3b\n    /* \"contracts/NFT.sol\":783:805  _mintPrice = mintPrice */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFT.sol\":833:843  msg.sender */\n  caller\n    /* \"contracts/NFT.sol\":816:830  _masterAddress */\n  0x3c\n  0x00\n    /* \"contracts/NFT.sol\":816:843  _masterAddress = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFT.sol\":601:851  constructor(uint256 mintPrice) ERC721(\"MQNFT\", \"MQT\") Ownable(msg.sender) {... */\n  pop\n    /* \"contracts/NFT.sol\":283:2110  contract MQNFT is ERC721URIStorage, Ownable,ReentrancyGuardUpgradeable {... */\n  jump(tag_21)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x07\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x07\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_24:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_26:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_27:\n    /* \"#utility.yul\":490:514   */\n  tag_60\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_26\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_61:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_28:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_63\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_27\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_3:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_66\n  tag_24\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":781:900   */\ntag_65:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_67\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_28\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1051:1150   */\ntag_29:\n    /* \"#utility.yul\":1103:1109   */\n  0x00\n    /* \"#utility.yul\":1137:1142   */\n  dup2\n    /* \"#utility.yul\":1131:1143   */\n  mload\n    /* \"#utility.yul\":1121:1143   */\n  swap1\n  pop\n    /* \"#utility.yul\":1051:1150   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1156:1336   */\ntag_30:\n    /* \"#utility.yul\":1204:1281   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1201:1202   */\n  0x00\n    /* \"#utility.yul\":1194:1282   */\n  mstore\n    /* \"#utility.yul\":1301:1305   */\n  0x41\n    /* \"#utility.yul\":1298:1299   */\n  0x04\n    /* \"#utility.yul\":1291:1306   */\n  mstore\n    /* \"#utility.yul\":1325:1329   */\n  0x24\n    /* \"#utility.yul\":1322:1323   */\n  0x00\n    /* \"#utility.yul\":1315:1330   */\n  revert\n    /* \"#utility.yul\":1342:1522   */\ntag_31:\n    /* \"#utility.yul\":1390:1467   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1387:1388   */\n  0x00\n    /* \"#utility.yul\":1380:1468   */\n  mstore\n    /* \"#utility.yul\":1487:1491   */\n  0x22\n    /* \"#utility.yul\":1484:1485   */\n  0x04\n    /* \"#utility.yul\":1477:1492   */\n  mstore\n    /* \"#utility.yul\":1511:1515   */\n  0x24\n    /* \"#utility.yul\":1508:1509   */\n  0x00\n    /* \"#utility.yul\":1501:1516   */\n  revert\n    /* \"#utility.yul\":1528:1848   */\ntag_32:\n    /* \"#utility.yul\":1572:1578   */\n  0x00\n    /* \"#utility.yul\":1609:1610   */\n  0x02\n    /* \"#utility.yul\":1603:1607   */\n  dup3\n    /* \"#utility.yul\":1599:1611   */\n  div\n    /* \"#utility.yul\":1589:1611   */\n  swap1\n  pop\n    /* \"#utility.yul\":1656:1657   */\n  0x01\n    /* \"#utility.yul\":1650:1654   */\n  dup3\n    /* \"#utility.yul\":1646:1658   */\n  and\n    /* \"#utility.yul\":1677:1695   */\n  dup1\n    /* \"#utility.yul\":1667:1748   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":1733:1737   */\n  0x7f\n    /* \"#utility.yul\":1725:1731   */\n  dup3\n    /* \"#utility.yul\":1721:1738   */\n  and\n    /* \"#utility.yul\":1711:1738   */\n  swap2\n  pop\n    /* \"#utility.yul\":1667:1748   */\ntag_72:\n    /* \"#utility.yul\":1795:1797   */\n  0x20\n    /* \"#utility.yul\":1787:1793   */\n  dup3\n    /* \"#utility.yul\":1784:1798   */\n  lt\n    /* \"#utility.yul\":1764:1782   */\n  dup2\n    /* \"#utility.yul\":1761:1799   */\n  sub\n    /* \"#utility.yul\":1758:1842   */\n  tag_73\n  jumpi\n    /* \"#utility.yul\":1814:1832   */\n  tag_74\n  tag_31\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1758:1842   */\ntag_73:\n    /* \"#utility.yul\":1579:1848   */\n  pop\n    /* \"#utility.yul\":1528:1848   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1854:1995   */\ntag_33:\n    /* \"#utility.yul\":1903:1907   */\n  0x00\n    /* \"#utility.yul\":1926:1929   */\n  dup2\n    /* \"#utility.yul\":1918:1929   */\n  swap1\n  pop\n    /* \"#utility.yul\":1949:1952   */\n  dup2\n    /* \"#utility.yul\":1946:1947   */\n  0x00\n    /* \"#utility.yul\":1939:1953   */\n  mstore\n    /* \"#utility.yul\":1983:1987   */\n  0x20\n    /* \"#utility.yul\":1980:1981   */\n  0x00\n    /* \"#utility.yul\":1970:1988   */\n  keccak256\n    /* \"#utility.yul\":1962:1988   */\n  swap1\n  pop\n    /* \"#utility.yul\":1854:1995   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2001:2094   */\ntag_34:\n    /* \"#utility.yul\":2038:2044   */\n  0x00\n    /* \"#utility.yul\":2085:2087   */\n  0x20\n    /* \"#utility.yul\":2080:2082   */\n  0x1f\n    /* \"#utility.yul\":2073:2078   */\n  dup4\n    /* \"#utility.yul\":2069:2083   */\n  add\n    /* \"#utility.yul\":2065:2088   */\n  div\n    /* \"#utility.yul\":2055:2088   */\n  swap1\n  pop\n    /* \"#utility.yul\":2001:2094   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2100:2207   */\ntag_35:\n    /* \"#utility.yul\":2144:2152   */\n  0x00\n    /* \"#utility.yul\":2194:2199   */\n  dup3\n    /* \"#utility.yul\":2188:2192   */\n  dup3\n    /* \"#utility.yul\":2184:2200   */\n  shl\n    /* \"#utility.yul\":2163:2200   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2207   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2213:2606   */\ntag_36:\n    /* \"#utility.yul\":2282:2288   */\n  0x00\n    /* \"#utility.yul\":2332:2333   */\n  0x08\n    /* \"#utility.yul\":2320:2330   */\n  dup4\n    /* \"#utility.yul\":2316:2334   */\n  mul\n    /* \"#utility.yul\":2355:2452   */\n  tag_79\n    /* \"#utility.yul\":2385:2451   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2374:2383   */\n  dup3\n    /* \"#utility.yul\":2355:2452   */\n  tag_35\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2473:2512   */\n  tag_80\n    /* \"#utility.yul\":2503:2511   */\n  dup7\n    /* \"#utility.yul\":2492:2501   */\n  dup4\n    /* \"#utility.yul\":2473:2512   */\n  tag_35\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2461:2512   */\n  swap6\n  pop\n    /* \"#utility.yul\":2545:2549   */\n  dup1\n    /* \"#utility.yul\":2541:2550   */\n  not\n    /* \"#utility.yul\":2534:2539   */\n  dup5\n    /* \"#utility.yul\":2530:2551   */\n  and\n    /* \"#utility.yul\":2521:2551   */\n  swap4\n  pop\n    /* \"#utility.yul\":2594:2598   */\n  dup1\n    /* \"#utility.yul\":2584:2592   */\n  dup7\n    /* \"#utility.yul\":2580:2599   */\n  and\n    /* \"#utility.yul\":2573:2578   */\n  dup5\n    /* \"#utility.yul\":2570:2600   */\n  or\n    /* \"#utility.yul\":2560:2600   */\n  swap3\n  pop\n    /* \"#utility.yul\":2289:2606   */\n  pop\n  pop\n    /* \"#utility.yul\":2213:2606   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2612:2672   */\ntag_37:\n    /* \"#utility.yul\":2640:2643   */\n  0x00\n    /* \"#utility.yul\":2661:2666   */\n  dup2\n    /* \"#utility.yul\":2654:2666   */\n  swap1\n  pop\n    /* \"#utility.yul\":2612:2672   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2678:2820   */\ntag_38:\n    /* \"#utility.yul\":2728:2737   */\n  0x00\n    /* \"#utility.yul\":2761:2814   */\n  tag_83\n    /* \"#utility.yul\":2779:2813   */\n  tag_84\n    /* \"#utility.yul\":2788:2812   */\n  tag_85\n    /* \"#utility.yul\":2806:2811   */\n  dup5\n    /* \"#utility.yul\":2788:2812   */\n  tag_26\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2779:2813   */\n  tag_37\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2761:2814   */\n  tag_26\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2748:2814   */\n  swap1\n  pop\n    /* \"#utility.yul\":2678:2820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2826:2901   */\ntag_39:\n    /* \"#utility.yul\":2869:2872   */\n  0x00\n    /* \"#utility.yul\":2890:2895   */\n  dup2\n    /* \"#utility.yul\":2883:2895   */\n  swap1\n  pop\n    /* \"#utility.yul\":2826:2901   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2907:3176   */\ntag_40:\n    /* \"#utility.yul\":3017:3056   */\n  tag_88\n    /* \"#utility.yul\":3048:3055   */\n  dup4\n    /* \"#utility.yul\":3017:3056   */\n  tag_38\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3078:3169   */\n  tag_89\n    /* \"#utility.yul\":3127:3168   */\n  tag_90\n    /* \"#utility.yul\":3151:3167   */\n  dup3\n    /* \"#utility.yul\":3127:3168   */\n  tag_39\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3119:3125   */\n  dup5\n    /* \"#utility.yul\":3112:3116   */\n  dup5\n    /* \"#utility.yul\":3106:3117   */\n  sload\n    /* \"#utility.yul\":3078:3169   */\n  tag_36\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3072:3076   */\n  dup3\n    /* \"#utility.yul\":3065:3170   */\n  sstore\n    /* \"#utility.yul\":2983:3176   */\n  pop\n    /* \"#utility.yul\":2907:3176   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3182:3255   */\ntag_41:\n    /* \"#utility.yul\":3227:3230   */\n  0x00\n    /* \"#utility.yul\":3182:3255   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3261:3450   */\ntag_42:\n    /* \"#utility.yul\":3338:3370   */\n  tag_93\n  tag_41\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3379:3444   */\n  tag_94\n    /* \"#utility.yul\":3437:3443   */\n  dup2\n    /* \"#utility.yul\":3429:3435   */\n  dup5\n    /* \"#utility.yul\":3423:3427   */\n  dup5\n    /* \"#utility.yul\":3379:3444   */\n  tag_40\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":3314:3450   */\n  pop\n    /* \"#utility.yul\":3261:3450   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3456:3642   */\ntag_43:\n    /* \"#utility.yul\":3516:3636   */\ntag_96:\n    /* \"#utility.yul\":3533:3536   */\n  dup2\n    /* \"#utility.yul\":3526:3531   */\n  dup2\n    /* \"#utility.yul\":3523:3537   */\n  lt\n    /* \"#utility.yul\":3516:3636   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":3587:3626   */\n  tag_99\n    /* \"#utility.yul\":3624:3625   */\n  0x00\n    /* \"#utility.yul\":3617:3622   */\n  dup3\n    /* \"#utility.yul\":3587:3626   */\n  tag_42\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":3560:3561   */\n  0x01\n    /* \"#utility.yul\":3553:3558   */\n  dup2\n    /* \"#utility.yul\":3549:3562   */\n  add\n    /* \"#utility.yul\":3540:3562   */\n  swap1\n  pop\n    /* \"#utility.yul\":3516:3636   */\n  jump(tag_96)\ntag_98:\n    /* \"#utility.yul\":3456:3642   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3648:4191   */\ntag_44:\n    /* \"#utility.yul\":3749:3751   */\n  0x1f\n    /* \"#utility.yul\":3744:3747   */\n  dup3\n    /* \"#utility.yul\":3741:3752   */\n  gt\n    /* \"#utility.yul\":3738:4184   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":3783:3821   */\n  tag_102\n    /* \"#utility.yul\":3815:3820   */\n  dup2\n    /* \"#utility.yul\":3783:3821   */\n  tag_33\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3867:3896   */\n  tag_103\n    /* \"#utility.yul\":3885:3895   */\n  dup5\n    /* \"#utility.yul\":3867:3896   */\n  tag_34\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":3857:3865   */\n  dup2\n    /* \"#utility.yul\":3853:3897   */\n  add\n    /* \"#utility.yul\":4050:4052   */\n  0x20\n    /* \"#utility.yul\":4038:4048   */\n  dup6\n    /* \"#utility.yul\":4035:4053   */\n  lt\n    /* \"#utility.yul\":4032:4081   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":4071:4079   */\n  dup2\n    /* \"#utility.yul\":4056:4079   */\n  swap1\n  pop\n    /* \"#utility.yul\":4032:4081   */\ntag_104:\n    /* \"#utility.yul\":4094:4174   */\n  tag_105\n    /* \"#utility.yul\":4150:4172   */\n  tag_106\n    /* \"#utility.yul\":4168:4171   */\n  dup6\n    /* \"#utility.yul\":4150:4172   */\n  tag_34\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4140:4148   */\n  dup4\n    /* \"#utility.yul\":4136:4173   */\n  add\n    /* \"#utility.yul\":4123:4134   */\n  dup3\n    /* \"#utility.yul\":4094:4174   */\n  tag_43\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":3753:4184   */\n  pop\n  pop\n    /* \"#utility.yul\":3738:4184   */\ntag_101:\n    /* \"#utility.yul\":3648:4191   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4197:4314   */\ntag_45:\n    /* \"#utility.yul\":4251:4259   */\n  0x00\n    /* \"#utility.yul\":4301:4306   */\n  dup3\n    /* \"#utility.yul\":4295:4299   */\n  dup3\n    /* \"#utility.yul\":4291:4307   */\n  shr\n    /* \"#utility.yul\":4270:4307   */\n  swap1\n  pop\n    /* \"#utility.yul\":4197:4314   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4320:4489   */\ntag_46:\n    /* \"#utility.yul\":4364:4370   */\n  0x00\n    /* \"#utility.yul\":4397:4448   */\n  tag_109\n    /* \"#utility.yul\":4445:4446   */\n  0x00\n    /* \"#utility.yul\":4441:4447   */\n  not\n    /* \"#utility.yul\":4433:4438   */\n  dup5\n    /* \"#utility.yul\":4430:4431   */\n  0x08\n    /* \"#utility.yul\":4426:4439   */\n  mul\n    /* \"#utility.yul\":4397:4448   */\n  tag_45\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":4393:4449   */\n  not\n    /* \"#utility.yul\":4478:4482   */\n  dup1\n    /* \"#utility.yul\":4472:4476   */\n  dup4\n    /* \"#utility.yul\":4468:4483   */\n  and\n    /* \"#utility.yul\":4458:4483   */\n  swap2\n  pop\n    /* \"#utility.yul\":4371:4489   */\n  pop\n    /* \"#utility.yul\":4320:4489   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4494:4789   */\ntag_47:\n    /* \"#utility.yul\":4570:4574   */\n  0x00\n    /* \"#utility.yul\":4716:4745   */\n  tag_111\n    /* \"#utility.yul\":4741:4744   */\n  dup4\n    /* \"#utility.yul\":4735:4739   */\n  dup4\n    /* \"#utility.yul\":4716:4745   */\n  tag_46\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":4708:4745   */\n  swap2\n  pop\n    /* \"#utility.yul\":4778:4781   */\n  dup3\n    /* \"#utility.yul\":4775:4776   */\n  0x02\n    /* \"#utility.yul\":4771:4782   */\n  mul\n    /* \"#utility.yul\":4765:4769   */\n  dup3\n    /* \"#utility.yul\":4762:4783   */\n  or\n    /* \"#utility.yul\":4754:4783   */\n  swap1\n  pop\n    /* \"#utility.yul\":4494:4789   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4794:6189   */\ntag_9:\n    /* \"#utility.yul\":4911:4948   */\n  tag_113\n    /* \"#utility.yul\":4944:4947   */\n  dup3\n    /* \"#utility.yul\":4911:4948   */\n  tag_29\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5013:5031   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5005:5011   */\n  dup2\n    /* \"#utility.yul\":5002:5032   */\n  gt\n    /* \"#utility.yul\":4999:5055   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":5035:5053   */\n  tag_115\n  tag_30\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":4999:5055   */\ntag_114:\n    /* \"#utility.yul\":5079:5117   */\n  tag_116\n    /* \"#utility.yul\":5111:5115   */\n  dup3\n    /* \"#utility.yul\":5105:5116   */\n  sload\n    /* \"#utility.yul\":5079:5117   */\n  tag_32\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":5164:5231   */\n  tag_117\n    /* \"#utility.yul\":5224:5230   */\n  dup3\n    /* \"#utility.yul\":5216:5222   */\n  dup3\n    /* \"#utility.yul\":5210:5214   */\n  dup6\n    /* \"#utility.yul\":5164:5231   */\n  tag_44\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5258:5259   */\n  0x00\n    /* \"#utility.yul\":5282:5286   */\n  0x20\n    /* \"#utility.yul\":5269:5286   */\n  swap1\n  pop\n    /* \"#utility.yul\":5314:5316   */\n  0x1f\n    /* \"#utility.yul\":5306:5312   */\n  dup4\n    /* \"#utility.yul\":5303:5317   */\n  gt\n    /* \"#utility.yul\":5331:5332   */\n  0x01\n    /* \"#utility.yul\":5326:5944   */\n  dup2\n  eq\n  tag_119\n  jumpi\n    /* \"#utility.yul\":5988:5989   */\n  0x00\n    /* \"#utility.yul\":6005:6011   */\n  dup5\n    /* \"#utility.yul\":6002:6079   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6054:6063   */\n  dup3\n    /* \"#utility.yul\":6049:6052   */\n  dup8\n    /* \"#utility.yul\":6045:6064   */\n  add\n    /* \"#utility.yul\":6039:6065   */\n  mload\n    /* \"#utility.yul\":6030:6065   */\n  swap1\n  pop\n    /* \"#utility.yul\":6002:6079   */\ntag_120:\n    /* \"#utility.yul\":6105:6172   */\n  tag_121\n    /* \"#utility.yul\":6165:6171   */\n  dup6\n    /* \"#utility.yul\":6158:6163   */\n  dup3\n    /* \"#utility.yul\":6105:6172   */\n  tag_47\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6099:6103   */\n  dup7\n    /* \"#utility.yul\":6092:6173   */\n  sstore\n    /* \"#utility.yul\":5961:6183   */\n  pop\n    /* \"#utility.yul\":5296:6183   */\n  jump(tag_118)\n    /* \"#utility.yul\":5326:5944   */\ntag_119:\n    /* \"#utility.yul\":5378:5382   */\n  0x1f\n    /* \"#utility.yul\":5374:5383   */\n  not\n    /* \"#utility.yul\":5366:5372   */\n  dup5\n    /* \"#utility.yul\":5362:5384   */\n  and\n    /* \"#utility.yul\":5412:5449   */\n  tag_122\n    /* \"#utility.yul\":5444:5448   */\n  dup7\n    /* \"#utility.yul\":5412:5449   */\n  tag_33\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":5471:5472   */\n  0x00\n    /* \"#utility.yul\":5485:5693   */\ntag_123:\n    /* \"#utility.yul\":5499:5506   */\n  dup3\n    /* \"#utility.yul\":5496:5497   */\n  dup2\n    /* \"#utility.yul\":5493:5507   */\n  lt\n    /* \"#utility.yul\":5485:5693   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":5578:5587   */\n  dup5\n    /* \"#utility.yul\":5573:5576   */\n  dup10\n    /* \"#utility.yul\":5569:5588   */\n  add\n    /* \"#utility.yul\":5563:5589   */\n  mload\n    /* \"#utility.yul\":5555:5561   */\n  dup3\n    /* \"#utility.yul\":5548:5590   */\n  sstore\n    /* \"#utility.yul\":5629:5630   */\n  0x01\n    /* \"#utility.yul\":5621:5627   */\n  dup3\n    /* \"#utility.yul\":5617:5631   */\n  add\n    /* \"#utility.yul\":5607:5631   */\n  swap2\n  pop\n    /* \"#utility.yul\":5676:5678   */\n  0x20\n    /* \"#utility.yul\":5665:5674   */\n  dup6\n    /* \"#utility.yul\":5661:5679   */\n  add\n    /* \"#utility.yul\":5648:5679   */\n  swap5\n  pop\n    /* \"#utility.yul\":5522:5526   */\n  0x20\n    /* \"#utility.yul\":5519:5520   */\n  dup2\n    /* \"#utility.yul\":5515:5527   */\n  add\n    /* \"#utility.yul\":5510:5527   */\n  swap1\n  pop\n    /* \"#utility.yul\":5485:5693   */\n  jump(tag_123)\ntag_125:\n    /* \"#utility.yul\":5721:5727   */\n  dup7\n    /* \"#utility.yul\":5712:5719   */\n  dup4\n    /* \"#utility.yul\":5709:5728   */\n  lt\n    /* \"#utility.yul\":5706:5885   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":5779:5788   */\n  dup5\n    /* \"#utility.yul\":5774:5777   */\n  dup10\n    /* \"#utility.yul\":5770:5789   */\n  add\n    /* \"#utility.yul\":5764:5790   */\n  mload\n    /* \"#utility.yul\":5822:5870   */\n  tag_127\n    /* \"#utility.yul\":5864:5868   */\n  0x1f\n    /* \"#utility.yul\":5856:5862   */\n  dup10\n    /* \"#utility.yul\":5852:5869   */\n  and\n    /* \"#utility.yul\":5841:5850   */\n  dup3\n    /* \"#utility.yul\":5822:5870   */\n  tag_46\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":5814:5820   */\n  dup4\n    /* \"#utility.yul\":5807:5871   */\n  sstore\n    /* \"#utility.yul\":5729:5885   */\n  pop\n    /* \"#utility.yul\":5706:5885   */\ntag_126:\n    /* \"#utility.yul\":5931:5932   */\n  0x01\n    /* \"#utility.yul\":5927:5928   */\n  0x02\n    /* \"#utility.yul\":5919:5925   */\n  dup9\n    /* \"#utility.yul\":5915:5929   */\n  mul\n    /* \"#utility.yul\":5911:5933   */\n  add\n    /* \"#utility.yul\":5905:5909   */\n  dup9\n    /* \"#utility.yul\":5898:5934   */\n  sstore\n    /* \"#utility.yul\":5333:5944   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5296:6183   */\ntag_118:\n  pop\n    /* \"#utility.yul\":4886:6189   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4794:6189   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6195:6321   */\ntag_48:\n    /* \"#utility.yul\":6232:6239   */\n  0x00\n    /* \"#utility.yul\":6272:6314   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":6265:6270   */\n  dup3\n    /* \"#utility.yul\":6261:6315   */\n  and\n    /* \"#utility.yul\":6250:6315   */\n  swap1\n  pop\n    /* \"#utility.yul\":6195:6321   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6327:6423   */\ntag_49:\n    /* \"#utility.yul\":6364:6371   */\n  0x00\n    /* \"#utility.yul\":6393:6417   */\n  tag_130\n    /* \"#utility.yul\":6411:6416   */\n  dup3\n    /* \"#utility.yul\":6393:6417   */\n  tag_48\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":6382:6417   */\n  swap1\n  pop\n    /* \"#utility.yul\":6327:6423   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_50:\n    /* \"#utility.yul\":6516:6540   */\n  tag_132\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_49\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_14:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_134\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_50\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6781:6950   */\ntag_51:\n    /* \"#utility.yul\":6865:6876   */\n  0x00\n    /* \"#utility.yul\":6899:6905   */\n  dup3\n    /* \"#utility.yul\":6894:6897   */\n  dup3\n    /* \"#utility.yul\":6887:6906   */\n  mstore\n    /* \"#utility.yul\":6939:6943   */\n  0x20\n    /* \"#utility.yul\":6934:6937   */\n  dup3\n    /* \"#utility.yul\":6930:6944   */\n  add\n    /* \"#utility.yul\":6915:6944   */\n  swap1\n  pop\n    /* \"#utility.yul\":6781:6950   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6956:7136   */\ntag_52:\n    /* \"#utility.yul\":7096:7128   */\n  0x6d696e7450726963652069732067726561746572207468616e207a65726f0000\n    /* \"#utility.yul\":7092:7093   */\n  0x00\n    /* \"#utility.yul\":7084:7090   */\n  dup3\n    /* \"#utility.yul\":7080:7094   */\n  add\n    /* \"#utility.yul\":7073:7129   */\n  mstore\n    /* \"#utility.yul\":6956:7136   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7142:7508   */\ntag_53:\n    /* \"#utility.yul\":7284:7287   */\n  0x00\n    /* \"#utility.yul\":7305:7372   */\n  tag_138\n    /* \"#utility.yul\":7369:7371   */\n  0x1e\n    /* \"#utility.yul\":7364:7367   */\n  dup4\n    /* \"#utility.yul\":7305:7372   */\n  tag_51\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7298:7372   */\n  swap2\n  pop\n    /* \"#utility.yul\":7381:7474   */\n  tag_139\n    /* \"#utility.yul\":7470:7473   */\n  dup3\n    /* \"#utility.yul\":7381:7474   */\n  tag_52\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":7499:7501   */\n  0x20\n    /* \"#utility.yul\":7494:7497   */\n  dup3\n    /* \"#utility.yul\":7490:7502   */\n  add\n    /* \"#utility.yul\":7483:7502   */\n  swap1\n  pop\n    /* \"#utility.yul\":7142:7508   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7514:7933   */\ntag_20:\n    /* \"#utility.yul\":7680:7684   */\n  0x00\n    /* \"#utility.yul\":7718:7720   */\n  0x20\n    /* \"#utility.yul\":7707:7716   */\n  dup3\n    /* \"#utility.yul\":7703:7721   */\n  add\n    /* \"#utility.yul\":7695:7721   */\n  swap1\n  pop\n    /* \"#utility.yul\":7767:7776   */\n  dup2\n    /* \"#utility.yul\":7761:7765   */\n  dup2\n    /* \"#utility.yul\":7757:7777   */\n  sub\n    /* \"#utility.yul\":7753:7754   */\n  0x00\n    /* \"#utility.yul\":7742:7751   */\n  dup4\n    /* \"#utility.yul\":7738:7755   */\n  add\n    /* \"#utility.yul\":7731:7778   */\n  mstore\n    /* \"#utility.yul\":7795:7926   */\n  tag_141\n    /* \"#utility.yul\":7921:7925   */\n  dup2\n    /* \"#utility.yul\":7795:7926   */\n  tag_53\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":7787:7926   */\n  swap1\n  pop\n    /* \"#utility.yul\":7514:7933   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/NFT.sol\":283:2110  contract MQNFT is ERC721URIStorage, Ownable,ReentrancyGuardUpgradeable {... */\ntag_21:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFT.sol\":283:2110  contract MQNFT is ERC721URIStorage, Ownable,ReentrancyGuardUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xe985e9c5\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf4a0a528\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xfb37e883\n      eq\n      tag_26\n      jumpi\n      jump(tag_1)\n    tag_29:\n      dup1\n      0xb88d4fde\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xcc98ef96\n      eq\n      tag_22\n      jumpi\n      jump(tag_1)\n    tag_28:\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x84c4bd4b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_19\n      jumpi\n      jump(tag_1)\n    tag_27:\n      dup1\n      0x0fdb1c10\n      gt\n      tag_30\n      jumpi\n      dup1\n      0x0fdb1c10\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5d06a611\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6075851e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_30:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x0387da42\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0a4fa1dd\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFT.sol\":398:423  uint256 public _mintPrice */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/NFT.sol\":466:500  address public _marketPlaceAddress */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFT.sol\":1791:2107  function withDraw() external {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/NFT.sol\":1218:1333  function setMasterAddress(address masterAddress) public onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      stop\n        /* \"contracts/NFT.sol\":430:459  address public _masterAddress */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      stop\n        /* \"contracts/NFT.sol\":361:391  uint256 public _tokenIdCounter */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      tag_114\n      jump\t// in\n    tag_111:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_116\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      tag_119\n      jump\t// in\n    tag_116:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      tag_121\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFT.sol\":859:1103  function setMarketPlaceAddress(address marketPlaceAddress)  public onlyOwner{... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      tag_126\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n    tag_126:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      tag_130\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      tag_133\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_136\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_137:\n      tag_138\n      jump\t// in\n    tag_136:\n      stop\n        /* \"contracts/NFT.sol\":1111:1210  function setMintPrice(uint256 mintPrice) public onlyOwner {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_140\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_141:\n      tag_142\n      jump\t// in\n    tag_140:\n      stop\n        /* \"contracts/NFT.sol\":1341:1783  function mintNFT(string memory tokenURI) public payable nonReentrant returns (uint256){... */\n    tag_26:\n      tag_143\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      tag_146\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      tag_147\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1039:1043  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":760:770  0x49064906 */\n      0x49064906\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":753:771  bytes4(0x49064906) */\n      0xe0\n      shl\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1073  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      dup1\n      tag_149\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1125:1136  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1124  super.supportsInterface */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1055:1137  return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFT.sol\":398:423  uint256 public _mintPrice */\n    tag_40:\n      sload(0x3b)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_155\n      swap1\n      tag_154\n      jump\t// in\n    tag_155:\n      dup1\n      iszero\n      tag_156\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_157\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_156)\n    tag_157:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_158:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_158\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_156:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_160:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFT.sol\":466:500  address public _marketPlaceAddress */\n    tag_62:\n      0x3d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFT.sol\":1791:2107  function withDraw() external {... */\n    tag_66:\n        /* \"contracts/NFT.sol\":1853:1867  _masterAddress */\n      0x3c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFT.sol\":1839:1867  msg.sender == _masterAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFT.sol\":1839:1849  msg.sender */\n      caller\n        /* \"contracts/NFT.sol\":1839:1867  msg.sender == _masterAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFT.sol\":1831:1890  require(msg.sender == _masterAddress, \"Not master address\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"contracts/NFT.sol\":1981:1993  bool success */\n      0x00\n        /* \"contracts/NFT.sol\":1999:2013  _masterAddress */\n      0x3c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFT.sol\":1999:2018  _masterAddress.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFT.sol\":2026:2047  address(this).balance */\n      selfbalance\n        /* \"contracts/NFT.sol\":1999:2052  _masterAddress.call{value: address(this).balance}(\"\") */\n      mload(0x40)\n      tag_173\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_177\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_176)\n    tag_177:\n      0x60\n      swap2\n      pop\n    tag_176:\n      pop\n        /* \"contracts/NFT.sol\":1980:2052  (bool success, ) = _masterAddress.call{value: address(this).balance}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/NFT.sol\":2071:2078  success */\n      dup1\n        /* \"contracts/NFT.sol\":2063:2099  require(success, \"Transfer failed.\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"contracts/NFT.sol\":1820:2107  {... */\n      pop\n        /* \"contracts/NFT.sol\":1791:2107  function withDraw() external {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFT.sol\":1218:1333  function setMasterAddress(address masterAddress) public onlyOwner {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_193:\n        /* \"contracts/NFT.sol\":1312:1325  masterAddress */\n      dup1\n        /* \"contracts/NFT.sol\":1295:1309  _masterAddress */\n      0x3c\n      0x00\n        /* \"contracts/NFT.sol\":1295:1325  _masterAddress = masterAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFT.sol\":1218:1333  function setMasterAddress(address masterAddress) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFT.sol\":430:459  address public _masterAddress */\n    tag_83:\n      0x3c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_202\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_204\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/NFT.sol\":361:391  uint256 public _tokenIdCounter */\n    tag_100:\n      sload(0x3a)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_208\n      swap1\n      tag_154\n      jump\t// in\n    tag_208:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_209\n      swap1\n      tag_154\n      jump\t// in\n    tag_209:\n      dup1\n      iszero\n      tag_210\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_211\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_210)\n    tag_211:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_212:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_212\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_210:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_215\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_216\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_218\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_219\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_220\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1283:1296  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1322:1329  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1321  _requireOwned */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      jump\t// in\n    tag_222:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1364  string memory _tokenURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1377  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1378:1385  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1386  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_223\n      swap1\n      tag_154\n      jump\t// in\n    tag_223:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_224\n      swap1\n      tag_154\n      jump\t// in\n    tag_224:\n      dup1\n      iszero\n      tag_225\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_226\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_225)\n    tag_226:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_227:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_227\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_225:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1414  string memory base */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1425  _baseURI */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1427  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1522:1523  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1506:1510  base */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1518  bytes(base).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1523  bytes(base).length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1546:1555  _tokenURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1539:1555  return _tokenURI */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_221)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1691:1692  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1671:1680  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1688  bytes(_tokenURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1692  bytes(_tokenURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n      iszero\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1729:1733  base */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1735:1744  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1715:1745  string.concat(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_232\n      swap3\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1708:1745  return string.concat(base, _tokenURI) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_221)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1788:1795  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1787  super.tokenURI */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1766:1796  return super.tokenURI(tokenId) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_221:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFT.sol\":859:1103  function setMarketPlaceAddress(address marketPlaceAddress)  public onlyOwner{... */\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_237\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_237:\n        /* \"contracts/NFT.sol\":968:986  marketPlaceAddress */\n      dup1\n        /* \"contracts/NFT.sol\":946:965  _marketPlaceAddress */\n      0x3d\n      0x00\n        /* \"contracts/NFT.sol\":946:986  _marketPlaceAddress = marketPlaceAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFT.sol\":1002:1011  uint256 i */\n      0x00\n        /* \"contracts/NFT.sol\":997:1096  for (uint256 i=0; i<_tokenIdCounter; i++){... */\n    tag_239:\n        /* \"contracts/NFT.sol\":1017:1032  _tokenIdCounter */\n      sload(0x3a)\n        /* \"contracts/NFT.sol\":1015:1016  i */\n      dup2\n        /* \"contracts/NFT.sol\":1015:1032  i<_tokenIdCounter */\n      lt\n        /* \"contracts/NFT.sol\":997:1096  for (uint256 i=0; i<_tokenIdCounter; i++){... */\n      iszero\n      tag_240\n      jumpi\n        /* \"contracts/NFT.sol\":1053:1084  approve(_marketPlaceAddress, i) */\n      tag_242\n        /* \"contracts/NFT.sol\":1061:1080  _marketPlaceAddress */\n      0x3d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFT.sol\":1082:1083  i */\n      dup3\n        /* \"contracts/NFT.sol\":1053:1060  approve */\n      tag_59\n        /* \"contracts/NFT.sol\":1053:1084  approve(_marketPlaceAddress, i) */\n      jump\t// in\n    tag_242:\n        /* \"contracts/NFT.sol\":1034:1037  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/NFT.sol\":997:1096  for (uint256 i=0; i<_tokenIdCounter; i++){... */\n      jump(tag_239)\n    tag_240:\n      pop\n        /* \"contracts/NFT.sol\":859:1103  function setMarketPlaceAddress(address marketPlaceAddress)  public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_245\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_247\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_249\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFT.sol\":1111:1210  function setMintPrice(uint256 mintPrice) public onlyOwner {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_251\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_251:\n        /* \"contracts/NFT.sol\":1193:1202  mintPrice */\n      dup1\n        /* \"contracts/NFT.sol\":1180:1190  _mintPrice */\n      0x3b\n        /* \"contracts/NFT.sol\":1180:1202  _mintPrice = mintPrice */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFT.sol\":1111:1210  function setMintPrice(uint256 mintPrice) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFT.sol\":1341:1783  function mintNFT(string memory tokenURI) public payable nonReentrant returns (uint256){... */\n    tag_146:\n        /* \"contracts/NFT.sol\":1419:1426  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      tag_254\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2545  _nonReentrantBefore */\n      tag_255\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      jump\t// in\n    tag_254:\n        /* \"contracts/NFT.sol\":1438:1453  uint256 tokenId */\n      0x00\n        /* \"contracts/NFT.sol\":1456:1471  _tokenIdCounter */\n      sload(0x3a)\n        /* \"contracts/NFT.sol\":1438:1471  uint256 tokenId = _tokenIdCounter */\n      swap1\n      pop\n        /* \"contracts/NFT.sol\":1503:1513  _mintPrice */\n      sload(0x3b)\n        /* \"contracts/NFT.sol\":1490:1499  msg.value */\n      callvalue\n        /* \"contracts/NFT.sol\":1490:1513  msg.value >= _mintPrice */\n      lt\n      iszero\n        /* \"contracts/NFT.sol\":1482:1532  require(msg.value >= _mintPrice, \"Not enough ETH\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap1\n      tag_259\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_257:\n        /* \"contracts/NFT.sol\":1543:1573  _safeMint(msg.sender, tokenId) */\n      tag_260\n        /* \"contracts/NFT.sol\":1553:1563  msg.sender */\n      caller\n        /* \"contracts/NFT.sol\":1565:1572  tokenId */\n      dup3\n        /* \"contracts/NFT.sol\":1543:1552  _safeMint */\n      tag_261\n        /* \"contracts/NFT.sol\":1543:1573  _safeMint(msg.sender, tokenId) */\n      jump\t// in\n    tag_260:\n        /* \"contracts/NFT.sol\":1584:1615  _setTokenURI(tokenId, tokenURI) */\n      tag_262\n        /* \"contracts/NFT.sol\":1597:1604  tokenId */\n      dup2\n        /* \"contracts/NFT.sol\":1606:1614  tokenURI */\n      dup5\n        /* \"contracts/NFT.sol\":1584:1596  _setTokenURI */\n      tag_263\n        /* \"contracts/NFT.sol\":1584:1615  _setTokenURI(tokenId, tokenURI) */\n      jump\t// in\n    tag_262:\n        /* \"contracts/NFT.sol\":1626:1663  approve(_marketPlaceAddress, tokenId) */\n      tag_264\n        /* \"contracts/NFT.sol\":1634:1653  _marketPlaceAddress */\n      0x3d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFT.sol\":1655:1662  tokenId */\n      dup3\n        /* \"contracts/NFT.sol\":1626:1633  approve */\n      tag_59\n        /* \"contracts/NFT.sol\":1626:1663  approve(_marketPlaceAddress, tokenId) */\n      jump\t// in\n    tag_264:\n        /* \"contracts/NFT.sol\":1701:1711  msg.sender */\n      caller\n        /* \"contracts/NFT.sol\":1679:1722  TokenCreated(tokenId, msg.sender, tokenURI) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFT.sol\":1692:1699  tokenId */\n      dup2\n        /* \"contracts/NFT.sol\":1679:1722  TokenCreated(tokenId, msg.sender, tokenURI) */\n      0x82a09cc58c9cecf0eb61d8994283ec804165931801f8b77e42dcb3b556c5c5be\n        /* \"contracts/NFT.sol\":1713:1721  tokenURI */\n      dup6\n        /* \"contracts/NFT.sol\":1679:1722  TokenCreated(tokenId, msg.sender, tokenURI) */\n      mload(0x40)\n      tag_265\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFT.sol\":1733:1748  _tokenIdCounter */\n      0x3a\n      0x00\n        /* \"contracts/NFT.sol\":1733:1750  _tokenIdCounter++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_266\n      swap1\n      tag_267\n      jump\t// in\n    tag_266:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/NFT.sol\":1768:1775  tokenId */\n      dup1\n        /* \"contracts/NFT.sol\":1761:1775  return tokenId */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      tag_268\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2586  _nonReentrantAfter */\n      tag_269\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      jump\t// in\n    tag_268:\n        /* \"contracts/NFT.sol\":1341:1783  function mintNFT(string memory tokenURI) public payable nonReentrant returns (uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_271\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_272\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_274\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_276\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_283\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_284\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_286\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_288\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_289\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_291\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_284\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_292\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_294\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_295\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_296\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_297\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x07\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_301\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_302\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_303\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_303:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_305\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_306\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_306:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_307\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_308\n      jump\t// in\n    tag_307:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_309\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_310\n      swap2\n      swap1\n      tag_311\n      jump\t// in\n    tag_310:\n      0x01\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_312\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_317\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_316)\n    tag_317:\n      0x60\n      swap2\n      pop\n    tag_316:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_319\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_319:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_312:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_322\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_323\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3225:3238  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_326\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_326:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_327\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_327:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_328\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_329)\n    tag_328:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_330\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_331\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_332\n      swap3\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_332:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_329:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2601:2888  function _nonReentrantBefore() private {... */\n    tag_255:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1851:1852  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2733:2740  _status */\n      sload(0x08)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2733:2752  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2725:2788  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_334\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_335\n      swap1\n      tag_336\n      jump\t// in\n    tag_335:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_334:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1851:1852  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2863:2870  _status */\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2863:2881  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2601:2888  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      tag_338\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10710:10712  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10714:10721  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10709  _safeMint */\n      tag_339\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_338:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2035:2044  _tokenURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2023  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2024:2031  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2044  _tokenURIs[tokenId] = _tokenURI */\n      swap1\n      dup2\n      tag_341\n      swap2\n      swap1\n      tag_342\n      jump\t// in\n    tag_341:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2074:2081  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      mload(0x40)\n      tag_343\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_343:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2894:3103  function _nonReentrantAfter() private {... */\n    tag_269:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1808:1809  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":3074:3081  _status */\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":3074:3096  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2894:3103  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_348\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_348:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_349\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_350\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_350:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_351\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_351:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_352\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_353\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_353:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_352:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_354\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_355:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_354:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_356\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_356:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_358\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_359\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_358:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_360\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_361\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_362\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_362:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_361:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_364\n      swap3\n      swap2\n      swap1\n      tag_365\n      jump\t// in\n    tag_364:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_360:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_331:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_367\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_368\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_367:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_369\n      jumpi\n      tag_370\n      tag_371\n      jump\t// in\n    tag_370:\n    tag_369:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_372\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_372:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_373:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_374\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_375\n      jumpi\n      tag_376\n      tag_377\n      jump\t// in\n    tag_376:\n    tag_375:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_373\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_374:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      tag_380\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11054:11056  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11058:11065  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11053  _mint */\n      tag_381\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      jump\t// in\n    tag_380:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_382\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11107:11108  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11111:11113  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11115:11122  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11124:11128  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11098  _checkOnERC721Received */\n      tag_220\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_382:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_359:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_384\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_385\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_386\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_386:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_385:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_387\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_388\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_388:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_387:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_384:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_368:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_390\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_391\n      jumpi\n      tag_392\n      tag_377\n      jump\t// in\n    tag_392:\n    tag_391:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_390:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_393\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_394\n      jumpi\n      tag_395\n      tag_377\n      jump\t// in\n    tag_395:\n    tag_394:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_393:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_396\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_397\n      jumpi\n      tag_398\n      tag_377\n      jump\t// in\n    tag_398:\n    tag_397:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_396:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_399\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_400\n      jumpi\n      tag_401\n      tag_377\n      jump\t// in\n    tag_401:\n    tag_400:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_399:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_402\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_403\n      jumpi\n      tag_404\n      tag_377\n      jump\t// in\n    tag_404:\n    tag_403:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_402:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_405\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_406\n      jumpi\n      tag_407\n      tag_377\n      jump\t// in\n    tag_407:\n    tag_406:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_405:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_408\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_408:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_381:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10036:10037  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10024  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_410\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_411\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_411:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_410:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_412\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_412:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10209:10210  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10197  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_413\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_414\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_414:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n    tag_413:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10008:10282  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_415:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_416:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_417:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_418:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_419:\n        /* \"#utility.yul\":561:584   */\n      tag_490\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_418\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_491\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_491:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_420:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_493\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_419\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_34:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_496\n      tag_416\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":833:952   */\n    tag_495:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_497\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_420\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_421:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_422:\n        /* \"#utility.yul\":1268:1289   */\n      tag_500\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_421\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_37:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_502\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_422\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_423:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1719   */\n    tag_424:\n        /* \"#utility.yul\":1688:1712   */\n      tag_505\n        /* \"#utility.yul\":1706:1711   */\n      dup2\n        /* \"#utility.yul\":1688:1712   */\n      tag_423\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":1683:1686   */\n      dup3\n        /* \"#utility.yul\":1676:1713   */\n      mstore\n        /* \"#utility.yul\":1601:1719   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1725:1947   */\n    tag_42:\n        /* \"#utility.yul\":1818:1822   */\n      0x00\n        /* \"#utility.yul\":1856:1858   */\n      0x20\n        /* \"#utility.yul\":1845:1854   */\n      dup3\n        /* \"#utility.yul\":1841:1859   */\n      add\n        /* \"#utility.yul\":1833:1859   */\n      swap1\n      pop\n        /* \"#utility.yul\":1869:1940   */\n      tag_507\n        /* \"#utility.yul\":1937:1938   */\n      0x00\n        /* \"#utility.yul\":1926:1935   */\n      dup4\n        /* \"#utility.yul\":1922:1939   */\n      add\n        /* \"#utility.yul\":1913:1919   */\n      dup5\n        /* \"#utility.yul\":1869:1940   */\n      tag_424\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":1725:1947   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1953:2052   */\n    tag_425:\n        /* \"#utility.yul\":2005:2011   */\n      0x00\n        /* \"#utility.yul\":2039:2044   */\n      dup2\n        /* \"#utility.yul\":2033:2045   */\n      mload\n        /* \"#utility.yul\":2023:2045   */\n      swap1\n      pop\n        /* \"#utility.yul\":1953:2052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2058:2227   */\n    tag_426:\n        /* \"#utility.yul\":2142:2153   */\n      0x00\n        /* \"#utility.yul\":2176:2182   */\n      dup3\n        /* \"#utility.yul\":2171:2174   */\n      dup3\n        /* \"#utility.yul\":2164:2183   */\n      mstore\n        /* \"#utility.yul\":2216:2220   */\n      0x20\n        /* \"#utility.yul\":2211:2214   */\n      dup3\n        /* \"#utility.yul\":2207:2221   */\n      add\n        /* \"#utility.yul\":2192:2221   */\n      swap1\n      pop\n        /* \"#utility.yul\":2058:2227   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2233:2372   */\n    tag_427:\n        /* \"#utility.yul\":2322:2328   */\n      dup3\n        /* \"#utility.yul\":2317:2320   */\n      dup2\n        /* \"#utility.yul\":2312:2315   */\n      dup4\n        /* \"#utility.yul\":2306:2329   */\n      mcopy\n        /* \"#utility.yul\":2363:2364   */\n      0x00\n        /* \"#utility.yul\":2354:2360   */\n      dup4\n        /* \"#utility.yul\":2349:2352   */\n      dup4\n        /* \"#utility.yul\":2345:2361   */\n      add\n        /* \"#utility.yul\":2338:2365   */\n      mstore\n        /* \"#utility.yul\":2233:2372   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2378:2480   */\n    tag_428:\n        /* \"#utility.yul\":2419:2425   */\n      0x00\n        /* \"#utility.yul\":2470:2472   */\n      0x1f\n        /* \"#utility.yul\":2466:2473   */\n      not\n        /* \"#utility.yul\":2461:2463   */\n      0x1f\n        /* \"#utility.yul\":2454:2459   */\n      dup4\n        /* \"#utility.yul\":2450:2464   */\n      add\n        /* \"#utility.yul\":2446:2474   */\n      and\n        /* \"#utility.yul\":2436:2474   */\n      swap1\n      pop\n        /* \"#utility.yul\":2378:2480   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2486:2863   */\n    tag_429:\n        /* \"#utility.yul\":2574:2577   */\n      0x00\n        /* \"#utility.yul\":2602:2641   */\n      tag_513\n        /* \"#utility.yul\":2635:2640   */\n      dup3\n        /* \"#utility.yul\":2602:2641   */\n      tag_425\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":2657:2728   */\n      tag_514\n        /* \"#utility.yul\":2721:2727   */\n      dup2\n        /* \"#utility.yul\":2716:2719   */\n      dup6\n        /* \"#utility.yul\":2657:2728   */\n      tag_426\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":2650:2728   */\n      swap4\n      pop\n        /* \"#utility.yul\":2737:2802   */\n      tag_515\n        /* \"#utility.yul\":2795:2801   */\n      dup2\n        /* \"#utility.yul\":2790:2793   */\n      dup6\n        /* \"#utility.yul\":2783:2787   */\n      0x20\n        /* \"#utility.yul\":2776:2781   */\n      dup7\n        /* \"#utility.yul\":2772:2788   */\n      add\n        /* \"#utility.yul\":2737:2802   */\n      tag_427\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":2827:2856   */\n      tag_516\n        /* \"#utility.yul\":2849:2855   */\n      dup2\n        /* \"#utility.yul\":2827:2856   */\n      tag_428\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":2822:2825   */\n      dup5\n        /* \"#utility.yul\":2818:2857   */\n      add\n        /* \"#utility.yul\":2811:2857   */\n      swap2\n      pop\n        /* \"#utility.yul\":2578:2863   */\n      pop\n        /* \"#utility.yul\":2486:2863   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2869:3182   */\n    tag_47:\n        /* \"#utility.yul\":2982:2986   */\n      0x00\n        /* \"#utility.yul\":3020:3022   */\n      0x20\n        /* \"#utility.yul\":3009:3018   */\n      dup3\n        /* \"#utility.yul\":3005:3023   */\n      add\n        /* \"#utility.yul\":2997:3023   */\n      swap1\n      pop\n        /* \"#utility.yul\":3069:3078   */\n      dup2\n        /* \"#utility.yul\":3063:3067   */\n      dup2\n        /* \"#utility.yul\":3059:3079   */\n      sub\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3044:3053   */\n      dup4\n        /* \"#utility.yul\":3040:3057   */\n      add\n        /* \"#utility.yul\":3033:3080   */\n      mstore\n        /* \"#utility.yul\":3097:3175   */\n      tag_518\n        /* \"#utility.yul\":3170:3174   */\n      dup2\n        /* \"#utility.yul\":3161:3167   */\n      dup5\n        /* \"#utility.yul\":3097:3175   */\n      tag_429\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":3089:3175   */\n      swap1\n      pop\n        /* \"#utility.yul\":2869:3182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3188:3310   */\n    tag_430:\n        /* \"#utility.yul\":3261:3285   */\n      tag_520\n        /* \"#utility.yul\":3279:3284   */\n      dup2\n        /* \"#utility.yul\":3261:3285   */\n      tag_423\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":3254:3259   */\n      dup2\n        /* \"#utility.yul\":3251:3286   */\n      eq\n        /* \"#utility.yul\":3241:3304   */\n      tag_521\n      jumpi\n        /* \"#utility.yul\":3300:3301   */\n      0x00\n        /* \"#utility.yul\":3297:3298   */\n      dup1\n        /* \"#utility.yul\":3290:3302   */\n      revert\n        /* \"#utility.yul\":3241:3304   */\n    tag_521:\n        /* \"#utility.yul\":3188:3310   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3316:3455   */\n    tag_431:\n        /* \"#utility.yul\":3362:3367   */\n      0x00\n        /* \"#utility.yul\":3400:3406   */\n      dup2\n        /* \"#utility.yul\":3387:3407   */\n      calldataload\n        /* \"#utility.yul\":3378:3407   */\n      swap1\n      pop\n        /* \"#utility.yul\":3416:3449   */\n      tag_523\n        /* \"#utility.yul\":3443:3448   */\n      dup2\n        /* \"#utility.yul\":3416:3449   */\n      tag_430\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":3316:3455   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3461:3790   */\n    tag_51:\n        /* \"#utility.yul\":3520:3526   */\n      0x00\n        /* \"#utility.yul\":3569:3571   */\n      0x20\n        /* \"#utility.yul\":3557:3566   */\n      dup3\n        /* \"#utility.yul\":3548:3555   */\n      dup5\n        /* \"#utility.yul\":3544:3567   */\n      sub\n        /* \"#utility.yul\":3540:3572   */\n      slt\n        /* \"#utility.yul\":3537:3656   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":3575:3654   */\n      tag_526\n      tag_416\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":3537:3656   */\n    tag_525:\n        /* \"#utility.yul\":3695:3696   */\n      0x00\n        /* \"#utility.yul\":3720:3773   */\n      tag_527\n        /* \"#utility.yul\":3765:3772   */\n      dup5\n        /* \"#utility.yul\":3756:3762   */\n      dup3\n        /* \"#utility.yul\":3745:3754   */\n      dup6\n        /* \"#utility.yul\":3741:3763   */\n      add\n        /* \"#utility.yul\":3720:3773   */\n      tag_431\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":3710:3773   */\n      swap2\n      pop\n        /* \"#utility.yul\":3666:3783   */\n      pop\n        /* \"#utility.yul\":3461:3790   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3796:3922   */\n    tag_432:\n        /* \"#utility.yul\":3833:3840   */\n      0x00\n        /* \"#utility.yul\":3873:3915   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3866:3871   */\n      dup3\n        /* \"#utility.yul\":3862:3916   */\n      and\n        /* \"#utility.yul\":3851:3916   */\n      swap1\n      pop\n        /* \"#utility.yul\":3796:3922   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3928:4024   */\n    tag_433:\n        /* \"#utility.yul\":3965:3972   */\n      0x00\n        /* \"#utility.yul\":3994:4018   */\n      tag_530\n        /* \"#utility.yul\":4012:4017   */\n      dup3\n        /* \"#utility.yul\":3994:4018   */\n      tag_432\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":3983:4018   */\n      swap1\n      pop\n        /* \"#utility.yul\":3928:4024   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4148   */\n    tag_434:\n        /* \"#utility.yul\":4117:4141   */\n      tag_532\n        /* \"#utility.yul\":4135:4140   */\n      dup2\n        /* \"#utility.yul\":4117:4141   */\n      tag_433\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":4112:4115   */\n      dup3\n        /* \"#utility.yul\":4105:4142   */\n      mstore\n        /* \"#utility.yul\":4030:4148   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4154:4376   */\n    tag_54:\n        /* \"#utility.yul\":4247:4251   */\n      0x00\n        /* \"#utility.yul\":4285:4287   */\n      0x20\n        /* \"#utility.yul\":4274:4283   */\n      dup3\n        /* \"#utility.yul\":4270:4288   */\n      add\n        /* \"#utility.yul\":4262:4288   */\n      swap1\n      pop\n        /* \"#utility.yul\":4298:4369   */\n      tag_534\n        /* \"#utility.yul\":4366:4367   */\n      0x00\n        /* \"#utility.yul\":4355:4364   */\n      dup4\n        /* \"#utility.yul\":4351:4368   */\n      add\n        /* \"#utility.yul\":4342:4348   */\n      dup5\n        /* \"#utility.yul\":4298:4369   */\n      tag_434\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":4154:4376   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4382:4504   */\n    tag_435:\n        /* \"#utility.yul\":4455:4479   */\n      tag_536\n        /* \"#utility.yul\":4473:4478   */\n      dup2\n        /* \"#utility.yul\":4455:4479   */\n      tag_433\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":4448:4453   */\n      dup2\n        /* \"#utility.yul\":4445:4480   */\n      eq\n        /* \"#utility.yul\":4435:4498   */\n      tag_537\n      jumpi\n        /* \"#utility.yul\":4494:4495   */\n      0x00\n        /* \"#utility.yul\":4491:4492   */\n      dup1\n        /* \"#utility.yul\":4484:4496   */\n      revert\n        /* \"#utility.yul\":4435:4498   */\n    tag_537:\n        /* \"#utility.yul\":4382:4504   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4510:4649   */\n    tag_436:\n        /* \"#utility.yul\":4556:4561   */\n      0x00\n        /* \"#utility.yul\":4594:4600   */\n      dup2\n        /* \"#utility.yul\":4581:4601   */\n      calldataload\n        /* \"#utility.yul\":4572:4601   */\n      swap1\n      pop\n        /* \"#utility.yul\":4610:4643   */\n      tag_539\n        /* \"#utility.yul\":4637:4642   */\n      dup2\n        /* \"#utility.yul\":4610:4643   */\n      tag_435\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":4510:4649   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4655:5129   */\n    tag_58:\n        /* \"#utility.yul\":4723:4729   */\n      0x00\n        /* \"#utility.yul\":4731:4737   */\n      dup1\n        /* \"#utility.yul\":4780:4782   */\n      0x40\n        /* \"#utility.yul\":4768:4777   */\n      dup4\n        /* \"#utility.yul\":4759:4766   */\n      dup6\n        /* \"#utility.yul\":4755:4778   */\n      sub\n        /* \"#utility.yul\":4751:4783   */\n      slt\n        /* \"#utility.yul\":4748:4867   */\n      iszero\n      tag_541\n      jumpi\n        /* \"#utility.yul\":4786:4865   */\n      tag_542\n      tag_416\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":4748:4867   */\n    tag_541:\n        /* \"#utility.yul\":4906:4907   */\n      0x00\n        /* \"#utility.yul\":4931:4984   */\n      tag_543\n        /* \"#utility.yul\":4976:4983   */\n      dup6\n        /* \"#utility.yul\":4967:4973   */\n      dup3\n        /* \"#utility.yul\":4956:4965   */\n      dup7\n        /* \"#utility.yul\":4952:4974   */\n      add\n        /* \"#utility.yul\":4931:4984   */\n      tag_436\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":4921:4984   */\n      swap3\n      pop\n        /* \"#utility.yul\":4877:4994   */\n      pop\n        /* \"#utility.yul\":5033:5035   */\n      0x20\n        /* \"#utility.yul\":5059:5112   */\n      tag_544\n        /* \"#utility.yul\":5104:5111   */\n      dup6\n        /* \"#utility.yul\":5095:5101   */\n      dup3\n        /* \"#utility.yul\":5084:5093   */\n      dup7\n        /* \"#utility.yul\":5080:5102   */\n      add\n        /* \"#utility.yul\":5059:5112   */\n      tag_431\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":5049:5112   */\n      swap2\n      pop\n        /* \"#utility.yul\":5004:5122   */\n      pop\n        /* \"#utility.yul\":4655:5129   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5135:5754   */\n    tag_70:\n        /* \"#utility.yul\":5212:5218   */\n      0x00\n        /* \"#utility.yul\":5220:5226   */\n      dup1\n        /* \"#utility.yul\":5228:5234   */\n      0x00\n        /* \"#utility.yul\":5277:5279   */\n      0x60\n        /* \"#utility.yul\":5265:5274   */\n      dup5\n        /* \"#utility.yul\":5256:5263   */\n      dup7\n        /* \"#utility.yul\":5252:5275   */\n      sub\n        /* \"#utility.yul\":5248:5280   */\n      slt\n        /* \"#utility.yul\":5245:5364   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":5283:5362   */\n      tag_547\n      tag_416\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":5245:5364   */\n    tag_546:\n        /* \"#utility.yul\":5403:5404   */\n      0x00\n        /* \"#utility.yul\":5428:5481   */\n      tag_548\n        /* \"#utility.yul\":5473:5480   */\n      dup7\n        /* \"#utility.yul\":5464:5470   */\n      dup3\n        /* \"#utility.yul\":5453:5462   */\n      dup8\n        /* \"#utility.yul\":5449:5471   */\n      add\n        /* \"#utility.yul\":5428:5481   */\n      tag_436\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":5418:5481   */\n      swap4\n      pop\n        /* \"#utility.yul\":5374:5491   */\n      pop\n        /* \"#utility.yul\":5530:5532   */\n      0x20\n        /* \"#utility.yul\":5556:5609   */\n      tag_549\n        /* \"#utility.yul\":5601:5608   */\n      dup7\n        /* \"#utility.yul\":5592:5598   */\n      dup3\n        /* \"#utility.yul\":5581:5590   */\n      dup8\n        /* \"#utility.yul\":5577:5599   */\n      add\n        /* \"#utility.yul\":5556:5609   */\n      tag_436\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":5546:5609   */\n      swap3\n      pop\n        /* \"#utility.yul\":5501:5619   */\n      pop\n        /* \"#utility.yul\":5658:5660   */\n      0x40\n        /* \"#utility.yul\":5684:5737   */\n      tag_550\n        /* \"#utility.yul\":5729:5736   */\n      dup7\n        /* \"#utility.yul\":5720:5726   */\n      dup3\n        /* \"#utility.yul\":5709:5718   */\n      dup8\n        /* \"#utility.yul\":5705:5727   */\n      add\n        /* \"#utility.yul\":5684:5737   */\n      tag_431\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":5674:5737   */\n      swap2\n      pop\n        /* \"#utility.yul\":5629:5747   */\n      pop\n        /* \"#utility.yul\":5135:5754   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5760:6089   */\n    tag_79:\n        /* \"#utility.yul\":5819:5825   */\n      0x00\n        /* \"#utility.yul\":5868:5870   */\n      0x20\n        /* \"#utility.yul\":5856:5865   */\n      dup3\n        /* \"#utility.yul\":5847:5854   */\n      dup5\n        /* \"#utility.yul\":5843:5866   */\n      sub\n        /* \"#utility.yul\":5839:5871   */\n      slt\n        /* \"#utility.yul\":5836:5955   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":5874:5953   */\n      tag_553\n      tag_416\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":5836:5955   */\n    tag_552:\n        /* \"#utility.yul\":5994:5995   */\n      0x00\n        /* \"#utility.yul\":6019:6072   */\n      tag_554\n        /* \"#utility.yul\":6064:6071   */\n      dup5\n        /* \"#utility.yul\":6055:6061   */\n      dup3\n        /* \"#utility.yul\":6044:6053   */\n      dup6\n        /* \"#utility.yul\":6040:6062   */\n      add\n        /* \"#utility.yul\":6019:6072   */\n      tag_436\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":6009:6072   */\n      swap2\n      pop\n        /* \"#utility.yul\":5965:6082   */\n      pop\n        /* \"#utility.yul\":5760:6089   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6095:6211   */\n    tag_437:\n        /* \"#utility.yul\":6165:6186   */\n      tag_556\n        /* \"#utility.yul\":6180:6185   */\n      dup2\n        /* \"#utility.yul\":6165:6186   */\n      tag_421\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":6158:6163   */\n      dup2\n        /* \"#utility.yul\":6155:6187   */\n      eq\n        /* \"#utility.yul\":6145:6205   */\n      tag_557\n      jumpi\n        /* \"#utility.yul\":6201:6202   */\n      0x00\n        /* \"#utility.yul\":6198:6199   */\n      dup1\n        /* \"#utility.yul\":6191:6203   */\n      revert\n        /* \"#utility.yul\":6145:6205   */\n    tag_557:\n        /* \"#utility.yul\":6095:6211   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6217:6350   */\n    tag_438:\n        /* \"#utility.yul\":6260:6265   */\n      0x00\n        /* \"#utility.yul\":6298:6304   */\n      dup2\n        /* \"#utility.yul\":6285:6305   */\n      calldataload\n        /* \"#utility.yul\":6276:6305   */\n      swap1\n      pop\n        /* \"#utility.yul\":6314:6344   */\n      tag_559\n        /* \"#utility.yul\":6338:6343   */\n      dup2\n        /* \"#utility.yul\":6314:6344   */\n      tag_437\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":6217:6350   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6356:6824   */\n    tag_113:\n        /* \"#utility.yul\":6421:6427   */\n      0x00\n        /* \"#utility.yul\":6429:6435   */\n      dup1\n        /* \"#utility.yul\":6478:6480   */\n      0x40\n        /* \"#utility.yul\":6466:6475   */\n      dup4\n        /* \"#utility.yul\":6457:6464   */\n      dup6\n        /* \"#utility.yul\":6453:6476   */\n      sub\n        /* \"#utility.yul\":6449:6481   */\n      slt\n        /* \"#utility.yul\":6446:6565   */\n      iszero\n      tag_561\n      jumpi\n        /* \"#utility.yul\":6484:6563   */\n      tag_562\n      tag_416\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":6446:6565   */\n    tag_561:\n        /* \"#utility.yul\":6604:6605   */\n      0x00\n        /* \"#utility.yul\":6629:6682   */\n      tag_563\n        /* \"#utility.yul\":6674:6681   */\n      dup6\n        /* \"#utility.yul\":6665:6671   */\n      dup3\n        /* \"#utility.yul\":6654:6663   */\n      dup7\n        /* \"#utility.yul\":6650:6672   */\n      add\n        /* \"#utility.yul\":6629:6682   */\n      tag_436\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":6619:6682   */\n      swap3\n      pop\n        /* \"#utility.yul\":6575:6692   */\n      pop\n        /* \"#utility.yul\":6731:6733   */\n      0x20\n        /* \"#utility.yul\":6757:6807   */\n      tag_564\n        /* \"#utility.yul\":6799:6806   */\n      dup6\n        /* \"#utility.yul\":6790:6796   */\n      dup3\n        /* \"#utility.yul\":6779:6788   */\n      dup7\n        /* \"#utility.yul\":6775:6797   */\n      add\n        /* \"#utility.yul\":6757:6807   */\n      tag_438\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":6747:6807   */\n      swap2\n      pop\n        /* \"#utility.yul\":6702:6817   */\n      pop\n        /* \"#utility.yul\":6356:6824   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6830:6947   */\n    tag_439:\n        /* \"#utility.yul\":6939:6940   */\n      0x00\n        /* \"#utility.yul\":6936:6937   */\n      dup1\n        /* \"#utility.yul\":6929:6941   */\n      revert\n        /* \"#utility.yul\":6953:7070   */\n    tag_440:\n        /* \"#utility.yul\":7062:7063   */\n      0x00\n        /* \"#utility.yul\":7059:7060   */\n      dup1\n        /* \"#utility.yul\":7052:7064   */\n      revert\n        /* \"#utility.yul\":7076:7256   */\n    tag_371:\n        /* \"#utility.yul\":7124:7201   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7121:7122   */\n      0x00\n        /* \"#utility.yul\":7114:7202   */\n      mstore\n        /* \"#utility.yul\":7221:7225   */\n      0x41\n        /* \"#utility.yul\":7218:7219   */\n      0x04\n        /* \"#utility.yul\":7211:7226   */\n      mstore\n        /* \"#utility.yul\":7245:7249   */\n      0x24\n        /* \"#utility.yul\":7242:7243   */\n      0x00\n        /* \"#utility.yul\":7235:7250   */\n      revert\n        /* \"#utility.yul\":7262:7543   */\n    tag_441:\n        /* \"#utility.yul\":7345:7372   */\n      tag_569\n        /* \"#utility.yul\":7367:7371   */\n      dup3\n        /* \"#utility.yul\":7345:7372   */\n      tag_428\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":7337:7343   */\n      dup2\n        /* \"#utility.yul\":7333:7373   */\n      add\n        /* \"#utility.yul\":7475:7481   */\n      dup2\n        /* \"#utility.yul\":7463:7473   */\n      dup2\n        /* \"#utility.yul\":7460:7482   */\n      lt\n        /* \"#utility.yul\":7439:7457   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7427:7437   */\n      dup3\n        /* \"#utility.yul\":7424:7458   */\n      gt\n        /* \"#utility.yul\":7421:7483   */\n      or\n        /* \"#utility.yul\":7418:7506   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":7486:7504   */\n      tag_571\n      tag_371\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":7418:7506   */\n    tag_570:\n        /* \"#utility.yul\":7526:7536   */\n      dup1\n        /* \"#utility.yul\":7522:7524   */\n      0x40\n        /* \"#utility.yul\":7515:7537   */\n      mstore\n        /* \"#utility.yul\":7305:7543   */\n      pop\n        /* \"#utility.yul\":7262:7543   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7549:7678   */\n    tag_442:\n        /* \"#utility.yul\":7583:7589   */\n      0x00\n        /* \"#utility.yul\":7610:7630   */\n      tag_573\n      tag_415\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":7600:7630   */\n      swap1\n      pop\n        /* \"#utility.yul\":7639:7672   */\n      tag_574\n        /* \"#utility.yul\":7667:7671   */\n      dup3\n        /* \"#utility.yul\":7659:7665   */\n      dup3\n        /* \"#utility.yul\":7639:7672   */\n      tag_441\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":7549:7678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7684:7991   */\n    tag_443:\n        /* \"#utility.yul\":7745:7749   */\n      0x00\n        /* \"#utility.yul\":7835:7853   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7827:7833   */\n      dup3\n        /* \"#utility.yul\":7824:7854   */\n      gt\n        /* \"#utility.yul\":7821:7877   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":7857:7875   */\n      tag_577\n      tag_371\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":7821:7877   */\n    tag_576:\n        /* \"#utility.yul\":7895:7924   */\n      tag_578\n        /* \"#utility.yul\":7917:7923   */\n      dup3\n        /* \"#utility.yul\":7895:7924   */\n      tag_428\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":7887:7924   */\n      swap1\n      pop\n        /* \"#utility.yul\":7979:7983   */\n      0x20\n        /* \"#utility.yul\":7973:7977   */\n      dup2\n        /* \"#utility.yul\":7969:7984   */\n      add\n        /* \"#utility.yul\":7961:7984   */\n      swap1\n      pop\n        /* \"#utility.yul\":7684:7991   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7997:8145   */\n    tag_444:\n        /* \"#utility.yul\":8095:8101   */\n      dup3\n        /* \"#utility.yul\":8090:8093   */\n      dup2\n        /* \"#utility.yul\":8085:8088   */\n      dup4\n        /* \"#utility.yul\":8072:8102   */\n      calldatacopy\n        /* \"#utility.yul\":8136:8137   */\n      0x00\n        /* \"#utility.yul\":8127:8133   */\n      dup4\n        /* \"#utility.yul\":8122:8125   */\n      dup4\n        /* \"#utility.yul\":8118:8134   */\n      add\n        /* \"#utility.yul\":8111:8138   */\n      mstore\n        /* \"#utility.yul\":7997:8145   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8151:8574   */\n    tag_445:\n        /* \"#utility.yul\":8228:8233   */\n      0x00\n        /* \"#utility.yul\":8253:8318   */\n      tag_581\n        /* \"#utility.yul\":8269:8317   */\n      tag_582\n        /* \"#utility.yul\":8310:8316   */\n      dup5\n        /* \"#utility.yul\":8269:8317   */\n      tag_443\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":8253:8318   */\n      tag_442\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":8244:8318   */\n      swap1\n      pop\n        /* \"#utility.yul\":8341:8347   */\n      dup3\n        /* \"#utility.yul\":8334:8339   */\n      dup2\n        /* \"#utility.yul\":8327:8348   */\n      mstore\n        /* \"#utility.yul\":8379:8383   */\n      0x20\n        /* \"#utility.yul\":8372:8377   */\n      dup2\n        /* \"#utility.yul\":8368:8384   */\n      add\n        /* \"#utility.yul\":8417:8420   */\n      dup5\n        /* \"#utility.yul\":8408:8414   */\n      dup5\n        /* \"#utility.yul\":8403:8406   */\n      dup5\n        /* \"#utility.yul\":8399:8415   */\n      add\n        /* \"#utility.yul\":8396:8421   */\n      gt\n        /* \"#utility.yul\":8393:8505   */\n      iszero\n      tag_583\n      jumpi\n        /* \"#utility.yul\":8424:8503   */\n      tag_584\n      tag_440\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":8393:8505   */\n    tag_583:\n        /* \"#utility.yul\":8514:8568   */\n      tag_585\n        /* \"#utility.yul\":8561:8567   */\n      dup5\n        /* \"#utility.yul\":8556:8559   */\n      dup3\n        /* \"#utility.yul\":8551:8554   */\n      dup6\n        /* \"#utility.yul\":8514:8568   */\n      tag_444\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":8234:8574   */\n      pop\n        /* \"#utility.yul\":8151:8574   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8593:8931   */\n    tag_446:\n        /* \"#utility.yul\":8648:8653   */\n      0x00\n        /* \"#utility.yul\":8697:8700   */\n      dup3\n        /* \"#utility.yul\":8690:8694   */\n      0x1f\n        /* \"#utility.yul\":8682:8688   */\n      dup4\n        /* \"#utility.yul\":8678:8695   */\n      add\n        /* \"#utility.yul\":8674:8701   */\n      slt\n        /* \"#utility.yul\":8664:8786   */\n      tag_587\n      jumpi\n        /* \"#utility.yul\":8705:8784   */\n      tag_588\n      tag_439\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":8664:8786   */\n    tag_587:\n        /* \"#utility.yul\":8822:8828   */\n      dup2\n        /* \"#utility.yul\":8809:8829   */\n      calldataload\n        /* \"#utility.yul\":8847:8925   */\n      tag_589\n        /* \"#utility.yul\":8921:8924   */\n      dup5\n        /* \"#utility.yul\":8913:8919   */\n      dup3\n        /* \"#utility.yul\":8906:8910   */\n      0x20\n        /* \"#utility.yul\":8898:8904   */\n      dup7\n        /* \"#utility.yul\":8894:8911   */\n      add\n        /* \"#utility.yul\":8847:8925   */\n      tag_445\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":8838:8925   */\n      swap2\n      pop\n        /* \"#utility.yul\":8654:8931   */\n      pop\n        /* \"#utility.yul\":8593:8931   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8937:9880   */\n    tag_118:\n        /* \"#utility.yul\":9032:9038   */\n      0x00\n        /* \"#utility.yul\":9040:9046   */\n      dup1\n        /* \"#utility.yul\":9048:9054   */\n      0x00\n        /* \"#utility.yul\":9056:9062   */\n      dup1\n        /* \"#utility.yul\":9105:9108   */\n      0x80\n        /* \"#utility.yul\":9093:9102   */\n      dup6\n        /* \"#utility.yul\":9084:9091   */\n      dup8\n        /* \"#utility.yul\":9080:9103   */\n      sub\n        /* \"#utility.yul\":9076:9109   */\n      slt\n        /* \"#utility.yul\":9073:9193   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":9112:9191   */\n      tag_592\n      tag_416\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":9073:9193   */\n    tag_591:\n        /* \"#utility.yul\":9232:9233   */\n      0x00\n        /* \"#utility.yul\":9257:9310   */\n      tag_593\n        /* \"#utility.yul\":9302:9309   */\n      dup8\n        /* \"#utility.yul\":9293:9299   */\n      dup3\n        /* \"#utility.yul\":9282:9291   */\n      dup9\n        /* \"#utility.yul\":9278:9300   */\n      add\n        /* \"#utility.yul\":9257:9310   */\n      tag_436\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":9247:9310   */\n      swap5\n      pop\n        /* \"#utility.yul\":9203:9320   */\n      pop\n        /* \"#utility.yul\":9359:9361   */\n      0x20\n        /* \"#utility.yul\":9385:9438   */\n      tag_594\n        /* \"#utility.yul\":9430:9437   */\n      dup8\n        /* \"#utility.yul\":9421:9427   */\n      dup3\n        /* \"#utility.yul\":9410:9419   */\n      dup9\n        /* \"#utility.yul\":9406:9428   */\n      add\n        /* \"#utility.yul\":9385:9438   */\n      tag_436\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":9375:9438   */\n      swap4\n      pop\n        /* \"#utility.yul\":9330:9448   */\n      pop\n        /* \"#utility.yul\":9487:9489   */\n      0x40\n        /* \"#utility.yul\":9513:9566   */\n      tag_595\n        /* \"#utility.yul\":9558:9565   */\n      dup8\n        /* \"#utility.yul\":9549:9555   */\n      dup3\n        /* \"#utility.yul\":9538:9547   */\n      dup9\n        /* \"#utility.yul\":9534:9556   */\n      add\n        /* \"#utility.yul\":9513:9566   */\n      tag_431\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":9503:9566   */\n      swap3\n      pop\n        /* \"#utility.yul\":9458:9576   */\n      pop\n        /* \"#utility.yul\":9643:9645   */\n      0x60\n        /* \"#utility.yul\":9632:9641   */\n      dup6\n        /* \"#utility.yul\":9628:9646   */\n      add\n        /* \"#utility.yul\":9615:9647   */\n      calldataload\n        /* \"#utility.yul\":9674:9692   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9666:9672   */\n      dup2\n        /* \"#utility.yul\":9663:9693   */\n      gt\n        /* \"#utility.yul\":9660:9777   */\n      iszero\n      tag_596\n      jumpi\n        /* \"#utility.yul\":9696:9775   */\n      tag_597\n      tag_417\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":9660:9777   */\n    tag_596:\n        /* \"#utility.yul\":9801:9863   */\n      tag_598\n        /* \"#utility.yul\":9855:9862   */\n      dup8\n        /* \"#utility.yul\":9846:9852   */\n      dup3\n        /* \"#utility.yul\":9835:9844   */\n      dup9\n        /* \"#utility.yul\":9831:9853   */\n      add\n        /* \"#utility.yul\":9801:9863   */\n      tag_446\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":9791:9863   */\n      swap2\n      pop\n        /* \"#utility.yul\":9586:9873   */\n      pop\n        /* \"#utility.yul\":8937:9880   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9886:10360   */\n    tag_132:\n        /* \"#utility.yul\":9954:9960   */\n      0x00\n        /* \"#utility.yul\":9962:9968   */\n      dup1\n        /* \"#utility.yul\":10011:10013   */\n      0x40\n        /* \"#utility.yul\":9999:10008   */\n      dup4\n        /* \"#utility.yul\":9990:9997   */\n      dup6\n        /* \"#utility.yul\":9986:10009   */\n      sub\n        /* \"#utility.yul\":9982:10014   */\n      slt\n        /* \"#utility.yul\":9979:10098   */\n      iszero\n      tag_600\n      jumpi\n        /* \"#utility.yul\":10017:10096   */\n      tag_601\n      tag_416\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":9979:10098   */\n    tag_600:\n        /* \"#utility.yul\":10137:10138   */\n      0x00\n        /* \"#utility.yul\":10162:10215   */\n      tag_602\n        /* \"#utility.yul\":10207:10214   */\n      dup6\n        /* \"#utility.yul\":10198:10204   */\n      dup3\n        /* \"#utility.yul\":10187:10196   */\n      dup7\n        /* \"#utility.yul\":10183:10205   */\n      add\n        /* \"#utility.yul\":10162:10215   */\n      tag_436\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":10152:10215   */\n      swap3\n      pop\n        /* \"#utility.yul\":10108:10225   */\n      pop\n        /* \"#utility.yul\":10264:10266   */\n      0x20\n        /* \"#utility.yul\":10290:10343   */\n      tag_603\n        /* \"#utility.yul\":10335:10342   */\n      dup6\n        /* \"#utility.yul\":10326:10332   */\n      dup3\n        /* \"#utility.yul\":10315:10324   */\n      dup7\n        /* \"#utility.yul\":10311:10333   */\n      add\n        /* \"#utility.yul\":10290:10343   */\n      tag_436\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":10280:10343   */\n      swap2\n      pop\n        /* \"#utility.yul\":10235:10353   */\n      pop\n        /* \"#utility.yul\":9886:10360   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10366:10674   */\n    tag_447:\n        /* \"#utility.yul\":10428:10432   */\n      0x00\n        /* \"#utility.yul\":10518:10536   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10510:10516   */\n      dup3\n        /* \"#utility.yul\":10507:10537   */\n      gt\n        /* \"#utility.yul\":10504:10560   */\n      iszero\n      tag_605\n      jumpi\n        /* \"#utility.yul\":10540:10558   */\n      tag_606\n      tag_371\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":10504:10560   */\n    tag_605:\n        /* \"#utility.yul\":10578:10607   */\n      tag_607\n        /* \"#utility.yul\":10600:10606   */\n      dup3\n        /* \"#utility.yul\":10578:10607   */\n      tag_428\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":10570:10607   */\n      swap1\n      pop\n        /* \"#utility.yul\":10662:10666   */\n      0x20\n        /* \"#utility.yul\":10656:10660   */\n      dup2\n        /* \"#utility.yul\":10652:10667   */\n      add\n        /* \"#utility.yul\":10644:10667   */\n      swap1\n      pop\n        /* \"#utility.yul\":10366:10674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10680:11105   */\n    tag_448:\n        /* \"#utility.yul\":10758:10763   */\n      0x00\n        /* \"#utility.yul\":10783:10849   */\n      tag_609\n        /* \"#utility.yul\":10799:10848   */\n      tag_610\n        /* \"#utility.yul\":10841:10847   */\n      dup5\n        /* \"#utility.yul\":10799:10848   */\n      tag_447\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":10783:10849   */\n      tag_442\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":10774:10849   */\n      swap1\n      pop\n        /* \"#utility.yul\":10872:10878   */\n      dup3\n        /* \"#utility.yul\":10865:10870   */\n      dup2\n        /* \"#utility.yul\":10858:10879   */\n      mstore\n        /* \"#utility.yul\":10910:10914   */\n      0x20\n        /* \"#utility.yul\":10903:10908   */\n      dup2\n        /* \"#utility.yul\":10899:10915   */\n      add\n        /* \"#utility.yul\":10948:10951   */\n      dup5\n        /* \"#utility.yul\":10939:10945   */\n      dup5\n        /* \"#utility.yul\":10934:10937   */\n      dup5\n        /* \"#utility.yul\":10930:10946   */\n      add\n        /* \"#utility.yul\":10927:10952   */\n      gt\n        /* \"#utility.yul\":10924:11036   */\n      iszero\n      tag_611\n      jumpi\n        /* \"#utility.yul\":10955:11034   */\n      tag_612\n      tag_440\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":10924:11036   */\n    tag_611:\n        /* \"#utility.yul\":11045:11099   */\n      tag_613\n        /* \"#utility.yul\":11092:11098   */\n      dup5\n        /* \"#utility.yul\":11087:11090   */\n      dup3\n        /* \"#utility.yul\":11082:11085   */\n      dup6\n        /* \"#utility.yul\":11045:11099   */\n      tag_444\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":10764:11105   */\n      pop\n        /* \"#utility.yul\":10680:11105   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11125:11465   */\n    tag_449:\n        /* \"#utility.yul\":11181:11186   */\n      0x00\n        /* \"#utility.yul\":11230:11233   */\n      dup3\n        /* \"#utility.yul\":11223:11227   */\n      0x1f\n        /* \"#utility.yul\":11215:11221   */\n      dup4\n        /* \"#utility.yul\":11211:11228   */\n      add\n        /* \"#utility.yul\":11207:11234   */\n      slt\n        /* \"#utility.yul\":11197:11319   */\n      tag_615\n      jumpi\n        /* \"#utility.yul\":11238:11317   */\n      tag_616\n      tag_439\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":11197:11319   */\n    tag_615:\n        /* \"#utility.yul\":11355:11361   */\n      dup2\n        /* \"#utility.yul\":11342:11362   */\n      calldataload\n        /* \"#utility.yul\":11380:11459   */\n      tag_617\n        /* \"#utility.yul\":11455:11458   */\n      dup5\n        /* \"#utility.yul\":11447:11453   */\n      dup3\n        /* \"#utility.yul\":11440:11444   */\n      0x20\n        /* \"#utility.yul\":11432:11438   */\n      dup7\n        /* \"#utility.yul\":11428:11445   */\n      add\n        /* \"#utility.yul\":11380:11459   */\n      tag_448\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":11371:11459   */\n      swap2\n      pop\n        /* \"#utility.yul\":11187:11465   */\n      pop\n        /* \"#utility.yul\":11125:11465   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11471:11980   */\n    tag_145:\n        /* \"#utility.yul\":11540:11546   */\n      0x00\n        /* \"#utility.yul\":11589:11591   */\n      0x20\n        /* \"#utility.yul\":11577:11586   */\n      dup3\n        /* \"#utility.yul\":11568:11575   */\n      dup5\n        /* \"#utility.yul\":11564:11587   */\n      sub\n        /* \"#utility.yul\":11560:11592   */\n      slt\n        /* \"#utility.yul\":11557:11676   */\n      iszero\n      tag_619\n      jumpi\n        /* \"#utility.yul\":11595:11674   */\n      tag_620\n      tag_416\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":11557:11676   */\n    tag_619:\n        /* \"#utility.yul\":11743:11744   */\n      0x00\n        /* \"#utility.yul\":11732:11741   */\n      dup3\n        /* \"#utility.yul\":11728:11745   */\n      add\n        /* \"#utility.yul\":11715:11746   */\n      calldataload\n        /* \"#utility.yul\":11773:11791   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11765:11771   */\n      dup2\n        /* \"#utility.yul\":11762:11792   */\n      gt\n        /* \"#utility.yul\":11759:11876   */\n      iszero\n      tag_621\n      jumpi\n        /* \"#utility.yul\":11795:11874   */\n      tag_622\n      tag_417\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":11759:11876   */\n    tag_621:\n        /* \"#utility.yul\":11900:11963   */\n      tag_623\n        /* \"#utility.yul\":11955:11962   */\n      dup5\n        /* \"#utility.yul\":11946:11952   */\n      dup3\n        /* \"#utility.yul\":11935:11944   */\n      dup6\n        /* \"#utility.yul\":11931:11953   */\n      add\n        /* \"#utility.yul\":11900:11963   */\n      tag_449\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":11890:11963   */\n      swap2\n      pop\n        /* \"#utility.yul\":11686:11973   */\n      pop\n        /* \"#utility.yul\":11471:11980   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11986:12166   */\n    tag_450:\n        /* \"#utility.yul\":12034:12111   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12031:12032   */\n      0x00\n        /* \"#utility.yul\":12024:12112   */\n      mstore\n        /* \"#utility.yul\":12131:12135   */\n      0x22\n        /* \"#utility.yul\":12128:12129   */\n      0x04\n        /* \"#utility.yul\":12121:12136   */\n      mstore\n        /* \"#utility.yul\":12155:12159   */\n      0x24\n        /* \"#utility.yul\":12152:12153   */\n      0x00\n        /* \"#utility.yul\":12145:12160   */\n      revert\n        /* \"#utility.yul\":12172:12492   */\n    tag_154:\n        /* \"#utility.yul\":12216:12222   */\n      0x00\n        /* \"#utility.yul\":12253:12254   */\n      0x02\n        /* \"#utility.yul\":12247:12251   */\n      dup3\n        /* \"#utility.yul\":12243:12255   */\n      div\n        /* \"#utility.yul\":12233:12255   */\n      swap1\n      pop\n        /* \"#utility.yul\":12300:12301   */\n      0x01\n        /* \"#utility.yul\":12294:12298   */\n      dup3\n        /* \"#utility.yul\":12290:12302   */\n      and\n        /* \"#utility.yul\":12321:12339   */\n      dup1\n        /* \"#utility.yul\":12311:12392   */\n      tag_626\n      jumpi\n        /* \"#utility.yul\":12377:12381   */\n      0x7f\n        /* \"#utility.yul\":12369:12375   */\n      dup3\n        /* \"#utility.yul\":12365:12382   */\n      and\n        /* \"#utility.yul\":12355:12382   */\n      swap2\n      pop\n        /* \"#utility.yul\":12311:12392   */\n    tag_626:\n        /* \"#utility.yul\":12439:12441   */\n      0x20\n        /* \"#utility.yul\":12431:12437   */\n      dup3\n        /* \"#utility.yul\":12428:12442   */\n      lt\n        /* \"#utility.yul\":12408:12426   */\n      dup2\n        /* \"#utility.yul\":12405:12443   */\n      sub\n        /* \"#utility.yul\":12402:12486   */\n      tag_627\n      jumpi\n        /* \"#utility.yul\":12458:12476   */\n      tag_628\n      tag_450\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":12402:12486   */\n    tag_627:\n        /* \"#utility.yul\":12223:12492   */\n      pop\n        /* \"#utility.yul\":12172:12492   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12498:12666   */\n    tag_451:\n        /* \"#utility.yul\":12638:12658   */\n      0x4e6f74206d617374657220616464726573730000000000000000000000000000\n        /* \"#utility.yul\":12634:12635   */\n      0x00\n        /* \"#utility.yul\":12626:12632   */\n      dup3\n        /* \"#utility.yul\":12622:12636   */\n      add\n        /* \"#utility.yul\":12615:12659   */\n      mstore\n        /* \"#utility.yul\":12498:12666   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12672:13038   */\n    tag_452:\n        /* \"#utility.yul\":12814:12817   */\n      0x00\n        /* \"#utility.yul\":12835:12902   */\n      tag_631\n        /* \"#utility.yul\":12899:12901   */\n      0x12\n        /* \"#utility.yul\":12894:12897   */\n      dup4\n        /* \"#utility.yul\":12835:12902   */\n      tag_426\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":12828:12902   */\n      swap2\n      pop\n        /* \"#utility.yul\":12911:13004   */\n      tag_632\n        /* \"#utility.yul\":13000:13003   */\n      dup3\n        /* \"#utility.yul\":12911:13004   */\n      tag_451\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":13029:13031   */\n      0x20\n        /* \"#utility.yul\":13024:13027   */\n      dup3\n        /* \"#utility.yul\":13020:13032   */\n      add\n        /* \"#utility.yul\":13013:13032   */\n      swap1\n      pop\n        /* \"#utility.yul\":12672:13038   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13044:13463   */\n    tag_172:\n        /* \"#utility.yul\":13210:13214   */\n      0x00\n        /* \"#utility.yul\":13248:13250   */\n      0x20\n        /* \"#utility.yul\":13237:13246   */\n      dup3\n        /* \"#utility.yul\":13233:13251   */\n      add\n        /* \"#utility.yul\":13225:13251   */\n      swap1\n      pop\n        /* \"#utility.yul\":13297:13306   */\n      dup2\n        /* \"#utility.yul\":13291:13295   */\n      dup2\n        /* \"#utility.yul\":13287:13307   */\n      sub\n        /* \"#utility.yul\":13283:13284   */\n      0x00\n        /* \"#utility.yul\":13272:13281   */\n      dup4\n        /* \"#utility.yul\":13268:13285   */\n      add\n        /* \"#utility.yul\":13261:13308   */\n      mstore\n        /* \"#utility.yul\":13325:13456   */\n      tag_634\n        /* \"#utility.yul\":13451:13455   */\n      dup2\n        /* \"#utility.yul\":13325:13456   */\n      tag_452\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":13317:13456   */\n      swap1\n      pop\n        /* \"#utility.yul\":13044:13463   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13469:13616   */\n    tag_453:\n        /* \"#utility.yul\":13570:13581   */\n      0x00\n        /* \"#utility.yul\":13607:13610   */\n      dup2\n        /* \"#utility.yul\":13592:13610   */\n      swap1\n      pop\n        /* \"#utility.yul\":13469:13616   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13622:13736   */\n    tag_454:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13742:14140   */\n    tag_455:\n        /* \"#utility.yul\":13901:13904   */\n      0x00\n        /* \"#utility.yul\":13922:14005   */\n      tag_638\n        /* \"#utility.yul\":14003:14004   */\n      0x00\n        /* \"#utility.yul\":13998:14001   */\n      dup4\n        /* \"#utility.yul\":13922:14005   */\n      tag_453\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":13915:14005   */\n      swap2\n      pop\n        /* \"#utility.yul\":14014:14107   */\n      tag_639\n        /* \"#utility.yul\":14103:14106   */\n      dup3\n        /* \"#utility.yul\":14014:14107   */\n      tag_454\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":14132:14133   */\n      0x00\n        /* \"#utility.yul\":14127:14130   */\n      dup3\n        /* \"#utility.yul\":14123:14134   */\n      add\n        /* \"#utility.yul\":14116:14134   */\n      swap1\n      pop\n        /* \"#utility.yul\":13742:14140   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14146:14525   */\n    tag_174:\n        /* \"#utility.yul\":14330:14333   */\n      0x00\n        /* \"#utility.yul\":14352:14499   */\n      tag_641\n        /* \"#utility.yul\":14495:14498   */\n      dup3\n        /* \"#utility.yul\":14352:14499   */\n      tag_455\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":14345:14499   */\n      swap2\n      pop\n        /* \"#utility.yul\":14516:14519   */\n      dup2\n        /* \"#utility.yul\":14509:14519   */\n      swap1\n      pop\n        /* \"#utility.yul\":14146:14525   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14531:14697   */\n    tag_456:\n        /* \"#utility.yul\":14671:14689   */\n      0x5472616e73666572206661696c65642e00000000000000000000000000000000\n        /* \"#utility.yul\":14667:14668   */\n      0x00\n        /* \"#utility.yul\":14659:14665   */\n      dup3\n        /* \"#utility.yul\":14655:14669   */\n      add\n        /* \"#utility.yul\":14648:14690   */\n      mstore\n        /* \"#utility.yul\":14531:14697   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14703:15069   */\n    tag_457:\n        /* \"#utility.yul\":14845:14848   */\n      0x00\n        /* \"#utility.yul\":14866:14933   */\n      tag_644\n        /* \"#utility.yul\":14930:14932   */\n      0x10\n        /* \"#utility.yul\":14925:14928   */\n      dup4\n        /* \"#utility.yul\":14866:14933   */\n      tag_426\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":14859:14933   */\n      swap2\n      pop\n        /* \"#utility.yul\":14942:15035   */\n      tag_645\n        /* \"#utility.yul\":15031:15034   */\n      dup3\n        /* \"#utility.yul\":14942:15035   */\n      tag_456\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":15060:15062   */\n      0x20\n        /* \"#utility.yul\":15055:15058   */\n      dup3\n        /* \"#utility.yul\":15051:15063   */\n      add\n        /* \"#utility.yul\":15044:15063   */\n      swap1\n      pop\n        /* \"#utility.yul\":14703:15069   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15075:15494   */\n    tag_180:\n        /* \"#utility.yul\":15241:15245   */\n      0x00\n        /* \"#utility.yul\":15279:15281   */\n      0x20\n        /* \"#utility.yul\":15268:15277   */\n      dup3\n        /* \"#utility.yul\":15264:15282   */\n      add\n        /* \"#utility.yul\":15256:15282   */\n      swap1\n      pop\n        /* \"#utility.yul\":15328:15337   */\n      dup2\n        /* \"#utility.yul\":15322:15326   */\n      dup2\n        /* \"#utility.yul\":15318:15338   */\n      sub\n        /* \"#utility.yul\":15314:15315   */\n      0x00\n        /* \"#utility.yul\":15303:15312   */\n      dup4\n        /* \"#utility.yul\":15299:15316   */\n      add\n        /* \"#utility.yul\":15292:15339   */\n      mstore\n        /* \"#utility.yul\":15356:15487   */\n      tag_647\n        /* \"#utility.yul\":15482:15486   */\n      dup2\n        /* \"#utility.yul\":15356:15487   */\n      tag_457\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":15348:15487   */\n      swap1\n      pop\n        /* \"#utility.yul\":15075:15494   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15500:15942   */\n    tag_189:\n        /* \"#utility.yul\":15649:15653   */\n      0x00\n        /* \"#utility.yul\":15687:15689   */\n      0x60\n        /* \"#utility.yul\":15676:15685   */\n      dup3\n        /* \"#utility.yul\":15672:15690   */\n      add\n        /* \"#utility.yul\":15664:15690   */\n      swap1\n      pop\n        /* \"#utility.yul\":15700:15771   */\n      tag_649\n        /* \"#utility.yul\":15768:15769   */\n      0x00\n        /* \"#utility.yul\":15757:15766   */\n      dup4\n        /* \"#utility.yul\":15753:15770   */\n      add\n        /* \"#utility.yul\":15744:15750   */\n      dup7\n        /* \"#utility.yul\":15700:15771   */\n      tag_434\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":15781:15853   */\n      tag_650\n        /* \"#utility.yul\":15849:15851   */\n      0x20\n        /* \"#utility.yul\":15838:15847   */\n      dup4\n        /* \"#utility.yul\":15834:15852   */\n      add\n        /* \"#utility.yul\":15825:15831   */\n      dup6\n        /* \"#utility.yul\":15781:15853   */\n      tag_424\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":15863:15935   */\n      tag_651\n        /* \"#utility.yul\":15931:15933   */\n      0x40\n        /* \"#utility.yul\":15920:15929   */\n      dup4\n        /* \"#utility.yul\":15916:15934   */\n      add\n        /* \"#utility.yul\":15907:15913   */\n      dup5\n        /* \"#utility.yul\":15863:15935   */\n      tag_434\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":15500:15942   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15948:16096   */\n    tag_458:\n        /* \"#utility.yul\":16050:16061   */\n      0x00\n        /* \"#utility.yul\":16087:16090   */\n      dup2\n        /* \"#utility.yul\":16072:16090   */\n      swap1\n      pop\n        /* \"#utility.yul\":15948:16096   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16102:16492   */\n    tag_459:\n        /* \"#utility.yul\":16208:16211   */\n      0x00\n        /* \"#utility.yul\":16236:16275   */\n      tag_654\n        /* \"#utility.yul\":16269:16274   */\n      dup3\n        /* \"#utility.yul\":16236:16275   */\n      tag_425\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":16291:16380   */\n      tag_655\n        /* \"#utility.yul\":16373:16379   */\n      dup2\n        /* \"#utility.yul\":16368:16371   */\n      dup6\n        /* \"#utility.yul\":16291:16380   */\n      tag_458\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":16284:16380   */\n      swap4\n      pop\n        /* \"#utility.yul\":16389:16454   */\n      tag_656\n        /* \"#utility.yul\":16447:16453   */\n      dup2\n        /* \"#utility.yul\":16442:16445   */\n      dup6\n        /* \"#utility.yul\":16435:16439   */\n      0x20\n        /* \"#utility.yul\":16428:16433   */\n      dup7\n        /* \"#utility.yul\":16424:16440   */\n      add\n        /* \"#utility.yul\":16389:16454   */\n      tag_427\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":16479:16485   */\n      dup1\n        /* \"#utility.yul\":16474:16477   */\n      dup5\n        /* \"#utility.yul\":16470:16486   */\n      add\n        /* \"#utility.yul\":16463:16486   */\n      swap2\n      pop\n        /* \"#utility.yul\":16212:16492   */\n      pop\n        /* \"#utility.yul\":16102:16492   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16498:16933   */\n    tag_233:\n        /* \"#utility.yul\":16678:16681   */\n      0x00\n        /* \"#utility.yul\":16700:16795   */\n      tag_658\n        /* \"#utility.yul\":16791:16794   */\n      dup3\n        /* \"#utility.yul\":16782:16788   */\n      dup6\n        /* \"#utility.yul\":16700:16795   */\n      tag_459\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":16693:16795   */\n      swap2\n      pop\n        /* \"#utility.yul\":16812:16907   */\n      tag_659\n        /* \"#utility.yul\":16903:16906   */\n      dup3\n        /* \"#utility.yul\":16894:16900   */\n      dup5\n        /* \"#utility.yul\":16812:16907   */\n      tag_459\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":16805:16907   */\n      swap2\n      pop\n        /* \"#utility.yul\":16924:16927   */\n      dup2\n        /* \"#utility.yul\":16917:16927   */\n      swap1\n      pop\n        /* \"#utility.yul\":16498:16933   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16939:17103   */\n    tag_460:\n        /* \"#utility.yul\":17079:17095   */\n      0x4e6f7420656e6f75676820455448000000000000000000000000000000000000\n        /* \"#utility.yul\":17075:17076   */\n      0x00\n        /* \"#utility.yul\":17067:17073   */\n      dup3\n        /* \"#utility.yul\":17063:17077   */\n      add\n        /* \"#utility.yul\":17056:17096   */\n      mstore\n        /* \"#utility.yul\":16939:17103   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17109:17475   */\n    tag_461:\n        /* \"#utility.yul\":17251:17254   */\n      0x00\n        /* \"#utility.yul\":17272:17339   */\n      tag_662\n        /* \"#utility.yul\":17336:17338   */\n      0x0e\n        /* \"#utility.yul\":17331:17334   */\n      dup4\n        /* \"#utility.yul\":17272:17339   */\n      tag_426\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":17265:17339   */\n      swap2\n      pop\n        /* \"#utility.yul\":17348:17441   */\n      tag_663\n        /* \"#utility.yul\":17437:17440   */\n      dup3\n        /* \"#utility.yul\":17348:17441   */\n      tag_460\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":17466:17468   */\n      0x20\n        /* \"#utility.yul\":17461:17464   */\n      dup3\n        /* \"#utility.yul\":17457:17469   */\n      add\n        /* \"#utility.yul\":17450:17469   */\n      swap1\n      pop\n        /* \"#utility.yul\":17109:17475   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17481:17900   */\n    tag_259:\n        /* \"#utility.yul\":17647:17651   */\n      0x00\n        /* \"#utility.yul\":17685:17687   */\n      0x20\n        /* \"#utility.yul\":17674:17683   */\n      dup3\n        /* \"#utility.yul\":17670:17688   */\n      add\n        /* \"#utility.yul\":17662:17688   */\n      swap1\n      pop\n        /* \"#utility.yul\":17734:17743   */\n      dup2\n        /* \"#utility.yul\":17728:17732   */\n      dup2\n        /* \"#utility.yul\":17724:17744   */\n      sub\n        /* \"#utility.yul\":17720:17721   */\n      0x00\n        /* \"#utility.yul\":17709:17718   */\n      dup4\n        /* \"#utility.yul\":17705:17722   */\n      add\n        /* \"#utility.yul\":17698:17745   */\n      mstore\n        /* \"#utility.yul\":17762:17893   */\n      tag_665\n        /* \"#utility.yul\":17888:17892   */\n      dup2\n        /* \"#utility.yul\":17762:17893   */\n      tag_461\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":17754:17893   */\n      swap1\n      pop\n        /* \"#utility.yul\":17481:17900   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17906:18086   */\n    tag_462:\n        /* \"#utility.yul\":17954:18031   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17951:17952   */\n      0x00\n        /* \"#utility.yul\":17944:18032   */\n      mstore\n        /* \"#utility.yul\":18051:18055   */\n      0x11\n        /* \"#utility.yul\":18048:18049   */\n      0x04\n        /* \"#utility.yul\":18041:18056   */\n      mstore\n        /* \"#utility.yul\":18075:18079   */\n      0x24\n        /* \"#utility.yul\":18072:18073   */\n      0x00\n        /* \"#utility.yul\":18065:18080   */\n      revert\n        /* \"#utility.yul\":18092:18325   */\n    tag_267:\n        /* \"#utility.yul\":18131:18134   */\n      0x00\n        /* \"#utility.yul\":18154:18178   */\n      tag_668\n        /* \"#utility.yul\":18172:18177   */\n      dup3\n        /* \"#utility.yul\":18154:18178   */\n      tag_423\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":18145:18178   */\n      swap2\n      pop\n        /* \"#utility.yul\":18200:18266   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18193:18198   */\n      dup3\n        /* \"#utility.yul\":18190:18267   */\n      sub\n        /* \"#utility.yul\":18187:18290   */\n      tag_669\n      jumpi\n        /* \"#utility.yul\":18270:18288   */\n      tag_670\n      tag_462\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":18187:18290   */\n    tag_669:\n        /* \"#utility.yul\":18317:18318   */\n      0x01\n        /* \"#utility.yul\":18310:18315   */\n      dup3\n        /* \"#utility.yul\":18306:18319   */\n      add\n        /* \"#utility.yul\":18299:18319   */\n      swap1\n      pop\n        /* \"#utility.yul\":18092:18325   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18331:18429   */\n    tag_463:\n        /* \"#utility.yul\":18382:18388   */\n      0x00\n        /* \"#utility.yul\":18416:18421   */\n      dup2\n        /* \"#utility.yul\":18410:18422   */\n      mload\n        /* \"#utility.yul\":18400:18422   */\n      swap1\n      pop\n        /* \"#utility.yul\":18331:18429   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18435:18603   */\n    tag_464:\n        /* \"#utility.yul\":18518:18529   */\n      0x00\n        /* \"#utility.yul\":18552:18558   */\n      dup3\n        /* \"#utility.yul\":18547:18550   */\n      dup3\n        /* \"#utility.yul\":18540:18559   */\n      mstore\n        /* \"#utility.yul\":18592:18596   */\n      0x20\n        /* \"#utility.yul\":18587:18590   */\n      dup3\n        /* \"#utility.yul\":18583:18597   */\n      add\n        /* \"#utility.yul\":18568:18597   */\n      swap1\n      pop\n        /* \"#utility.yul\":18435:18603   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18609:18982   */\n    tag_465:\n        /* \"#utility.yul\":18695:18698   */\n      0x00\n        /* \"#utility.yul\":18723:18761   */\n      tag_674\n        /* \"#utility.yul\":18755:18760   */\n      dup3\n        /* \"#utility.yul\":18723:18761   */\n      tag_463\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":18777:18847   */\n      tag_675\n        /* \"#utility.yul\":18840:18846   */\n      dup2\n        /* \"#utility.yul\":18835:18838   */\n      dup6\n        /* \"#utility.yul\":18777:18847   */\n      tag_464\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":18770:18847   */\n      swap4\n      pop\n        /* \"#utility.yul\":18856:18921   */\n      tag_676\n        /* \"#utility.yul\":18914:18920   */\n      dup2\n        /* \"#utility.yul\":18909:18912   */\n      dup6\n        /* \"#utility.yul\":18902:18906   */\n      0x20\n        /* \"#utility.yul\":18895:18900   */\n      dup7\n        /* \"#utility.yul\":18891:18907   */\n      add\n        /* \"#utility.yul\":18856:18921   */\n      tag_427\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":18946:18975   */\n      tag_677\n        /* \"#utility.yul\":18968:18974   */\n      dup2\n        /* \"#utility.yul\":18946:18975   */\n      tag_428\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":18941:18944   */\n      dup5\n        /* \"#utility.yul\":18937:18976   */\n      add\n        /* \"#utility.yul\":18930:18976   */\n      swap2\n      pop\n        /* \"#utility.yul\":18699:18982   */\n      pop\n        /* \"#utility.yul\":18609:18982   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18988:19628   */\n    tag_308:\n        /* \"#utility.yul\":19183:19187   */\n      0x00\n        /* \"#utility.yul\":19221:19224   */\n      0x80\n        /* \"#utility.yul\":19210:19219   */\n      dup3\n        /* \"#utility.yul\":19206:19225   */\n      add\n        /* \"#utility.yul\":19198:19225   */\n      swap1\n      pop\n        /* \"#utility.yul\":19235:19306   */\n      tag_679\n        /* \"#utility.yul\":19303:19304   */\n      0x00\n        /* \"#utility.yul\":19292:19301   */\n      dup4\n        /* \"#utility.yul\":19288:19305   */\n      add\n        /* \"#utility.yul\":19279:19285   */\n      dup8\n        /* \"#utility.yul\":19235:19306   */\n      tag_434\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":19316:19388   */\n      tag_680\n        /* \"#utility.yul\":19384:19386   */\n      0x20\n        /* \"#utility.yul\":19373:19382   */\n      dup4\n        /* \"#utility.yul\":19369:19387   */\n      add\n        /* \"#utility.yul\":19360:19366   */\n      dup7\n        /* \"#utility.yul\":19316:19388   */\n      tag_434\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":19398:19470   */\n      tag_681\n        /* \"#utility.yul\":19466:19468   */\n      0x40\n        /* \"#utility.yul\":19455:19464   */\n      dup4\n        /* \"#utility.yul\":19451:19469   */\n      add\n        /* \"#utility.yul\":19442:19448   */\n      dup6\n        /* \"#utility.yul\":19398:19470   */\n      tag_424\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":19517:19526   */\n      dup2\n        /* \"#utility.yul\":19511:19515   */\n      dup2\n        /* \"#utility.yul\":19507:19527   */\n      sub\n        /* \"#utility.yul\":19502:19504   */\n      0x60\n        /* \"#utility.yul\":19491:19500   */\n      dup4\n        /* \"#utility.yul\":19487:19505   */\n      add\n        /* \"#utility.yul\":19480:19528   */\n      mstore\n        /* \"#utility.yul\":19545:19621   */\n      tag_682\n        /* \"#utility.yul\":19616:19620   */\n      dup2\n        /* \"#utility.yul\":19607:19613   */\n      dup5\n        /* \"#utility.yul\":19545:19621   */\n      tag_465\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":19537:19621   */\n      swap1\n      pop\n        /* \"#utility.yul\":18988:19628   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19634:19775   */\n    tag_466:\n        /* \"#utility.yul\":19690:19695   */\n      0x00\n        /* \"#utility.yul\":19721:19727   */\n      dup2\n        /* \"#utility.yul\":19715:19728   */\n      mload\n        /* \"#utility.yul\":19706:19728   */\n      swap1\n      pop\n        /* \"#utility.yul\":19737:19769   */\n      tag_684\n        /* \"#utility.yul\":19763:19768   */\n      dup2\n        /* \"#utility.yul\":19737:19769   */\n      tag_419\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":19634:19775   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19781:20130   */\n    tag_311:\n        /* \"#utility.yul\":19850:19856   */\n      0x00\n        /* \"#utility.yul\":19899:19901   */\n      0x20\n        /* \"#utility.yul\":19887:19896   */\n      dup3\n        /* \"#utility.yul\":19878:19885   */\n      dup5\n        /* \"#utility.yul\":19874:19897   */\n      sub\n        /* \"#utility.yul\":19870:19902   */\n      slt\n        /* \"#utility.yul\":19867:19986   */\n      iszero\n      tag_686\n      jumpi\n        /* \"#utility.yul\":19905:19984   */\n      tag_687\n      tag_416\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":19867:19986   */\n    tag_686:\n        /* \"#utility.yul\":20025:20026   */\n      0x00\n        /* \"#utility.yul\":20050:20113   */\n      tag_688\n        /* \"#utility.yul\":20105:20112   */\n      dup5\n        /* \"#utility.yul\":20096:20102   */\n      dup3\n        /* \"#utility.yul\":20085:20094   */\n      dup6\n        /* \"#utility.yul\":20081:20103   */\n      add\n        /* \"#utility.yul\":20050:20113   */\n      tag_466\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":20040:20113   */\n      swap2\n      pop\n        /* \"#utility.yul\":19996:20123   */\n      pop\n        /* \"#utility.yul\":19781:20130   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20136:20317   */\n    tag_467:\n        /* \"#utility.yul\":20276:20309   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":20272:20273   */\n      0x00\n        /* \"#utility.yul\":20264:20270   */\n      dup3\n        /* \"#utility.yul\":20260:20274   */\n      add\n        /* \"#utility.yul\":20253:20310   */\n      mstore\n        /* \"#utility.yul\":20136:20317   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20323:20689   */\n    tag_468:\n        /* \"#utility.yul\":20465:20468   */\n      0x00\n        /* \"#utility.yul\":20486:20553   */\n      tag_691\n        /* \"#utility.yul\":20550:20552   */\n      0x1f\n        /* \"#utility.yul\":20545:20548   */\n      dup4\n        /* \"#utility.yul\":20486:20553   */\n      tag_426\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":20479:20553   */\n      swap2\n      pop\n        /* \"#utility.yul\":20562:20655   */\n      tag_692\n        /* \"#utility.yul\":20651:20654   */\n      dup3\n        /* \"#utility.yul\":20562:20655   */\n      tag_467\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":20680:20682   */\n      0x20\n        /* \"#utility.yul\":20675:20678   */\n      dup3\n        /* \"#utility.yul\":20671:20683   */\n      add\n        /* \"#utility.yul\":20664:20683   */\n      swap1\n      pop\n        /* \"#utility.yul\":20323:20689   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20695:21114   */\n    tag_336:\n        /* \"#utility.yul\":20861:20865   */\n      0x00\n        /* \"#utility.yul\":20899:20901   */\n      0x20\n        /* \"#utility.yul\":20888:20897   */\n      dup3\n        /* \"#utility.yul\":20884:20902   */\n      add\n        /* \"#utility.yul\":20876:20902   */\n      swap1\n      pop\n        /* \"#utility.yul\":20948:20957   */\n      dup2\n        /* \"#utility.yul\":20942:20946   */\n      dup2\n        /* \"#utility.yul\":20938:20958   */\n      sub\n        /* \"#utility.yul\":20934:20935   */\n      0x00\n        /* \"#utility.yul\":20923:20932   */\n      dup4\n        /* \"#utility.yul\":20919:20936   */\n      add\n        /* \"#utility.yul\":20912:20959   */\n      mstore\n        /* \"#utility.yul\":20976:21107   */\n      tag_694\n        /* \"#utility.yul\":21102:21106   */\n      dup2\n        /* \"#utility.yul\":20976:21107   */\n      tag_468\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":20968:21107   */\n      swap1\n      pop\n        /* \"#utility.yul\":20695:21114   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21120:21261   */\n    tag_469:\n        /* \"#utility.yul\":21169:21173   */\n      0x00\n        /* \"#utility.yul\":21192:21195   */\n      dup2\n        /* \"#utility.yul\":21184:21195   */\n      swap1\n      pop\n        /* \"#utility.yul\":21215:21218   */\n      dup2\n        /* \"#utility.yul\":21212:21213   */\n      0x00\n        /* \"#utility.yul\":21205:21219   */\n      mstore\n        /* \"#utility.yul\":21249:21253   */\n      0x20\n        /* \"#utility.yul\":21246:21247   */\n      0x00\n        /* \"#utility.yul\":21236:21254   */\n      keccak256\n        /* \"#utility.yul\":21228:21254   */\n      swap1\n      pop\n        /* \"#utility.yul\":21120:21261   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21267:21360   */\n    tag_470:\n        /* \"#utility.yul\":21304:21310   */\n      0x00\n        /* \"#utility.yul\":21351:21353   */\n      0x20\n        /* \"#utility.yul\":21346:21348   */\n      0x1f\n        /* \"#utility.yul\":21339:21344   */\n      dup4\n        /* \"#utility.yul\":21335:21349   */\n      add\n        /* \"#utility.yul\":21331:21354   */\n      div\n        /* \"#utility.yul\":21321:21354   */\n      swap1\n      pop\n        /* \"#utility.yul\":21267:21360   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21366:21473   */\n    tag_471:\n        /* \"#utility.yul\":21410:21418   */\n      0x00\n        /* \"#utility.yul\":21460:21465   */\n      dup3\n        /* \"#utility.yul\":21454:21458   */\n      dup3\n        /* \"#utility.yul\":21450:21466   */\n      shl\n        /* \"#utility.yul\":21429:21466   */\n      swap1\n      pop\n        /* \"#utility.yul\":21366:21473   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21479:21872   */\n    tag_472:\n        /* \"#utility.yul\":21548:21554   */\n      0x00\n        /* \"#utility.yul\":21598:21599   */\n      0x08\n        /* \"#utility.yul\":21586:21596   */\n      dup4\n        /* \"#utility.yul\":21582:21600   */\n      mul\n        /* \"#utility.yul\":21621:21718   */\n      tag_699\n        /* \"#utility.yul\":21651:21717   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":21640:21649   */\n      dup3\n        /* \"#utility.yul\":21621:21718   */\n      tag_471\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":21739:21778   */\n      tag_700\n        /* \"#utility.yul\":21769:21777   */\n      dup7\n        /* \"#utility.yul\":21758:21767   */\n      dup4\n        /* \"#utility.yul\":21739:21778   */\n      tag_471\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":21727:21778   */\n      swap6\n      pop\n        /* \"#utility.yul\":21811:21815   */\n      dup1\n        /* \"#utility.yul\":21807:21816   */\n      not\n        /* \"#utility.yul\":21800:21805   */\n      dup5\n        /* \"#utility.yul\":21796:21817   */\n      and\n        /* \"#utility.yul\":21787:21817   */\n      swap4\n      pop\n        /* \"#utility.yul\":21860:21864   */\n      dup1\n        /* \"#utility.yul\":21850:21858   */\n      dup7\n        /* \"#utility.yul\":21846:21865   */\n      and\n        /* \"#utility.yul\":21839:21844   */\n      dup5\n        /* \"#utility.yul\":21836:21866   */\n      or\n        /* \"#utility.yul\":21826:21866   */\n      swap3\n      pop\n        /* \"#utility.yul\":21555:21872   */\n      pop\n      pop\n        /* \"#utility.yul\":21479:21872   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21878:21938   */\n    tag_473:\n        /* \"#utility.yul\":21906:21909   */\n      0x00\n        /* \"#utility.yul\":21927:21932   */\n      dup2\n        /* \"#utility.yul\":21920:21932   */\n      swap1\n      pop\n        /* \"#utility.yul\":21878:21938   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21944:22086   */\n    tag_474:\n        /* \"#utility.yul\":21994:22003   */\n      0x00\n        /* \"#utility.yul\":22027:22080   */\n      tag_703\n        /* \"#utility.yul\":22045:22079   */\n      tag_704\n        /* \"#utility.yul\":22054:22078   */\n      tag_705\n        /* \"#utility.yul\":22072:22077   */\n      dup5\n        /* \"#utility.yul\":22054:22078   */\n      tag_423\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":22045:22079   */\n      tag_473\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":22027:22080   */\n      tag_423\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":22014:22080   */\n      swap1\n      pop\n        /* \"#utility.yul\":21944:22086   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22092:22167   */\n    tag_475:\n        /* \"#utility.yul\":22135:22138   */\n      0x00\n        /* \"#utility.yul\":22156:22161   */\n      dup2\n        /* \"#utility.yul\":22149:22161   */\n      swap1\n      pop\n        /* \"#utility.yul\":22092:22167   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22173:22442   */\n    tag_476:\n        /* \"#utility.yul\":22283:22322   */\n      tag_708\n        /* \"#utility.yul\":22314:22321   */\n      dup4\n        /* \"#utility.yul\":22283:22322   */\n      tag_474\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":22344:22435   */\n      tag_709\n        /* \"#utility.yul\":22393:22434   */\n      tag_710\n        /* \"#utility.yul\":22417:22433   */\n      dup3\n        /* \"#utility.yul\":22393:22434   */\n      tag_475\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":22385:22391   */\n      dup5\n        /* \"#utility.yul\":22378:22382   */\n      dup5\n        /* \"#utility.yul\":22372:22383   */\n      sload\n        /* \"#utility.yul\":22344:22435   */\n      tag_472\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":22338:22342   */\n      dup3\n        /* \"#utility.yul\":22331:22436   */\n      sstore\n        /* \"#utility.yul\":22249:22442   */\n      pop\n        /* \"#utility.yul\":22173:22442   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22448:22521   */\n    tag_477:\n        /* \"#utility.yul\":22493:22496   */\n      0x00\n        /* \"#utility.yul\":22448:22521   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":22527:22716   */\n    tag_478:\n        /* \"#utility.yul\":22604:22636   */\n      tag_713\n      tag_477\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":22645:22710   */\n      tag_714\n        /* \"#utility.yul\":22703:22709   */\n      dup2\n        /* \"#utility.yul\":22695:22701   */\n      dup5\n        /* \"#utility.yul\":22689:22693   */\n      dup5\n        /* \"#utility.yul\":22645:22710   */\n      tag_476\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":22580:22716   */\n      pop\n        /* \"#utility.yul\":22527:22716   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22722:22908   */\n    tag_479:\n        /* \"#utility.yul\":22782:22902   */\n    tag_716:\n        /* \"#utility.yul\":22799:22802   */\n      dup2\n        /* \"#utility.yul\":22792:22797   */\n      dup2\n        /* \"#utility.yul\":22789:22803   */\n      lt\n        /* \"#utility.yul\":22782:22902   */\n      iszero\n      tag_718\n      jumpi\n        /* \"#utility.yul\":22853:22892   */\n      tag_719\n        /* \"#utility.yul\":22890:22891   */\n      0x00\n        /* \"#utility.yul\":22883:22888   */\n      dup3\n        /* \"#utility.yul\":22853:22892   */\n      tag_478\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":22826:22827   */\n      0x01\n        /* \"#utility.yul\":22819:22824   */\n      dup2\n        /* \"#utility.yul\":22815:22828   */\n      add\n        /* \"#utility.yul\":22806:22828   */\n      swap1\n      pop\n        /* \"#utility.yul\":22782:22902   */\n      jump(tag_716)\n    tag_718:\n        /* \"#utility.yul\":22722:22908   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22914:23457   */\n    tag_480:\n        /* \"#utility.yul\":23015:23017   */\n      0x1f\n        /* \"#utility.yul\":23010:23013   */\n      dup3\n        /* \"#utility.yul\":23007:23018   */\n      gt\n        /* \"#utility.yul\":23004:23450   */\n      iszero\n      tag_721\n      jumpi\n        /* \"#utility.yul\":23049:23087   */\n      tag_722\n        /* \"#utility.yul\":23081:23086   */\n      dup2\n        /* \"#utility.yul\":23049:23087   */\n      tag_469\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":23133:23162   */\n      tag_723\n        /* \"#utility.yul\":23151:23161   */\n      dup5\n        /* \"#utility.yul\":23133:23162   */\n      tag_470\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":23123:23131   */\n      dup2\n        /* \"#utility.yul\":23119:23163   */\n      add\n        /* \"#utility.yul\":23316:23318   */\n      0x20\n        /* \"#utility.yul\":23304:23314   */\n      dup6\n        /* \"#utility.yul\":23301:23319   */\n      lt\n        /* \"#utility.yul\":23298:23347   */\n      iszero\n      tag_724\n      jumpi\n        /* \"#utility.yul\":23337:23345   */\n      dup2\n        /* \"#utility.yul\":23322:23345   */\n      swap1\n      pop\n        /* \"#utility.yul\":23298:23347   */\n    tag_724:\n        /* \"#utility.yul\":23360:23440   */\n      tag_725\n        /* \"#utility.yul\":23416:23438   */\n      tag_726\n        /* \"#utility.yul\":23434:23437   */\n      dup6\n        /* \"#utility.yul\":23416:23438   */\n      tag_470\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":23406:23414   */\n      dup4\n        /* \"#utility.yul\":23402:23439   */\n      add\n        /* \"#utility.yul\":23389:23400   */\n      dup3\n        /* \"#utility.yul\":23360:23440   */\n      tag_479\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":23019:23450   */\n      pop\n      pop\n        /* \"#utility.yul\":23004:23450   */\n    tag_721:\n        /* \"#utility.yul\":22914:23457   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23463:23580   */\n    tag_481:\n        /* \"#utility.yul\":23517:23525   */\n      0x00\n        /* \"#utility.yul\":23567:23572   */\n      dup3\n        /* \"#utility.yul\":23561:23565   */\n      dup3\n        /* \"#utility.yul\":23557:23573   */\n      shr\n        /* \"#utility.yul\":23536:23573   */\n      swap1\n      pop\n        /* \"#utility.yul\":23463:23580   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23586:23755   */\n    tag_482:\n        /* \"#utility.yul\":23630:23636   */\n      0x00\n        /* \"#utility.yul\":23663:23714   */\n      tag_729\n        /* \"#utility.yul\":23711:23712   */\n      0x00\n        /* \"#utility.yul\":23707:23713   */\n      not\n        /* \"#utility.yul\":23699:23704   */\n      dup5\n        /* \"#utility.yul\":23696:23697   */\n      0x08\n        /* \"#utility.yul\":23692:23705   */\n      mul\n        /* \"#utility.yul\":23663:23714   */\n      tag_481\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":23659:23715   */\n      not\n        /* \"#utility.yul\":23744:23748   */\n      dup1\n        /* \"#utility.yul\":23738:23742   */\n      dup4\n        /* \"#utility.yul\":23734:23749   */\n      and\n        /* \"#utility.yul\":23724:23749   */\n      swap2\n      pop\n        /* \"#utility.yul\":23637:23755   */\n      pop\n        /* \"#utility.yul\":23586:23755   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23760:24055   */\n    tag_483:\n        /* \"#utility.yul\":23836:23840   */\n      0x00\n        /* \"#utility.yul\":23982:24011   */\n      tag_731\n        /* \"#utility.yul\":24007:24010   */\n      dup4\n        /* \"#utility.yul\":24001:24005   */\n      dup4\n        /* \"#utility.yul\":23982:24011   */\n      tag_482\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":23974:24011   */\n      swap2\n      pop\n        /* \"#utility.yul\":24044:24047   */\n      dup3\n        /* \"#utility.yul\":24041:24042   */\n      0x02\n        /* \"#utility.yul\":24037:24048   */\n      mul\n        /* \"#utility.yul\":24031:24035   */\n      dup3\n        /* \"#utility.yul\":24028:24049   */\n      or\n        /* \"#utility.yul\":24020:24049   */\n      swap1\n      pop\n        /* \"#utility.yul\":23760:24055   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24060:25455   */\n    tag_342:\n        /* \"#utility.yul\":24177:24214   */\n      tag_733\n        /* \"#utility.yul\":24210:24213   */\n      dup3\n        /* \"#utility.yul\":24177:24214   */\n      tag_425\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":24279:24297   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":24271:24277   */\n      dup2\n        /* \"#utility.yul\":24268:24298   */\n      gt\n        /* \"#utility.yul\":24265:24321   */\n      iszero\n      tag_734\n      jumpi\n        /* \"#utility.yul\":24301:24319   */\n      tag_735\n      tag_371\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":24265:24321   */\n    tag_734:\n        /* \"#utility.yul\":24345:24383   */\n      tag_736\n        /* \"#utility.yul\":24377:24381   */\n      dup3\n        /* \"#utility.yul\":24371:24382   */\n      sload\n        /* \"#utility.yul\":24345:24383   */\n      tag_154\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":24430:24497   */\n      tag_737\n        /* \"#utility.yul\":24490:24496   */\n      dup3\n        /* \"#utility.yul\":24482:24488   */\n      dup3\n        /* \"#utility.yul\":24476:24480   */\n      dup6\n        /* \"#utility.yul\":24430:24497   */\n      tag_480\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":24524:24525   */\n      0x00\n        /* \"#utility.yul\":24548:24552   */\n      0x20\n        /* \"#utility.yul\":24535:24552   */\n      swap1\n      pop\n        /* \"#utility.yul\":24580:24582   */\n      0x1f\n        /* \"#utility.yul\":24572:24578   */\n      dup4\n        /* \"#utility.yul\":24569:24583   */\n      gt\n        /* \"#utility.yul\":24597:24598   */\n      0x01\n        /* \"#utility.yul\":24592:25210   */\n      dup2\n      eq\n      tag_739\n      jumpi\n        /* \"#utility.yul\":25254:25255   */\n      0x00\n        /* \"#utility.yul\":25271:25277   */\n      dup5\n        /* \"#utility.yul\":25268:25345   */\n      iszero\n      tag_740\n      jumpi\n        /* \"#utility.yul\":25320:25329   */\n      dup3\n        /* \"#utility.yul\":25315:25318   */\n      dup8\n        /* \"#utility.yul\":25311:25330   */\n      add\n        /* \"#utility.yul\":25305:25331   */\n      mload\n        /* \"#utility.yul\":25296:25331   */\n      swap1\n      pop\n        /* \"#utility.yul\":25268:25345   */\n    tag_740:\n        /* \"#utility.yul\":25371:25438   */\n      tag_741\n        /* \"#utility.yul\":25431:25437   */\n      dup6\n        /* \"#utility.yul\":25424:25429   */\n      dup3\n        /* \"#utility.yul\":25371:25438   */\n      tag_483\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":25365:25369   */\n      dup7\n        /* \"#utility.yul\":25358:25439   */\n      sstore\n        /* \"#utility.yul\":25227:25449   */\n      pop\n        /* \"#utility.yul\":24562:25449   */\n      jump(tag_738)\n        /* \"#utility.yul\":24592:25210   */\n    tag_739:\n        /* \"#utility.yul\":24644:24648   */\n      0x1f\n        /* \"#utility.yul\":24640:24649   */\n      not\n        /* \"#utility.yul\":24632:24638   */\n      dup5\n        /* \"#utility.yul\":24628:24650   */\n      and\n        /* \"#utility.yul\":24678:24715   */\n      tag_742\n        /* \"#utility.yul\":24710:24714   */\n      dup7\n        /* \"#utility.yul\":24678:24715   */\n      tag_469\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":24737:24738   */\n      0x00\n        /* \"#utility.yul\":24751:24959   */\n    tag_743:\n        /* \"#utility.yul\":24765:24772   */\n      dup3\n        /* \"#utility.yul\":24762:24763   */\n      dup2\n        /* \"#utility.yul\":24759:24773   */\n      lt\n        /* \"#utility.yul\":24751:24959   */\n      iszero\n      tag_745\n      jumpi\n        /* \"#utility.yul\":24844:24853   */\n      dup5\n        /* \"#utility.yul\":24839:24842   */\n      dup10\n        /* \"#utility.yul\":24835:24854   */\n      add\n        /* \"#utility.yul\":24829:24855   */\n      mload\n        /* \"#utility.yul\":24821:24827   */\n      dup3\n        /* \"#utility.yul\":24814:24856   */\n      sstore\n        /* \"#utility.yul\":24895:24896   */\n      0x01\n        /* \"#utility.yul\":24887:24893   */\n      dup3\n        /* \"#utility.yul\":24883:24897   */\n      add\n        /* \"#utility.yul\":24873:24897   */\n      swap2\n      pop\n        /* \"#utility.yul\":24942:24944   */\n      0x20\n        /* \"#utility.yul\":24931:24940   */\n      dup6\n        /* \"#utility.yul\":24927:24945   */\n      add\n        /* \"#utility.yul\":24914:24945   */\n      swap5\n      pop\n        /* \"#utility.yul\":24788:24792   */\n      0x20\n        /* \"#utility.yul\":24785:24786   */\n      dup2\n        /* \"#utility.yul\":24781:24793   */\n      add\n        /* \"#utility.yul\":24776:24793   */\n      swap1\n      pop\n        /* \"#utility.yul\":24751:24959   */\n      jump(tag_743)\n    tag_745:\n        /* \"#utility.yul\":24987:24993   */\n      dup7\n        /* \"#utility.yul\":24978:24985   */\n      dup4\n        /* \"#utility.yul\":24975:24994   */\n      lt\n        /* \"#utility.yul\":24972:25151   */\n      iszero\n      tag_746\n      jumpi\n        /* \"#utility.yul\":25045:25054   */\n      dup5\n        /* \"#utility.yul\":25040:25043   */\n      dup10\n        /* \"#utility.yul\":25036:25055   */\n      add\n        /* \"#utility.yul\":25030:25056   */\n      mload\n        /* \"#utility.yul\":25088:25136   */\n      tag_747\n        /* \"#utility.yul\":25130:25134   */\n      0x1f\n        /* \"#utility.yul\":25122:25128   */\n      dup10\n        /* \"#utility.yul\":25118:25135   */\n      and\n        /* \"#utility.yul\":25107:25116   */\n      dup3\n        /* \"#utility.yul\":25088:25136   */\n      tag_482\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":25080:25086   */\n      dup4\n        /* \"#utility.yul\":25073:25137   */\n      sstore\n        /* \"#utility.yul\":24995:25151   */\n      pop\n        /* \"#utility.yul\":24972:25151   */\n    tag_746:\n        /* \"#utility.yul\":25197:25198   */\n      0x01\n        /* \"#utility.yul\":25193:25194   */\n      0x02\n        /* \"#utility.yul\":25185:25191   */\n      dup9\n        /* \"#utility.yul\":25181:25195   */\n      mul\n        /* \"#utility.yul\":25177:25199   */\n      add\n        /* \"#utility.yul\":25171:25175   */\n      dup9\n        /* \"#utility.yul\":25164:25200   */\n      sstore\n        /* \"#utility.yul\":24599:25210   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":24562:25449   */\n    tag_738:\n      pop\n        /* \"#utility.yul\":24152:25455   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":24060:25455   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25461:25793   */\n    tag_365:\n        /* \"#utility.yul\":25582:25586   */\n      0x00\n        /* \"#utility.yul\":25620:25622   */\n      0x40\n        /* \"#utility.yul\":25609:25618   */\n      dup3\n        /* \"#utility.yul\":25605:25623   */\n      add\n        /* \"#utility.yul\":25597:25623   */\n      swap1\n      pop\n        /* \"#utility.yul\":25633:25704   */\n      tag_749\n        /* \"#utility.yul\":25701:25702   */\n      0x00\n        /* \"#utility.yul\":25690:25699   */\n      dup4\n        /* \"#utility.yul\":25686:25703   */\n      add\n        /* \"#utility.yul\":25677:25683   */\n      dup6\n        /* \"#utility.yul\":25633:25704   */\n      tag_434\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":25714:25786   */\n      tag_750\n        /* \"#utility.yul\":25782:25784   */\n      0x20\n        /* \"#utility.yul\":25771:25780   */\n      dup4\n        /* \"#utility.yul\":25767:25785   */\n      add\n        /* \"#utility.yul\":25758:25764   */\n      dup5\n        /* \"#utility.yul\":25714:25786   */\n      tag_424\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":25461:25793   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25799:25979   */\n    tag_377:\n        /* \"#utility.yul\":25847:25924   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25844:25845   */\n      0x00\n        /* \"#utility.yul\":25837:25925   */\n      mstore\n        /* \"#utility.yul\":25944:25948   */\n      0x12\n        /* \"#utility.yul\":25941:25942   */\n      0x04\n        /* \"#utility.yul\":25934:25949   */\n      mstore\n        /* \"#utility.yul\":25968:25972   */\n      0x24\n        /* \"#utility.yul\":25965:25966   */\n      0x00\n        /* \"#utility.yul\":25958:25973   */\n      revert\n\n    auxdata: 0xa26469706673582212207b115481d904876e3db03058100b6a9fee4140052cc26a17dd2f7fa8a7d7207864736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3494": {
									"entryPoint": null,
									"id": 3494,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_389": {
									"entryPoint": null,
									"id": 389,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_725": {
									"entryPoint": null,
									"id": 725,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_485": {
									"entryPoint": 469,
									"id": 485,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_00052edcff9af26a43dacfb193d1551f4a2d191bc2a8ffeacdfcf1710a5074de_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00052edcff9af26a43dacfb193d1551f4a2d191bc2a8ffeacdfcf1710a5074de__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1186,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 817,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 772,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 664,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_00052edcff9af26a43dacfb193d1551f4a2d191bc2a8ffeacdfcf1710a5074de": {
									"entryPoint": 1634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 955,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1087,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1124,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7936:19",
										"nodeType": "YulBlock",
										"src": "0:7936:19",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:19",
													"nodeType": "YulBlock",
													"src": "47:35:19",
													"statements": [
														{
															"nativeSrc": "57:19:19",
															"nodeType": "YulAssignment",
															"src": "57:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:19",
																		"nodeType": "YulLiteral",
																		"src": "73:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:19"
																},
																"nativeSrc": "67:9:19",
																"nodeType": "YulFunctionCall",
																"src": "67:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:19"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:19",
														"nodeType": "YulTypedName",
														"src": "40:6:19",
														"type": ""
													}
												],
												"src": "7:75:19"
											},
											{
												"body": {
													"nativeSrc": "177:28:19",
													"nodeType": "YulBlock",
													"src": "177:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:19",
																		"nodeType": "YulLiteral",
																		"src": "194:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:19",
																		"nodeType": "YulLiteral",
																		"src": "197:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:19"
																},
																"nativeSrc": "187:12:19",
																"nodeType": "YulFunctionCall",
																"src": "187:12:19"
															},
															"nativeSrc": "187:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:19"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:19"
											},
											{
												"body": {
													"nativeSrc": "300:28:19",
													"nodeType": "YulBlock",
													"src": "300:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:19",
																		"nodeType": "YulLiteral",
																		"src": "317:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:19",
																		"nodeType": "YulLiteral",
																		"src": "320:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:19"
																},
																"nativeSrc": "310:12:19",
																"nodeType": "YulFunctionCall",
																"src": "310:12:19"
															},
															"nativeSrc": "310:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:19"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:19"
											},
											{
												"body": {
													"nativeSrc": "379:32:19",
													"nodeType": "YulBlock",
													"src": "379:32:19",
													"statements": [
														{
															"nativeSrc": "389:16:19",
															"nodeType": "YulAssignment",
															"src": "389:16:19",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:19",
																"nodeType": "YulIdentifier",
																"src": "400:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:19",
														"nodeType": "YulTypedName",
														"src": "361:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:19",
														"nodeType": "YulTypedName",
														"src": "371:7:19",
														"type": ""
													}
												],
												"src": "334:77:19"
											},
											{
												"body": {
													"nativeSrc": "460:79:19",
													"nodeType": "YulBlock",
													"src": "460:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:19",
																"nodeType": "YulBlock",
																"src": "517:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:19",
																					"nodeType": "YulLiteral",
																					"src": "526:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:19",
																					"nodeType": "YulLiteral",
																					"src": "529:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:19"
																			},
																			"nativeSrc": "519:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:19"
																		},
																		"nativeSrc": "519:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:19"
																				},
																				"nativeSrc": "490:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:19"
																		},
																		"nativeSrc": "480:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:19"
																},
																"nativeSrc": "473:43:19",
																"nodeType": "YulFunctionCall",
																"src": "473:43:19"
															},
															"nativeSrc": "470:63:19",
															"nodeType": "YulIf",
															"src": "470:63:19"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:19",
														"nodeType": "YulTypedName",
														"src": "453:5:19",
														"type": ""
													}
												],
												"src": "417:122:19"
											},
											{
												"body": {
													"nativeSrc": "608:80:19",
													"nodeType": "YulBlock",
													"src": "608:80:19",
													"statements": [
														{
															"nativeSrc": "618:22:19",
															"nodeType": "YulAssignment",
															"src": "618:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:19"
																},
																"nativeSrc": "627:13:19",
																"nodeType": "YulFunctionCall",
																"src": "627:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:19"
																},
																"nativeSrc": "649:33:19",
																"nodeType": "YulFunctionCall",
																"src": "649:33:19"
															},
															"nativeSrc": "649:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:19"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:19",
														"nodeType": "YulTypedName",
														"src": "586:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:19",
														"nodeType": "YulTypedName",
														"src": "594:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:19",
														"nodeType": "YulTypedName",
														"src": "602:5:19",
														"type": ""
													}
												],
												"src": "545:143:19"
											},
											{
												"body": {
													"nativeSrc": "771:274:19",
													"nodeType": "YulBlock",
													"src": "771:274:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "817:83:19",
																"nodeType": "YulBlock",
																"src": "817:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "819:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:19"
																			},
																			"nativeSrc": "819:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:19"
																		},
																		"nativeSrc": "819:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "792:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "801:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "788:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:19"
																		},
																		"nativeSrc": "788:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "813:2:19",
																		"nodeType": "YulLiteral",
																		"src": "813:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "784:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:19"
																},
																"nativeSrc": "784:32:19",
																"nodeType": "YulFunctionCall",
																"src": "784:32:19"
															},
															"nativeSrc": "781:119:19",
															"nodeType": "YulIf",
															"src": "781:119:19"
														},
														{
															"nativeSrc": "910:128:19",
															"nodeType": "YulBlock",
															"src": "910:128:19",
															"statements": [
																{
																	"nativeSrc": "925:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "939:1:19",
																		"nodeType": "YulLiteral",
																		"src": "939:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "929:6:19",
																			"nodeType": "YulTypedName",
																			"src": "929:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "954:74:19",
																	"nodeType": "YulAssignment",
																	"src": "954:74:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1000:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1011:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "996:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:19"
																				},
																				"nativeSrc": "996:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1020:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "964:31:19",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:19"
																		},
																		"nativeSrc": "964:64:19",
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "954:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "694:351:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "741:9:19",
														"nodeType": "YulTypedName",
														"src": "741:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "752:7:19",
														"nodeType": "YulTypedName",
														"src": "752:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "764:6:19",
														"nodeType": "YulTypedName",
														"src": "764:6:19",
														"type": ""
													}
												],
												"src": "694:351:19"
											},
											{
												"body": {
													"nativeSrc": "1110:40:19",
													"nodeType": "YulBlock",
													"src": "1110:40:19",
													"statements": [
														{
															"nativeSrc": "1121:22:19",
															"nodeType": "YulAssignment",
															"src": "1121:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1137:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "1137:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1131:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "1131:5:19"
																},
																"nativeSrc": "1131:12:19",
																"nodeType": "YulFunctionCall",
																"src": "1131:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1121:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1121:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1051:99:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1093:5:19",
														"nodeType": "YulTypedName",
														"src": "1093:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1103:6:19",
														"nodeType": "YulTypedName",
														"src": "1103:6:19",
														"type": ""
													}
												],
												"src": "1051:99:19"
											},
											{
												"body": {
													"nativeSrc": "1184:152:19",
													"nodeType": "YulBlock",
													"src": "1184:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1201:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1201:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1204:77:19",
																		"nodeType": "YulLiteral",
																		"src": "1204:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:19"
																},
																"nativeSrc": "1194:88:19",
																"nodeType": "YulFunctionCall",
																"src": "1194:88:19"
															},
															"nativeSrc": "1194:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "1194:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1298:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1298:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1301:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1301:4:19",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1291:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1291:6:19"
																},
																"nativeSrc": "1291:15:19",
																"nodeType": "YulFunctionCall",
																"src": "1291:15:19"
															},
															"nativeSrc": "1291:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "1291:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1322:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1322:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1325:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1325:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1315:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:19"
																},
																"nativeSrc": "1315:15:19",
																"nodeType": "YulFunctionCall",
																"src": "1315:15:19"
															},
															"nativeSrc": "1315:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "1315:15:19"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1156:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "1156:180:19"
											},
											{
												"body": {
													"nativeSrc": "1370:152:19",
													"nodeType": "YulBlock",
													"src": "1370:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1387:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1387:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1390:77:19",
																		"nodeType": "YulLiteral",
																		"src": "1390:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1380:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:19"
																},
																"nativeSrc": "1380:88:19",
																"nodeType": "YulFunctionCall",
																"src": "1380:88:19"
															},
															"nativeSrc": "1380:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "1380:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1484:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1487:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1487:4:19",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1477:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1477:6:19"
																},
																"nativeSrc": "1477:15:19",
																"nodeType": "YulFunctionCall",
																"src": "1477:15:19"
															},
															"nativeSrc": "1477:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "1477:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1508:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1511:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1501:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:19"
																},
																"nativeSrc": "1501:15:19",
																"nodeType": "YulFunctionCall",
																"src": "1501:15:19"
															},
															"nativeSrc": "1501:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "1501:15:19"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1342:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "1342:180:19"
											},
											{
												"body": {
													"nativeSrc": "1579:269:19",
													"nodeType": "YulBlock",
													"src": "1579:269:19",
													"statements": [
														{
															"nativeSrc": "1589:22:19",
															"nodeType": "YulAssignment",
															"src": "1589:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1603:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "1603:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1609:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1609:1:19",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1599:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1599:3:19"
																},
																"nativeSrc": "1599:12:19",
																"nodeType": "YulFunctionCall",
																"src": "1599:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1589:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:19"
																}
															]
														},
														{
															"nativeSrc": "1620:38:19",
															"nodeType": "YulVariableDeclaration",
															"src": "1620:38:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1650:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "1650:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1656:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1656:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1646:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1646:3:19"
																},
																"nativeSrc": "1646:12:19",
																"nodeType": "YulFunctionCall",
																"src": "1646:12:19"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1624:18:19",
																	"nodeType": "YulTypedName",
																	"src": "1624:18:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1697:51:19",
																"nodeType": "YulBlock",
																"src": "1697:51:19",
																"statements": [
																	{
																		"nativeSrc": "1711:27:19",
																		"nodeType": "YulAssignment",
																		"src": "1711:27:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1725:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "1725:6:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1733:4:19",
																					"nodeType": "YulLiteral",
																					"src": "1733:4:19",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1721:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "1721:3:19"
																			},
																			"nativeSrc": "1721:17:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1721:17:19"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1711:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1711:6:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1677:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "1677:18:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1670:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1670:6:19"
																},
																"nativeSrc": "1670:26:19",
																"nodeType": "YulFunctionCall",
																"src": "1670:26:19"
															},
															"nativeSrc": "1667:81:19",
															"nodeType": "YulIf",
															"src": "1667:81:19"
														},
														{
															"body": {
																"nativeSrc": "1800:42:19",
																"nodeType": "YulBlock",
																"src": "1800:42:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1814:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "1814:16:19"
																			},
																			"nativeSrc": "1814:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1814:18:19"
																		},
																		"nativeSrc": "1814:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "1814:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1764:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "1764:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1787:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1787:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1795:2:19",
																				"nodeType": "YulLiteral",
																				"src": "1795:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1784:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "1784:2:19"
																		},
																		"nativeSrc": "1784:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1784:14:19"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1761:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "1761:2:19"
																},
																"nativeSrc": "1761:38:19",
																"nodeType": "YulFunctionCall",
																"src": "1761:38:19"
															},
															"nativeSrc": "1758:84:19",
															"nodeType": "YulIf",
															"src": "1758:84:19"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1528:320:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1563:4:19",
														"nodeType": "YulTypedName",
														"src": "1563:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1572:6:19",
														"nodeType": "YulTypedName",
														"src": "1572:6:19",
														"type": ""
													}
												],
												"src": "1528:320:19"
											},
											{
												"body": {
													"nativeSrc": "1908:87:19",
													"nodeType": "YulBlock",
													"src": "1908:87:19",
													"statements": [
														{
															"nativeSrc": "1918:11:19",
															"nodeType": "YulAssignment",
															"src": "1918:11:19",
															"value": {
																"name": "ptr",
																"nativeSrc": "1926:3:19",
																"nodeType": "YulIdentifier",
																"src": "1926:3:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1918:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "1918:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1946:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1946:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1949:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1949:3:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1939:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1939:6:19"
																},
																"nativeSrc": "1939:14:19",
																"nodeType": "YulFunctionCall",
																"src": "1939:14:19"
															},
															"nativeSrc": "1939:14:19",
															"nodeType": "YulExpressionStatement",
															"src": "1939:14:19"
														},
														{
															"nativeSrc": "1962:26:19",
															"nodeType": "YulAssignment",
															"src": "1962:26:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1980:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1980:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1983:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1983:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1970:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "1970:9:19"
																},
																"nativeSrc": "1970:18:19",
																"nodeType": "YulFunctionCall",
																"src": "1970:18:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1962:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "1962:4:19"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "1854:141:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1895:3:19",
														"nodeType": "YulTypedName",
														"src": "1895:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1903:4:19",
														"nodeType": "YulTypedName",
														"src": "1903:4:19",
														"type": ""
													}
												],
												"src": "1854:141:19"
											},
											{
												"body": {
													"nativeSrc": "2045:49:19",
													"nodeType": "YulBlock",
													"src": "2045:49:19",
													"statements": [
														{
															"nativeSrc": "2055:33:19",
															"nodeType": "YulAssignment",
															"src": "2055:33:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2073:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2073:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2080:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2080:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2069:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2069:3:19"
																		},
																		"nativeSrc": "2069:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2069:14:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2085:2:19",
																		"nodeType": "YulLiteral",
																		"src": "2085:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2065:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2065:3:19"
																},
																"nativeSrc": "2065:23:19",
																"nodeType": "YulFunctionCall",
																"src": "2065:23:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2055:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2055:6:19"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2001:93:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2028:5:19",
														"nodeType": "YulTypedName",
														"src": "2028:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2038:6:19",
														"nodeType": "YulTypedName",
														"src": "2038:6:19",
														"type": ""
													}
												],
												"src": "2001:93:19"
											},
											{
												"body": {
													"nativeSrc": "2153:54:19",
													"nodeType": "YulBlock",
													"src": "2153:54:19",
													"statements": [
														{
															"nativeSrc": "2163:37:19",
															"nodeType": "YulAssignment",
															"src": "2163:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2188:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "2188:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2194:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2194:5:19"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2184:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2184:3:19"
																},
																"nativeSrc": "2184:16:19",
																"nodeType": "YulFunctionCall",
																"src": "2184:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2163:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "2163:8:19"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2100:107:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2128:4:19",
														"nodeType": "YulTypedName",
														"src": "2128:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2134:5:19",
														"nodeType": "YulTypedName",
														"src": "2134:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2144:8:19",
														"nodeType": "YulTypedName",
														"src": "2144:8:19",
														"type": ""
													}
												],
												"src": "2100:107:19"
											},
											{
												"body": {
													"nativeSrc": "2289:317:19",
													"nodeType": "YulBlock",
													"src": "2289:317:19",
													"statements": [
														{
															"nativeSrc": "2299:35:19",
															"nodeType": "YulVariableDeclaration",
															"src": "2299:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2320:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "2320:10:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2332:1:19",
																		"nodeType": "YulLiteral",
																		"src": "2332:1:19",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2316:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2316:3:19"
																},
																"nativeSrc": "2316:18:19",
																"nodeType": "YulFunctionCall",
																"src": "2316:18:19"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2303:9:19",
																	"nodeType": "YulTypedName",
																	"src": "2303:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2343:109:19",
															"nodeType": "YulVariableDeclaration",
															"src": "2343:109:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2374:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "2374:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2385:66:19",
																		"nodeType": "YulLiteral",
																		"src": "2385:66:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2355:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "2355:18:19"
																},
																"nativeSrc": "2355:97:19",
																"nodeType": "YulFunctionCall",
																"src": "2355:97:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2347:4:19",
																	"nodeType": "YulTypedName",
																	"src": "2347:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2461:51:19",
															"nodeType": "YulAssignment",
															"src": "2461:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2492:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "2492:9:19"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2503:8:19",
																		"nodeType": "YulIdentifier",
																		"src": "2503:8:19"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2473:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "2473:18:19"
																},
																"nativeSrc": "2473:39:19",
																"nodeType": "YulFunctionCall",
																"src": "2473:39:19"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2461:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "2461:8:19"
																}
															]
														},
														{
															"nativeSrc": "2521:30:19",
															"nodeType": "YulAssignment",
															"src": "2521:30:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2534:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2534:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2545:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "2545:4:19"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2541:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2541:3:19"
																		},
																		"nativeSrc": "2541:9:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2541:9:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2530:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2530:3:19"
																},
																"nativeSrc": "2530:21:19",
																"nodeType": "YulFunctionCall",
																"src": "2530:21:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2521:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "2521:5:19"
																}
															]
														},
														{
															"nativeSrc": "2560:40:19",
															"nodeType": "YulAssignment",
															"src": "2560:40:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2573:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2573:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2584:8:19",
																				"nodeType": "YulIdentifier",
																				"src": "2584:8:19"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2594:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "2594:4:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2580:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2580:3:19"
																		},
																		"nativeSrc": "2580:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2580:19:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2570:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "2570:2:19"
																},
																"nativeSrc": "2570:30:19",
																"nodeType": "YulFunctionCall",
																"src": "2570:30:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2560:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2560:6:19"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2213:393:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2250:5:19",
														"nodeType": "YulTypedName",
														"src": "2250:5:19",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2257:10:19",
														"nodeType": "YulTypedName",
														"src": "2257:10:19",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2269:8:19",
														"nodeType": "YulTypedName",
														"src": "2269:8:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2282:6:19",
														"nodeType": "YulTypedName",
														"src": "2282:6:19",
														"type": ""
													}
												],
												"src": "2213:393:19"
											},
											{
												"body": {
													"nativeSrc": "2644:28:19",
													"nodeType": "YulBlock",
													"src": "2644:28:19",
													"statements": [
														{
															"nativeSrc": "2654:12:19",
															"nodeType": "YulAssignment",
															"src": "2654:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "2661:5:19",
																"nodeType": "YulIdentifier",
																"src": "2661:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2654:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2654:3:19"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2612:60:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2630:5:19",
														"nodeType": "YulTypedName",
														"src": "2630:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2640:3:19",
														"nodeType": "YulTypedName",
														"src": "2640:3:19",
														"type": ""
													}
												],
												"src": "2612:60:19"
											},
											{
												"body": {
													"nativeSrc": "2738:82:19",
													"nodeType": "YulBlock",
													"src": "2738:82:19",
													"statements": [
														{
															"nativeSrc": "2748:66:19",
															"nodeType": "YulAssignment",
															"src": "2748:66:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2806:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "2806:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2788:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "2788:17:19"
																				},
																				"nativeSrc": "2788:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2788:24:19"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2779:8:19",
																			"nodeType": "YulIdentifier",
																			"src": "2779:8:19"
																		},
																		"nativeSrc": "2779:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2779:34:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2761:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "2761:17:19"
																},
																"nativeSrc": "2761:53:19",
																"nodeType": "YulFunctionCall",
																"src": "2761:53:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2748:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "2748:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2678:142:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2718:5:19",
														"nodeType": "YulTypedName",
														"src": "2718:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2728:9:19",
														"nodeType": "YulTypedName",
														"src": "2728:9:19",
														"type": ""
													}
												],
												"src": "2678:142:19"
											},
											{
												"body": {
													"nativeSrc": "2873:28:19",
													"nodeType": "YulBlock",
													"src": "2873:28:19",
													"statements": [
														{
															"nativeSrc": "2883:12:19",
															"nodeType": "YulAssignment",
															"src": "2883:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "2890:5:19",
																"nodeType": "YulIdentifier",
																"src": "2890:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2883:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2883:3:19"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "2826:75:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2859:5:19",
														"nodeType": "YulTypedName",
														"src": "2859:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2869:3:19",
														"nodeType": "YulTypedName",
														"src": "2869:3:19",
														"type": ""
													}
												],
												"src": "2826:75:19"
											},
											{
												"body": {
													"nativeSrc": "2983:193:19",
													"nodeType": "YulBlock",
													"src": "2983:193:19",
													"statements": [
														{
															"nativeSrc": "2993:63:19",
															"nodeType": "YulVariableDeclaration",
															"src": "2993:63:19",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3048:7:19",
																		"nodeType": "YulIdentifier",
																		"src": "3048:7:19"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3017:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "3017:30:19"
																},
																"nativeSrc": "3017:39:19",
																"nodeType": "YulFunctionCall",
																"src": "3017:39:19"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2997:16:19",
																	"nodeType": "YulTypedName",
																	"src": "2997:16:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3072:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "3072:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3112:4:19",
																						"nodeType": "YulIdentifier",
																						"src": "3112:4:19"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3106:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "3106:5:19"
																				},
																				"nativeSrc": "3106:11:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3106:11:19"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3119:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "3119:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3151:16:19",
																						"nodeType": "YulIdentifier",
																						"src": "3151:16:19"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3127:23:19",
																					"nodeType": "YulIdentifier",
																					"src": "3127:23:19"
																				},
																				"nativeSrc": "3127:41:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3127:41:19"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3078:27:19",
																			"nodeType": "YulIdentifier",
																			"src": "3078:27:19"
																		},
																		"nativeSrc": "3078:91:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3078:91:19"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3065:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3065:6:19"
																},
																"nativeSrc": "3065:105:19",
																"nodeType": "YulFunctionCall",
																"src": "3065:105:19"
															},
															"nativeSrc": "3065:105:19",
															"nodeType": "YulExpressionStatement",
															"src": "3065:105:19"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "2907:269:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2960:4:19",
														"nodeType": "YulTypedName",
														"src": "2960:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2966:6:19",
														"nodeType": "YulTypedName",
														"src": "2966:6:19",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2974:7:19",
														"nodeType": "YulTypedName",
														"src": "2974:7:19",
														"type": ""
													}
												],
												"src": "2907:269:19"
											},
											{
												"body": {
													"nativeSrc": "3231:24:19",
													"nodeType": "YulBlock",
													"src": "3231:24:19",
													"statements": [
														{
															"nativeSrc": "3241:8:19",
															"nodeType": "YulAssignment",
															"src": "3241:8:19",
															"value": {
																"kind": "number",
																"nativeSrc": "3248:1:19",
																"nodeType": "YulLiteral",
																"src": "3248:1:19",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3241:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3241:3:19"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3182:73:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3227:3:19",
														"nodeType": "YulTypedName",
														"src": "3227:3:19",
														"type": ""
													}
												],
												"src": "3182:73:19"
											},
											{
												"body": {
													"nativeSrc": "3314:136:19",
													"nodeType": "YulBlock",
													"src": "3314:136:19",
													"statements": [
														{
															"nativeSrc": "3324:46:19",
															"nodeType": "YulVariableDeclaration",
															"src": "3324:46:19",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3338:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "3338:30:19"
																},
																"nativeSrc": "3338:32:19",
																"nodeType": "YulFunctionCall",
																"src": "3338:32:19"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3328:6:19",
																	"nodeType": "YulTypedName",
																	"src": "3328:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3423:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "3423:4:19"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3429:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3429:6:19"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3437:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3437:6:19"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3379:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "3379:43:19"
																},
																"nativeSrc": "3379:65:19",
																"nodeType": "YulFunctionCall",
																"src": "3379:65:19"
															},
															"nativeSrc": "3379:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "3379:65:19"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3261:189:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3300:4:19",
														"nodeType": "YulTypedName",
														"src": "3300:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3306:6:19",
														"nodeType": "YulTypedName",
														"src": "3306:6:19",
														"type": ""
													}
												],
												"src": "3261:189:19"
											},
											{
												"body": {
													"nativeSrc": "3506:136:19",
													"nodeType": "YulBlock",
													"src": "3506:136:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "3573:63:19",
																"nodeType": "YulBlock",
																"src": "3573:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3617:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "3617:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3624:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3624:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3587:29:19",
																				"nodeType": "YulIdentifier",
																				"src": "3587:29:19"
																			},
																			"nativeSrc": "3587:39:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3587:39:19"
																		},
																		"nativeSrc": "3587:39:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3587:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3526:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3526:5:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3533:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3533:3:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3523:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "3523:2:19"
																},
																"nativeSrc": "3523:14:19",
																"nodeType": "YulFunctionCall",
																"src": "3523:14:19"
															},
															"nativeSrc": "3516:120:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3538:26:19",
																"nodeType": "YulBlock",
																"src": "3538:26:19",
																"statements": [
																	{
																		"nativeSrc": "3540:22:19",
																		"nodeType": "YulAssignment",
																		"src": "3540:22:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3553:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "3553:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3560:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3560:1:19",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3549:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "3549:3:19"
																			},
																			"nativeSrc": "3549:13:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3549:13:19"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3540:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "3540:5:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3520:2:19",
																"nodeType": "YulBlock",
																"src": "3520:2:19",
																"statements": []
															},
															"src": "3516:120:19"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3456:186:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3494:5:19",
														"nodeType": "YulTypedName",
														"src": "3494:5:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3501:3:19",
														"nodeType": "YulTypedName",
														"src": "3501:3:19",
														"type": ""
													}
												],
												"src": "3456:186:19"
											},
											{
												"body": {
													"nativeSrc": "3727:464:19",
													"nodeType": "YulBlock",
													"src": "3727:464:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "3753:431:19",
																"nodeType": "YulBlock",
																"src": "3753:431:19",
																"statements": [
																	{
																		"nativeSrc": "3767:54:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3767:54:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "3815:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "3815:5:19"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "3783:31:19",
																				"nodeType": "YulIdentifier",
																				"src": "3783:31:19"
																			},
																			"nativeSrc": "3783:38:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:38:19"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "3771:8:19",
																				"nodeType": "YulTypedName",
																				"src": "3771:8:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3834:63:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3834:63:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "3857:8:19",
																					"nodeType": "YulIdentifier",
																					"src": "3857:8:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "3885:10:19",
																							"nodeType": "YulIdentifier",
																							"src": "3885:10:19"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "3867:17:19",
																						"nodeType": "YulIdentifier",
																						"src": "3867:17:19"
																					},
																					"nativeSrc": "3867:29:19",
																					"nodeType": "YulFunctionCall",
																					"src": "3867:29:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3853:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "3853:3:19"
																			},
																			"nativeSrc": "3853:44:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3853:44:19"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "3838:11:19",
																				"nodeType": "YulTypedName",
																				"src": "3838:11:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4054:27:19",
																			"nodeType": "YulBlock",
																			"src": "4054:27:19",
																			"statements": [
																				{
																					"nativeSrc": "4056:23:19",
																					"nodeType": "YulAssignment",
																					"src": "4056:23:19",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4071:8:19",
																						"nodeType": "YulIdentifier",
																						"src": "4071:8:19"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4056:11:19",
																							"nodeType": "YulIdentifier",
																							"src": "4056:11:19"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4038:10:19",
																					"nodeType": "YulIdentifier",
																					"src": "4038:10:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4050:2:19",
																					"nodeType": "YulLiteral",
																					"src": "4050:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4035:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "4035:2:19"
																			},
																			"nativeSrc": "4035:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4035:18:19"
																		},
																		"nativeSrc": "4032:49:19",
																		"nodeType": "YulIf",
																		"src": "4032:49:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4123:11:19",
																					"nodeType": "YulIdentifier",
																					"src": "4123:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4140:8:19",
																							"nodeType": "YulIdentifier",
																							"src": "4140:8:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4168:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "4168:3:19"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4150:17:19",
																								"nodeType": "YulIdentifier",
																								"src": "4150:17:19"
																							},
																							"nativeSrc": "4150:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "4150:22:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4136:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "4136:3:19"
																					},
																					"nativeSrc": "4136:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "4136:37:19"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4094:28:19",
																				"nodeType": "YulIdentifier",
																				"src": "4094:28:19"
																			},
																			"nativeSrc": "4094:80:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4094:80:19"
																		},
																		"nativeSrc": "4094:80:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4094:80:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3744:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3744:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3749:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3749:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3741:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "3741:2:19"
																},
																"nativeSrc": "3741:11:19",
																"nodeType": "YulFunctionCall",
																"src": "3741:11:19"
															},
															"nativeSrc": "3738:446:19",
															"nodeType": "YulIf",
															"src": "3738:446:19"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3648:543:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3703:5:19",
														"nodeType": "YulTypedName",
														"src": "3703:5:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3710:3:19",
														"nodeType": "YulTypedName",
														"src": "3710:3:19",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3715:10:19",
														"nodeType": "YulTypedName",
														"src": "3715:10:19",
														"type": ""
													}
												],
												"src": "3648:543:19"
											},
											{
												"body": {
													"nativeSrc": "4260:54:19",
													"nodeType": "YulBlock",
													"src": "4260:54:19",
													"statements": [
														{
															"nativeSrc": "4270:37:19",
															"nodeType": "YulAssignment",
															"src": "4270:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4295:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "4295:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4301:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "4301:5:19"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4291:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4291:3:19"
																},
																"nativeSrc": "4291:16:19",
																"nodeType": "YulFunctionCall",
																"src": "4291:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4270:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "4270:8:19"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4197:117:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4235:4:19",
														"nodeType": "YulTypedName",
														"src": "4235:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4241:5:19",
														"nodeType": "YulTypedName",
														"src": "4241:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4251:8:19",
														"nodeType": "YulTypedName",
														"src": "4251:8:19",
														"type": ""
													}
												],
												"src": "4197:117:19"
											},
											{
												"body": {
													"nativeSrc": "4371:118:19",
													"nodeType": "YulBlock",
													"src": "4371:118:19",
													"statements": [
														{
															"nativeSrc": "4381:68:19",
															"nodeType": "YulVariableDeclaration",
															"src": "4381:68:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4430:1:19",
																						"nodeType": "YulLiteral",
																						"src": "4430:1:19",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4433:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "4433:5:19"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4426:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4426:3:19"
																				},
																				"nativeSrc": "4426:13:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4426:13:19"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4445:1:19",
																						"nodeType": "YulLiteral",
																						"src": "4445:1:19",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4441:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4441:3:19"
																				},
																				"nativeSrc": "4441:6:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4441:6:19"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4397:28:19",
																			"nodeType": "YulIdentifier",
																			"src": "4397:28:19"
																		},
																		"nativeSrc": "4397:51:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4397:51:19"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4393:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4393:3:19"
																},
																"nativeSrc": "4393:56:19",
																"nodeType": "YulFunctionCall",
																"src": "4393:56:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4385:4:19",
																	"nodeType": "YulTypedName",
																	"src": "4385:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4458:25:19",
															"nodeType": "YulAssignment",
															"src": "4458:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4472:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "4472:4:19"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4478:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "4478:4:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4468:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4468:3:19"
																},
																"nativeSrc": "4468:15:19",
																"nodeType": "YulFunctionCall",
																"src": "4468:15:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4458:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4458:6:19"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4320:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4348:4:19",
														"nodeType": "YulTypedName",
														"src": "4348:4:19",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4354:5:19",
														"nodeType": "YulTypedName",
														"src": "4354:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4364:6:19",
														"nodeType": "YulTypedName",
														"src": "4364:6:19",
														"type": ""
													}
												],
												"src": "4320:169:19"
											},
											{
												"body": {
													"nativeSrc": "4575:214:19",
													"nodeType": "YulBlock",
													"src": "4575:214:19",
													"statements": [
														{
															"nativeSrc": "4708:37:19",
															"nodeType": "YulAssignment",
															"src": "4708:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4735:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "4735:4:19"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4741:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "4741:3:19"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4716:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "4716:18:19"
																},
																"nativeSrc": "4716:29:19",
																"nodeType": "YulFunctionCall",
																"src": "4716:29:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4708:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "4708:4:19"
																}
															]
														},
														{
															"nativeSrc": "4754:29:19",
															"nodeType": "YulAssignment",
															"src": "4754:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4765:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "4765:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4775:1:19",
																				"nodeType": "YulLiteral",
																				"src": "4775:1:19",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "4778:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "4778:3:19"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "4771:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4771:3:19"
																		},
																		"nativeSrc": "4771:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4771:11:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4762:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "4762:2:19"
																},
																"nativeSrc": "4762:21:19",
																"nodeType": "YulFunctionCall",
																"src": "4762:21:19"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4754:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "4754:4:19"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4494:295:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4556:4:19",
														"nodeType": "YulTypedName",
														"src": "4556:4:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4562:3:19",
														"nodeType": "YulTypedName",
														"src": "4562:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4570:4:19",
														"nodeType": "YulTypedName",
														"src": "4570:4:19",
														"type": ""
													}
												],
												"src": "4494:295:19"
											},
											{
												"body": {
													"nativeSrc": "4886:1303:19",
													"nodeType": "YulBlock",
													"src": "4886:1303:19",
													"statements": [
														{
															"nativeSrc": "4897:51:19",
															"nodeType": "YulVariableDeclaration",
															"src": "4897:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "4944:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "4944:3:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4911:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "4911:32:19"
																},
																"nativeSrc": "4911:37:19",
																"nodeType": "YulFunctionCall",
																"src": "4911:37:19"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "4901:6:19",
																	"nodeType": "YulTypedName",
																	"src": "4901:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5033:22:19",
																"nodeType": "YulBlock",
																"src": "5033:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5035:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "5035:16:19"
																			},
																			"nativeSrc": "5035:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5035:18:19"
																		},
																		"nativeSrc": "5035:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "5035:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5005:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5005:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5013:18:19",
																		"nodeType": "YulLiteral",
																		"src": "5013:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5002:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "5002:2:19"
																},
																"nativeSrc": "5002:30:19",
																"nodeType": "YulFunctionCall",
																"src": "5002:30:19"
															},
															"nativeSrc": "4999:56:19",
															"nodeType": "YulIf",
															"src": "4999:56:19"
														},
														{
															"nativeSrc": "5065:52:19",
															"nodeType": "YulVariableDeclaration",
															"src": "5065:52:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5111:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "5111:4:19"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5105:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "5105:5:19"
																		},
																		"nativeSrc": "5105:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5105:11:19"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5079:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "5079:25:19"
																},
																"nativeSrc": "5079:38:19",
																"nodeType": "YulFunctionCall",
																"src": "5079:38:19"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5069:6:19",
																	"nodeType": "YulTypedName",
																	"src": "5069:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5210:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "5210:4:19"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5216:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5216:6:19"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5224:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5224:6:19"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5164:45:19",
																	"nodeType": "YulIdentifier",
																	"src": "5164:45:19"
																},
																"nativeSrc": "5164:67:19",
																"nodeType": "YulFunctionCall",
																"src": "5164:67:19"
															},
															"nativeSrc": "5164:67:19",
															"nodeType": "YulExpressionStatement",
															"src": "5164:67:19"
														},
														{
															"nativeSrc": "5241:18:19",
															"nodeType": "YulVariableDeclaration",
															"src": "5241:18:19",
															"value": {
																"kind": "number",
																"nativeSrc": "5258:1:19",
																"nodeType": "YulLiteral",
																"src": "5258:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5245:9:19",
																	"nodeType": "YulTypedName",
																	"src": "5245:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5269:17:19",
															"nodeType": "YulAssignment",
															"src": "5269:17:19",
															"value": {
																"kind": "number",
																"nativeSrc": "5282:4:19",
																"nodeType": "YulLiteral",
																"src": "5282:4:19",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5269:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "5269:9:19"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5333:611:19",
																		"nodeType": "YulBlock",
																		"src": "5333:611:19",
																		"statements": [
																			{
																				"nativeSrc": "5347:37:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5347:37:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5366:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "5366:6:19"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5378:4:19",
																									"nodeType": "YulLiteral",
																									"src": "5378:4:19",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5374:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "5374:3:19"
																							},
																							"nativeSrc": "5374:9:19",
																							"nodeType": "YulFunctionCall",
																							"src": "5374:9:19"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5362:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "5362:3:19"
																					},
																					"nativeSrc": "5362:22:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5362:22:19"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5351:7:19",
																						"nodeType": "YulTypedName",
																						"src": "5351:7:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5398:51:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5398:51:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5444:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "5444:4:19"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5412:31:19",
																						"nodeType": "YulIdentifier",
																						"src": "5412:31:19"
																					},
																					"nativeSrc": "5412:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5412:37:19"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5402:6:19",
																						"nodeType": "YulTypedName",
																						"src": "5402:6:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5462:10:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5462:10:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5471:1:19",
																					"nodeType": "YulLiteral",
																					"src": "5471:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5466:1:19",
																						"nodeType": "YulTypedName",
																						"src": "5466:1:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5530:163:19",
																					"nodeType": "YulBlock",
																					"src": "5530:163:19",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5555:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "5555:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5573:3:19",
																														"nodeType": "YulIdentifier",
																														"src": "5573:3:19"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5578:9:19",
																														"nodeType": "YulIdentifier",
																														"src": "5578:9:19"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5569:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "5569:3:19"
																												},
																												"nativeSrc": "5569:19:19",
																												"nodeType": "YulFunctionCall",
																												"src": "5569:19:19"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5563:5:19",
																											"nodeType": "YulIdentifier",
																											"src": "5563:5:19"
																										},
																										"nativeSrc": "5563:26:19",
																										"nodeType": "YulFunctionCall",
																										"src": "5563:26:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5548:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "5548:6:19"
																								},
																								"nativeSrc": "5548:42:19",
																								"nodeType": "YulFunctionCall",
																								"src": "5548:42:19"
																							},
																							"nativeSrc": "5548:42:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "5548:42:19"
																						},
																						{
																							"nativeSrc": "5607:24:19",
																							"nodeType": "YulAssignment",
																							"src": "5607:24:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5621:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "5621:6:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5629:1:19",
																										"nodeType": "YulLiteral",
																										"src": "5629:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5617:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "5617:3:19"
																								},
																								"nativeSrc": "5617:14:19",
																								"nodeType": "YulFunctionCall",
																								"src": "5617:14:19"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5607:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "5607:6:19"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5648:31:19",
																							"nodeType": "YulAssignment",
																							"src": "5648:31:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5665:9:19",
																										"nodeType": "YulIdentifier",
																										"src": "5665:9:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5676:2:19",
																										"nodeType": "YulLiteral",
																										"src": "5676:2:19",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5661:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "5661:3:19"
																								},
																								"nativeSrc": "5661:18:19",
																								"nodeType": "YulFunctionCall",
																								"src": "5661:18:19"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5648:9:19",
																									"nodeType": "YulIdentifier",
																									"src": "5648:9:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5496:1:19",
																							"nodeType": "YulIdentifier",
																							"src": "5496:1:19"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5499:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "5499:7:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5493:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "5493:2:19"
																					},
																					"nativeSrc": "5493:14:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5493:14:19"
																				},
																				"nativeSrc": "5485:208:19",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5508:21:19",
																					"nodeType": "YulBlock",
																					"src": "5508:21:19",
																					"statements": [
																						{
																							"nativeSrc": "5510:17:19",
																							"nodeType": "YulAssignment",
																							"src": "5510:17:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5519:1:19",
																										"nodeType": "YulIdentifier",
																										"src": "5519:1:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5522:4:19",
																										"nodeType": "YulLiteral",
																										"src": "5522:4:19",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5515:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "5515:3:19"
																								},
																								"nativeSrc": "5515:12:19",
																								"nodeType": "YulFunctionCall",
																								"src": "5515:12:19"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5510:1:19",
																									"nodeType": "YulIdentifier",
																									"src": "5510:1:19"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5489:3:19",
																					"nodeType": "YulBlock",
																					"src": "5489:3:19",
																					"statements": []
																				},
																				"src": "5485:208:19"
																			},
																			{
																				"body": {
																					"nativeSrc": "5729:156:19",
																					"nodeType": "YulBlock",
																					"src": "5729:156:19",
																					"statements": [
																						{
																							"nativeSrc": "5747:43:19",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5747:43:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5774:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "5774:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5779:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "5779:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5770:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "5770:3:19"
																										},
																										"nativeSrc": "5770:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "5770:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5764:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "5764:5:19"
																								},
																								"nativeSrc": "5764:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "5764:26:19"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5751:9:19",
																									"nodeType": "YulTypedName",
																									"src": "5751:9:19",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5814:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "5814:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "5841:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "5841:9:19"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "5856:6:19",
																														"nodeType": "YulIdentifier",
																														"src": "5856:6:19"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "5864:4:19",
																														"nodeType": "YulLiteral",
																														"src": "5864:4:19",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "5852:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "5852:3:19"
																												},
																												"nativeSrc": "5852:17:19",
																												"nodeType": "YulFunctionCall",
																												"src": "5852:17:19"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "5822:18:19",
																											"nodeType": "YulIdentifier",
																											"src": "5822:18:19"
																										},
																										"nativeSrc": "5822:48:19",
																										"nodeType": "YulFunctionCall",
																										"src": "5822:48:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5807:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "5807:6:19"
																								},
																								"nativeSrc": "5807:64:19",
																								"nodeType": "YulFunctionCall",
																								"src": "5807:64:19"
																							},
																							"nativeSrc": "5807:64:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "5807:64:19"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5712:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "5712:7:19"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5721:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "5721:6:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5709:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "5709:2:19"
																					},
																					"nativeSrc": "5709:19:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5709:19:19"
																				},
																				"nativeSrc": "5706:179:19",
																				"nodeType": "YulIf",
																				"src": "5706:179:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5905:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "5905:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "5919:6:19",
																											"nodeType": "YulIdentifier",
																											"src": "5919:6:19"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "5927:1:19",
																											"nodeType": "YulLiteral",
																											"src": "5927:1:19",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "5915:3:19",
																										"nodeType": "YulIdentifier",
																										"src": "5915:3:19"
																									},
																									"nativeSrc": "5915:14:19",
																									"nodeType": "YulFunctionCall",
																									"src": "5915:14:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5931:1:19",
																									"nodeType": "YulLiteral",
																									"src": "5931:1:19",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5911:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "5911:3:19"
																							},
																							"nativeSrc": "5911:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "5911:22:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5898:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5898:6:19"
																					},
																					"nativeSrc": "5898:36:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5898:36:19"
																				},
																				"nativeSrc": "5898:36:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "5898:36:19"
																			}
																		]
																	},
																	"nativeSrc": "5326:618:19",
																	"nodeType": "YulCase",
																	"src": "5326:618:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5331:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5331:1:19",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5961:222:19",
																		"nodeType": "YulBlock",
																		"src": "5961:222:19",
																		"statements": [
																			{
																				"nativeSrc": "5975:14:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5975:14:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5988:1:19",
																					"nodeType": "YulLiteral",
																					"src": "5988:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5979:5:19",
																						"nodeType": "YulTypedName",
																						"src": "5979:5:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6012:67:19",
																					"nodeType": "YulBlock",
																					"src": "6012:67:19",
																					"statements": [
																						{
																							"nativeSrc": "6030:35:19",
																							"nodeType": "YulAssignment",
																							"src": "6030:35:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6049:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "6049:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6054:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "6054:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6045:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "6045:3:19"
																										},
																										"nativeSrc": "6045:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "6045:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6039:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "6039:5:19"
																								},
																								"nativeSrc": "6039:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "6039:26:19"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6030:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "6030:5:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6005:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "6005:6:19"
																				},
																				"nativeSrc": "6002:77:19",
																				"nodeType": "YulIf",
																				"src": "6002:77:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6099:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "6099:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6158:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "6158:5:19"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6165:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "6165:6:19"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6105:52:19",
																								"nodeType": "YulIdentifier",
																								"src": "6105:52:19"
																							},
																							"nativeSrc": "6105:67:19",
																							"nodeType": "YulFunctionCall",
																							"src": "6105:67:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6092:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "6092:6:19"
																					},
																					"nativeSrc": "6092:81:19",
																					"nodeType": "YulFunctionCall",
																					"src": "6092:81:19"
																				},
																				"nativeSrc": "6092:81:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "6092:81:19"
																			}
																		]
																	},
																	"nativeSrc": "5953:230:19",
																	"nodeType": "YulCase",
																	"src": "5953:230:19",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5306:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5306:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5314:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5314:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5303:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "5303:2:19"
																},
																"nativeSrc": "5303:14:19",
																"nodeType": "YulFunctionCall",
																"src": "5303:14:19"
															},
															"nativeSrc": "5296:887:19",
															"nodeType": "YulSwitch",
															"src": "5296:887:19"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "4794:1395:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4875:4:19",
														"nodeType": "YulTypedName",
														"src": "4875:4:19",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "4881:3:19",
														"nodeType": "YulTypedName",
														"src": "4881:3:19",
														"type": ""
													}
												],
												"src": "4794:1395:19"
											},
											{
												"body": {
													"nativeSrc": "6240:81:19",
													"nodeType": "YulBlock",
													"src": "6240:81:19",
													"statements": [
														{
															"nativeSrc": "6250:65:19",
															"nodeType": "YulAssignment",
															"src": "6250:65:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6265:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "6265:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6272:42:19",
																		"nodeType": "YulLiteral",
																		"src": "6272:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6261:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6261:3:19"
																},
																"nativeSrc": "6261:54:19",
																"nodeType": "YulFunctionCall",
																"src": "6261:54:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6250:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "6250:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "6195:126:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6222:5:19",
														"nodeType": "YulTypedName",
														"src": "6222:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6232:7:19",
														"nodeType": "YulTypedName",
														"src": "6232:7:19",
														"type": ""
													}
												],
												"src": "6195:126:19"
											},
											{
												"body": {
													"nativeSrc": "6372:51:19",
													"nodeType": "YulBlock",
													"src": "6372:51:19",
													"statements": [
														{
															"nativeSrc": "6382:35:19",
															"nodeType": "YulAssignment",
															"src": "6382:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6411:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "6411:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "6393:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "6393:17:19"
																},
																"nativeSrc": "6393:24:19",
																"nodeType": "YulFunctionCall",
																"src": "6393:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6382:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "6382:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "6327:96:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6354:5:19",
														"nodeType": "YulTypedName",
														"src": "6354:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6364:7:19",
														"nodeType": "YulTypedName",
														"src": "6364:7:19",
														"type": ""
													}
												],
												"src": "6327:96:19"
											},
											{
												"body": {
													"nativeSrc": "6494:53:19",
													"nodeType": "YulBlock",
													"src": "6494:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:19"
																		},
																		"nativeSrc": "6516:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:19"
																},
																"nativeSrc": "6504:37:19",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:19"
															},
															"nativeSrc": "6504:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:19"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:19",
														"nodeType": "YulTypedName",
														"src": "6482:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:19",
														"nodeType": "YulTypedName",
														"src": "6489:3:19",
														"type": ""
													}
												],
												"src": "6429:118:19"
											},
											{
												"body": {
													"nativeSrc": "6651:124:19",
													"nodeType": "YulBlock",
													"src": "6651:124:19",
													"statements": [
														{
															"nativeSrc": "6661:26:19",
															"nodeType": "YulAssignment",
															"src": "6661:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:19"
																},
																"nativeSrc": "6669:18:19",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:19",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:19"
																		},
																		"nativeSrc": "6750:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:19"
																},
																"nativeSrc": "6697:71:19",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:19"
															},
															"nativeSrc": "6697:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:19",
														"nodeType": "YulTypedName",
														"src": "6623:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:19",
														"nodeType": "YulTypedName",
														"src": "6635:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:19",
														"nodeType": "YulTypedName",
														"src": "6646:4:19",
														"type": ""
													}
												],
												"src": "6553:222:19"
											},
											{
												"body": {
													"nativeSrc": "6877:73:19",
													"nodeType": "YulBlock",
													"src": "6877:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6894:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "6894:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6899:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6899:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6887:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6887:6:19"
																},
																"nativeSrc": "6887:19:19",
																"nodeType": "YulFunctionCall",
																"src": "6887:19:19"
															},
															"nativeSrc": "6887:19:19",
															"nodeType": "YulExpressionStatement",
															"src": "6887:19:19"
														},
														{
															"nativeSrc": "6915:29:19",
															"nodeType": "YulAssignment",
															"src": "6915:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6934:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "6934:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6939:4:19",
																		"nodeType": "YulLiteral",
																		"src": "6939:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6930:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6930:3:19"
																},
																"nativeSrc": "6930:14:19",
																"nodeType": "YulFunctionCall",
																"src": "6930:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6915:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "6915:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6781:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6849:3:19",
														"nodeType": "YulTypedName",
														"src": "6849:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6854:6:19",
														"nodeType": "YulTypedName",
														"src": "6854:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6865:11:19",
														"nodeType": "YulTypedName",
														"src": "6865:11:19",
														"type": ""
													}
												],
												"src": "6781:169:19"
											},
											{
												"body": {
													"nativeSrc": "7062:74:19",
													"nodeType": "YulBlock",
													"src": "7062:74:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7084:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "7084:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7092:1:19",
																				"nodeType": "YulLiteral",
																				"src": "7092:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7080:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7080:3:19"
																		},
																		"nativeSrc": "7080:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7080:14:19"
																	},
																	{
																		"hexValue": "6d696e7450726963652069732067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "7096:32:19",
																		"nodeType": "YulLiteral",
																		"src": "7096:32:19",
																		"type": "",
																		"value": "mintPrice is greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7073:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7073:6:19"
																},
																"nativeSrc": "7073:56:19",
																"nodeType": "YulFunctionCall",
																"src": "7073:56:19"
															},
															"nativeSrc": "7073:56:19",
															"nodeType": "YulExpressionStatement",
															"src": "7073:56:19"
														}
													]
												},
												"name": "store_literal_in_memory_00052edcff9af26a43dacfb193d1551f4a2d191bc2a8ffeacdfcf1710a5074de",
												"nativeSrc": "6956:180:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7054:6:19",
														"nodeType": "YulTypedName",
														"src": "7054:6:19",
														"type": ""
													}
												],
												"src": "6956:180:19"
											},
											{
												"body": {
													"nativeSrc": "7288:220:19",
													"nodeType": "YulBlock",
													"src": "7288:220:19",
													"statements": [
														{
															"nativeSrc": "7298:74:19",
															"nodeType": "YulAssignment",
															"src": "7298:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7364:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7364:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7369:2:19",
																		"nodeType": "YulLiteral",
																		"src": "7369:2:19",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7305:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "7305:58:19"
																},
																"nativeSrc": "7305:67:19",
																"nodeType": "YulFunctionCall",
																"src": "7305:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7298:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7298:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7470:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7470:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_00052edcff9af26a43dacfb193d1551f4a2d191bc2a8ffeacdfcf1710a5074de",
																	"nativeSrc": "7381:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "7381:88:19"
																},
																"nativeSrc": "7381:93:19",
																"nodeType": "YulFunctionCall",
																"src": "7381:93:19"
															},
															"nativeSrc": "7381:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "7381:93:19"
														},
														{
															"nativeSrc": "7483:19:19",
															"nodeType": "YulAssignment",
															"src": "7483:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7494:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7494:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7499:2:19",
																		"nodeType": "YulLiteral",
																		"src": "7499:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7490:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7490:3:19"
																},
																"nativeSrc": "7490:12:19",
																"nodeType": "YulFunctionCall",
																"src": "7490:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7483:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7483:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_00052edcff9af26a43dacfb193d1551f4a2d191bc2a8ffeacdfcf1710a5074de_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7142:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7276:3:19",
														"nodeType": "YulTypedName",
														"src": "7276:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7284:3:19",
														"nodeType": "YulTypedName",
														"src": "7284:3:19",
														"type": ""
													}
												],
												"src": "7142:366:19"
											},
											{
												"body": {
													"nativeSrc": "7685:248:19",
													"nodeType": "YulBlock",
													"src": "7685:248:19",
													"statements": [
														{
															"nativeSrc": "7695:26:19",
															"nodeType": "YulAssignment",
															"src": "7695:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7707:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "7707:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7718:2:19",
																		"nodeType": "YulLiteral",
																		"src": "7718:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7703:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7703:3:19"
																},
																"nativeSrc": "7703:18:19",
																"nodeType": "YulFunctionCall",
																"src": "7703:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7695:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "7695:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7742:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "7742:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7753:1:19",
																				"nodeType": "YulLiteral",
																				"src": "7753:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7738:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7738:3:19"
																		},
																		"nativeSrc": "7738:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7738:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7761:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "7761:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7767:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "7767:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7757:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7757:3:19"
																		},
																		"nativeSrc": "7757:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7757:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7731:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7731:6:19"
																},
																"nativeSrc": "7731:47:19",
																"nodeType": "YulFunctionCall",
																"src": "7731:47:19"
															},
															"nativeSrc": "7731:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "7731:47:19"
														},
														{
															"nativeSrc": "7787:139:19",
															"nodeType": "YulAssignment",
															"src": "7787:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7921:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "7921:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_00052edcff9af26a43dacfb193d1551f4a2d191bc2a8ffeacdfcf1710a5074de_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7795:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "7795:124:19"
																},
																"nativeSrc": "7795:131:19",
																"nodeType": "YulFunctionCall",
																"src": "7795:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7787:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "7787:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00052edcff9af26a43dacfb193d1551f4a2d191bc2a8ffeacdfcf1710a5074de__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7514:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7665:9:19",
														"nodeType": "YulTypedName",
														"src": "7665:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7680:4:19",
														"nodeType": "YulTypedName",
														"src": "7680:4:19",
														"type": ""
													}
												],
												"src": "7514:419:19"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_00052edcff9af26a43dacfb193d1551f4a2d191bc2a8ffeacdfcf1710a5074de(memPtr) {\n\n        mstore(add(memPtr, 0), \"mintPrice is greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_00052edcff9af26a43dacfb193d1551f4a2d191bc2a8ffeacdfcf1710a5074de_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_00052edcff9af26a43dacfb193d1551f4a2d191bc2a8ffeacdfcf1710a5074de(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00052edcff9af26a43dacfb193d1551f4a2d191bc2a8ffeacdfcf1710a5074de__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00052edcff9af26a43dacfb193d1551f4a2d191bc2a8ffeacdfcf1710a5074de_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161343d38038061343d833981810160405281019061003191906102cf565b336040518060400160405280600581526020017f4d514e46540000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d51540000000000000000000000000000000000000000000000000000000000815250815f90816100ac919061052b565b5080600190816100bc919061052b565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361012f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101269190610639565b60405180910390fd5b61013e816101d560201b60201c565b505f8111610181576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610178906106ac565b60405180910390fd5b5f603a8190555080603b8190555033603c5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506106ca565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f819050919050565b6102ae8161029c565b81146102b8575f80fd5b50565b5f815190506102c9816102a5565b92915050565b5f602082840312156102e4576102e3610298565b5b5f6102f1848285016102bb565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061037557607f821691505b60208210810361038857610387610331565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026103ea7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826103af565b6103f486836103af565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61042f61042a6104258461029c565b61040c565b61029c565b9050919050565b5f819050919050565b61044883610415565b61045c61045482610436565b8484546103bb565b825550505050565b5f90565b610470610464565b61047b81848461043f565b505050565b5b8181101561049e576104935f82610468565b600181019050610481565b5050565b601f8211156104e3576104b48161038e565b6104bd846103a0565b810160208510156104cc578190505b6104e06104d8856103a0565b830182610480565b50505b505050565b5f82821c905092915050565b5f6105035f19846008026104e8565b1980831691505092915050565b5f61051b83836104f4565b9150826002028217905092915050565b610534826102fa565b67ffffffffffffffff81111561054d5761054c610304565b5b610557825461035e565b6105628282856104a2565b5f60209050601f831160018114610593575f8415610581578287015190505b61058b8582610510565b8655506105f2565b601f1984166105a18661038e565b5f5b828110156105c8578489015182556001820191506020850194506020810190506105a3565b868310156105e557848901516105e1601f8916826104f4565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610623826105fa565b9050919050565b61063381610619565b82525050565b5f60208201905061064c5f83018461062a565b92915050565b5f82825260208201905092915050565b7f6d696e7450726963652069732067726561746572207468616e207a65726f00005f82015250565b5f610696601e83610652565b91506106a182610662565b602082019050919050565b5f6020820190508181035f8301526106c38161068a565b9050919050565b612d66806106d75f395ff3fe608060405260043610610165575f3560e01c806370a08231116100d0578063b88d4fde11610089578063e985e9c511610063578063e985e9c5146104ff578063f2fde38b1461053b578063f4a0a52814610563578063fb37e8831461058b57610165565b8063b88d4fde14610473578063c87b56dd1461049b578063cc98ef96146104d757610165565b806370a082311461037b578063715018a6146103b757806384c4bd4b146103cd5780638da5cb5b146103f757806395d89b4114610421578063a22cb4651461044b57610165565b80630fdb1c10116101225780630fdb1c101461028757806323b872dd1461029d57806342842e0e146102c55780635d06a611146102ed5780636075851e146103155780636352211e1461033f57610165565b806301ffc9a7146101695780630387da42146101a557806306fdde03146101cf578063081812fc146101f9578063095ea7b3146102355780630a4fa1dd1461025d575b5f80fd5b348015610174575f80fd5b5061018f600480360381019061018a919061206b565b6105bb565b60405161019c91906120b0565b60405180910390f35b3480156101b0575f80fd5b506101b961061b565b6040516101c691906120e1565b60405180910390f35b3480156101da575f80fd5b506101e3610621565b6040516101f0919061216a565b60405180910390f35b348015610204575f80fd5b5061021f600480360381019061021a91906121b4565b6106b0565b60405161022c919061221e565b60405180910390f35b348015610240575f80fd5b5061025b60048036038101906102569190612261565b6106cb565b005b348015610268575f80fd5b506102716106e1565b60405161027e919061221e565b60405180910390f35b348015610292575f80fd5b5061029b610706565b005b3480156102a8575f80fd5b506102c360048036038101906102be919061229f565b610861565b005b3480156102d0575f80fd5b506102eb60048036038101906102e6919061229f565b610960565b005b3480156102f8575f80fd5b50610313600480360381019061030e91906122ef565b61097f565b005b348015610320575f80fd5b506103296109ca565b604051610336919061221e565b60405180910390f35b34801561034a575f80fd5b50610365600480360381019061036091906121b4565b6109ef565b604051610372919061221e565b60405180910390f35b348015610386575f80fd5b506103a1600480360381019061039c91906122ef565b610a00565b6040516103ae91906120e1565b60405180910390f35b3480156103c2575f80fd5b506103cb610ab6565b005b3480156103d8575f80fd5b506103e1610ac9565b6040516103ee91906120e1565b60405180910390f35b348015610402575f80fd5b5061040b610acf565b604051610418919061221e565b60405180910390f35b34801561042c575f80fd5b50610435610af7565b604051610442919061216a565b60405180910390f35b348015610456575f80fd5b50610471600480360381019061046c9190612344565b610b87565b005b34801561047e575f80fd5b50610499600480360381019061049491906124ae565b610b9d565b005b3480156104a6575f80fd5b506104c160048036038101906104bc91906121b4565b610bba565b6040516104ce919061216a565b60405180910390f35b3480156104e2575f80fd5b506104fd60048036038101906104f891906122ef565b610cc5565b005b34801561050a575f80fd5b506105256004803603810190610520919061252e565b610d55565b60405161053291906120b0565b60405180910390f35b348015610546575f80fd5b50610561600480360381019061055c91906122ef565b610de3565b005b34801561056e575f80fd5b50610589600480360381019061058491906121b4565b610e67565b005b6105a560048036038101906105a0919061260a565b610e79565b6040516105b291906120e1565b60405180910390f35b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610614575061061382610f83565b5b9050919050565b603b5481565b60605f805461062f9061267e565b80601f016020809104026020016040519081016040528092919081815260200182805461065b9061267e565b80156106a65780601f1061067d576101008083540402835291602001916106a6565b820191905f5260205f20905b81548152906001019060200180831161068957829003601f168201915b5050505050905090565b5f6106ba82611064565b506106c4826110ea565b9050919050565b6106dd82826106d8611123565b61112a565b5050565b603d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b603c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610795576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078c906126f8565b60405180910390fd5b5f603c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16476040516107db90612743565b5f6040518083038185875af1925050503d805f8114610815576040519150601f19603f3d011682016040523d82523d5f602084013e61081a565b606091505b505090508061085e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610855906127a1565b60405180910390fd5b50565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108d1575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016108c8919061221e565b60405180910390fd5b5f6108e483836108df611123565b61113c565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461095a578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401610951939291906127bf565b60405180910390fd5b50505050565b61097a83838360405180602001604052805f815250610b9d565b505050565b610987611347565b80603c5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b603c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f6109f982611064565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a71575f6040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610a68919061221e565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610abe611347565b610ac75f6113ce565b565b603a5481565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060018054610b069061267e565b80601f0160208091040260200160405190810160405280929190818152602001828054610b329061267e565b8015610b7d5780601f10610b5457610100808354040283529160200191610b7d565b820191905f5260205f20905b815481529060010190602001808311610b6057829003601f168201915b5050505050905090565b610b99610b92611123565b8383611491565b5050565b610ba8848484610861565b610bb4848484846115fa565b50505050565b6060610bc582611064565b505f60065f8481526020019081526020015f208054610be39061267e565b80601f0160208091040260200160405190810160405280929190818152602001828054610c0f9061267e565b8015610c5a5780601f10610c3157610100808354040283529160200191610c5a565b820191905f5260205f20905b815481529060010190602001808311610c3d57829003601f168201915b505050505090505f610c6a6117ac565b90505f815103610c7e578192505050610cc0565b5f82511115610cb2578082604051602001610c9a92919061282e565b60405160208183030381529060405292505050610cc0565b610cbb846117c2565b925050505b919050565b610ccd611347565b80603d5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f5b603a54811015610d5157610d44603d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826106cb565b8080600101915050610d0f565b5050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610deb611347565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e5b575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e52919061221e565b60405180910390fd5b610e64816113ce565b50565b610e6f611347565b80603b8190555050565b5f610e82611828565b5f603a549050603b54341015610ecd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec49061289b565b60405180910390fd5b610ed73382611877565b610ee18184611894565b610f0c603d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826106cb565b3373ffffffffffffffffffffffffffffffffffffffff16817f82a09cc58c9cecf0eb61d8994283ec804165931801f8b77e42dcb3b556c5c5be85604051610f53919061216a565b60405180910390a3603a5f815480929190610f6d906128e6565b919050555080915050610f7e6118ee565b919050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061104d57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061105d575061105c826118f8565b5b9050919050565b5f8061106f83611961565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110e157826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016110d891906120e1565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b611137838383600161199a565b505050565b5f8061114784611961565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461118857611187818486611b59565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611213576111c75f855f8061199a565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461129257600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b61134f611123565b73ffffffffffffffffffffffffffffffffffffffff1661136d610acf565b73ffffffffffffffffffffffffffffffffffffffff16146113cc57611390611123565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016113c3919061221e565b60405180910390fd5b565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361150157816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016114f8919061221e565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516115ed91906120b0565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156117a6578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261163d611123565b8685856040518563ffffffff1660e01b815260040161165f949392919061297f565b6020604051808303815f875af192505050801561169a57506040513d601f19601f8201168201806040525081019061169791906129dd565b60015b61171b573d805f81146116c8576040519150601f19603f3d011682016040523d82523d5f602084013e6116cd565b606091505b505f81510361171357836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161170a919061221e565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146117a457836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161179b919061221e565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60606117cd82611064565b505f6117d76117ac565b90505f8151116117f55760405180602001604052805f815250611820565b806117ff84611c1c565b60405160200161181092919061282e565b6040516020818303038152906040525b915050919050565b60026008540361186d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161186490612a52565b60405180910390fd5b6002600881905550565b611890828260405180602001604052805f815250611ce6565b5050565b8060065f8481526020019081526020015f2090816118b29190612c0d565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516118e291906120e1565b60405180910390a15050565b6001600881905550565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806119d257505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611b04575f6119e184611064565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611a4b57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611a5e5750611a5c8184610d55565b155b15611aa057826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611a97919061221e565b60405180910390fd5b8115611b0257838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611b64838383611d01565b611c17575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611bd857806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611bcf91906120e1565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611c0e929190612cdc565b60405180910390fd5b505050565b60605f6001611c2a84611dc1565b0190505f8167ffffffffffffffff811115611c4857611c4761238a565b5b6040519080825280601f01601f191660200182016040528015611c7a5781602001600182028036833780820191505090505b5090505f82602001820190505b600115611cdb578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611cd057611ccf612d03565b5b0494505f8503611c87575b819350505050919050565b611cf08383611f12565b611cfc5f8484846115fa565b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611db857508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611d795750611d788484610d55565b5b80611db757508273ffffffffffffffffffffffffffffffffffffffff16611d9f836110ea565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611e1d577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611e1357611e12612d03565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611e5a576d04ee2d6d415b85acef81000000008381611e5057611e4f612d03565b5b0492506020810190505b662386f26fc100008310611e8957662386f26fc100008381611e7f57611e7e612d03565b5b0492506010810190505b6305f5e1008310611eb2576305f5e1008381611ea857611ea7612d03565b5b0492506008810190505b6127108310611ed7576127108381611ecd57611ecc612d03565b5b0492506004810190505b60648310611efa5760648381611ef057611eef612d03565b5b0492506002810190505b600a8310611f09576001810190505b80915050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611f82575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611f79919061221e565b60405180910390fd5b5f611f8e83835f61113c565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612000575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611ff7919061221e565b60405180910390fd5b505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61204a81612016565b8114612054575f80fd5b50565b5f8135905061206581612041565b92915050565b5f602082840312156120805761207f61200e565b5b5f61208d84828501612057565b91505092915050565b5f8115159050919050565b6120aa81612096565b82525050565b5f6020820190506120c35f8301846120a1565b92915050565b5f819050919050565b6120db816120c9565b82525050565b5f6020820190506120f45f8301846120d2565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61213c826120fa565b6121468185612104565b9350612156818560208601612114565b61215f81612122565b840191505092915050565b5f6020820190508181035f8301526121828184612132565b905092915050565b612193816120c9565b811461219d575f80fd5b50565b5f813590506121ae8161218a565b92915050565b5f602082840312156121c9576121c861200e565b5b5f6121d6848285016121a0565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f612208826121df565b9050919050565b612218816121fe565b82525050565b5f6020820190506122315f83018461220f565b92915050565b612240816121fe565b811461224a575f80fd5b50565b5f8135905061225b81612237565b92915050565b5f80604083850312156122775761227661200e565b5b5f6122848582860161224d565b9250506020612295858286016121a0565b9150509250929050565b5f805f606084860312156122b6576122b561200e565b5b5f6122c38682870161224d565b93505060206122d48682870161224d565b92505060406122e5868287016121a0565b9150509250925092565b5f602082840312156123045761230361200e565b5b5f6123118482850161224d565b91505092915050565b61232381612096565b811461232d575f80fd5b50565b5f8135905061233e8161231a565b92915050565b5f806040838503121561235a5761235961200e565b5b5f6123678582860161224d565b925050602061237885828601612330565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6123c082612122565b810181811067ffffffffffffffff821117156123df576123de61238a565b5b80604052505050565b5f6123f1612005565b90506123fd82826123b7565b919050565b5f67ffffffffffffffff82111561241c5761241b61238a565b5b61242582612122565b9050602081019050919050565b828183375f83830152505050565b5f61245261244d84612402565b6123e8565b90508281526020810184848401111561246e5761246d612386565b5b612479848285612432565b509392505050565b5f82601f83011261249557612494612382565b5b81356124a5848260208601612440565b91505092915050565b5f805f80608085870312156124c6576124c561200e565b5b5f6124d38782880161224d565b94505060206124e48782880161224d565b93505060406124f5878288016121a0565b925050606085013567ffffffffffffffff81111561251657612515612012565b5b61252287828801612481565b91505092959194509250565b5f80604083850312156125445761254361200e565b5b5f6125518582860161224d565b92505060206125628582860161224d565b9150509250929050565b5f67ffffffffffffffff8211156125865761258561238a565b5b61258f82612122565b9050602081019050919050565b5f6125ae6125a98461256c565b6123e8565b9050828152602081018484840111156125ca576125c9612386565b5b6125d5848285612432565b509392505050565b5f82601f8301126125f1576125f0612382565b5b813561260184826020860161259c565b91505092915050565b5f6020828403121561261f5761261e61200e565b5b5f82013567ffffffffffffffff81111561263c5761263b612012565b5b612648848285016125dd565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061269557607f821691505b6020821081036126a8576126a7612651565b5b50919050565b7f4e6f74206d6173746572206164647265737300000000000000000000000000005f82015250565b5f6126e2601283612104565b91506126ed826126ae565b602082019050919050565b5f6020820190508181035f83015261270f816126d6565b9050919050565b5f81905092915050565b50565b5f61272e5f83612716565b915061273982612720565b5f82019050919050565b5f61274d82612723565b9150819050919050565b7f5472616e73666572206661696c65642e000000000000000000000000000000005f82015250565b5f61278b601083612104565b915061279682612757565b602082019050919050565b5f6020820190508181035f8301526127b88161277f565b9050919050565b5f6060820190506127d25f83018661220f565b6127df60208301856120d2565b6127ec604083018461220f565b949350505050565b5f81905092915050565b5f612808826120fa565b61281281856127f4565b9350612822818560208601612114565b80840191505092915050565b5f61283982856127fe565b915061284582846127fe565b91508190509392505050565b7f4e6f7420656e6f756768204554480000000000000000000000000000000000005f82015250565b5f612885600e83612104565b915061289082612851565b602082019050919050565b5f6020820190508181035f8301526128b281612879565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6128f0826120c9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612922576129216128b9565b5b600182019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f6129518261292d565b61295b8185612937565b935061296b818560208601612114565b61297481612122565b840191505092915050565b5f6080820190506129925f83018761220f565b61299f602083018661220f565b6129ac60408301856120d2565b81810360608301526129be8184612947565b905095945050505050565b5f815190506129d781612041565b92915050565b5f602082840312156129f2576129f161200e565b5b5f6129ff848285016129c9565b91505092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612a3c601f83612104565b9150612a4782612a08565b602082019050919050565b5f6020820190508181035f830152612a6981612a30565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302612acc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612a91565b612ad68683612a91565b95508019841693508086168417925050509392505050565b5f819050919050565b5f612b11612b0c612b07846120c9565b612aee565b6120c9565b9050919050565b5f819050919050565b612b2a83612af7565b612b3e612b3682612b18565b848454612a9d565b825550505050565b5f90565b612b52612b46565b612b5d818484612b21565b505050565b5b81811015612b8057612b755f82612b4a565b600181019050612b63565b5050565b601f821115612bc557612b9681612a70565b612b9f84612a82565b81016020851015612bae578190505b612bc2612bba85612a82565b830182612b62565b50505b505050565b5f82821c905092915050565b5f612be55f1984600802612bca565b1980831691505092915050565b5f612bfd8383612bd6565b9150826002028217905092915050565b612c16826120fa565b67ffffffffffffffff811115612c2f57612c2e61238a565b5b612c39825461267e565b612c44828285612b84565b5f60209050601f831160018114612c75575f8415612c63578287015190505b612c6d8582612bf2565b865550612cd4565b601f198416612c8386612a70565b5f5b82811015612caa57848901518255600182019150602085019450602081019050612c85565b86831015612cc75784890151612cc3601f891682612bd6565b8355505b6001600288020188555050505b505050505050565b5f604082019050612cef5f83018561220f565b612cfc60208301846120d2565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea26469706673582212207b115481d904876e3db03058100b6a9fee4140052cc26a17dd2f7fa8a7d7207864736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x343D CODESIZE SUB DUP1 PUSH2 0x343D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x2CF JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D514E4654000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D51540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x52B JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x52B JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13E DUP2 PUSH2 0x1D5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 DUP2 GT PUSH2 0x181 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x178 SWAP1 PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3A DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3B DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x3C PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x6CA JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AE DUP2 PUSH2 0x29C JUMP JUMPDEST DUP2 EQ PUSH2 0x2B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C9 DUP2 PUSH2 0x2A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E4 JUMPI PUSH2 0x2E3 PUSH2 0x298 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2F1 DUP5 DUP3 DUP6 ADD PUSH2 0x2BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x375 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x388 JUMPI PUSH2 0x387 PUSH2 0x331 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x3EA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3AF JUMP JUMPDEST PUSH2 0x3F4 DUP7 DUP4 PUSH2 0x3AF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x42F PUSH2 0x42A PUSH2 0x425 DUP5 PUSH2 0x29C JUMP JUMPDEST PUSH2 0x40C JUMP JUMPDEST PUSH2 0x29C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x448 DUP4 PUSH2 0x415 JUMP JUMPDEST PUSH2 0x45C PUSH2 0x454 DUP3 PUSH2 0x436 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3BB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x470 PUSH2 0x464 JUMP JUMPDEST PUSH2 0x47B DUP2 DUP5 DUP5 PUSH2 0x43F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x49E JUMPI PUSH2 0x493 PUSH0 DUP3 PUSH2 0x468 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x481 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4E3 JUMPI PUSH2 0x4B4 DUP2 PUSH2 0x38E JUMP JUMPDEST PUSH2 0x4BD DUP5 PUSH2 0x3A0 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4CC JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x4E0 PUSH2 0x4D8 DUP6 PUSH2 0x3A0 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x480 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x503 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x4E8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x51B DUP4 DUP4 PUSH2 0x4F4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x534 DUP3 PUSH2 0x2FA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x54D JUMPI PUSH2 0x54C PUSH2 0x304 JUMP JUMPDEST JUMPDEST PUSH2 0x557 DUP3 SLOAD PUSH2 0x35E JUMP JUMPDEST PUSH2 0x562 DUP3 DUP3 DUP6 PUSH2 0x4A2 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x593 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x581 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x58B DUP6 DUP3 PUSH2 0x510 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x5A1 DUP7 PUSH2 0x38E JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5C8 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5A3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x5E5 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x5E1 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4F4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x623 DUP3 PUSH2 0x5FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x633 DUP2 PUSH2 0x619 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x64C PUSH0 DUP4 ADD DUP5 PUSH2 0x62A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6D696E7450726963652069732067726561746572207468616E207A65726F0000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x696 PUSH1 0x1E DUP4 PUSH2 0x652 JUMP JUMPDEST SWAP2 POP PUSH2 0x6A1 DUP3 PUSH2 0x662 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6C3 DUP2 PUSH2 0x68A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D66 DUP1 PUSH2 0x6D7 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x165 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x4FF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0xF4A0A528 EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0xFB37E883 EQ PUSH2 0x58B JUMPI PUSH2 0x165 JUMP JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xCC98EF96 EQ PUSH2 0x4D7 JUMPI PUSH2 0x165 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0x84C4BD4B EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x44B JUMPI PUSH2 0x165 JUMP JUMPDEST DUP1 PUSH4 0xFDB1C10 GT PUSH2 0x122 JUMPI DUP1 PUSH4 0xFDB1C10 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x5D06A611 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x6075851E EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x33F JUMPI PUSH2 0x165 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x387DA42 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0xA4FA1DD EQ PUSH2 0x25D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x174 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x206B JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E3 PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x216A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x240 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x2261 JUMP JUMPDEST PUSH2 0x6CB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29B PUSH2 0x706 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x229F JUMP JUMPDEST PUSH2 0x861 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x229F JUMP JUMPDEST PUSH2 0x960 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x22EF JUMP JUMPDEST PUSH2 0x97F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x329 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x365 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x22EF JUMP JUMPDEST PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CB PUSH2 0xAB6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E1 PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x402 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x40B PUSH2 0xACF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x435 PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x442 SWAP2 SWAP1 PUSH2 0x216A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x456 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x471 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x2344 JUMP JUMPDEST PUSH2 0xB87 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x24AE JUMP JUMPDEST PUSH2 0xB9D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BC SWAP2 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0x216A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x22EF JUMP JUMPDEST PUSH2 0xCC5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x525 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x520 SWAP2 SWAP1 PUSH2 0x252E JUMP JUMPDEST PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x532 SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x546 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x561 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55C SWAP2 SWAP1 PUSH2 0x22EF JUMP JUMPDEST PUSH2 0xDE3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x589 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x584 SWAP2 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST PUSH2 0xE67 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x614 JUMPI POP PUSH2 0x613 DUP3 PUSH2 0xF83 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3B SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x62F SWAP1 PUSH2 0x267E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x65B SWAP1 PUSH2 0x267E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6A6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x67D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6A6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x689 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x6BA DUP3 PUSH2 0x1064 JUMP JUMPDEST POP PUSH2 0x6C4 DUP3 PUSH2 0x10EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DD DUP3 DUP3 PUSH2 0x6D8 PUSH2 0x1123 JUMP JUMPDEST PUSH2 0x112A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3D PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3C PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78C SWAP1 PUSH2 0x26F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3C PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x7DB SWAP1 PUSH2 0x2743 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x815 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x81A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x85E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x855 SWAP1 PUSH2 0x27A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8D1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x8E4 DUP4 DUP4 PUSH2 0x8DF PUSH2 0x1123 JUMP JUMPDEST PUSH2 0x113C JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x95A JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x951 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x97A DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xB9D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x987 PUSH2 0x1347 JUMP JUMPDEST DUP1 PUSH1 0x3C PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3C PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x9F9 DUP3 PUSH2 0x1064 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA71 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA68 SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xABE PUSH2 0x1347 JUMP JUMPDEST PUSH2 0xAC7 PUSH0 PUSH2 0x13CE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3A SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xB06 SWAP1 PUSH2 0x267E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB32 SWAP1 PUSH2 0x267E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB7D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB54 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB7D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB60 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB99 PUSH2 0xB92 PUSH2 0x1123 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1491 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBA8 DUP5 DUP5 DUP5 PUSH2 0x861 JUMP JUMPDEST PUSH2 0xBB4 DUP5 DUP5 DUP5 DUP5 PUSH2 0x15FA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xBC5 DUP3 PUSH2 0x1064 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0xBE3 SWAP1 PUSH2 0x267E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC0F SWAP1 PUSH2 0x267E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC5A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC31 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC5A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC3D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0xC6A PUSH2 0x17AC JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0xC7E JUMPI DUP2 SWAP3 POP POP POP PUSH2 0xCC0 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0xCB2 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC9A SWAP3 SWAP2 SWAP1 PUSH2 0x282E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0xCBB DUP5 PUSH2 0x17C2 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCCD PUSH2 0x1347 JUMP JUMPDEST DUP1 PUSH1 0x3D PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 JUMPDEST PUSH1 0x3A SLOAD DUP2 LT ISZERO PUSH2 0xD51 JUMPI PUSH2 0xD44 PUSH1 0x3D PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x6CB JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xD0F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDEB PUSH2 0x1347 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE5B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE52 SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE64 DUP2 PUSH2 0x13CE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE6F PUSH2 0x1347 JUMP JUMPDEST DUP1 PUSH1 0x3B DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE82 PUSH2 0x1828 JUMP JUMPDEST PUSH0 PUSH1 0x3A SLOAD SWAP1 POP PUSH1 0x3B SLOAD CALLVALUE LT ISZERO PUSH2 0xECD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC4 SWAP1 PUSH2 0x289B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xED7 CALLER DUP3 PUSH2 0x1877 JUMP JUMPDEST PUSH2 0xEE1 DUP2 DUP5 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0xF0C PUSH1 0x3D PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x6CB JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0x82A09CC58C9CECF0EB61D8994283EC804165931801F8B77E42DCB3B556C5C5BE DUP6 PUSH1 0x40 MLOAD PUSH2 0xF53 SWAP2 SWAP1 PUSH2 0x216A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x3A PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xF6D SWAP1 PUSH2 0x28E6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 SWAP2 POP POP PUSH2 0xF7E PUSH2 0x18EE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x104D JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x105D JUMPI POP PUSH2 0x105C DUP3 PUSH2 0x18F8 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x106F DUP4 PUSH2 0x1961 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10E1 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D8 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1137 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x199A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1147 DUP5 PUSH2 0x1961 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1188 JUMPI PUSH2 0x1187 DUP2 DUP5 DUP7 PUSH2 0x1B59 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1213 JUMPI PUSH2 0x11C7 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x199A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1292 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x134F PUSH2 0x1123 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x136D PUSH2 0xACF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13CC JUMPI PUSH2 0x1390 PUSH2 0x1123 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C3 SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1501 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F8 SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x15ED SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x17A6 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x163D PUSH2 0x1123 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x165F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x297F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x169A JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1697 SWAP2 SWAP1 PUSH2 0x29DD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x171B JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x16C8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1713 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x170A SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x17A4 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x179B SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x17CD DUP3 PUSH2 0x1064 JUMP JUMPDEST POP PUSH0 PUSH2 0x17D7 PUSH2 0x17AC JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x17F5 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1820 JUMP JUMPDEST DUP1 PUSH2 0x17FF DUP5 PUSH2 0x1C1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1810 SWAP3 SWAP2 SWAP1 PUSH2 0x282E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x8 SLOAD SUB PUSH2 0x186D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1864 SWAP1 PUSH2 0x2A52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x8 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1890 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1CE6 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x18B2 SWAP2 SWAP1 PUSH2 0x2C0D JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x18E2 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x19D2 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1B04 JUMPI PUSH0 PUSH2 0x19E1 DUP5 PUSH2 0x1064 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1A4B JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1A5E JUMPI POP PUSH2 0x1A5C DUP2 DUP5 PUSH2 0xD55 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1AA0 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A97 SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1B02 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1B64 DUP4 DUP4 DUP4 PUSH2 0x1D01 JUMP JUMPDEST PUSH2 0x1C17 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BD8 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BCF SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C0E SWAP3 SWAP2 SWAP1 PUSH2 0x2CDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1C2A DUP5 PUSH2 0x1DC1 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C48 JUMPI PUSH2 0x1C47 PUSH2 0x238A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1C7A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1CDB JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1CD0 JUMPI PUSH2 0x1CCF PUSH2 0x2D03 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1C87 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CF0 DUP4 DUP4 PUSH2 0x1F12 JUMP JUMPDEST PUSH2 0x1CFC PUSH0 DUP5 DUP5 DUP5 PUSH2 0x15FA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1DB8 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1D79 JUMPI POP PUSH2 0x1D78 DUP5 DUP5 PUSH2 0xD55 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1DB7 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D9F DUP4 PUSH2 0x10EA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1E1D JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1E13 JUMPI PUSH2 0x1E12 PUSH2 0x2D03 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1E5A JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1E50 JUMPI PUSH2 0x1E4F PUSH2 0x2D03 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1E89 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1E7F JUMPI PUSH2 0x1E7E PUSH2 0x2D03 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1EB2 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1EA8 JUMPI PUSH2 0x1EA7 PUSH2 0x2D03 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1ED7 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1ECD JUMPI PUSH2 0x1ECC PUSH2 0x2D03 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1EFA JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1EF0 JUMPI PUSH2 0x1EEF PUSH2 0x2D03 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1F09 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F82 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F79 SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1F8E DUP4 DUP4 PUSH0 PUSH2 0x113C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2000 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FF7 SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x204A DUP2 PUSH2 0x2016 JUMP JUMPDEST DUP2 EQ PUSH2 0x2054 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2065 DUP2 PUSH2 0x2041 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2080 JUMPI PUSH2 0x207F PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x208D DUP5 DUP3 DUP6 ADD PUSH2 0x2057 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20AA DUP2 PUSH2 0x2096 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20C3 PUSH0 DUP4 ADD DUP5 PUSH2 0x20A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20DB DUP2 PUSH2 0x20C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20F4 PUSH0 DUP4 ADD DUP5 PUSH2 0x20D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x213C DUP3 PUSH2 0x20FA JUMP JUMPDEST PUSH2 0x2146 DUP2 DUP6 PUSH2 0x2104 JUMP JUMPDEST SWAP4 POP PUSH2 0x2156 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2114 JUMP JUMPDEST PUSH2 0x215F DUP2 PUSH2 0x2122 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2182 DUP2 DUP5 PUSH2 0x2132 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2193 DUP2 PUSH2 0x20C9 JUMP JUMPDEST DUP2 EQ PUSH2 0x219D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21AE DUP2 PUSH2 0x218A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21C9 JUMPI PUSH2 0x21C8 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21D6 DUP5 DUP3 DUP6 ADD PUSH2 0x21A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2208 DUP3 PUSH2 0x21DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2218 DUP2 PUSH2 0x21FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2231 PUSH0 DUP4 ADD DUP5 PUSH2 0x220F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2240 DUP2 PUSH2 0x21FE JUMP JUMPDEST DUP2 EQ PUSH2 0x224A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x225B DUP2 PUSH2 0x2237 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2277 JUMPI PUSH2 0x2276 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2284 DUP6 DUP3 DUP7 ADD PUSH2 0x224D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2295 DUP6 DUP3 DUP7 ADD PUSH2 0x21A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22B6 JUMPI PUSH2 0x22B5 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22C3 DUP7 DUP3 DUP8 ADD PUSH2 0x224D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x22D4 DUP7 DUP3 DUP8 ADD PUSH2 0x224D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x22E5 DUP7 DUP3 DUP8 ADD PUSH2 0x21A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2304 JUMPI PUSH2 0x2303 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2311 DUP5 DUP3 DUP6 ADD PUSH2 0x224D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2323 DUP2 PUSH2 0x2096 JUMP JUMPDEST DUP2 EQ PUSH2 0x232D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x233E DUP2 PUSH2 0x231A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x235A JUMPI PUSH2 0x2359 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2367 DUP6 DUP3 DUP7 ADD PUSH2 0x224D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2378 DUP6 DUP3 DUP7 ADD PUSH2 0x2330 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x23C0 DUP3 PUSH2 0x2122 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x23DF JUMPI PUSH2 0x23DE PUSH2 0x238A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23F1 PUSH2 0x2005 JUMP JUMPDEST SWAP1 POP PUSH2 0x23FD DUP3 DUP3 PUSH2 0x23B7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x241C JUMPI PUSH2 0x241B PUSH2 0x238A JUMP JUMPDEST JUMPDEST PUSH2 0x2425 DUP3 PUSH2 0x2122 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2452 PUSH2 0x244D DUP5 PUSH2 0x2402 JUMP JUMPDEST PUSH2 0x23E8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x246E JUMPI PUSH2 0x246D PUSH2 0x2386 JUMP JUMPDEST JUMPDEST PUSH2 0x2479 DUP5 DUP3 DUP6 PUSH2 0x2432 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2495 JUMPI PUSH2 0x2494 PUSH2 0x2382 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x24A5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2440 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x24C6 JUMPI PUSH2 0x24C5 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24D3 DUP8 DUP3 DUP9 ADD PUSH2 0x224D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x24E4 DUP8 DUP3 DUP9 ADD PUSH2 0x224D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x24F5 DUP8 DUP3 DUP9 ADD PUSH2 0x21A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2516 JUMPI PUSH2 0x2515 PUSH2 0x2012 JUMP JUMPDEST JUMPDEST PUSH2 0x2522 DUP8 DUP3 DUP9 ADD PUSH2 0x2481 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2544 JUMPI PUSH2 0x2543 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2551 DUP6 DUP3 DUP7 ADD PUSH2 0x224D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2562 DUP6 DUP3 DUP7 ADD PUSH2 0x224D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2586 JUMPI PUSH2 0x2585 PUSH2 0x238A JUMP JUMPDEST JUMPDEST PUSH2 0x258F DUP3 PUSH2 0x2122 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25AE PUSH2 0x25A9 DUP5 PUSH2 0x256C JUMP JUMPDEST PUSH2 0x23E8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x25CA JUMPI PUSH2 0x25C9 PUSH2 0x2386 JUMP JUMPDEST JUMPDEST PUSH2 0x25D5 DUP5 DUP3 DUP6 PUSH2 0x2432 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x25F1 JUMPI PUSH2 0x25F0 PUSH2 0x2382 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2601 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x259C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x261F JUMPI PUSH2 0x261E PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x263C JUMPI PUSH2 0x263B PUSH2 0x2012 JUMP JUMPDEST JUMPDEST PUSH2 0x2648 DUP5 DUP3 DUP6 ADD PUSH2 0x25DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2695 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x26A8 JUMPI PUSH2 0x26A7 PUSH2 0x2651 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F74206D617374657220616464726573730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26E2 PUSH1 0x12 DUP4 PUSH2 0x2104 JUMP JUMPDEST SWAP2 POP PUSH2 0x26ED DUP3 PUSH2 0x26AE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x270F DUP2 PUSH2 0x26D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x272E PUSH0 DUP4 PUSH2 0x2716 JUMP JUMPDEST SWAP2 POP PUSH2 0x2739 DUP3 PUSH2 0x2720 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x274D DUP3 PUSH2 0x2723 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65642E00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x278B PUSH1 0x10 DUP4 PUSH2 0x2104 JUMP JUMPDEST SWAP2 POP PUSH2 0x2796 DUP3 PUSH2 0x2757 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27B8 DUP2 PUSH2 0x277F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x27D2 PUSH0 DUP4 ADD DUP7 PUSH2 0x220F JUMP JUMPDEST PUSH2 0x27DF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20D2 JUMP JUMPDEST PUSH2 0x27EC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x220F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2808 DUP3 PUSH2 0x20FA JUMP JUMPDEST PUSH2 0x2812 DUP2 DUP6 PUSH2 0x27F4 JUMP JUMPDEST SWAP4 POP PUSH2 0x2822 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2114 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2839 DUP3 DUP6 PUSH2 0x27FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2845 DUP3 DUP5 PUSH2 0x27FE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820455448000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2885 PUSH1 0xE DUP4 PUSH2 0x2104 JUMP JUMPDEST SWAP2 POP PUSH2 0x2890 DUP3 PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28B2 DUP2 PUSH2 0x2879 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x28F0 DUP3 PUSH2 0x20C9 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2922 JUMPI PUSH2 0x2921 PUSH2 0x28B9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2951 DUP3 PUSH2 0x292D JUMP JUMPDEST PUSH2 0x295B DUP2 DUP6 PUSH2 0x2937 JUMP JUMPDEST SWAP4 POP PUSH2 0x296B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2114 JUMP JUMPDEST PUSH2 0x2974 DUP2 PUSH2 0x2122 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2992 PUSH0 DUP4 ADD DUP8 PUSH2 0x220F JUMP JUMPDEST PUSH2 0x299F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x220F JUMP JUMPDEST PUSH2 0x29AC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x20D2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x29BE DUP2 DUP5 PUSH2 0x2947 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x29D7 DUP2 PUSH2 0x2041 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29F2 JUMPI PUSH2 0x29F1 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29FF DUP5 DUP3 DUP6 ADD PUSH2 0x29C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A3C PUSH1 0x1F DUP4 PUSH2 0x2104 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A47 DUP3 PUSH2 0x2A08 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A69 DUP2 PUSH2 0x2A30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2ACC PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2A91 JUMP JUMPDEST PUSH2 0x2AD6 DUP7 DUP4 PUSH2 0x2A91 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2B11 PUSH2 0x2B0C PUSH2 0x2B07 DUP5 PUSH2 0x20C9 JUMP JUMPDEST PUSH2 0x2AEE JUMP JUMPDEST PUSH2 0x20C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B2A DUP4 PUSH2 0x2AF7 JUMP JUMPDEST PUSH2 0x2B3E PUSH2 0x2B36 DUP3 PUSH2 0x2B18 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2A9D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2B52 PUSH2 0x2B46 JUMP JUMPDEST PUSH2 0x2B5D DUP2 DUP5 DUP5 PUSH2 0x2B21 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2B80 JUMPI PUSH2 0x2B75 PUSH0 DUP3 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2B63 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2BC5 JUMPI PUSH2 0x2B96 DUP2 PUSH2 0x2A70 JUMP JUMPDEST PUSH2 0x2B9F DUP5 PUSH2 0x2A82 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2BAE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2BC2 PUSH2 0x2BBA DUP6 PUSH2 0x2A82 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2B62 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BE5 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2BCA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BFD DUP4 DUP4 PUSH2 0x2BD6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C16 DUP3 PUSH2 0x20FA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C2F JUMPI PUSH2 0x2C2E PUSH2 0x238A JUMP JUMPDEST JUMPDEST PUSH2 0x2C39 DUP3 SLOAD PUSH2 0x267E JUMP JUMPDEST PUSH2 0x2C44 DUP3 DUP3 DUP6 PUSH2 0x2B84 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2C75 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2C63 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2C6D DUP6 DUP3 PUSH2 0x2BF2 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2CD4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2C83 DUP7 PUSH2 0x2A70 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2CAA JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C85 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2CC7 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2CC3 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2BD6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2CEF PUSH0 DUP4 ADD DUP6 PUSH2 0x220F JUMP JUMPDEST PUSH2 0x2CFC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20D2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x115481D904876E3DB03058100B6A9FEE4140052CC26A17DD2F7FA8A7 0xD7 KECCAK256 PUSH25 0x64736F6C634300081900330000000000000000000000000000 ",
							"sourceMap": "283:1827:18:-:0;;;601:250;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;663:10;1381:113:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;1297:1:2;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;706:1:18::2;694:9;:13;686:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;771:1;753:15;:19;;;;796:9;783:10;:22;;;;833:10;816:14;;:27;;;;;;;;;;;;;;;;;;601:250:::0;283:1827;;2912:187:2;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:19:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:99::-;1103:6;1137:5;1131:12;1121:22;;1051:99;;;:::o;1156:180::-;1204:77;1201:1;1194:88;1301:4;1298:1;1291:15;1325:4;1322:1;1315:15;1342:180;1390:77;1387:1;1380:88;1487:4;1484:1;1477:15;1511:4;1508:1;1501:15;1528:320;1572:6;1609:1;1603:4;1599:12;1589:22;;1656:1;1650:4;1646:12;1677:18;1667:81;;1733:4;1725:6;1721:17;1711:27;;1667:81;1795:2;1787:6;1784:14;1764:18;1761:38;1758:84;;1814:18;;:::i;:::-;1758:84;1579:269;1528:320;;;:::o;1854:141::-;1903:4;1926:3;1918:11;;1949:3;1946:1;1939:14;1983:4;1980:1;1970:18;1962:26;;1854:141;;;:::o;2001:93::-;2038:6;2085:2;2080;2073:5;2069:14;2065:23;2055:33;;2001:93;;;:::o;2100:107::-;2144:8;2194:5;2188:4;2184:16;2163:37;;2100:107;;;;:::o;2213:393::-;2282:6;2332:1;2320:10;2316:18;2355:97;2385:66;2374:9;2355:97;:::i;:::-;2473:39;2503:8;2492:9;2473:39;:::i;:::-;2461:51;;2545:4;2541:9;2534:5;2530:21;2521:30;;2594:4;2584:8;2580:19;2573:5;2570:30;2560:40;;2289:317;;2213:393;;;;;:::o;2612:60::-;2640:3;2661:5;2654:12;;2612:60;;;:::o;2678:142::-;2728:9;2761:53;2779:34;2788:24;2806:5;2788:24;:::i;:::-;2779:34;:::i;:::-;2761:53;:::i;:::-;2748:66;;2678:142;;;:::o;2826:75::-;2869:3;2890:5;2883:12;;2826:75;;;:::o;2907:269::-;3017:39;3048:7;3017:39;:::i;:::-;3078:91;3127:41;3151:16;3127:41;:::i;:::-;3119:6;3112:4;3106:11;3078:91;:::i;:::-;3072:4;3065:105;2983:193;2907:269;;;:::o;3182:73::-;3227:3;3182:73;:::o;3261:189::-;3338:32;;:::i;:::-;3379:65;3437:6;3429;3423:4;3379:65;:::i;:::-;3314:136;3261:189;;:::o;3456:186::-;3516:120;3533:3;3526:5;3523:14;3516:120;;;3587:39;3624:1;3617:5;3587:39;:::i;:::-;3560:1;3553:5;3549:13;3540:22;;3516:120;;;3456:186;;:::o;3648:543::-;3749:2;3744:3;3741:11;3738:446;;;3783:38;3815:5;3783:38;:::i;:::-;3867:29;3885:10;3867:29;:::i;:::-;3857:8;3853:44;4050:2;4038:10;4035:18;4032:49;;;4071:8;4056:23;;4032:49;4094:80;4150:22;4168:3;4150:22;:::i;:::-;4140:8;4136:37;4123:11;4094:80;:::i;:::-;3753:431;;3738:446;3648:543;;;:::o;4197:117::-;4251:8;4301:5;4295:4;4291:16;4270:37;;4197:117;;;;:::o;4320:169::-;4364:6;4397:51;4445:1;4441:6;4433:5;4430:1;4426:13;4397:51;:::i;:::-;4393:56;4478:4;4472;4468:15;4458:25;;4371:118;4320:169;;;;:::o;4494:295::-;4570:4;4716:29;4741:3;4735:4;4716:29;:::i;:::-;4708:37;;4778:3;4775:1;4771:11;4765:4;4762:21;4754:29;;4494:295;;;;:::o;4794:1395::-;4911:37;4944:3;4911:37;:::i;:::-;5013:18;5005:6;5002:30;4999:56;;;5035:18;;:::i;:::-;4999:56;5079:38;5111:4;5105:11;5079:38;:::i;:::-;5164:67;5224:6;5216;5210:4;5164:67;:::i;:::-;5258:1;5282:4;5269:17;;5314:2;5306:6;5303:14;5331:1;5326:618;;;;5988:1;6005:6;6002:77;;;6054:9;6049:3;6045:19;6039:26;6030:35;;6002:77;6105:67;6165:6;6158:5;6105:67;:::i;:::-;6099:4;6092:81;5961:222;5296:887;;5326:618;5378:4;5374:9;5366:6;5362:22;5412:37;5444:4;5412:37;:::i;:::-;5471:1;5485:208;5499:7;5496:1;5493:14;5485:208;;;5578:9;5573:3;5569:19;5563:26;5555:6;5548:42;5629:1;5621:6;5617:14;5607:24;;5676:2;5665:9;5661:18;5648:31;;5522:4;5519:1;5515:12;5510:17;;5485:208;;;5721:6;5712:7;5709:19;5706:179;;;5779:9;5774:3;5770:19;5764:26;5822:48;5864:4;5856:6;5852:17;5841:9;5822:48;:::i;:::-;5814:6;5807:64;5729:156;5706:179;5931:1;5927;5919:6;5915:14;5911:22;5905:4;5898:36;5333:611;;;5296:887;;4886:1303;;;4794:1395;;:::o;6195:126::-;6232:7;6272:42;6265:5;6261:54;6250:65;;6195:126;;;:::o;6327:96::-;6364:7;6393:24;6411:5;6393:24;:::i;:::-;6382:35;;6327:96;;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:169::-;6865:11;6899:6;6894:3;6887:19;6939:4;6934:3;6930:14;6915:29;;6781:169;;;;:::o;6956:180::-;7096:32;7092:1;7084:6;7080:14;7073:56;6956:180;:::o;7142:366::-;7284:3;7305:67;7369:2;7364:3;7305:67;:::i;:::-;7298:74;;7381:93;7470:3;7381:93;:::i;:::-;7499:2;7494:3;7490:12;7483:19;;7142:366;;;:::o;7514:419::-;7680:4;7718:2;7707:9;7703:18;7695:26;;7767:9;7761:4;7757:20;7753:1;7742:9;7738:17;7731:47;7795:131;7921:4;7795:131;:::i;:::-;7787:139;;7514:419;;;:::o;283:1827:18:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1467": {
									"entryPoint": 4394,
									"id": 1467,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1533": {
									"entryPoint": 6554,
									"id": 1533,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_860": {
									"entryPoint": 6060,
									"id": 860,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_1115": {
									"entryPoint": 7001,
									"id": 1115,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1663": {
									"entryPoint": 5626,
									"id": 1663,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_423": {
									"entryPoint": 4935,
									"id": 423,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_1042": {
									"entryPoint": 4330,
									"id": 1042,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_1078": {
									"entryPoint": 7425,
									"id": 1078,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_marketPlaceAddress_3452": {
									"entryPoint": 1761,
									"id": 3452,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_masterAddress_3450": {
									"entryPoint": 2506,
									"id": 3450,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mintPrice_3448": {
									"entryPoint": 1563,
									"id": 3448,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_1271": {
									"entryPoint": 7954,
									"id": 1271,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1965": {
									"entryPoint": 4387,
									"id": 1965,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_321": {
									"entryPoint": 6382,
									"id": 321,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_313": {
									"entryPoint": 6184,
									"id": 313,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_ownerOf_1029": {
									"entryPoint": 6497,
									"id": 1029,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1599": {
									"entryPoint": 4196,
									"id": 1599,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_1286": {
									"entryPoint": 6263,
									"id": 1286,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_1312": {
									"entryPoint": 7398,
									"id": 1312,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1570": {
									"entryPoint": 5265,
									"id": 1570,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_1924": {
									"entryPoint": 6292,
									"id": 1924,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_tokenIdCounter_3446": {
									"entryPoint": 2761,
									"id": 3446,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_485": {
									"entryPoint": 5070,
									"id": 485,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_1221": {
									"entryPoint": 4412,
									"id": 1221,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_876": {
									"entryPoint": 1739,
									"id": 876,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_784": {
									"entryPoint": 2560,
									"id": 784,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_893": {
									"entryPoint": 1712,
									"id": 893,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_926": {
									"entryPoint": 3413,
									"id": 926,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_3148": {
									"entryPoint": 7617,
									"id": 3148,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintNFT_3597": {
									"entryPoint": 3705,
									"id": 3597,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_806": {
									"entryPoint": 1569,
									"id": 806,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_797": {
									"entryPoint": 2543,
									"id": 797,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_406": {
									"entryPoint": 2767,
									"id": 406,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_437": {
									"entryPoint": 2742,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_1016": {
									"entryPoint": 2973,
									"id": 1016,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransferFrom_990": {
									"entryPoint": 2400,
									"id": 990,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setApprovalForAll_909": {
									"entryPoint": 2951,
									"id": 909,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setMarketPlaceAddress_3523": {
									"entryPoint": 3269,
									"id": 3523,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMasterAddress_3547": {
									"entryPoint": 2431,
									"id": 3547,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMintPrice_3535": {
									"entryPoint": 3687,
									"id": 3535,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1848": {
									"entryPoint": 1467,
									"id": 1848,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2261": {
									"entryPoint": 6392,
									"id": 2261,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_756": {
									"entryPoint": 3971,
									"id": 756,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_815": {
									"entryPoint": 2807,
									"id": 815,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_2051": {
									"entryPoint": 7196,
									"id": 2051,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1905": {
									"entryPoint": 3002,
									"id": 1905,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_851": {
									"entryPoint": 6082,
									"id": 851,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_972": {
									"entryPoint": 2145,
									"id": 972,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_465": {
									"entryPoint": 3555,
									"id": 465,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withDraw_3627": {
									"entryPoint": 1798,
									"id": 3627,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 9280,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 9628,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 9008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 8279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 10697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 9345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 9693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 9390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 9028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 8299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 10717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 9738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_638577bb24e430bfb6d1d8a9d5466bf3f38c559db3bf705cb3f80a995566acc6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10800,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10286,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10623,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11484,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 10175,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_638577bb24e430bfb6d1d8a9d5466bf3f38c559db3bf705cb3f80a995566acc6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 9192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 8197,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 9218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 9580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 10864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 11140,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 8702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 8214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 11106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 10999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 11277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 9266,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8468,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 10882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 9854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 11250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 9143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 10990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 10470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 11222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10425,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 11523,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9809,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9098,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 11032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 9090,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 9094,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 8210,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8206,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 10897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 11210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 11082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_638577bb24e430bfb6d1d8a9d5466bf3f38c559db3bf705cb3f80a995566acc6": {
									"entryPoint": 9902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a": {
									"entryPoint": 10321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 10016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69": {
									"entryPoint": 10071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 10760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 10909,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 11041,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 8257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 11078,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:25982:19",
										"nodeType": "YulBlock",
										"src": "0:25982:19",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:19",
													"nodeType": "YulBlock",
													"src": "47:35:19",
													"statements": [
														{
															"nativeSrc": "57:19:19",
															"nodeType": "YulAssignment",
															"src": "57:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:19",
																		"nodeType": "YulLiteral",
																		"src": "73:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:19"
																},
																"nativeSrc": "67:9:19",
																"nodeType": "YulFunctionCall",
																"src": "67:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:19"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:19",
														"nodeType": "YulTypedName",
														"src": "40:6:19",
														"type": ""
													}
												],
												"src": "7:75:19"
											},
											{
												"body": {
													"nativeSrc": "177:28:19",
													"nodeType": "YulBlock",
													"src": "177:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:19",
																		"nodeType": "YulLiteral",
																		"src": "194:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:19",
																		"nodeType": "YulLiteral",
																		"src": "197:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:19"
																},
																"nativeSrc": "187:12:19",
																"nodeType": "YulFunctionCall",
																"src": "187:12:19"
															},
															"nativeSrc": "187:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:19"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:19"
											},
											{
												"body": {
													"nativeSrc": "300:28:19",
													"nodeType": "YulBlock",
													"src": "300:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:19",
																		"nodeType": "YulLiteral",
																		"src": "317:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:19",
																		"nodeType": "YulLiteral",
																		"src": "320:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:19"
																},
																"nativeSrc": "310:12:19",
																"nodeType": "YulFunctionCall",
																"src": "310:12:19"
															},
															"nativeSrc": "310:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:19"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:19"
											},
											{
												"body": {
													"nativeSrc": "378:105:19",
													"nodeType": "YulBlock",
													"src": "378:105:19",
													"statements": [
														{
															"nativeSrc": "388:89:19",
															"nodeType": "YulAssignment",
															"src": "388:89:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:19",
																		"nodeType": "YulLiteral",
																		"src": "410:66:19",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:19"
																},
																"nativeSrc": "399:78:19",
																"nodeType": "YulFunctionCall",
																"src": "399:78:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:19",
														"nodeType": "YulTypedName",
														"src": "360:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:19",
														"nodeType": "YulTypedName",
														"src": "370:7:19",
														"type": ""
													}
												],
												"src": "334:149:19"
											},
											{
												"body": {
													"nativeSrc": "531:78:19",
													"nodeType": "YulBlock",
													"src": "531:78:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:19",
																"nodeType": "YulBlock",
																"src": "587:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:19",
																					"nodeType": "YulLiteral",
																					"src": "596:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:19",
																					"nodeType": "YulLiteral",
																					"src": "599:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:19"
																			},
																			"nativeSrc": "589:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:19"
																		},
																		"nativeSrc": "589:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:19",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:19"
																				},
																				"nativeSrc": "561:23:19",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:19"
																		},
																		"nativeSrc": "551:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:19"
																},
																"nativeSrc": "544:42:19",
																"nodeType": "YulFunctionCall",
																"src": "544:42:19"
															},
															"nativeSrc": "541:62:19",
															"nodeType": "YulIf",
															"src": "541:62:19"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:19",
														"nodeType": "YulTypedName",
														"src": "524:5:19",
														"type": ""
													}
												],
												"src": "489:120:19"
											},
											{
												"body": {
													"nativeSrc": "666:86:19",
													"nodeType": "YulBlock",
													"src": "666:86:19",
													"statements": [
														{
															"nativeSrc": "676:29:19",
															"nodeType": "YulAssignment",
															"src": "676:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:19"
																},
																"nativeSrc": "685:20:19",
																"nodeType": "YulFunctionCall",
																"src": "685:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:19"
																},
																"nativeSrc": "714:32:19",
																"nodeType": "YulFunctionCall",
																"src": "714:32:19"
															},
															"nativeSrc": "714:32:19",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:19"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:19",
														"nodeType": "YulTypedName",
														"src": "644:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:19",
														"nodeType": "YulTypedName",
														"src": "652:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:19",
														"nodeType": "YulTypedName",
														"src": "660:5:19",
														"type": ""
													}
												],
												"src": "615:137:19"
											},
											{
												"body": {
													"nativeSrc": "823:262:19",
													"nodeType": "YulBlock",
													"src": "823:262:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:19",
																"nodeType": "YulBlock",
																"src": "869:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:19"
																			},
																			"nativeSrc": "871:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:19"
																		},
																		"nativeSrc": "871:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:19"
																		},
																		"nativeSrc": "840:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:19",
																		"nodeType": "YulLiteral",
																		"src": "865:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:19"
																},
																"nativeSrc": "836:32:19",
																"nodeType": "YulFunctionCall",
																"src": "836:32:19"
															},
															"nativeSrc": "833:119:19",
															"nodeType": "YulIf",
															"src": "833:119:19"
														},
														{
															"nativeSrc": "962:116:19",
															"nodeType": "YulBlock",
															"src": "962:116:19",
															"statements": [
																{
																	"nativeSrc": "977:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:19",
																		"nodeType": "YulLiteral",
																		"src": "991:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:19",
																			"nodeType": "YulTypedName",
																			"src": "981:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:19",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:19"
																				},
																				"nativeSrc": "1036:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:19",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:19"
																		},
																		"nativeSrc": "1016:52:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:19",
														"nodeType": "YulTypedName",
														"src": "793:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:19",
														"nodeType": "YulTypedName",
														"src": "804:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:19",
														"nodeType": "YulTypedName",
														"src": "816:6:19",
														"type": ""
													}
												],
												"src": "758:327:19"
											},
											{
												"body": {
													"nativeSrc": "1133:48:19",
													"nodeType": "YulBlock",
													"src": "1133:48:19",
													"statements": [
														{
															"nativeSrc": "1143:32:19",
															"nodeType": "YulAssignment",
															"src": "1143:32:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:19"
																		},
																		"nativeSrc": "1161:13:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:19"
																},
																"nativeSrc": "1154:21:19",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:19",
														"nodeType": "YulTypedName",
														"src": "1115:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:19",
														"nodeType": "YulTypedName",
														"src": "1125:7:19",
														"type": ""
													}
												],
												"src": "1091:90:19"
											},
											{
												"body": {
													"nativeSrc": "1246:50:19",
													"nodeType": "YulBlock",
													"src": "1246:50:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:19",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:19"
																		},
																		"nativeSrc": "1268:21:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:19"
																},
																"nativeSrc": "1256:34:19",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:19"
															},
															"nativeSrc": "1256:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:19"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:19",
														"nodeType": "YulTypedName",
														"src": "1234:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:19",
														"nodeType": "YulTypedName",
														"src": "1241:3:19",
														"type": ""
													}
												],
												"src": "1187:109:19"
											},
											{
												"body": {
													"nativeSrc": "1394:118:19",
													"nodeType": "YulBlock",
													"src": "1394:118:19",
													"statements": [
														{
															"nativeSrc": "1404:26:19",
															"nodeType": "YulAssignment",
															"src": "1404:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:19"
																},
																"nativeSrc": "1412:18:19",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:19",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:19"
																		},
																		"nativeSrc": "1487:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:19",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:19"
																},
																"nativeSrc": "1440:65:19",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:19"
															},
															"nativeSrc": "1440:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:19",
														"nodeType": "YulTypedName",
														"src": "1366:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:19",
														"nodeType": "YulTypedName",
														"src": "1378:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:19",
														"nodeType": "YulTypedName",
														"src": "1389:4:19",
														"type": ""
													}
												],
												"src": "1302:210:19"
											},
											{
												"body": {
													"nativeSrc": "1563:32:19",
													"nodeType": "YulBlock",
													"src": "1563:32:19",
													"statements": [
														{
															"nativeSrc": "1573:16:19",
															"nodeType": "YulAssignment",
															"src": "1573:16:19",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:19",
																"nodeType": "YulIdentifier",
																"src": "1584:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1518:77:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:19",
														"nodeType": "YulTypedName",
														"src": "1545:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:19",
														"nodeType": "YulTypedName",
														"src": "1555:7:19",
														"type": ""
													}
												],
												"src": "1518:77:19"
											},
											{
												"body": {
													"nativeSrc": "1666:53:19",
													"nodeType": "YulBlock",
													"src": "1666:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1683:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1683:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1706:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1706:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1688:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "1688:17:19"
																		},
																		"nativeSrc": "1688:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1688:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1676:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1676:6:19"
																},
																"nativeSrc": "1676:37:19",
																"nodeType": "YulFunctionCall",
																"src": "1676:37:19"
															},
															"nativeSrc": "1676:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "1676:37:19"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1601:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1654:5:19",
														"nodeType": "YulTypedName",
														"src": "1654:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1661:3:19",
														"nodeType": "YulTypedName",
														"src": "1661:3:19",
														"type": ""
													}
												],
												"src": "1601:118:19"
											},
											{
												"body": {
													"nativeSrc": "1823:124:19",
													"nodeType": "YulBlock",
													"src": "1823:124:19",
													"statements": [
														{
															"nativeSrc": "1833:26:19",
															"nodeType": "YulAssignment",
															"src": "1833:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1845:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "1845:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1856:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1856:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1841:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1841:3:19"
																},
																"nativeSrc": "1841:18:19",
																"nodeType": "YulFunctionCall",
																"src": "1841:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1833:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "1833:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1913:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1913:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1926:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "1926:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1937:1:19",
																				"nodeType": "YulLiteral",
																				"src": "1937:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1922:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1922:3:19"
																		},
																		"nativeSrc": "1922:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1922:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1869:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "1869:43:19"
																},
																"nativeSrc": "1869:71:19",
																"nodeType": "YulFunctionCall",
																"src": "1869:71:19"
															},
															"nativeSrc": "1869:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "1869:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1725:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1795:9:19",
														"nodeType": "YulTypedName",
														"src": "1795:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1807:6:19",
														"nodeType": "YulTypedName",
														"src": "1807:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1818:4:19",
														"nodeType": "YulTypedName",
														"src": "1818:4:19",
														"type": ""
													}
												],
												"src": "1725:222:19"
											},
											{
												"body": {
													"nativeSrc": "2012:40:19",
													"nodeType": "YulBlock",
													"src": "2012:40:19",
													"statements": [
														{
															"nativeSrc": "2023:22:19",
															"nodeType": "YulAssignment",
															"src": "2023:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2039:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2039:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2033:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "2033:5:19"
																},
																"nativeSrc": "2033:12:19",
																"nodeType": "YulFunctionCall",
																"src": "2033:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2023:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2023:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1953:99:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1995:5:19",
														"nodeType": "YulTypedName",
														"src": "1995:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2005:6:19",
														"nodeType": "YulTypedName",
														"src": "2005:6:19",
														"type": ""
													}
												],
												"src": "1953:99:19"
											},
											{
												"body": {
													"nativeSrc": "2154:73:19",
													"nodeType": "YulBlock",
													"src": "2154:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2171:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2164:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2164:6:19"
																},
																"nativeSrc": "2164:19:19",
																"nodeType": "YulFunctionCall",
																"src": "2164:19:19"
															},
															"nativeSrc": "2164:19:19",
															"nodeType": "YulExpressionStatement",
															"src": "2164:19:19"
														},
														{
															"nativeSrc": "2192:29:19",
															"nodeType": "YulAssignment",
															"src": "2192:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2211:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2211:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2216:4:19",
																		"nodeType": "YulLiteral",
																		"src": "2216:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2207:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2207:3:19"
																},
																"nativeSrc": "2207:14:19",
																"nodeType": "YulFunctionCall",
																"src": "2207:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2192:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "2192:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2058:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2126:3:19",
														"nodeType": "YulTypedName",
														"src": "2126:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2131:6:19",
														"nodeType": "YulTypedName",
														"src": "2131:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2142:11:19",
														"nodeType": "YulTypedName",
														"src": "2142:11:19",
														"type": ""
													}
												],
												"src": "2058:169:19"
											},
											{
												"body": {
													"nativeSrc": "2295:77:19",
													"nodeType": "YulBlock",
													"src": "2295:77:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2312:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2312:3:19"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2317:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2317:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2322:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2322:6:19"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2306:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "2306:5:19"
																},
																"nativeSrc": "2306:23:19",
																"nodeType": "YulFunctionCall",
																"src": "2306:23:19"
															},
															"nativeSrc": "2306:23:19",
															"nodeType": "YulExpressionStatement",
															"src": "2306:23:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2349:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "2349:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2354:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2354:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2345:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2345:3:19"
																		},
																		"nativeSrc": "2345:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2345:16:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2363:1:19",
																		"nodeType": "YulLiteral",
																		"src": "2363:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2338:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2338:6:19"
																},
																"nativeSrc": "2338:27:19",
																"nodeType": "YulFunctionCall",
																"src": "2338:27:19"
															},
															"nativeSrc": "2338:27:19",
															"nodeType": "YulExpressionStatement",
															"src": "2338:27:19"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2233:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2277:3:19",
														"nodeType": "YulTypedName",
														"src": "2277:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2282:3:19",
														"nodeType": "YulTypedName",
														"src": "2282:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2287:6:19",
														"nodeType": "YulTypedName",
														"src": "2287:6:19",
														"type": ""
													}
												],
												"src": "2233:139:19"
											},
											{
												"body": {
													"nativeSrc": "2426:54:19",
													"nodeType": "YulBlock",
													"src": "2426:54:19",
													"statements": [
														{
															"nativeSrc": "2436:38:19",
															"nodeType": "YulAssignment",
															"src": "2436:38:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2454:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2454:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2461:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2461:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2450:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2450:3:19"
																		},
																		"nativeSrc": "2450:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2450:14:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2470:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2470:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2466:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2466:3:19"
																		},
																		"nativeSrc": "2466:7:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2466:7:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2446:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2446:3:19"
																},
																"nativeSrc": "2446:28:19",
																"nodeType": "YulFunctionCall",
																"src": "2446:28:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2436:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2436:6:19"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2378:102:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2409:5:19",
														"nodeType": "YulTypedName",
														"src": "2409:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2419:6:19",
														"nodeType": "YulTypedName",
														"src": "2419:6:19",
														"type": ""
													}
												],
												"src": "2378:102:19"
											},
											{
												"body": {
													"nativeSrc": "2578:285:19",
													"nodeType": "YulBlock",
													"src": "2578:285:19",
													"statements": [
														{
															"nativeSrc": "2588:53:19",
															"nodeType": "YulVariableDeclaration",
															"src": "2588:53:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2635:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2635:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2602:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "2602:32:19"
																},
																"nativeSrc": "2602:39:19",
																"nodeType": "YulFunctionCall",
																"src": "2602:39:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2592:6:19",
																	"nodeType": "YulTypedName",
																	"src": "2592:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2650:78:19",
															"nodeType": "YulAssignment",
															"src": "2650:78:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2716:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2716:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2721:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2721:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2657:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "2657:58:19"
																},
																"nativeSrc": "2657:71:19",
																"nodeType": "YulFunctionCall",
																"src": "2657:71:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2650:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2650:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2776:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2776:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2783:4:19",
																				"nodeType": "YulLiteral",
																				"src": "2783:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2772:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2772:3:19"
																		},
																		"nativeSrc": "2772:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2772:16:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2790:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2790:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2795:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2795:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2737:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "2737:34:19"
																},
																"nativeSrc": "2737:65:19",
																"nodeType": "YulFunctionCall",
																"src": "2737:65:19"
															},
															"nativeSrc": "2737:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "2737:65:19"
														},
														{
															"nativeSrc": "2811:46:19",
															"nodeType": "YulAssignment",
															"src": "2811:46:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2822:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2822:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2849:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2849:6:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2827:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "2827:21:19"
																		},
																		"nativeSrc": "2827:29:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2827:29:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2818:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2818:3:19"
																},
																"nativeSrc": "2818:39:19",
																"nodeType": "YulFunctionCall",
																"src": "2818:39:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2811:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2811:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2486:377:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2559:5:19",
														"nodeType": "YulTypedName",
														"src": "2559:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2566:3:19",
														"nodeType": "YulTypedName",
														"src": "2566:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2574:3:19",
														"nodeType": "YulTypedName",
														"src": "2574:3:19",
														"type": ""
													}
												],
												"src": "2486:377:19"
											},
											{
												"body": {
													"nativeSrc": "2987:195:19",
													"nodeType": "YulBlock",
													"src": "2987:195:19",
													"statements": [
														{
															"nativeSrc": "2997:26:19",
															"nodeType": "YulAssignment",
															"src": "2997:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3009:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "3009:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3020:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3020:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3005:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3005:3:19"
																},
																"nativeSrc": "3005:18:19",
																"nodeType": "YulFunctionCall",
																"src": "3005:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2997:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "2997:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3044:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "3044:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3055:1:19",
																				"nodeType": "YulLiteral",
																				"src": "3055:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3040:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3040:3:19"
																		},
																		"nativeSrc": "3040:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3040:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3063:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "3063:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3069:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "3069:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3059:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3059:3:19"
																		},
																		"nativeSrc": "3059:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3059:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3033:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3033:6:19"
																},
																"nativeSrc": "3033:47:19",
																"nodeType": "YulFunctionCall",
																"src": "3033:47:19"
															},
															"nativeSrc": "3033:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "3033:47:19"
														},
														{
															"nativeSrc": "3089:86:19",
															"nodeType": "YulAssignment",
															"src": "3089:86:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3161:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3161:6:19"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "3170:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "3170:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3097:63:19",
																	"nodeType": "YulIdentifier",
																	"src": "3097:63:19"
																},
																"nativeSrc": "3097:78:19",
																"nodeType": "YulFunctionCall",
																"src": "3097:78:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3089:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "3089:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2869:313:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2959:9:19",
														"nodeType": "YulTypedName",
														"src": "2959:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2971:6:19",
														"nodeType": "YulTypedName",
														"src": "2971:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2982:4:19",
														"nodeType": "YulTypedName",
														"src": "2982:4:19",
														"type": ""
													}
												],
												"src": "2869:313:19"
											},
											{
												"body": {
													"nativeSrc": "3231:79:19",
													"nodeType": "YulBlock",
													"src": "3231:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "3288:16:19",
																"nodeType": "YulBlock",
																"src": "3288:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3297:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3297:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3300:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3300:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3290:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "3290:6:19"
																			},
																			"nativeSrc": "3290:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3290:12:19"
																		},
																		"nativeSrc": "3290:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3290:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3254:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "3254:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3279:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "3279:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3261:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "3261:17:19"
																				},
																				"nativeSrc": "3261:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3261:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3251:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "3251:2:19"
																		},
																		"nativeSrc": "3251:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3251:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3244:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3244:6:19"
																},
																"nativeSrc": "3244:43:19",
																"nodeType": "YulFunctionCall",
																"src": "3244:43:19"
															},
															"nativeSrc": "3241:63:19",
															"nodeType": "YulIf",
															"src": "3241:63:19"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3188:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3224:5:19",
														"nodeType": "YulTypedName",
														"src": "3224:5:19",
														"type": ""
													}
												],
												"src": "3188:122:19"
											},
											{
												"body": {
													"nativeSrc": "3368:87:19",
													"nodeType": "YulBlock",
													"src": "3368:87:19",
													"statements": [
														{
															"nativeSrc": "3378:29:19",
															"nodeType": "YulAssignment",
															"src": "3378:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3400:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3400:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3387:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "3387:12:19"
																},
																"nativeSrc": "3387:20:19",
																"nodeType": "YulFunctionCall",
																"src": "3387:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3378:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "3378:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3443:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3443:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3416:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "3416:26:19"
																},
																"nativeSrc": "3416:33:19",
																"nodeType": "YulFunctionCall",
																"src": "3416:33:19"
															},
															"nativeSrc": "3416:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "3416:33:19"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3316:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3346:6:19",
														"nodeType": "YulTypedName",
														"src": "3346:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3354:3:19",
														"nodeType": "YulTypedName",
														"src": "3354:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3362:5:19",
														"nodeType": "YulTypedName",
														"src": "3362:5:19",
														"type": ""
													}
												],
												"src": "3316:139:19"
											},
											{
												"body": {
													"nativeSrc": "3527:263:19",
													"nodeType": "YulBlock",
													"src": "3527:263:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "3573:83:19",
																"nodeType": "YulBlock",
																"src": "3573:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3575:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "3575:77:19"
																			},
																			"nativeSrc": "3575:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3575:79:19"
																		},
																		"nativeSrc": "3575:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3575:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3548:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "3548:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3557:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "3557:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3544:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3544:3:19"
																		},
																		"nativeSrc": "3544:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3544:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3569:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3569:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3540:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3540:3:19"
																},
																"nativeSrc": "3540:32:19",
																"nodeType": "YulFunctionCall",
																"src": "3540:32:19"
															},
															"nativeSrc": "3537:119:19",
															"nodeType": "YulIf",
															"src": "3537:119:19"
														},
														{
															"nativeSrc": "3666:117:19",
															"nodeType": "YulBlock",
															"src": "3666:117:19",
															"statements": [
																{
																	"nativeSrc": "3681:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3681:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3695:1:19",
																		"nodeType": "YulLiteral",
																		"src": "3695:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3685:6:19",
																			"nodeType": "YulTypedName",
																			"src": "3685:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3710:63:19",
																	"nodeType": "YulAssignment",
																	"src": "3710:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3745:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "3745:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3756:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "3756:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3741:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "3741:3:19"
																				},
																				"nativeSrc": "3741:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3741:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3765:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "3765:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3720:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "3720:20:19"
																		},
																		"nativeSrc": "3720:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3720:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3710:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "3710:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3461:329:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3497:9:19",
														"nodeType": "YulTypedName",
														"src": "3497:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3508:7:19",
														"nodeType": "YulTypedName",
														"src": "3508:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3520:6:19",
														"nodeType": "YulTypedName",
														"src": "3520:6:19",
														"type": ""
													}
												],
												"src": "3461:329:19"
											},
											{
												"body": {
													"nativeSrc": "3841:81:19",
													"nodeType": "YulBlock",
													"src": "3841:81:19",
													"statements": [
														{
															"nativeSrc": "3851:65:19",
															"nodeType": "YulAssignment",
															"src": "3851:65:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3866:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3866:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3873:42:19",
																		"nodeType": "YulLiteral",
																		"src": "3873:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3862:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3862:3:19"
																},
																"nativeSrc": "3862:54:19",
																"nodeType": "YulFunctionCall",
																"src": "3862:54:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3851:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "3851:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3796:126:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3823:5:19",
														"nodeType": "YulTypedName",
														"src": "3823:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3833:7:19",
														"nodeType": "YulTypedName",
														"src": "3833:7:19",
														"type": ""
													}
												],
												"src": "3796:126:19"
											},
											{
												"body": {
													"nativeSrc": "3973:51:19",
													"nodeType": "YulBlock",
													"src": "3973:51:19",
													"statements": [
														{
															"nativeSrc": "3983:35:19",
															"nodeType": "YulAssignment",
															"src": "3983:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4012:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "4012:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3994:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "3994:17:19"
																},
																"nativeSrc": "3994:24:19",
																"nodeType": "YulFunctionCall",
																"src": "3994:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3983:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "3983:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3928:96:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3955:5:19",
														"nodeType": "YulTypedName",
														"src": "3955:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3965:7:19",
														"nodeType": "YulTypedName",
														"src": "3965:7:19",
														"type": ""
													}
												],
												"src": "3928:96:19"
											},
											{
												"body": {
													"nativeSrc": "4095:53:19",
													"nodeType": "YulBlock",
													"src": "4095:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4112:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "4112:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4135:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "4135:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4117:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "4117:17:19"
																		},
																		"nativeSrc": "4117:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4117:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4105:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4105:6:19"
																},
																"nativeSrc": "4105:37:19",
																"nodeType": "YulFunctionCall",
																"src": "4105:37:19"
															},
															"nativeSrc": "4105:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "4105:37:19"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4030:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4083:5:19",
														"nodeType": "YulTypedName",
														"src": "4083:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4090:3:19",
														"nodeType": "YulTypedName",
														"src": "4090:3:19",
														"type": ""
													}
												],
												"src": "4030:118:19"
											},
											{
												"body": {
													"nativeSrc": "4252:124:19",
													"nodeType": "YulBlock",
													"src": "4252:124:19",
													"statements": [
														{
															"nativeSrc": "4262:26:19",
															"nodeType": "YulAssignment",
															"src": "4262:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4274:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "4274:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4285:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4285:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4270:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4270:3:19"
																},
																"nativeSrc": "4270:18:19",
																"nodeType": "YulFunctionCall",
																"src": "4270:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4262:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "4262:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4342:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4342:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4355:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4355:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4366:1:19",
																				"nodeType": "YulLiteral",
																				"src": "4366:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4351:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4351:3:19"
																		},
																		"nativeSrc": "4351:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4351:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4298:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "4298:43:19"
																},
																"nativeSrc": "4298:71:19",
																"nodeType": "YulFunctionCall",
																"src": "4298:71:19"
															},
															"nativeSrc": "4298:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "4298:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4154:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4224:9:19",
														"nodeType": "YulTypedName",
														"src": "4224:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4236:6:19",
														"nodeType": "YulTypedName",
														"src": "4236:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4247:4:19",
														"nodeType": "YulTypedName",
														"src": "4247:4:19",
														"type": ""
													}
												],
												"src": "4154:222:19"
											},
											{
												"body": {
													"nativeSrc": "4425:79:19",
													"nodeType": "YulBlock",
													"src": "4425:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "4482:16:19",
																"nodeType": "YulBlock",
																"src": "4482:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4491:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4491:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4494:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4494:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4484:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "4484:6:19"
																			},
																			"nativeSrc": "4484:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4484:12:19"
																		},
																		"nativeSrc": "4484:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4484:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4448:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "4448:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4473:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "4473:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4455:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "4455:17:19"
																				},
																				"nativeSrc": "4455:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4455:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4445:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "4445:2:19"
																		},
																		"nativeSrc": "4445:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4445:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4438:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4438:6:19"
																},
																"nativeSrc": "4438:43:19",
																"nodeType": "YulFunctionCall",
																"src": "4438:43:19"
															},
															"nativeSrc": "4435:63:19",
															"nodeType": "YulIf",
															"src": "4435:63:19"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4382:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4418:5:19",
														"nodeType": "YulTypedName",
														"src": "4418:5:19",
														"type": ""
													}
												],
												"src": "4382:122:19"
											},
											{
												"body": {
													"nativeSrc": "4562:87:19",
													"nodeType": "YulBlock",
													"src": "4562:87:19",
													"statements": [
														{
															"nativeSrc": "4572:29:19",
															"nodeType": "YulAssignment",
															"src": "4572:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4594:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4594:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4581:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "4581:12:19"
																},
																"nativeSrc": "4581:20:19",
																"nodeType": "YulFunctionCall",
																"src": "4581:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4572:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "4572:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4637:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "4637:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4610:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "4610:26:19"
																},
																"nativeSrc": "4610:33:19",
																"nodeType": "YulFunctionCall",
																"src": "4610:33:19"
															},
															"nativeSrc": "4610:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "4610:33:19"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4510:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4540:6:19",
														"nodeType": "YulTypedName",
														"src": "4540:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4548:3:19",
														"nodeType": "YulTypedName",
														"src": "4548:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4556:5:19",
														"nodeType": "YulTypedName",
														"src": "4556:5:19",
														"type": ""
													}
												],
												"src": "4510:139:19"
											},
											{
												"body": {
													"nativeSrc": "4738:391:19",
													"nodeType": "YulBlock",
													"src": "4738:391:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "4784:83:19",
																"nodeType": "YulBlock",
																"src": "4784:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4786:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "4786:77:19"
																			},
																			"nativeSrc": "4786:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4786:79:19"
																		},
																		"nativeSrc": "4786:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4786:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4759:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4759:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4768:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4768:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4755:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4755:3:19"
																		},
																		"nativeSrc": "4755:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4755:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4780:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4780:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4751:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4751:3:19"
																},
																"nativeSrc": "4751:32:19",
																"nodeType": "YulFunctionCall",
																"src": "4751:32:19"
															},
															"nativeSrc": "4748:119:19",
															"nodeType": "YulIf",
															"src": "4748:119:19"
														},
														{
															"nativeSrc": "4877:117:19",
															"nodeType": "YulBlock",
															"src": "4877:117:19",
															"statements": [
																{
																	"nativeSrc": "4892:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4892:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4906:1:19",
																		"nodeType": "YulLiteral",
																		"src": "4906:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4896:6:19",
																			"nodeType": "YulTypedName",
																			"src": "4896:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4921:63:19",
																	"nodeType": "YulAssignment",
																	"src": "4921:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4956:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "4956:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4967:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "4967:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4952:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4952:3:19"
																				},
																				"nativeSrc": "4952:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4952:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4976:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4976:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4931:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "4931:20:19"
																		},
																		"nativeSrc": "4931:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4931:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4921:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "4921:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5004:118:19",
															"nodeType": "YulBlock",
															"src": "5004:118:19",
															"statements": [
																{
																	"nativeSrc": "5019:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5019:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5033:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5033:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5023:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5023:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5049:63:19",
																	"nodeType": "YulAssignment",
																	"src": "5049:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5084:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5084:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5095:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5095:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5080:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5080:3:19"
																				},
																				"nativeSrc": "5080:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5080:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5104:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5104:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5059:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "5059:20:19"
																		},
																		"nativeSrc": "5059:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5059:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5049:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5049:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4655:474:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4700:9:19",
														"nodeType": "YulTypedName",
														"src": "4700:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4711:7:19",
														"nodeType": "YulTypedName",
														"src": "4711:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4723:6:19",
														"nodeType": "YulTypedName",
														"src": "4723:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4731:6:19",
														"nodeType": "YulTypedName",
														"src": "4731:6:19",
														"type": ""
													}
												],
												"src": "4655:474:19"
											},
											{
												"body": {
													"nativeSrc": "5235:519:19",
													"nodeType": "YulBlock",
													"src": "5235:519:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "5281:83:19",
																"nodeType": "YulBlock",
																"src": "5281:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5283:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "5283:77:19"
																			},
																			"nativeSrc": "5283:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5283:79:19"
																		},
																		"nativeSrc": "5283:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "5283:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5256:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5256:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5265:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "5265:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5252:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5252:3:19"
																		},
																		"nativeSrc": "5252:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5252:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5277:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5277:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5248:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5248:3:19"
																},
																"nativeSrc": "5248:32:19",
																"nodeType": "YulFunctionCall",
																"src": "5248:32:19"
															},
															"nativeSrc": "5245:119:19",
															"nodeType": "YulIf",
															"src": "5245:119:19"
														},
														{
															"nativeSrc": "5374:117:19",
															"nodeType": "YulBlock",
															"src": "5374:117:19",
															"statements": [
																{
																	"nativeSrc": "5389:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5389:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5403:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5403:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5393:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5393:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5418:63:19",
																	"nodeType": "YulAssignment",
																	"src": "5418:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5453:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5453:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5464:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5464:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5449:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5449:3:19"
																				},
																				"nativeSrc": "5449:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5449:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5473:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5473:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5428:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "5428:20:19"
																		},
																		"nativeSrc": "5428:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5428:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5418:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5418:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5501:118:19",
															"nodeType": "YulBlock",
															"src": "5501:118:19",
															"statements": [
																{
																	"nativeSrc": "5516:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5516:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5530:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5530:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5520:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5520:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5546:63:19",
																	"nodeType": "YulAssignment",
																	"src": "5546:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5581:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5581:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5592:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5592:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5577:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5577:3:19"
																				},
																				"nativeSrc": "5577:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5577:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5601:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5601:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5556:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "5556:20:19"
																		},
																		"nativeSrc": "5556:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5556:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5546:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5546:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5629:118:19",
															"nodeType": "YulBlock",
															"src": "5629:118:19",
															"statements": [
																{
																	"nativeSrc": "5644:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5644:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5658:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5658:2:19",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5648:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5648:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5674:63:19",
																	"nodeType": "YulAssignment",
																	"src": "5674:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5709:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5709:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5720:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5720:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5705:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5705:3:19"
																				},
																				"nativeSrc": "5705:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5705:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5729:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5729:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5684:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "5684:20:19"
																		},
																		"nativeSrc": "5684:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5684:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5674:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5674:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5135:619:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5189:9:19",
														"nodeType": "YulTypedName",
														"src": "5189:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5200:7:19",
														"nodeType": "YulTypedName",
														"src": "5200:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5212:6:19",
														"nodeType": "YulTypedName",
														"src": "5212:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5220:6:19",
														"nodeType": "YulTypedName",
														"src": "5220:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5228:6:19",
														"nodeType": "YulTypedName",
														"src": "5228:6:19",
														"type": ""
													}
												],
												"src": "5135:619:19"
											},
											{
												"body": {
													"nativeSrc": "5826:263:19",
													"nodeType": "YulBlock",
													"src": "5826:263:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "5872:83:19",
																"nodeType": "YulBlock",
																"src": "5872:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5874:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "5874:77:19"
																			},
																			"nativeSrc": "5874:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5874:79:19"
																		},
																		"nativeSrc": "5874:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "5874:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5847:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5847:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5856:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "5856:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5843:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5843:3:19"
																		},
																		"nativeSrc": "5843:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5843:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5868:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5868:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5839:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5839:3:19"
																},
																"nativeSrc": "5839:32:19",
																"nodeType": "YulFunctionCall",
																"src": "5839:32:19"
															},
															"nativeSrc": "5836:119:19",
															"nodeType": "YulIf",
															"src": "5836:119:19"
														},
														{
															"nativeSrc": "5965:117:19",
															"nodeType": "YulBlock",
															"src": "5965:117:19",
															"statements": [
																{
																	"nativeSrc": "5980:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5980:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5994:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5994:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5984:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5984:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6009:63:19",
																	"nodeType": "YulAssignment",
																	"src": "6009:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6044:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "6044:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6055:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "6055:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6040:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "6040:3:19"
																				},
																				"nativeSrc": "6040:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "6040:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6064:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "6064:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6019:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "6019:20:19"
																		},
																		"nativeSrc": "6019:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6019:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6009:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "6009:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5760:329:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5796:9:19",
														"nodeType": "YulTypedName",
														"src": "5796:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5807:7:19",
														"nodeType": "YulTypedName",
														"src": "5807:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5819:6:19",
														"nodeType": "YulTypedName",
														"src": "5819:6:19",
														"type": ""
													}
												],
												"src": "5760:329:19"
											},
											{
												"body": {
													"nativeSrc": "6135:76:19",
													"nodeType": "YulBlock",
													"src": "6135:76:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "6189:16:19",
																"nodeType": "YulBlock",
																"src": "6189:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6198:1:19",
																					"nodeType": "YulLiteral",
																					"src": "6198:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6201:1:19",
																					"nodeType": "YulLiteral",
																					"src": "6201:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6191:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6191:6:19"
																			},
																			"nativeSrc": "6191:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "6191:12:19"
																		},
																		"nativeSrc": "6191:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "6191:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6158:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "6158:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6180:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "6180:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6165:14:19",
																					"nodeType": "YulIdentifier",
																					"src": "6165:14:19"
																				},
																				"nativeSrc": "6165:21:19",
																				"nodeType": "YulFunctionCall",
																				"src": "6165:21:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6155:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "6155:2:19"
																		},
																		"nativeSrc": "6155:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6155:32:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6148:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6148:6:19"
																},
																"nativeSrc": "6148:40:19",
																"nodeType": "YulFunctionCall",
																"src": "6148:40:19"
															},
															"nativeSrc": "6145:60:19",
															"nodeType": "YulIf",
															"src": "6145:60:19"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6095:116:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6128:5:19",
														"nodeType": "YulTypedName",
														"src": "6128:5:19",
														"type": ""
													}
												],
												"src": "6095:116:19"
											},
											{
												"body": {
													"nativeSrc": "6266:84:19",
													"nodeType": "YulBlock",
													"src": "6266:84:19",
													"statements": [
														{
															"nativeSrc": "6276:29:19",
															"nodeType": "YulAssignment",
															"src": "6276:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6298:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6298:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6285:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "6285:12:19"
																},
																"nativeSrc": "6285:20:19",
																"nodeType": "YulFunctionCall",
																"src": "6285:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6276:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "6276:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6338:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "6338:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6314:23:19",
																	"nodeType": "YulIdentifier",
																	"src": "6314:23:19"
																},
																"nativeSrc": "6314:30:19",
																"nodeType": "YulFunctionCall",
																"src": "6314:30:19"
															},
															"nativeSrc": "6314:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "6314:30:19"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6217:133:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6244:6:19",
														"nodeType": "YulTypedName",
														"src": "6244:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6252:3:19",
														"nodeType": "YulTypedName",
														"src": "6252:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6260:5:19",
														"nodeType": "YulTypedName",
														"src": "6260:5:19",
														"type": ""
													}
												],
												"src": "6217:133:19"
											},
											{
												"body": {
													"nativeSrc": "6436:388:19",
													"nodeType": "YulBlock",
													"src": "6436:388:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "6482:83:19",
																"nodeType": "YulBlock",
																"src": "6482:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6484:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "6484:77:19"
																			},
																			"nativeSrc": "6484:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "6484:79:19"
																		},
																		"nativeSrc": "6484:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "6484:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6457:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "6457:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6466:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6466:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6453:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6453:3:19"
																		},
																		"nativeSrc": "6453:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6453:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6478:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6478:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6449:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6449:3:19"
																},
																"nativeSrc": "6449:32:19",
																"nodeType": "YulFunctionCall",
																"src": "6449:32:19"
															},
															"nativeSrc": "6446:119:19",
															"nodeType": "YulIf",
															"src": "6446:119:19"
														},
														{
															"nativeSrc": "6575:117:19",
															"nodeType": "YulBlock",
															"src": "6575:117:19",
															"statements": [
																{
																	"nativeSrc": "6590:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6590:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6604:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6604:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6594:6:19",
																			"nodeType": "YulTypedName",
																			"src": "6594:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6619:63:19",
																	"nodeType": "YulAssignment",
																	"src": "6619:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6654:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "6654:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6665:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "6665:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6650:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "6650:3:19"
																				},
																				"nativeSrc": "6650:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "6650:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6674:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "6674:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6629:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "6629:20:19"
																		},
																		"nativeSrc": "6629:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6629:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6619:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "6619:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6702:115:19",
															"nodeType": "YulBlock",
															"src": "6702:115:19",
															"statements": [
																{
																	"nativeSrc": "6717:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6717:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6731:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6731:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6721:6:19",
																			"nodeType": "YulTypedName",
																			"src": "6721:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6747:60:19",
																	"nodeType": "YulAssignment",
																	"src": "6747:60:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6779:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "6779:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6790:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "6790:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6775:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "6775:3:19"
																				},
																				"nativeSrc": "6775:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "6775:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6799:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "6799:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6757:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "6757:17:19"
																		},
																		"nativeSrc": "6757:50:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6757:50:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6747:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "6747:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6356:468:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6398:9:19",
														"nodeType": "YulTypedName",
														"src": "6398:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6409:7:19",
														"nodeType": "YulTypedName",
														"src": "6409:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6421:6:19",
														"nodeType": "YulTypedName",
														"src": "6421:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6429:6:19",
														"nodeType": "YulTypedName",
														"src": "6429:6:19",
														"type": ""
													}
												],
												"src": "6356:468:19"
											},
											{
												"body": {
													"nativeSrc": "6919:28:19",
													"nodeType": "YulBlock",
													"src": "6919:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6936:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6936:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6939:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6939:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6929:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6929:6:19"
																},
																"nativeSrc": "6929:12:19",
																"nodeType": "YulFunctionCall",
																"src": "6929:12:19"
															},
															"nativeSrc": "6929:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "6929:12:19"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6830:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "6830:117:19"
											},
											{
												"body": {
													"nativeSrc": "7042:28:19",
													"nodeType": "YulBlock",
													"src": "7042:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7059:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7059:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7062:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7062:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7052:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7052:6:19"
																},
																"nativeSrc": "7052:12:19",
																"nodeType": "YulFunctionCall",
																"src": "7052:12:19"
															},
															"nativeSrc": "7052:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "7052:12:19"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "6953:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "6953:117:19"
											},
											{
												"body": {
													"nativeSrc": "7104:152:19",
													"nodeType": "YulBlock",
													"src": "7104:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7121:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7121:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7124:77:19",
																		"nodeType": "YulLiteral",
																		"src": "7124:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7114:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7114:6:19"
																},
																"nativeSrc": "7114:88:19",
																"nodeType": "YulFunctionCall",
																"src": "7114:88:19"
															},
															"nativeSrc": "7114:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "7114:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7218:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7218:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7221:4:19",
																		"nodeType": "YulLiteral",
																		"src": "7221:4:19",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7211:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7211:6:19"
																},
																"nativeSrc": "7211:15:19",
																"nodeType": "YulFunctionCall",
																"src": "7211:15:19"
															},
															"nativeSrc": "7211:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "7211:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7242:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7242:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7245:4:19",
																		"nodeType": "YulLiteral",
																		"src": "7245:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7235:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7235:6:19"
																},
																"nativeSrc": "7235:15:19",
																"nodeType": "YulFunctionCall",
																"src": "7235:15:19"
															},
															"nativeSrc": "7235:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "7235:15:19"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7076:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "7076:180:19"
											},
											{
												"body": {
													"nativeSrc": "7305:238:19",
													"nodeType": "YulBlock",
													"src": "7305:238:19",
													"statements": [
														{
															"nativeSrc": "7315:58:19",
															"nodeType": "YulVariableDeclaration",
															"src": "7315:58:19",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7337:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7337:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7367:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "7367:4:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7345:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "7345:21:19"
																		},
																		"nativeSrc": "7345:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7345:27:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7333:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7333:3:19"
																},
																"nativeSrc": "7333:40:19",
																"nodeType": "YulFunctionCall",
																"src": "7333:40:19"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7319:10:19",
																	"nodeType": "YulTypedName",
																	"src": "7319:10:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7484:22:19",
																"nodeType": "YulBlock",
																"src": "7484:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7486:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "7486:16:19"
																			},
																			"nativeSrc": "7486:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7486:18:19"
																		},
																		"nativeSrc": "7486:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7486:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7427:10:19",
																				"nodeType": "YulIdentifier",
																				"src": "7427:10:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7439:18:19",
																				"nodeType": "YulLiteral",
																				"src": "7439:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7424:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "7424:2:19"
																		},
																		"nativeSrc": "7424:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7424:34:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7463:10:19",
																				"nodeType": "YulIdentifier",
																				"src": "7463:10:19"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7475:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "7475:6:19"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7460:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "7460:2:19"
																		},
																		"nativeSrc": "7460:22:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7460:22:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7421:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "7421:2:19"
																},
																"nativeSrc": "7421:62:19",
																"nodeType": "YulFunctionCall",
																"src": "7421:62:19"
															},
															"nativeSrc": "7418:88:19",
															"nodeType": "YulIf",
															"src": "7418:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7522:2:19",
																		"nodeType": "YulLiteral",
																		"src": "7522:2:19",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7526:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "7526:10:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7515:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7515:6:19"
																},
																"nativeSrc": "7515:22:19",
																"nodeType": "YulFunctionCall",
																"src": "7515:22:19"
															},
															"nativeSrc": "7515:22:19",
															"nodeType": "YulExpressionStatement",
															"src": "7515:22:19"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7262:281:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7291:6:19",
														"nodeType": "YulTypedName",
														"src": "7291:6:19",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7299:4:19",
														"nodeType": "YulTypedName",
														"src": "7299:4:19",
														"type": ""
													}
												],
												"src": "7262:281:19"
											},
											{
												"body": {
													"nativeSrc": "7590:88:19",
													"nodeType": "YulBlock",
													"src": "7590:88:19",
													"statements": [
														{
															"nativeSrc": "7600:30:19",
															"nodeType": "YulAssignment",
															"src": "7600:30:19",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7610:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "7610:18:19"
																},
																"nativeSrc": "7610:20:19",
																"nodeType": "YulFunctionCall",
																"src": "7610:20:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7600:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7600:6:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7659:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7659:6:19"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7667:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "7667:4:19"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7639:19:19",
																	"nodeType": "YulIdentifier",
																	"src": "7639:19:19"
																},
																"nativeSrc": "7639:33:19",
																"nodeType": "YulFunctionCall",
																"src": "7639:33:19"
															},
															"nativeSrc": "7639:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "7639:33:19"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7549:129:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7574:4:19",
														"nodeType": "YulTypedName",
														"src": "7574:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7583:6:19",
														"nodeType": "YulTypedName",
														"src": "7583:6:19",
														"type": ""
													}
												],
												"src": "7549:129:19"
											},
											{
												"body": {
													"nativeSrc": "7750:241:19",
													"nodeType": "YulBlock",
													"src": "7750:241:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "7855:22:19",
																"nodeType": "YulBlock",
																"src": "7855:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7857:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "7857:16:19"
																			},
																			"nativeSrc": "7857:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7857:18:19"
																		},
																		"nativeSrc": "7857:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7857:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7827:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7827:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7835:18:19",
																		"nodeType": "YulLiteral",
																		"src": "7835:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7824:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "7824:2:19"
																},
																"nativeSrc": "7824:30:19",
																"nodeType": "YulFunctionCall",
																"src": "7824:30:19"
															},
															"nativeSrc": "7821:56:19",
															"nodeType": "YulIf",
															"src": "7821:56:19"
														},
														{
															"nativeSrc": "7887:37:19",
															"nodeType": "YulAssignment",
															"src": "7887:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7917:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7917:6:19"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "7895:21:19",
																	"nodeType": "YulIdentifier",
																	"src": "7895:21:19"
																},
																"nativeSrc": "7895:29:19",
																"nodeType": "YulFunctionCall",
																"src": "7895:29:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7887:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "7887:4:19"
																}
															]
														},
														{
															"nativeSrc": "7961:23:19",
															"nodeType": "YulAssignment",
															"src": "7961:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7973:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "7973:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7979:4:19",
																		"nodeType": "YulLiteral",
																		"src": "7979:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7969:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7969:3:19"
																},
																"nativeSrc": "7969:15:19",
																"nodeType": "YulFunctionCall",
																"src": "7969:15:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7961:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "7961:4:19"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7684:307:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7734:6:19",
														"nodeType": "YulTypedName",
														"src": "7734:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7745:4:19",
														"nodeType": "YulTypedName",
														"src": "7745:4:19",
														"type": ""
													}
												],
												"src": "7684:307:19"
											},
											{
												"body": {
													"nativeSrc": "8061:84:19",
													"nodeType": "YulBlock",
													"src": "8061:84:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8085:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8085:3:19"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8090:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8090:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8095:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8095:6:19"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8072:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "8072:12:19"
																},
																"nativeSrc": "8072:30:19",
																"nodeType": "YulFunctionCall",
																"src": "8072:30:19"
															},
															"nativeSrc": "8072:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "8072:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8122:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "8122:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8127:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "8127:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8118:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8118:3:19"
																		},
																		"nativeSrc": "8118:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8118:16:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8136:1:19",
																		"nodeType": "YulLiteral",
																		"src": "8136:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8111:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8111:6:19"
																},
																"nativeSrc": "8111:27:19",
																"nodeType": "YulFunctionCall",
																"src": "8111:27:19"
															},
															"nativeSrc": "8111:27:19",
															"nodeType": "YulExpressionStatement",
															"src": "8111:27:19"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7997:148:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8043:3:19",
														"nodeType": "YulTypedName",
														"src": "8043:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8048:3:19",
														"nodeType": "YulTypedName",
														"src": "8048:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8053:6:19",
														"nodeType": "YulTypedName",
														"src": "8053:6:19",
														"type": ""
													}
												],
												"src": "7997:148:19"
											},
											{
												"body": {
													"nativeSrc": "8234:340:19",
													"nodeType": "YulBlock",
													"src": "8234:340:19",
													"statements": [
														{
															"nativeSrc": "8244:74:19",
															"nodeType": "YulAssignment",
															"src": "8244:74:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8310:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "8310:6:19"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8269:40:19",
																			"nodeType": "YulIdentifier",
																			"src": "8269:40:19"
																		},
																		"nativeSrc": "8269:48:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8269:48:19"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8253:15:19",
																	"nodeType": "YulIdentifier",
																	"src": "8253:15:19"
																},
																"nativeSrc": "8253:65:19",
																"nodeType": "YulFunctionCall",
																"src": "8253:65:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8244:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "8244:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8334:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "8334:5:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8341:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8341:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8327:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8327:6:19"
																},
																"nativeSrc": "8327:21:19",
																"nodeType": "YulFunctionCall",
																"src": "8327:21:19"
															},
															"nativeSrc": "8327:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "8327:21:19"
														},
														{
															"nativeSrc": "8357:27:19",
															"nodeType": "YulVariableDeclaration",
															"src": "8357:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8372:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "8372:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8379:4:19",
																		"nodeType": "YulLiteral",
																		"src": "8379:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8368:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8368:3:19"
																},
																"nativeSrc": "8368:16:19",
																"nodeType": "YulFunctionCall",
																"src": "8368:16:19"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8361:3:19",
																	"nodeType": "YulTypedName",
																	"src": "8361:3:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8422:83:19",
																"nodeType": "YulBlock",
																"src": "8422:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8424:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "8424:77:19"
																			},
																			"nativeSrc": "8424:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8424:79:19"
																		},
																		"nativeSrc": "8424:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "8424:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8403:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "8403:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8408:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "8408:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8399:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8399:3:19"
																		},
																		"nativeSrc": "8399:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8399:16:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8417:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8417:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8396:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "8396:2:19"
																},
																"nativeSrc": "8396:25:19",
																"nodeType": "YulFunctionCall",
																"src": "8396:25:19"
															},
															"nativeSrc": "8393:112:19",
															"nodeType": "YulIf",
															"src": "8393:112:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8551:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8551:3:19"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8556:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8556:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8561:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8561:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8514:36:19",
																	"nodeType": "YulIdentifier",
																	"src": "8514:36:19"
																},
																"nativeSrc": "8514:54:19",
																"nodeType": "YulFunctionCall",
																"src": "8514:54:19"
															},
															"nativeSrc": "8514:54:19",
															"nodeType": "YulExpressionStatement",
															"src": "8514:54:19"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8151:423:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8207:3:19",
														"nodeType": "YulTypedName",
														"src": "8207:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8212:6:19",
														"nodeType": "YulTypedName",
														"src": "8212:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8220:3:19",
														"nodeType": "YulTypedName",
														"src": "8220:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8228:5:19",
														"nodeType": "YulTypedName",
														"src": "8228:5:19",
														"type": ""
													}
												],
												"src": "8151:423:19"
											},
											{
												"body": {
													"nativeSrc": "8654:277:19",
													"nodeType": "YulBlock",
													"src": "8654:277:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "8703:83:19",
																"nodeType": "YulBlock",
																"src": "8703:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8705:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "8705:77:19"
																			},
																			"nativeSrc": "8705:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8705:79:19"
																		},
																		"nativeSrc": "8705:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "8705:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8682:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "8682:6:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8690:4:19",
																						"nodeType": "YulLiteral",
																						"src": "8690:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8678:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "8678:3:19"
																				},
																				"nativeSrc": "8678:17:19",
																				"nodeType": "YulFunctionCall",
																				"src": "8678:17:19"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8697:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "8697:3:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8674:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8674:3:19"
																		},
																		"nativeSrc": "8674:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8674:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8667:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8667:6:19"
																},
																"nativeSrc": "8667:35:19",
																"nodeType": "YulFunctionCall",
																"src": "8667:35:19"
															},
															"nativeSrc": "8664:122:19",
															"nodeType": "YulIf",
															"src": "8664:122:19"
														},
														{
															"nativeSrc": "8795:34:19",
															"nodeType": "YulVariableDeclaration",
															"src": "8795:34:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8822:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8822:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8809:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "8809:12:19"
																},
																"nativeSrc": "8809:20:19",
																"nodeType": "YulFunctionCall",
																"src": "8809:20:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8799:6:19",
																	"nodeType": "YulTypedName",
																	"src": "8799:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8838:87:19",
															"nodeType": "YulAssignment",
															"src": "8838:87:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8898:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "8898:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8906:4:19",
																				"nodeType": "YulLiteral",
																				"src": "8906:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8894:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8894:3:19"
																		},
																		"nativeSrc": "8894:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8894:17:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8913:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8913:6:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8921:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8921:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8847:46:19",
																	"nodeType": "YulIdentifier",
																	"src": "8847:46:19"
																},
																"nativeSrc": "8847:78:19",
																"nodeType": "YulFunctionCall",
																"src": "8847:78:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8838:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "8838:5:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8593:338:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8632:6:19",
														"nodeType": "YulTypedName",
														"src": "8632:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8640:3:19",
														"nodeType": "YulTypedName",
														"src": "8640:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8648:5:19",
														"nodeType": "YulTypedName",
														"src": "8648:5:19",
														"type": ""
													}
												],
												"src": "8593:338:19"
											},
											{
												"body": {
													"nativeSrc": "9063:817:19",
													"nodeType": "YulBlock",
													"src": "9063:817:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "9110:83:19",
																"nodeType": "YulBlock",
																"src": "9110:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9112:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "9112:77:19"
																			},
																			"nativeSrc": "9112:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "9112:79:19"
																		},
																		"nativeSrc": "9112:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "9112:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9084:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9084:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9093:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "9093:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9080:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9080:3:19"
																		},
																		"nativeSrc": "9080:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9080:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9105:3:19",
																		"nodeType": "YulLiteral",
																		"src": "9105:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9076:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9076:3:19"
																},
																"nativeSrc": "9076:33:19",
																"nodeType": "YulFunctionCall",
																"src": "9076:33:19"
															},
															"nativeSrc": "9073:120:19",
															"nodeType": "YulIf",
															"src": "9073:120:19"
														},
														{
															"nativeSrc": "9203:117:19",
															"nodeType": "YulBlock",
															"src": "9203:117:19",
															"statements": [
																{
																	"nativeSrc": "9218:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9218:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9232:1:19",
																		"nodeType": "YulLiteral",
																		"src": "9232:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9222:6:19",
																			"nodeType": "YulTypedName",
																			"src": "9222:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9247:63:19",
																	"nodeType": "YulAssignment",
																	"src": "9247:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9282:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "9282:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9293:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "9293:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9278:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9278:3:19"
																				},
																				"nativeSrc": "9278:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9278:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9302:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9302:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9257:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "9257:20:19"
																		},
																		"nativeSrc": "9257:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9257:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9247:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "9247:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9330:118:19",
															"nodeType": "YulBlock",
															"src": "9330:118:19",
															"statements": [
																{
																	"nativeSrc": "9345:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9345:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9359:2:19",
																		"nodeType": "YulLiteral",
																		"src": "9359:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9349:6:19",
																			"nodeType": "YulTypedName",
																			"src": "9349:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9375:63:19",
																	"nodeType": "YulAssignment",
																	"src": "9375:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9410:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "9410:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9421:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "9421:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9406:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9406:3:19"
																				},
																				"nativeSrc": "9406:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9406:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9430:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9430:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9385:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "9385:20:19"
																		},
																		"nativeSrc": "9385:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9385:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9375:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "9375:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9458:118:19",
															"nodeType": "YulBlock",
															"src": "9458:118:19",
															"statements": [
																{
																	"nativeSrc": "9473:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9473:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9487:2:19",
																		"nodeType": "YulLiteral",
																		"src": "9487:2:19",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9477:6:19",
																			"nodeType": "YulTypedName",
																			"src": "9477:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9503:63:19",
																	"nodeType": "YulAssignment",
																	"src": "9503:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9538:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "9538:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9549:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "9549:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9534:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9534:3:19"
																				},
																				"nativeSrc": "9534:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9534:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9558:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9558:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9513:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "9513:20:19"
																		},
																		"nativeSrc": "9513:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9513:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9503:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "9503:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9586:287:19",
															"nodeType": "YulBlock",
															"src": "9586:287:19",
															"statements": [
																{
																	"nativeSrc": "9601:46:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9601:46:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9632:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "9632:9:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9643:2:19",
																						"nodeType": "YulLiteral",
																						"src": "9643:2:19",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9628:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9628:3:19"
																				},
																				"nativeSrc": "9628:18:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9628:18:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9615:12:19",
																			"nodeType": "YulIdentifier",
																			"src": "9615:12:19"
																		},
																		"nativeSrc": "9615:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9615:32:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9605:6:19",
																			"nodeType": "YulTypedName",
																			"src": "9605:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9694:83:19",
																		"nodeType": "YulBlock",
																		"src": "9694:83:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9696:77:19",
																						"nodeType": "YulIdentifier",
																						"src": "9696:77:19"
																					},
																					"nativeSrc": "9696:79:19",
																					"nodeType": "YulFunctionCall",
																					"src": "9696:79:19"
																				},
																				"nativeSrc": "9696:79:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "9696:79:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9666:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "9666:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9674:18:19",
																				"nodeType": "YulLiteral",
																				"src": "9674:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9663:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "9663:2:19"
																		},
																		"nativeSrc": "9663:30:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9663:30:19"
																	},
																	"nativeSrc": "9660:117:19",
																	"nodeType": "YulIf",
																	"src": "9660:117:19"
																},
																{
																	"nativeSrc": "9791:72:19",
																	"nodeType": "YulAssignment",
																	"src": "9791:72:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9835:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "9835:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9846:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "9846:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9831:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9831:3:19"
																				},
																				"nativeSrc": "9831:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9831:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9855:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9855:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "9801:29:19",
																			"nodeType": "YulIdentifier",
																			"src": "9801:29:19"
																		},
																		"nativeSrc": "9801:62:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9801:62:19"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9791:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "9791:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "8937:943:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9009:9:19",
														"nodeType": "YulTypedName",
														"src": "9009:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9020:7:19",
														"nodeType": "YulTypedName",
														"src": "9020:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9032:6:19",
														"nodeType": "YulTypedName",
														"src": "9032:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9040:6:19",
														"nodeType": "YulTypedName",
														"src": "9040:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9048:6:19",
														"nodeType": "YulTypedName",
														"src": "9048:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9056:6:19",
														"nodeType": "YulTypedName",
														"src": "9056:6:19",
														"type": ""
													}
												],
												"src": "8937:943:19"
											},
											{
												"body": {
													"nativeSrc": "9969:391:19",
													"nodeType": "YulBlock",
													"src": "9969:391:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "10015:83:19",
																"nodeType": "YulBlock",
																"src": "10015:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10017:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "10017:77:19"
																			},
																			"nativeSrc": "10017:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10017:79:19"
																		},
																		"nativeSrc": "10017:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "10017:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9990:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9990:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9999:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "9999:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9986:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9986:3:19"
																		},
																		"nativeSrc": "9986:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9986:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10011:2:19",
																		"nodeType": "YulLiteral",
																		"src": "10011:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9982:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9982:3:19"
																},
																"nativeSrc": "9982:32:19",
																"nodeType": "YulFunctionCall",
																"src": "9982:32:19"
															},
															"nativeSrc": "9979:119:19",
															"nodeType": "YulIf",
															"src": "9979:119:19"
														},
														{
															"nativeSrc": "10108:117:19",
															"nodeType": "YulBlock",
															"src": "10108:117:19",
															"statements": [
																{
																	"nativeSrc": "10123:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10123:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10137:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10137:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10127:6:19",
																			"nodeType": "YulTypedName",
																			"src": "10127:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10152:63:19",
																	"nodeType": "YulAssignment",
																	"src": "10152:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10187:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "10187:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10198:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "10198:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10183:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "10183:3:19"
																				},
																				"nativeSrc": "10183:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "10183:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10207:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "10207:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10162:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "10162:20:19"
																		},
																		"nativeSrc": "10162:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10162:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10152:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "10152:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10235:118:19",
															"nodeType": "YulBlock",
															"src": "10235:118:19",
															"statements": [
																{
																	"nativeSrc": "10250:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10250:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10264:2:19",
																		"nodeType": "YulLiteral",
																		"src": "10264:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10254:6:19",
																			"nodeType": "YulTypedName",
																			"src": "10254:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10280:63:19",
																	"nodeType": "YulAssignment",
																	"src": "10280:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10315:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "10315:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10326:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "10326:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10311:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "10311:3:19"
																				},
																				"nativeSrc": "10311:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "10311:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10335:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "10335:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10290:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "10290:20:19"
																		},
																		"nativeSrc": "10290:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10290:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10280:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "10280:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9886:474:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9931:9:19",
														"nodeType": "YulTypedName",
														"src": "9931:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9942:7:19",
														"nodeType": "YulTypedName",
														"src": "9942:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9954:6:19",
														"nodeType": "YulTypedName",
														"src": "9954:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9962:6:19",
														"nodeType": "YulTypedName",
														"src": "9962:6:19",
														"type": ""
													}
												],
												"src": "9886:474:19"
											},
											{
												"body": {
													"nativeSrc": "10433:241:19",
													"nodeType": "YulBlock",
													"src": "10433:241:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "10538:22:19",
																"nodeType": "YulBlock",
																"src": "10538:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10540:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "10540:16:19"
																			},
																			"nativeSrc": "10540:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10540:18:19"
																		},
																		"nativeSrc": "10540:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "10540:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10510:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10510:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10518:18:19",
																		"nodeType": "YulLiteral",
																		"src": "10518:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10507:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "10507:2:19"
																},
																"nativeSrc": "10507:30:19",
																"nodeType": "YulFunctionCall",
																"src": "10507:30:19"
															},
															"nativeSrc": "10504:56:19",
															"nodeType": "YulIf",
															"src": "10504:56:19"
														},
														{
															"nativeSrc": "10570:37:19",
															"nodeType": "YulAssignment",
															"src": "10570:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10600:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10600:6:19"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "10578:21:19",
																	"nodeType": "YulIdentifier",
																	"src": "10578:21:19"
																},
																"nativeSrc": "10578:29:19",
																"nodeType": "YulFunctionCall",
																"src": "10578:29:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10570:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "10570:4:19"
																}
															]
														},
														{
															"nativeSrc": "10644:23:19",
															"nodeType": "YulAssignment",
															"src": "10644:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10656:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "10656:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10662:4:19",
																		"nodeType": "YulLiteral",
																		"src": "10662:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10652:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10652:3:19"
																},
																"nativeSrc": "10652:15:19",
																"nodeType": "YulFunctionCall",
																"src": "10652:15:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10644:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "10644:4:19"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "10366:308:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10417:6:19",
														"nodeType": "YulTypedName",
														"src": "10417:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10428:4:19",
														"nodeType": "YulTypedName",
														"src": "10428:4:19",
														"type": ""
													}
												],
												"src": "10366:308:19"
											},
											{
												"body": {
													"nativeSrc": "10764:341:19",
													"nodeType": "YulBlock",
													"src": "10764:341:19",
													"statements": [
														{
															"nativeSrc": "10774:75:19",
															"nodeType": "YulAssignment",
															"src": "10774:75:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10841:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "10841:6:19"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "10799:41:19",
																			"nodeType": "YulIdentifier",
																			"src": "10799:41:19"
																		},
																		"nativeSrc": "10799:49:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10799:49:19"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10783:15:19",
																	"nodeType": "YulIdentifier",
																	"src": "10783:15:19"
																},
																"nativeSrc": "10783:66:19",
																"nodeType": "YulFunctionCall",
																"src": "10783:66:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10774:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "10774:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10865:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "10865:5:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10872:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10872:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10858:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10858:6:19"
																},
																"nativeSrc": "10858:21:19",
																"nodeType": "YulFunctionCall",
																"src": "10858:21:19"
															},
															"nativeSrc": "10858:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "10858:21:19"
														},
														{
															"nativeSrc": "10888:27:19",
															"nodeType": "YulVariableDeclaration",
															"src": "10888:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10903:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "10903:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10910:4:19",
																		"nodeType": "YulLiteral",
																		"src": "10910:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10899:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10899:3:19"
																},
																"nativeSrc": "10899:16:19",
																"nodeType": "YulFunctionCall",
																"src": "10899:16:19"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10892:3:19",
																	"nodeType": "YulTypedName",
																	"src": "10892:3:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10953:83:19",
																"nodeType": "YulBlock",
																"src": "10953:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "10955:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "10955:77:19"
																			},
																			"nativeSrc": "10955:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10955:79:19"
																		},
																		"nativeSrc": "10955:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "10955:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "10934:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "10934:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10939:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "10939:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10930:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10930:3:19"
																		},
																		"nativeSrc": "10930:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10930:16:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10948:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "10948:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10927:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "10927:2:19"
																},
																"nativeSrc": "10927:25:19",
																"nodeType": "YulFunctionCall",
																"src": "10927:25:19"
															},
															"nativeSrc": "10924:112:19",
															"nodeType": "YulIf",
															"src": "10924:112:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "11082:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "11082:3:19"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "11087:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "11087:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11092:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11092:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "11045:36:19",
																	"nodeType": "YulIdentifier",
																	"src": "11045:36:19"
																},
																"nativeSrc": "11045:54:19",
																"nodeType": "YulFunctionCall",
																"src": "11045:54:19"
															},
															"nativeSrc": "11045:54:19",
															"nodeType": "YulExpressionStatement",
															"src": "11045:54:19"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "10680:425:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10737:3:19",
														"nodeType": "YulTypedName",
														"src": "10737:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10742:6:19",
														"nodeType": "YulTypedName",
														"src": "10742:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10750:3:19",
														"nodeType": "YulTypedName",
														"src": "10750:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10758:5:19",
														"nodeType": "YulTypedName",
														"src": "10758:5:19",
														"type": ""
													}
												],
												"src": "10680:425:19"
											},
											{
												"body": {
													"nativeSrc": "11187:278:19",
													"nodeType": "YulBlock",
													"src": "11187:278:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "11236:83:19",
																"nodeType": "YulBlock",
																"src": "11236:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11238:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "11238:77:19"
																			},
																			"nativeSrc": "11238:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "11238:79:19"
																		},
																		"nativeSrc": "11238:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "11238:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11215:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "11215:6:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11223:4:19",
																						"nodeType": "YulLiteral",
																						"src": "11223:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11211:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "11211:3:19"
																				},
																				"nativeSrc": "11211:17:19",
																				"nodeType": "YulFunctionCall",
																				"src": "11211:17:19"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11230:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "11230:3:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11207:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11207:3:19"
																		},
																		"nativeSrc": "11207:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11207:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11200:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "11200:6:19"
																},
																"nativeSrc": "11200:35:19",
																"nodeType": "YulFunctionCall",
																"src": "11200:35:19"
															},
															"nativeSrc": "11197:122:19",
															"nodeType": "YulIf",
															"src": "11197:122:19"
														},
														{
															"nativeSrc": "11328:34:19",
															"nodeType": "YulVariableDeclaration",
															"src": "11328:34:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11355:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11355:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11342:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "11342:12:19"
																},
																"nativeSrc": "11342:20:19",
																"nodeType": "YulFunctionCall",
																"src": "11342:20:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11332:6:19",
																	"nodeType": "YulTypedName",
																	"src": "11332:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11371:88:19",
															"nodeType": "YulAssignment",
															"src": "11371:88:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11432:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "11432:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11440:4:19",
																				"nodeType": "YulLiteral",
																				"src": "11440:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11428:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11428:3:19"
																		},
																		"nativeSrc": "11428:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11428:17:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11447:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11447:6:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11455:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "11455:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "11380:47:19",
																	"nodeType": "YulIdentifier",
																	"src": "11380:47:19"
																},
																"nativeSrc": "11380:79:19",
																"nodeType": "YulFunctionCall",
																"src": "11380:79:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11371:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "11371:5:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "11125:340:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11165:6:19",
														"nodeType": "YulTypedName",
														"src": "11165:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11173:3:19",
														"nodeType": "YulTypedName",
														"src": "11173:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11181:5:19",
														"nodeType": "YulTypedName",
														"src": "11181:5:19",
														"type": ""
													}
												],
												"src": "11125:340:19"
											},
											{
												"body": {
													"nativeSrc": "11547:433:19",
													"nodeType": "YulBlock",
													"src": "11547:433:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "11593:83:19",
																"nodeType": "YulBlock",
																"src": "11593:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11595:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "11595:77:19"
																			},
																			"nativeSrc": "11595:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "11595:79:19"
																		},
																		"nativeSrc": "11595:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "11595:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11568:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "11568:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11577:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "11577:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11564:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11564:3:19"
																		},
																		"nativeSrc": "11564:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11564:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11589:2:19",
																		"nodeType": "YulLiteral",
																		"src": "11589:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11560:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11560:3:19"
																},
																"nativeSrc": "11560:32:19",
																"nodeType": "YulFunctionCall",
																"src": "11560:32:19"
															},
															"nativeSrc": "11557:119:19",
															"nodeType": "YulIf",
															"src": "11557:119:19"
														},
														{
															"nativeSrc": "11686:287:19",
															"nodeType": "YulBlock",
															"src": "11686:287:19",
															"statements": [
																{
																	"nativeSrc": "11701:45:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11701:45:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11732:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "11732:9:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11743:1:19",
																						"nodeType": "YulLiteral",
																						"src": "11743:1:19",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11728:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "11728:3:19"
																				},
																				"nativeSrc": "11728:17:19",
																				"nodeType": "YulFunctionCall",
																				"src": "11728:17:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11715:12:19",
																			"nodeType": "YulIdentifier",
																			"src": "11715:12:19"
																		},
																		"nativeSrc": "11715:31:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11715:31:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11705:6:19",
																			"nodeType": "YulTypedName",
																			"src": "11705:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11793:83:19",
																		"nodeType": "YulBlock",
																		"src": "11793:83:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11795:77:19",
																						"nodeType": "YulIdentifier",
																						"src": "11795:77:19"
																					},
																					"nativeSrc": "11795:79:19",
																					"nodeType": "YulFunctionCall",
																					"src": "11795:79:19"
																				},
																				"nativeSrc": "11795:79:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "11795:79:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11765:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "11765:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11773:18:19",
																				"nodeType": "YulLiteral",
																				"src": "11773:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11762:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "11762:2:19"
																		},
																		"nativeSrc": "11762:30:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11762:30:19"
																	},
																	"nativeSrc": "11759:117:19",
																	"nodeType": "YulIf",
																	"src": "11759:117:19"
																},
																{
																	"nativeSrc": "11890:73:19",
																	"nodeType": "YulAssignment",
																	"src": "11890:73:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11935:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "11935:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11946:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "11946:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11931:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "11931:3:19"
																				},
																				"nativeSrc": "11931:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "11931:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11955:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "11955:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "11900:30:19",
																			"nodeType": "YulIdentifier",
																			"src": "11900:30:19"
																		},
																		"nativeSrc": "11900:63:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11900:63:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11890:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "11890:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "11471:509:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11517:9:19",
														"nodeType": "YulTypedName",
														"src": "11517:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11528:7:19",
														"nodeType": "YulTypedName",
														"src": "11528:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11540:6:19",
														"nodeType": "YulTypedName",
														"src": "11540:6:19",
														"type": ""
													}
												],
												"src": "11471:509:19"
											},
											{
												"body": {
													"nativeSrc": "12014:152:19",
													"nodeType": "YulBlock",
													"src": "12014:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12031:1:19",
																		"nodeType": "YulLiteral",
																		"src": "12031:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12034:77:19",
																		"nodeType": "YulLiteral",
																		"src": "12034:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12024:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12024:6:19"
																},
																"nativeSrc": "12024:88:19",
																"nodeType": "YulFunctionCall",
																"src": "12024:88:19"
															},
															"nativeSrc": "12024:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "12024:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12128:1:19",
																		"nodeType": "YulLiteral",
																		"src": "12128:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12131:4:19",
																		"nodeType": "YulLiteral",
																		"src": "12131:4:19",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12121:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12121:6:19"
																},
																"nativeSrc": "12121:15:19",
																"nodeType": "YulFunctionCall",
																"src": "12121:15:19"
															},
															"nativeSrc": "12121:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "12121:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12152:1:19",
																		"nodeType": "YulLiteral",
																		"src": "12152:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12155:4:19",
																		"nodeType": "YulLiteral",
																		"src": "12155:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12145:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12145:6:19"
																},
																"nativeSrc": "12145:15:19",
																"nodeType": "YulFunctionCall",
																"src": "12145:15:19"
															},
															"nativeSrc": "12145:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "12145:15:19"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "11986:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "11986:180:19"
											},
											{
												"body": {
													"nativeSrc": "12223:269:19",
													"nodeType": "YulBlock",
													"src": "12223:269:19",
													"statements": [
														{
															"nativeSrc": "12233:22:19",
															"nodeType": "YulAssignment",
															"src": "12233:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12247:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "12247:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12253:1:19",
																		"nodeType": "YulLiteral",
																		"src": "12253:1:19",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12243:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "12243:3:19"
																},
																"nativeSrc": "12243:12:19",
																"nodeType": "YulFunctionCall",
																"src": "12243:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12233:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12233:6:19"
																}
															]
														},
														{
															"nativeSrc": "12264:38:19",
															"nodeType": "YulVariableDeclaration",
															"src": "12264:38:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12294:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "12294:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12300:1:19",
																		"nodeType": "YulLiteral",
																		"src": "12300:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12290:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "12290:3:19"
																},
																"nativeSrc": "12290:12:19",
																"nodeType": "YulFunctionCall",
																"src": "12290:12:19"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "12268:18:19",
																	"nodeType": "YulTypedName",
																	"src": "12268:18:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12341:51:19",
																"nodeType": "YulBlock",
																"src": "12341:51:19",
																"statements": [
																	{
																		"nativeSrc": "12355:27:19",
																		"nodeType": "YulAssignment",
																		"src": "12355:27:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "12369:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "12369:6:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12377:4:19",
																					"nodeType": "YulLiteral",
																					"src": "12377:4:19",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12365:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "12365:3:19"
																			},
																			"nativeSrc": "12365:17:19",
																			"nodeType": "YulFunctionCall",
																			"src": "12365:17:19"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "12355:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "12355:6:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12321:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "12321:18:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12314:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12314:6:19"
																},
																"nativeSrc": "12314:26:19",
																"nodeType": "YulFunctionCall",
																"src": "12314:26:19"
															},
															"nativeSrc": "12311:81:19",
															"nodeType": "YulIf",
															"src": "12311:81:19"
														},
														{
															"body": {
																"nativeSrc": "12444:42:19",
																"nodeType": "YulBlock",
																"src": "12444:42:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "12458:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "12458:16:19"
																			},
																			"nativeSrc": "12458:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "12458:18:19"
																		},
																		"nativeSrc": "12458:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "12458:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12408:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "12408:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12431:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "12431:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12439:2:19",
																				"nodeType": "YulLiteral",
																				"src": "12439:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "12428:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "12428:2:19"
																		},
																		"nativeSrc": "12428:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12428:14:19"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12405:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "12405:2:19"
																},
																"nativeSrc": "12405:38:19",
																"nodeType": "YulFunctionCall",
																"src": "12405:38:19"
															},
															"nativeSrc": "12402:84:19",
															"nodeType": "YulIf",
															"src": "12402:84:19"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12172:320:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12207:4:19",
														"nodeType": "YulTypedName",
														"src": "12207:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12216:6:19",
														"nodeType": "YulTypedName",
														"src": "12216:6:19",
														"type": ""
													}
												],
												"src": "12172:320:19"
											},
											{
												"body": {
													"nativeSrc": "12604:62:19",
													"nodeType": "YulBlock",
													"src": "12604:62:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12626:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "12626:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12634:1:19",
																				"nodeType": "YulLiteral",
																				"src": "12634:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12622:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12622:3:19"
																		},
																		"nativeSrc": "12622:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12622:14:19"
																	},
																	{
																		"hexValue": "4e6f74206d61737465722061646472657373",
																		"kind": "string",
																		"nativeSrc": "12638:20:19",
																		"nodeType": "YulLiteral",
																		"src": "12638:20:19",
																		"type": "",
																		"value": "Not master address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12615:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12615:6:19"
																},
																"nativeSrc": "12615:44:19",
																"nodeType": "YulFunctionCall",
																"src": "12615:44:19"
															},
															"nativeSrc": "12615:44:19",
															"nodeType": "YulExpressionStatement",
															"src": "12615:44:19"
														}
													]
												},
												"name": "store_literal_in_memory_638577bb24e430bfb6d1d8a9d5466bf3f38c559db3bf705cb3f80a995566acc6",
												"nativeSrc": "12498:168:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12596:6:19",
														"nodeType": "YulTypedName",
														"src": "12596:6:19",
														"type": ""
													}
												],
												"src": "12498:168:19"
											},
											{
												"body": {
													"nativeSrc": "12818:220:19",
													"nodeType": "YulBlock",
													"src": "12818:220:19",
													"statements": [
														{
															"nativeSrc": "12828:74:19",
															"nodeType": "YulAssignment",
															"src": "12828:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12894:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "12894:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12899:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12899:2:19",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12835:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "12835:58:19"
																},
																"nativeSrc": "12835:67:19",
																"nodeType": "YulFunctionCall",
																"src": "12835:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12828:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "12828:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13000:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "13000:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_638577bb24e430bfb6d1d8a9d5466bf3f38c559db3bf705cb3f80a995566acc6",
																	"nativeSrc": "12911:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "12911:88:19"
																},
																"nativeSrc": "12911:93:19",
																"nodeType": "YulFunctionCall",
																"src": "12911:93:19"
															},
															"nativeSrc": "12911:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "12911:93:19"
														},
														{
															"nativeSrc": "13013:19:19",
															"nodeType": "YulAssignment",
															"src": "13013:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13024:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "13024:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13029:2:19",
																		"nodeType": "YulLiteral",
																		"src": "13029:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13020:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13020:3:19"
																},
																"nativeSrc": "13020:12:19",
																"nodeType": "YulFunctionCall",
																"src": "13020:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13013:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13013:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_638577bb24e430bfb6d1d8a9d5466bf3f38c559db3bf705cb3f80a995566acc6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12672:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12806:3:19",
														"nodeType": "YulTypedName",
														"src": "12806:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12814:3:19",
														"nodeType": "YulTypedName",
														"src": "12814:3:19",
														"type": ""
													}
												],
												"src": "12672:366:19"
											},
											{
												"body": {
													"nativeSrc": "13215:248:19",
													"nodeType": "YulBlock",
													"src": "13215:248:19",
													"statements": [
														{
															"nativeSrc": "13225:26:19",
															"nodeType": "YulAssignment",
															"src": "13225:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13237:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "13237:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13248:2:19",
																		"nodeType": "YulLiteral",
																		"src": "13248:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13233:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13233:3:19"
																},
																"nativeSrc": "13233:18:19",
																"nodeType": "YulFunctionCall",
																"src": "13233:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13225:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "13225:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13272:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "13272:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13283:1:19",
																				"nodeType": "YulLiteral",
																				"src": "13283:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13268:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13268:3:19"
																		},
																		"nativeSrc": "13268:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13268:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13291:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "13291:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13297:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "13297:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13287:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13287:3:19"
																		},
																		"nativeSrc": "13287:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13287:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13261:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13261:6:19"
																},
																"nativeSrc": "13261:47:19",
																"nodeType": "YulFunctionCall",
																"src": "13261:47:19"
															},
															"nativeSrc": "13261:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "13261:47:19"
														},
														{
															"nativeSrc": "13317:139:19",
															"nodeType": "YulAssignment",
															"src": "13317:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13451:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "13451:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_638577bb24e430bfb6d1d8a9d5466bf3f38c559db3bf705cb3f80a995566acc6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13325:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "13325:124:19"
																},
																"nativeSrc": "13325:131:19",
																"nodeType": "YulFunctionCall",
																"src": "13325:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13317:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "13317:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_638577bb24e430bfb6d1d8a9d5466bf3f38c559db3bf705cb3f80a995566acc6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13044:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13195:9:19",
														"nodeType": "YulTypedName",
														"src": "13195:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13210:4:19",
														"nodeType": "YulTypedName",
														"src": "13210:4:19",
														"type": ""
													}
												],
												"src": "13044:419:19"
											},
											{
												"body": {
													"nativeSrc": "13582:34:19",
													"nodeType": "YulBlock",
													"src": "13582:34:19",
													"statements": [
														{
															"nativeSrc": "13592:18:19",
															"nodeType": "YulAssignment",
															"src": "13592:18:19",
															"value": {
																"name": "pos",
																"nativeSrc": "13607:3:19",
																"nodeType": "YulIdentifier",
																"src": "13607:3:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "13592:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "13592:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13469:147:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13554:3:19",
														"nodeType": "YulTypedName",
														"src": "13554:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13559:6:19",
														"nodeType": "YulTypedName",
														"src": "13559:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "13570:11:19",
														"nodeType": "YulTypedName",
														"src": "13570:11:19",
														"type": ""
													}
												],
												"src": "13469:147:19"
											},
											{
												"body": {
													"nativeSrc": "13728:8:19",
													"nodeType": "YulBlock",
													"src": "13728:8:19",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "13622:114:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13720:6:19",
														"nodeType": "YulTypedName",
														"src": "13720:6:19",
														"type": ""
													}
												],
												"src": "13622:114:19"
											},
											{
												"body": {
													"nativeSrc": "13905:235:19",
													"nodeType": "YulBlock",
													"src": "13905:235:19",
													"statements": [
														{
															"nativeSrc": "13915:90:19",
															"nodeType": "YulAssignment",
															"src": "13915:90:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13998:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "13998:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14003:1:19",
																		"nodeType": "YulLiteral",
																		"src": "14003:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13922:75:19",
																	"nodeType": "YulIdentifier",
																	"src": "13922:75:19"
																},
																"nativeSrc": "13922:83:19",
																"nodeType": "YulFunctionCall",
																"src": "13922:83:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13915:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13915:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14103:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "14103:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "14014:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "14014:88:19"
																},
																"nativeSrc": "14014:93:19",
																"nodeType": "YulFunctionCall",
																"src": "14014:93:19"
															},
															"nativeSrc": "14014:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "14014:93:19"
														},
														{
															"nativeSrc": "14116:18:19",
															"nodeType": "YulAssignment",
															"src": "14116:18:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14127:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "14127:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14132:1:19",
																		"nodeType": "YulLiteral",
																		"src": "14132:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14123:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14123:3:19"
																},
																"nativeSrc": "14123:11:19",
																"nodeType": "YulFunctionCall",
																"src": "14123:11:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14116:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14116:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13742:398:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13893:3:19",
														"nodeType": "YulTypedName",
														"src": "13893:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13901:3:19",
														"nodeType": "YulTypedName",
														"src": "13901:3:19",
														"type": ""
													}
												],
												"src": "13742:398:19"
											},
											{
												"body": {
													"nativeSrc": "14334:191:19",
													"nodeType": "YulBlock",
													"src": "14334:191:19",
													"statements": [
														{
															"nativeSrc": "14345:154:19",
															"nodeType": "YulAssignment",
															"src": "14345:154:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14495:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "14495:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14352:141:19",
																	"nodeType": "YulIdentifier",
																	"src": "14352:141:19"
																},
																"nativeSrc": "14352:147:19",
																"nodeType": "YulFunctionCall",
																"src": "14352:147:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14345:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14345:3:19"
																}
															]
														},
														{
															"nativeSrc": "14509:10:19",
															"nodeType": "YulAssignment",
															"src": "14509:10:19",
															"value": {
																"name": "pos",
																"nativeSrc": "14516:3:19",
																"nodeType": "YulIdentifier",
																"src": "14516:3:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14509:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14509:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "14146:379:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14321:3:19",
														"nodeType": "YulTypedName",
														"src": "14321:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14330:3:19",
														"nodeType": "YulTypedName",
														"src": "14330:3:19",
														"type": ""
													}
												],
												"src": "14146:379:19"
											},
											{
												"body": {
													"nativeSrc": "14637:60:19",
													"nodeType": "YulBlock",
													"src": "14637:60:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14659:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "14659:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14667:1:19",
																				"nodeType": "YulLiteral",
																				"src": "14667:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14655:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14655:3:19"
																		},
																		"nativeSrc": "14655:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14655:14:19"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c65642e",
																		"kind": "string",
																		"nativeSrc": "14671:18:19",
																		"nodeType": "YulLiteral",
																		"src": "14671:18:19",
																		"type": "",
																		"value": "Transfer failed."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14648:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "14648:6:19"
																},
																"nativeSrc": "14648:42:19",
																"nodeType": "YulFunctionCall",
																"src": "14648:42:19"
															},
															"nativeSrc": "14648:42:19",
															"nodeType": "YulExpressionStatement",
															"src": "14648:42:19"
														}
													]
												},
												"name": "store_literal_in_memory_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
												"nativeSrc": "14531:166:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14629:6:19",
														"nodeType": "YulTypedName",
														"src": "14629:6:19",
														"type": ""
													}
												],
												"src": "14531:166:19"
											},
											{
												"body": {
													"nativeSrc": "14849:220:19",
													"nodeType": "YulBlock",
													"src": "14849:220:19",
													"statements": [
														{
															"nativeSrc": "14859:74:19",
															"nodeType": "YulAssignment",
															"src": "14859:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14925:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "14925:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14930:2:19",
																		"nodeType": "YulLiteral",
																		"src": "14930:2:19",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14866:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "14866:58:19"
																},
																"nativeSrc": "14866:67:19",
																"nodeType": "YulFunctionCall",
																"src": "14866:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14859:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14859:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15031:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "15031:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
																	"nativeSrc": "14942:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "14942:88:19"
																},
																"nativeSrc": "14942:93:19",
																"nodeType": "YulFunctionCall",
																"src": "14942:93:19"
															},
															"nativeSrc": "14942:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "14942:93:19"
														},
														{
															"nativeSrc": "15044:19:19",
															"nodeType": "YulAssignment",
															"src": "15044:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15055:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "15055:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15060:2:19",
																		"nodeType": "YulLiteral",
																		"src": "15060:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15051:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15051:3:19"
																},
																"nativeSrc": "15051:12:19",
																"nodeType": "YulFunctionCall",
																"src": "15051:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15044:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15044:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14703:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14837:3:19",
														"nodeType": "YulTypedName",
														"src": "14837:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14845:3:19",
														"nodeType": "YulTypedName",
														"src": "14845:3:19",
														"type": ""
													}
												],
												"src": "14703:366:19"
											},
											{
												"body": {
													"nativeSrc": "15246:248:19",
													"nodeType": "YulBlock",
													"src": "15246:248:19",
													"statements": [
														{
															"nativeSrc": "15256:26:19",
															"nodeType": "YulAssignment",
															"src": "15256:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15268:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "15268:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15279:2:19",
																		"nodeType": "YulLiteral",
																		"src": "15279:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15264:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15264:3:19"
																},
																"nativeSrc": "15264:18:19",
																"nodeType": "YulFunctionCall",
																"src": "15264:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15256:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "15256:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15303:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "15303:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15314:1:19",
																				"nodeType": "YulLiteral",
																				"src": "15314:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15299:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15299:3:19"
																		},
																		"nativeSrc": "15299:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15299:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15322:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "15322:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15328:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "15328:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15318:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15318:3:19"
																		},
																		"nativeSrc": "15318:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15318:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15292:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "15292:6:19"
																},
																"nativeSrc": "15292:47:19",
																"nodeType": "YulFunctionCall",
																"src": "15292:47:19"
															},
															"nativeSrc": "15292:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "15292:47:19"
														},
														{
															"nativeSrc": "15348:139:19",
															"nodeType": "YulAssignment",
															"src": "15348:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15482:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "15482:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15356:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "15356:124:19"
																},
																"nativeSrc": "15356:131:19",
																"nodeType": "YulFunctionCall",
																"src": "15356:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15348:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "15348:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15075:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15226:9:19",
														"nodeType": "YulTypedName",
														"src": "15226:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15241:4:19",
														"nodeType": "YulTypedName",
														"src": "15241:4:19",
														"type": ""
													}
												],
												"src": "15075:419:19"
											},
											{
												"body": {
													"nativeSrc": "15654:288:19",
													"nodeType": "YulBlock",
													"src": "15654:288:19",
													"statements": [
														{
															"nativeSrc": "15664:26:19",
															"nodeType": "YulAssignment",
															"src": "15664:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15676:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "15676:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15687:2:19",
																		"nodeType": "YulLiteral",
																		"src": "15687:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15672:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15672:3:19"
																},
																"nativeSrc": "15672:18:19",
																"nodeType": "YulFunctionCall",
																"src": "15672:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15664:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "15664:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15744:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "15744:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15757:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "15757:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15768:1:19",
																				"nodeType": "YulLiteral",
																				"src": "15768:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15753:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15753:3:19"
																		},
																		"nativeSrc": "15753:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15753:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15700:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "15700:43:19"
																},
																"nativeSrc": "15700:71:19",
																"nodeType": "YulFunctionCall",
																"src": "15700:71:19"
															},
															"nativeSrc": "15700:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "15700:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15825:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "15825:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15838:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "15838:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15849:2:19",
																				"nodeType": "YulLiteral",
																				"src": "15849:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15834:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15834:3:19"
																		},
																		"nativeSrc": "15834:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15834:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15781:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "15781:43:19"
																},
																"nativeSrc": "15781:72:19",
																"nodeType": "YulFunctionCall",
																"src": "15781:72:19"
															},
															"nativeSrc": "15781:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "15781:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15907:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "15907:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15920:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "15920:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15931:2:19",
																				"nodeType": "YulLiteral",
																				"src": "15931:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15916:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15916:3:19"
																		},
																		"nativeSrc": "15916:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15916:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15863:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "15863:43:19"
																},
																"nativeSrc": "15863:72:19",
																"nodeType": "YulFunctionCall",
																"src": "15863:72:19"
															},
															"nativeSrc": "15863:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "15863:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "15500:442:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15610:9:19",
														"nodeType": "YulTypedName",
														"src": "15610:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15622:6:19",
														"nodeType": "YulTypedName",
														"src": "15622:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15630:6:19",
														"nodeType": "YulTypedName",
														"src": "15630:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15638:6:19",
														"nodeType": "YulTypedName",
														"src": "15638:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15649:4:19",
														"nodeType": "YulTypedName",
														"src": "15649:4:19",
														"type": ""
													}
												],
												"src": "15500:442:19"
											},
											{
												"body": {
													"nativeSrc": "16062:34:19",
													"nodeType": "YulBlock",
													"src": "16062:34:19",
													"statements": [
														{
															"nativeSrc": "16072:18:19",
															"nodeType": "YulAssignment",
															"src": "16072:18:19",
															"value": {
																"name": "pos",
																"nativeSrc": "16087:3:19",
																"nodeType": "YulIdentifier",
																"src": "16087:3:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "16072:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "16072:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "15948:148:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16034:3:19",
														"nodeType": "YulTypedName",
														"src": "16034:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "16039:6:19",
														"nodeType": "YulTypedName",
														"src": "16039:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "16050:11:19",
														"nodeType": "YulTypedName",
														"src": "16050:11:19",
														"type": ""
													}
												],
												"src": "15948:148:19"
											},
											{
												"body": {
													"nativeSrc": "16212:280:19",
													"nodeType": "YulBlock",
													"src": "16212:280:19",
													"statements": [
														{
															"nativeSrc": "16222:53:19",
															"nodeType": "YulVariableDeclaration",
															"src": "16222:53:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16269:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "16269:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "16236:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "16236:32:19"
																},
																"nativeSrc": "16236:39:19",
																"nodeType": "YulFunctionCall",
																"src": "16236:39:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "16226:6:19",
																	"nodeType": "YulTypedName",
																	"src": "16226:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16284:96:19",
															"nodeType": "YulAssignment",
															"src": "16284:96:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16368:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "16368:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16373:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "16373:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16291:76:19",
																	"nodeType": "YulIdentifier",
																	"src": "16291:76:19"
																},
																"nativeSrc": "16291:89:19",
																"nodeType": "YulFunctionCall",
																"src": "16291:89:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16284:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16284:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16428:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "16428:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16435:4:19",
																				"nodeType": "YulLiteral",
																				"src": "16435:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16424:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16424:3:19"
																		},
																		"nativeSrc": "16424:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16424:16:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16442:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "16442:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16447:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "16447:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "16389:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "16389:34:19"
																},
																"nativeSrc": "16389:65:19",
																"nodeType": "YulFunctionCall",
																"src": "16389:65:19"
															},
															"nativeSrc": "16389:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "16389:65:19"
														},
														{
															"nativeSrc": "16463:23:19",
															"nodeType": "YulAssignment",
															"src": "16463:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16474:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "16474:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16479:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "16479:6:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16470:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16470:3:19"
																},
																"nativeSrc": "16470:16:19",
																"nodeType": "YulFunctionCall",
																"src": "16470:16:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16463:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16463:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "16102:390:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16193:5:19",
														"nodeType": "YulTypedName",
														"src": "16193:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16200:3:19",
														"nodeType": "YulTypedName",
														"src": "16200:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16208:3:19",
														"nodeType": "YulTypedName",
														"src": "16208:3:19",
														"type": ""
													}
												],
												"src": "16102:390:19"
											},
											{
												"body": {
													"nativeSrc": "16682:251:19",
													"nodeType": "YulBlock",
													"src": "16682:251:19",
													"statements": [
														{
															"nativeSrc": "16693:102:19",
															"nodeType": "YulAssignment",
															"src": "16693:102:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16782:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "16782:6:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16791:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "16791:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16700:81:19",
																	"nodeType": "YulIdentifier",
																	"src": "16700:81:19"
																},
																"nativeSrc": "16700:95:19",
																"nodeType": "YulFunctionCall",
																"src": "16700:95:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16693:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16693:3:19"
																}
															]
														},
														{
															"nativeSrc": "16805:102:19",
															"nodeType": "YulAssignment",
															"src": "16805:102:19",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16894:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "16894:6:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16903:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "16903:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16812:81:19",
																	"nodeType": "YulIdentifier",
																	"src": "16812:81:19"
																},
																"nativeSrc": "16812:95:19",
																"nodeType": "YulFunctionCall",
																"src": "16812:95:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16805:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16805:3:19"
																}
															]
														},
														{
															"nativeSrc": "16917:10:19",
															"nodeType": "YulAssignment",
															"src": "16917:10:19",
															"value": {
																"name": "pos",
																"nativeSrc": "16924:3:19",
																"nodeType": "YulIdentifier",
																"src": "16924:3:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16917:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16917:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "16498:435:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16653:3:19",
														"nodeType": "YulTypedName",
														"src": "16653:3:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16659:6:19",
														"nodeType": "YulTypedName",
														"src": "16659:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16667:6:19",
														"nodeType": "YulTypedName",
														"src": "16667:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16678:3:19",
														"nodeType": "YulTypedName",
														"src": "16678:3:19",
														"type": ""
													}
												],
												"src": "16498:435:19"
											},
											{
												"body": {
													"nativeSrc": "17045:58:19",
													"nodeType": "YulBlock",
													"src": "17045:58:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17067:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "17067:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17075:1:19",
																				"nodeType": "YulLiteral",
																				"src": "17075:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17063:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "17063:3:19"
																		},
																		"nativeSrc": "17063:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17063:14:19"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820455448",
																		"kind": "string",
																		"nativeSrc": "17079:16:19",
																		"nodeType": "YulLiteral",
																		"src": "17079:16:19",
																		"type": "",
																		"value": "Not enough ETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17056:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "17056:6:19"
																},
																"nativeSrc": "17056:40:19",
																"nodeType": "YulFunctionCall",
																"src": "17056:40:19"
															},
															"nativeSrc": "17056:40:19",
															"nodeType": "YulExpressionStatement",
															"src": "17056:40:19"
														}
													]
												},
												"name": "store_literal_in_memory_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a",
												"nativeSrc": "16939:164:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17037:6:19",
														"nodeType": "YulTypedName",
														"src": "17037:6:19",
														"type": ""
													}
												],
												"src": "16939:164:19"
											},
											{
												"body": {
													"nativeSrc": "17255:220:19",
													"nodeType": "YulBlock",
													"src": "17255:220:19",
													"statements": [
														{
															"nativeSrc": "17265:74:19",
															"nodeType": "YulAssignment",
															"src": "17265:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17331:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "17331:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17336:2:19",
																		"nodeType": "YulLiteral",
																		"src": "17336:2:19",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17272:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "17272:58:19"
																},
																"nativeSrc": "17272:67:19",
																"nodeType": "YulFunctionCall",
																"src": "17272:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17265:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17265:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17437:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "17437:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a",
																	"nativeSrc": "17348:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "17348:88:19"
																},
																"nativeSrc": "17348:93:19",
																"nodeType": "YulFunctionCall",
																"src": "17348:93:19"
															},
															"nativeSrc": "17348:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "17348:93:19"
														},
														{
															"nativeSrc": "17450:19:19",
															"nodeType": "YulAssignment",
															"src": "17450:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17461:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "17461:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17466:2:19",
																		"nodeType": "YulLiteral",
																		"src": "17466:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17457:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17457:3:19"
																},
																"nativeSrc": "17457:12:19",
																"nodeType": "YulFunctionCall",
																"src": "17457:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17450:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17450:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17109:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17243:3:19",
														"nodeType": "YulTypedName",
														"src": "17243:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17251:3:19",
														"nodeType": "YulTypedName",
														"src": "17251:3:19",
														"type": ""
													}
												],
												"src": "17109:366:19"
											},
											{
												"body": {
													"nativeSrc": "17652:248:19",
													"nodeType": "YulBlock",
													"src": "17652:248:19",
													"statements": [
														{
															"nativeSrc": "17662:26:19",
															"nodeType": "YulAssignment",
															"src": "17662:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17674:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "17674:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17685:2:19",
																		"nodeType": "YulLiteral",
																		"src": "17685:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17670:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17670:3:19"
																},
																"nativeSrc": "17670:18:19",
																"nodeType": "YulFunctionCall",
																"src": "17670:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17662:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "17662:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17709:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "17709:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17720:1:19",
																				"nodeType": "YulLiteral",
																				"src": "17720:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17705:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "17705:3:19"
																		},
																		"nativeSrc": "17705:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17705:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17728:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "17728:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17734:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "17734:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17724:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "17724:3:19"
																		},
																		"nativeSrc": "17724:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17724:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17698:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "17698:6:19"
																},
																"nativeSrc": "17698:47:19",
																"nodeType": "YulFunctionCall",
																"src": "17698:47:19"
															},
															"nativeSrc": "17698:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "17698:47:19"
														},
														{
															"nativeSrc": "17754:139:19",
															"nodeType": "YulAssignment",
															"src": "17754:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17888:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "17888:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17762:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "17762:124:19"
																},
																"nativeSrc": "17762:131:19",
																"nodeType": "YulFunctionCall",
																"src": "17762:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17754:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "17754:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17481:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17632:9:19",
														"nodeType": "YulTypedName",
														"src": "17632:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17647:4:19",
														"nodeType": "YulTypedName",
														"src": "17647:4:19",
														"type": ""
													}
												],
												"src": "17481:419:19"
											},
											{
												"body": {
													"nativeSrc": "17934:152:19",
													"nodeType": "YulBlock",
													"src": "17934:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17951:1:19",
																		"nodeType": "YulLiteral",
																		"src": "17951:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17954:77:19",
																		"nodeType": "YulLiteral",
																		"src": "17954:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17944:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "17944:6:19"
																},
																"nativeSrc": "17944:88:19",
																"nodeType": "YulFunctionCall",
																"src": "17944:88:19"
															},
															"nativeSrc": "17944:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "17944:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18048:1:19",
																		"nodeType": "YulLiteral",
																		"src": "18048:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18051:4:19",
																		"nodeType": "YulLiteral",
																		"src": "18051:4:19",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18041:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "18041:6:19"
																},
																"nativeSrc": "18041:15:19",
																"nodeType": "YulFunctionCall",
																"src": "18041:15:19"
															},
															"nativeSrc": "18041:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "18041:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18072:1:19",
																		"nodeType": "YulLiteral",
																		"src": "18072:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18075:4:19",
																		"nodeType": "YulLiteral",
																		"src": "18075:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18065:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "18065:6:19"
																},
																"nativeSrc": "18065:15:19",
																"nodeType": "YulFunctionCall",
																"src": "18065:15:19"
															},
															"nativeSrc": "18065:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "18065:15:19"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "17906:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "17906:180:19"
											},
											{
												"body": {
													"nativeSrc": "18135:190:19",
													"nodeType": "YulBlock",
													"src": "18135:190:19",
													"statements": [
														{
															"nativeSrc": "18145:33:19",
															"nodeType": "YulAssignment",
															"src": "18145:33:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18172:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "18172:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18154:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "18154:17:19"
																},
																"nativeSrc": "18154:24:19",
																"nodeType": "YulFunctionCall",
																"src": "18154:24:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "18145:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "18145:5:19"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18268:22:19",
																"nodeType": "YulBlock",
																"src": "18268:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18270:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "18270:16:19"
																			},
																			"nativeSrc": "18270:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "18270:18:19"
																		},
																		"nativeSrc": "18270:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "18270:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18193:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "18193:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18200:66:19",
																		"nodeType": "YulLiteral",
																		"src": "18200:66:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "18190:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "18190:2:19"
																},
																"nativeSrc": "18190:77:19",
																"nodeType": "YulFunctionCall",
																"src": "18190:77:19"
															},
															"nativeSrc": "18187:103:19",
															"nodeType": "YulIf",
															"src": "18187:103:19"
														},
														{
															"nativeSrc": "18299:20:19",
															"nodeType": "YulAssignment",
															"src": "18299:20:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18310:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "18310:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18317:1:19",
																		"nodeType": "YulLiteral",
																		"src": "18317:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18306:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18306:3:19"
																},
																"nativeSrc": "18306:13:19",
																"nodeType": "YulFunctionCall",
																"src": "18306:13:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "18299:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18299:3:19"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "18092:233:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18121:5:19",
														"nodeType": "YulTypedName",
														"src": "18121:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "18131:3:19",
														"nodeType": "YulTypedName",
														"src": "18131:3:19",
														"type": ""
													}
												],
												"src": "18092:233:19"
											},
											{
												"body": {
													"nativeSrc": "18389:40:19",
													"nodeType": "YulBlock",
													"src": "18389:40:19",
													"statements": [
														{
															"nativeSrc": "18400:22:19",
															"nodeType": "YulAssignment",
															"src": "18400:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18416:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "18416:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18410:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "18410:5:19"
																},
																"nativeSrc": "18410:12:19",
																"nodeType": "YulFunctionCall",
																"src": "18410:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "18400:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "18400:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "18331:98:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18372:5:19",
														"nodeType": "YulTypedName",
														"src": "18372:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "18382:6:19",
														"nodeType": "YulTypedName",
														"src": "18382:6:19",
														"type": ""
													}
												],
												"src": "18331:98:19"
											},
											{
												"body": {
													"nativeSrc": "18530:73:19",
													"nodeType": "YulBlock",
													"src": "18530:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18547:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "18547:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18552:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "18552:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18540:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "18540:6:19"
																},
																"nativeSrc": "18540:19:19",
																"nodeType": "YulFunctionCall",
																"src": "18540:19:19"
															},
															"nativeSrc": "18540:19:19",
															"nodeType": "YulExpressionStatement",
															"src": "18540:19:19"
														},
														{
															"nativeSrc": "18568:29:19",
															"nodeType": "YulAssignment",
															"src": "18568:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18587:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "18587:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18592:4:19",
																		"nodeType": "YulLiteral",
																		"src": "18592:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18583:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18583:3:19"
																},
																"nativeSrc": "18583:14:19",
																"nodeType": "YulFunctionCall",
																"src": "18583:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "18568:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "18568:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "18435:168:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18502:3:19",
														"nodeType": "YulTypedName",
														"src": "18502:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "18507:6:19",
														"nodeType": "YulTypedName",
														"src": "18507:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "18518:11:19",
														"nodeType": "YulTypedName",
														"src": "18518:11:19",
														"type": ""
													}
												],
												"src": "18435:168:19"
											},
											{
												"body": {
													"nativeSrc": "18699:283:19",
													"nodeType": "YulBlock",
													"src": "18699:283:19",
													"statements": [
														{
															"nativeSrc": "18709:52:19",
															"nodeType": "YulVariableDeclaration",
															"src": "18709:52:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18755:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "18755:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "18723:31:19",
																	"nodeType": "YulIdentifier",
																	"src": "18723:31:19"
																},
																"nativeSrc": "18723:38:19",
																"nodeType": "YulFunctionCall",
																"src": "18723:38:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "18713:6:19",
																	"nodeType": "YulTypedName",
																	"src": "18713:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18770:77:19",
															"nodeType": "YulAssignment",
															"src": "18770:77:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18835:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "18835:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18840:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "18840:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "18777:57:19",
																	"nodeType": "YulIdentifier",
																	"src": "18777:57:19"
																},
																"nativeSrc": "18777:70:19",
																"nodeType": "YulFunctionCall",
																"src": "18777:70:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18770:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18770:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18895:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "18895:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18902:4:19",
																				"nodeType": "YulLiteral",
																				"src": "18902:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18891:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "18891:3:19"
																		},
																		"nativeSrc": "18891:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18891:16:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18909:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "18909:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18914:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "18914:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "18856:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "18856:34:19"
																},
																"nativeSrc": "18856:65:19",
																"nodeType": "YulFunctionCall",
																"src": "18856:65:19"
															},
															"nativeSrc": "18856:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "18856:65:19"
														},
														{
															"nativeSrc": "18930:46:19",
															"nodeType": "YulAssignment",
															"src": "18930:46:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18941:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "18941:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "18968:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "18968:6:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "18946:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "18946:21:19"
																		},
																		"nativeSrc": "18946:29:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18946:29:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18937:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18937:3:19"
																},
																"nativeSrc": "18937:39:19",
																"nodeType": "YulFunctionCall",
																"src": "18937:39:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18930:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18930:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "18609:373:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18680:5:19",
														"nodeType": "YulTypedName",
														"src": "18680:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18687:3:19",
														"nodeType": "YulTypedName",
														"src": "18687:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18695:3:19",
														"nodeType": "YulTypedName",
														"src": "18695:3:19",
														"type": ""
													}
												],
												"src": "18609:373:19"
											},
											{
												"body": {
													"nativeSrc": "19188:440:19",
													"nodeType": "YulBlock",
													"src": "19188:440:19",
													"statements": [
														{
															"nativeSrc": "19198:27:19",
															"nodeType": "YulAssignment",
															"src": "19198:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19210:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "19210:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19221:3:19",
																		"nodeType": "YulLiteral",
																		"src": "19221:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19206:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19206:3:19"
																},
																"nativeSrc": "19206:19:19",
																"nodeType": "YulFunctionCall",
																"src": "19206:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19198:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "19198:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19279:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "19279:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19292:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "19292:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19303:1:19",
																				"nodeType": "YulLiteral",
																				"src": "19303:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19288:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19288:3:19"
																		},
																		"nativeSrc": "19288:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19288:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19235:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "19235:43:19"
																},
																"nativeSrc": "19235:71:19",
																"nodeType": "YulFunctionCall",
																"src": "19235:71:19"
															},
															"nativeSrc": "19235:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "19235:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19360:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "19360:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19373:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "19373:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19384:2:19",
																				"nodeType": "YulLiteral",
																				"src": "19384:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19369:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19369:3:19"
																		},
																		"nativeSrc": "19369:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19369:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19316:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "19316:43:19"
																},
																"nativeSrc": "19316:72:19",
																"nodeType": "YulFunctionCall",
																"src": "19316:72:19"
															},
															"nativeSrc": "19316:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "19316:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19442:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "19442:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19455:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "19455:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19466:2:19",
																				"nodeType": "YulLiteral",
																				"src": "19466:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19451:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19451:3:19"
																		},
																		"nativeSrc": "19451:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19451:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19398:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "19398:43:19"
																},
																"nativeSrc": "19398:72:19",
																"nodeType": "YulFunctionCall",
																"src": "19398:72:19"
															},
															"nativeSrc": "19398:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "19398:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19491:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "19491:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19502:2:19",
																				"nodeType": "YulLiteral",
																				"src": "19502:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19487:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19487:3:19"
																		},
																		"nativeSrc": "19487:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19487:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19511:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "19511:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19517:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "19517:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19507:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19507:3:19"
																		},
																		"nativeSrc": "19507:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19507:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19480:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "19480:6:19"
																},
																"nativeSrc": "19480:48:19",
																"nodeType": "YulFunctionCall",
																"src": "19480:48:19"
															},
															"nativeSrc": "19480:48:19",
															"nodeType": "YulExpressionStatement",
															"src": "19480:48:19"
														},
														{
															"nativeSrc": "19537:84:19",
															"nodeType": "YulAssignment",
															"src": "19537:84:19",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "19607:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "19607:6:19"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "19616:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "19616:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "19545:61:19",
																	"nodeType": "YulIdentifier",
																	"src": "19545:61:19"
																},
																"nativeSrc": "19545:76:19",
																"nodeType": "YulFunctionCall",
																"src": "19545:76:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19537:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "19537:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "18988:640:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19136:9:19",
														"nodeType": "YulTypedName",
														"src": "19136:9:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "19148:6:19",
														"nodeType": "YulTypedName",
														"src": "19148:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19156:6:19",
														"nodeType": "YulTypedName",
														"src": "19156:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19164:6:19",
														"nodeType": "YulTypedName",
														"src": "19164:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19172:6:19",
														"nodeType": "YulTypedName",
														"src": "19172:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19183:4:19",
														"nodeType": "YulTypedName",
														"src": "19183:4:19",
														"type": ""
													}
												],
												"src": "18988:640:19"
											},
											{
												"body": {
													"nativeSrc": "19696:79:19",
													"nodeType": "YulBlock",
													"src": "19696:79:19",
													"statements": [
														{
															"nativeSrc": "19706:22:19",
															"nodeType": "YulAssignment",
															"src": "19706:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "19721:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "19721:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19715:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "19715:5:19"
																},
																"nativeSrc": "19715:13:19",
																"nodeType": "YulFunctionCall",
																"src": "19715:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19706:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "19706:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19763:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "19763:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "19737:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "19737:25:19"
																},
																"nativeSrc": "19737:32:19",
																"nodeType": "YulFunctionCall",
																"src": "19737:32:19"
															},
															"nativeSrc": "19737:32:19",
															"nodeType": "YulExpressionStatement",
															"src": "19737:32:19"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "19634:141:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "19674:6:19",
														"nodeType": "YulTypedName",
														"src": "19674:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "19682:3:19",
														"nodeType": "YulTypedName",
														"src": "19682:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "19690:5:19",
														"nodeType": "YulTypedName",
														"src": "19690:5:19",
														"type": ""
													}
												],
												"src": "19634:141:19"
											},
											{
												"body": {
													"nativeSrc": "19857:273:19",
													"nodeType": "YulBlock",
													"src": "19857:273:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "19903:83:19",
																"nodeType": "YulBlock",
																"src": "19903:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "19905:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "19905:77:19"
																			},
																			"nativeSrc": "19905:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "19905:79:19"
																		},
																		"nativeSrc": "19905:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "19905:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19878:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "19878:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19887:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "19887:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19874:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19874:3:19"
																		},
																		"nativeSrc": "19874:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19874:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19899:2:19",
																		"nodeType": "YulLiteral",
																		"src": "19899:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "19870:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19870:3:19"
																},
																"nativeSrc": "19870:32:19",
																"nodeType": "YulFunctionCall",
																"src": "19870:32:19"
															},
															"nativeSrc": "19867:119:19",
															"nodeType": "YulIf",
															"src": "19867:119:19"
														},
														{
															"nativeSrc": "19996:127:19",
															"nodeType": "YulBlock",
															"src": "19996:127:19",
															"statements": [
																{
																	"nativeSrc": "20011:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20011:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20025:1:19",
																		"nodeType": "YulLiteral",
																		"src": "20025:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20015:6:19",
																			"nodeType": "YulTypedName",
																			"src": "20015:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20040:73:19",
																	"nodeType": "YulAssignment",
																	"src": "20040:73:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20085:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "20085:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20096:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "20096:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20081:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "20081:3:19"
																				},
																				"nativeSrc": "20081:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "20081:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20105:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "20105:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "20050:30:19",
																			"nodeType": "YulIdentifier",
																			"src": "20050:30:19"
																		},
																		"nativeSrc": "20050:63:19",
																		"nodeType": "YulFunctionCall",
																		"src": "20050:63:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "20040:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "20040:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "19781:349:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19827:9:19",
														"nodeType": "YulTypedName",
														"src": "19827:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19838:7:19",
														"nodeType": "YulTypedName",
														"src": "19838:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "19850:6:19",
														"nodeType": "YulTypedName",
														"src": "19850:6:19",
														"type": ""
													}
												],
												"src": "19781:349:19"
											},
											{
												"body": {
													"nativeSrc": "20242:75:19",
													"nodeType": "YulBlock",
													"src": "20242:75:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20264:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "20264:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20272:1:19",
																				"nodeType": "YulLiteral",
																				"src": "20272:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20260:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "20260:3:19"
																		},
																		"nativeSrc": "20260:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "20260:14:19"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "20276:33:19",
																		"nodeType": "YulLiteral",
																		"src": "20276:33:19",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20253:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "20253:6:19"
																},
																"nativeSrc": "20253:57:19",
																"nodeType": "YulFunctionCall",
																"src": "20253:57:19"
															},
															"nativeSrc": "20253:57:19",
															"nodeType": "YulExpressionStatement",
															"src": "20253:57:19"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "20136:181:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20234:6:19",
														"nodeType": "YulTypedName",
														"src": "20234:6:19",
														"type": ""
													}
												],
												"src": "20136:181:19"
											},
											{
												"body": {
													"nativeSrc": "20469:220:19",
													"nodeType": "YulBlock",
													"src": "20469:220:19",
													"statements": [
														{
															"nativeSrc": "20479:74:19",
															"nodeType": "YulAssignment",
															"src": "20479:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20545:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "20545:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20550:2:19",
																		"nodeType": "YulLiteral",
																		"src": "20550:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20486:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "20486:58:19"
																},
																"nativeSrc": "20486:67:19",
																"nodeType": "YulFunctionCall",
																"src": "20486:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20479:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "20479:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20651:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "20651:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "20562:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "20562:88:19"
																},
																"nativeSrc": "20562:93:19",
																"nodeType": "YulFunctionCall",
																"src": "20562:93:19"
															},
															"nativeSrc": "20562:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "20562:93:19"
														},
														{
															"nativeSrc": "20664:19:19",
															"nodeType": "YulAssignment",
															"src": "20664:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20675:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "20675:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20680:2:19",
																		"nodeType": "YulLiteral",
																		"src": "20680:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20671:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "20671:3:19"
																},
																"nativeSrc": "20671:12:19",
																"nodeType": "YulFunctionCall",
																"src": "20671:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20664:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "20664:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20323:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20457:3:19",
														"nodeType": "YulTypedName",
														"src": "20457:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20465:3:19",
														"nodeType": "YulTypedName",
														"src": "20465:3:19",
														"type": ""
													}
												],
												"src": "20323:366:19"
											},
											{
												"body": {
													"nativeSrc": "20866:248:19",
													"nodeType": "YulBlock",
													"src": "20866:248:19",
													"statements": [
														{
															"nativeSrc": "20876:26:19",
															"nodeType": "YulAssignment",
															"src": "20876:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20888:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "20888:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20899:2:19",
																		"nodeType": "YulLiteral",
																		"src": "20899:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20884:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "20884:3:19"
																},
																"nativeSrc": "20884:18:19",
																"nodeType": "YulFunctionCall",
																"src": "20884:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20876:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "20876:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20923:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "20923:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20934:1:19",
																				"nodeType": "YulLiteral",
																				"src": "20934:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20919:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "20919:3:19"
																		},
																		"nativeSrc": "20919:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "20919:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20942:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "20942:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20948:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "20948:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20938:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "20938:3:19"
																		},
																		"nativeSrc": "20938:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "20938:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20912:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "20912:6:19"
																},
																"nativeSrc": "20912:47:19",
																"nodeType": "YulFunctionCall",
																"src": "20912:47:19"
															},
															"nativeSrc": "20912:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "20912:47:19"
														},
														{
															"nativeSrc": "20968:139:19",
															"nodeType": "YulAssignment",
															"src": "20968:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21102:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "21102:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20976:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "20976:124:19"
																},
																"nativeSrc": "20976:131:19",
																"nodeType": "YulFunctionCall",
																"src": "20976:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20968:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "20968:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20695:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20846:9:19",
														"nodeType": "YulTypedName",
														"src": "20846:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20861:4:19",
														"nodeType": "YulTypedName",
														"src": "20861:4:19",
														"type": ""
													}
												],
												"src": "20695:419:19"
											},
											{
												"body": {
													"nativeSrc": "21174:87:19",
													"nodeType": "YulBlock",
													"src": "21174:87:19",
													"statements": [
														{
															"nativeSrc": "21184:11:19",
															"nodeType": "YulAssignment",
															"src": "21184:11:19",
															"value": {
																"name": "ptr",
																"nativeSrc": "21192:3:19",
																"nodeType": "YulIdentifier",
																"src": "21192:3:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "21184:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "21184:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21212:1:19",
																		"nodeType": "YulLiteral",
																		"src": "21212:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "21215:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "21215:3:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21205:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "21205:6:19"
																},
																"nativeSrc": "21205:14:19",
																"nodeType": "YulFunctionCall",
																"src": "21205:14:19"
															},
															"nativeSrc": "21205:14:19",
															"nodeType": "YulExpressionStatement",
															"src": "21205:14:19"
														},
														{
															"nativeSrc": "21228:26:19",
															"nodeType": "YulAssignment",
															"src": "21228:26:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21246:1:19",
																		"nodeType": "YulLiteral",
																		"src": "21246:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21249:4:19",
																		"nodeType": "YulLiteral",
																		"src": "21249:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "21236:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "21236:9:19"
																},
																"nativeSrc": "21236:18:19",
																"nodeType": "YulFunctionCall",
																"src": "21236:18:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "21228:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "21228:4:19"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "21120:141:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "21161:3:19",
														"nodeType": "YulTypedName",
														"src": "21161:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "21169:4:19",
														"nodeType": "YulTypedName",
														"src": "21169:4:19",
														"type": ""
													}
												],
												"src": "21120:141:19"
											},
											{
												"body": {
													"nativeSrc": "21311:49:19",
													"nodeType": "YulBlock",
													"src": "21311:49:19",
													"statements": [
														{
															"nativeSrc": "21321:33:19",
															"nodeType": "YulAssignment",
															"src": "21321:33:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21339:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "21339:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21346:2:19",
																				"nodeType": "YulLiteral",
																				"src": "21346:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21335:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "21335:3:19"
																		},
																		"nativeSrc": "21335:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "21335:14:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21351:2:19",
																		"nodeType": "YulLiteral",
																		"src": "21351:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "21331:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "21331:3:19"
																},
																"nativeSrc": "21331:23:19",
																"nodeType": "YulFunctionCall",
																"src": "21331:23:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "21321:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "21321:6:19"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "21267:93:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21294:5:19",
														"nodeType": "YulTypedName",
														"src": "21294:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "21304:6:19",
														"nodeType": "YulTypedName",
														"src": "21304:6:19",
														"type": ""
													}
												],
												"src": "21267:93:19"
											},
											{
												"body": {
													"nativeSrc": "21419:54:19",
													"nodeType": "YulBlock",
													"src": "21419:54:19",
													"statements": [
														{
															"nativeSrc": "21429:37:19",
															"nodeType": "YulAssignment",
															"src": "21429:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "21454:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "21454:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "21460:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "21460:5:19"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "21450:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "21450:3:19"
																},
																"nativeSrc": "21450:16:19",
																"nodeType": "YulFunctionCall",
																"src": "21450:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "21429:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "21429:8:19"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "21366:107:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "21394:4:19",
														"nodeType": "YulTypedName",
														"src": "21394:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "21400:5:19",
														"nodeType": "YulTypedName",
														"src": "21400:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "21410:8:19",
														"nodeType": "YulTypedName",
														"src": "21410:8:19",
														"type": ""
													}
												],
												"src": "21366:107:19"
											},
											{
												"body": {
													"nativeSrc": "21555:317:19",
													"nodeType": "YulBlock",
													"src": "21555:317:19",
													"statements": [
														{
															"nativeSrc": "21565:35:19",
															"nodeType": "YulVariableDeclaration",
															"src": "21565:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "21586:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "21586:10:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21598:1:19",
																		"nodeType": "YulLiteral",
																		"src": "21598:1:19",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "21582:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "21582:3:19"
																},
																"nativeSrc": "21582:18:19",
																"nodeType": "YulFunctionCall",
																"src": "21582:18:19"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "21569:9:19",
																	"nodeType": "YulTypedName",
																	"src": "21569:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21609:109:19",
															"nodeType": "YulVariableDeclaration",
															"src": "21609:109:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "21640:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "21640:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21651:66:19",
																		"nodeType": "YulLiteral",
																		"src": "21651:66:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "21621:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "21621:18:19"
																},
																"nativeSrc": "21621:97:19",
																"nodeType": "YulFunctionCall",
																"src": "21621:97:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "21613:4:19",
																	"nodeType": "YulTypedName",
																	"src": "21613:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21727:51:19",
															"nodeType": "YulAssignment",
															"src": "21727:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "21758:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "21758:9:19"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "21769:8:19",
																		"nodeType": "YulIdentifier",
																		"src": "21769:8:19"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "21739:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "21739:18:19"
																},
																"nativeSrc": "21739:39:19",
																"nodeType": "YulFunctionCall",
																"src": "21739:39:19"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "21727:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "21727:8:19"
																}
															]
														},
														{
															"nativeSrc": "21787:30:19",
															"nodeType": "YulAssignment",
															"src": "21787:30:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21800:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "21800:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "21811:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "21811:4:19"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "21807:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "21807:3:19"
																		},
																		"nativeSrc": "21807:9:19",
																		"nodeType": "YulFunctionCall",
																		"src": "21807:9:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "21796:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "21796:3:19"
																},
																"nativeSrc": "21796:21:19",
																"nodeType": "YulFunctionCall",
																"src": "21796:21:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21787:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "21787:5:19"
																}
															]
														},
														{
															"nativeSrc": "21826:40:19",
															"nodeType": "YulAssignment",
															"src": "21826:40:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21839:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "21839:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "21850:8:19",
																				"nodeType": "YulIdentifier",
																				"src": "21850:8:19"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "21860:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "21860:4:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "21846:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "21846:3:19"
																		},
																		"nativeSrc": "21846:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "21846:19:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "21836:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "21836:2:19"
																},
																"nativeSrc": "21836:30:19",
																"nodeType": "YulFunctionCall",
																"src": "21836:30:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "21826:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "21826:6:19"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "21479:393:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21516:5:19",
														"nodeType": "YulTypedName",
														"src": "21516:5:19",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "21523:10:19",
														"nodeType": "YulTypedName",
														"src": "21523:10:19",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "21535:8:19",
														"nodeType": "YulTypedName",
														"src": "21535:8:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "21548:6:19",
														"nodeType": "YulTypedName",
														"src": "21548:6:19",
														"type": ""
													}
												],
												"src": "21479:393:19"
											},
											{
												"body": {
													"nativeSrc": "21910:28:19",
													"nodeType": "YulBlock",
													"src": "21910:28:19",
													"statements": [
														{
															"nativeSrc": "21920:12:19",
															"nodeType": "YulAssignment",
															"src": "21920:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "21927:5:19",
																"nodeType": "YulIdentifier",
																"src": "21927:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "21920:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "21920:3:19"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "21878:60:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21896:5:19",
														"nodeType": "YulTypedName",
														"src": "21896:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "21906:3:19",
														"nodeType": "YulTypedName",
														"src": "21906:3:19",
														"type": ""
													}
												],
												"src": "21878:60:19"
											},
											{
												"body": {
													"nativeSrc": "22004:82:19",
													"nodeType": "YulBlock",
													"src": "22004:82:19",
													"statements": [
														{
															"nativeSrc": "22014:66:19",
															"nodeType": "YulAssignment",
															"src": "22014:66:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "22072:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "22072:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "22054:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "22054:17:19"
																				},
																				"nativeSrc": "22054:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "22054:24:19"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "22045:8:19",
																			"nodeType": "YulIdentifier",
																			"src": "22045:8:19"
																		},
																		"nativeSrc": "22045:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "22045:34:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22027:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "22027:17:19"
																},
																"nativeSrc": "22027:53:19",
																"nodeType": "YulFunctionCall",
																"src": "22027:53:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "22014:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "22014:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "21944:142:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21984:5:19",
														"nodeType": "YulTypedName",
														"src": "21984:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "21994:9:19",
														"nodeType": "YulTypedName",
														"src": "21994:9:19",
														"type": ""
													}
												],
												"src": "21944:142:19"
											},
											{
												"body": {
													"nativeSrc": "22139:28:19",
													"nodeType": "YulBlock",
													"src": "22139:28:19",
													"statements": [
														{
															"nativeSrc": "22149:12:19",
															"nodeType": "YulAssignment",
															"src": "22149:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "22156:5:19",
																"nodeType": "YulIdentifier",
																"src": "22156:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "22149:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "22149:3:19"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "22092:75:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22125:5:19",
														"nodeType": "YulTypedName",
														"src": "22125:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "22135:3:19",
														"nodeType": "YulTypedName",
														"src": "22135:3:19",
														"type": ""
													}
												],
												"src": "22092:75:19"
											},
											{
												"body": {
													"nativeSrc": "22249:193:19",
													"nodeType": "YulBlock",
													"src": "22249:193:19",
													"statements": [
														{
															"nativeSrc": "22259:63:19",
															"nodeType": "YulVariableDeclaration",
															"src": "22259:63:19",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "22314:7:19",
																		"nodeType": "YulIdentifier",
																		"src": "22314:7:19"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "22283:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "22283:30:19"
																},
																"nativeSrc": "22283:39:19",
																"nodeType": "YulFunctionCall",
																"src": "22283:39:19"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "22263:16:19",
																	"nodeType": "YulTypedName",
																	"src": "22263:16:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "22338:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "22338:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "22378:4:19",
																						"nodeType": "YulIdentifier",
																						"src": "22378:4:19"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "22372:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "22372:5:19"
																				},
																				"nativeSrc": "22372:11:19",
																				"nodeType": "YulFunctionCall",
																				"src": "22372:11:19"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "22385:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "22385:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "22417:16:19",
																						"nodeType": "YulIdentifier",
																						"src": "22417:16:19"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "22393:23:19",
																					"nodeType": "YulIdentifier",
																					"src": "22393:23:19"
																				},
																				"nativeSrc": "22393:41:19",
																				"nodeType": "YulFunctionCall",
																				"src": "22393:41:19"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "22344:27:19",
																			"nodeType": "YulIdentifier",
																			"src": "22344:27:19"
																		},
																		"nativeSrc": "22344:91:19",
																		"nodeType": "YulFunctionCall",
																		"src": "22344:91:19"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "22331:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "22331:6:19"
																},
																"nativeSrc": "22331:105:19",
																"nodeType": "YulFunctionCall",
																"src": "22331:105:19"
															},
															"nativeSrc": "22331:105:19",
															"nodeType": "YulExpressionStatement",
															"src": "22331:105:19"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "22173:269:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "22226:4:19",
														"nodeType": "YulTypedName",
														"src": "22226:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "22232:6:19",
														"nodeType": "YulTypedName",
														"src": "22232:6:19",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "22240:7:19",
														"nodeType": "YulTypedName",
														"src": "22240:7:19",
														"type": ""
													}
												],
												"src": "22173:269:19"
											},
											{
												"body": {
													"nativeSrc": "22497:24:19",
													"nodeType": "YulBlock",
													"src": "22497:24:19",
													"statements": [
														{
															"nativeSrc": "22507:8:19",
															"nodeType": "YulAssignment",
															"src": "22507:8:19",
															"value": {
																"kind": "number",
																"nativeSrc": "22514:1:19",
																"nodeType": "YulLiteral",
																"src": "22514:1:19",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "22507:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "22507:3:19"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "22448:73:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "22493:3:19",
														"nodeType": "YulTypedName",
														"src": "22493:3:19",
														"type": ""
													}
												],
												"src": "22448:73:19"
											},
											{
												"body": {
													"nativeSrc": "22580:136:19",
													"nodeType": "YulBlock",
													"src": "22580:136:19",
													"statements": [
														{
															"nativeSrc": "22590:46:19",
															"nodeType": "YulVariableDeclaration",
															"src": "22590:46:19",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "22604:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "22604:30:19"
																},
																"nativeSrc": "22604:32:19",
																"nodeType": "YulFunctionCall",
																"src": "22604:32:19"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "22594:6:19",
																	"nodeType": "YulTypedName",
																	"src": "22594:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "22689:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "22689:4:19"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "22695:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "22695:6:19"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "22703:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "22703:6:19"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "22645:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "22645:43:19"
																},
																"nativeSrc": "22645:65:19",
																"nodeType": "YulFunctionCall",
																"src": "22645:65:19"
															},
															"nativeSrc": "22645:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "22645:65:19"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "22527:189:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "22566:4:19",
														"nodeType": "YulTypedName",
														"src": "22566:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "22572:6:19",
														"nodeType": "YulTypedName",
														"src": "22572:6:19",
														"type": ""
													}
												],
												"src": "22527:189:19"
											},
											{
												"body": {
													"nativeSrc": "22772:136:19",
													"nodeType": "YulBlock",
													"src": "22772:136:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "22839:63:19",
																"nodeType": "YulBlock",
																"src": "22839:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "22883:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "22883:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "22890:1:19",
																					"nodeType": "YulLiteral",
																					"src": "22890:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "22853:29:19",
																				"nodeType": "YulIdentifier",
																				"src": "22853:29:19"
																			},
																			"nativeSrc": "22853:39:19",
																			"nodeType": "YulFunctionCall",
																			"src": "22853:39:19"
																		},
																		"nativeSrc": "22853:39:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "22853:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "22792:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "22792:5:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "22799:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "22799:3:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "22789:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "22789:2:19"
																},
																"nativeSrc": "22789:14:19",
																"nodeType": "YulFunctionCall",
																"src": "22789:14:19"
															},
															"nativeSrc": "22782:120:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "22804:26:19",
																"nodeType": "YulBlock",
																"src": "22804:26:19",
																"statements": [
																	{
																		"nativeSrc": "22806:22:19",
																		"nodeType": "YulAssignment",
																		"src": "22806:22:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "22819:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "22819:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "22826:1:19",
																					"nodeType": "YulLiteral",
																					"src": "22826:1:19",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "22815:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "22815:3:19"
																			},
																			"nativeSrc": "22815:13:19",
																			"nodeType": "YulFunctionCall",
																			"src": "22815:13:19"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "22806:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "22806:5:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "22786:2:19",
																"nodeType": "YulBlock",
																"src": "22786:2:19",
																"statements": []
															},
															"src": "22782:120:19"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "22722:186:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "22760:5:19",
														"nodeType": "YulTypedName",
														"src": "22760:5:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "22767:3:19",
														"nodeType": "YulTypedName",
														"src": "22767:3:19",
														"type": ""
													}
												],
												"src": "22722:186:19"
											},
											{
												"body": {
													"nativeSrc": "22993:464:19",
													"nodeType": "YulBlock",
													"src": "22993:464:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "23019:431:19",
																"nodeType": "YulBlock",
																"src": "23019:431:19",
																"statements": [
																	{
																		"nativeSrc": "23033:54:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "23033:54:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "23081:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "23081:5:19"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "23049:31:19",
																				"nodeType": "YulIdentifier",
																				"src": "23049:31:19"
																			},
																			"nativeSrc": "23049:38:19",
																			"nodeType": "YulFunctionCall",
																			"src": "23049:38:19"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "23037:8:19",
																				"nodeType": "YulTypedName",
																				"src": "23037:8:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "23100:63:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "23100:63:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "23123:8:19",
																					"nodeType": "YulIdentifier",
																					"src": "23123:8:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "23151:10:19",
																							"nodeType": "YulIdentifier",
																							"src": "23151:10:19"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "23133:17:19",
																						"nodeType": "YulIdentifier",
																						"src": "23133:17:19"
																					},
																					"nativeSrc": "23133:29:19",
																					"nodeType": "YulFunctionCall",
																					"src": "23133:29:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "23119:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "23119:3:19"
																			},
																			"nativeSrc": "23119:44:19",
																			"nodeType": "YulFunctionCall",
																			"src": "23119:44:19"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "23104:11:19",
																				"nodeType": "YulTypedName",
																				"src": "23104:11:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "23320:27:19",
																			"nodeType": "YulBlock",
																			"src": "23320:27:19",
																			"statements": [
																				{
																					"nativeSrc": "23322:23:19",
																					"nodeType": "YulAssignment",
																					"src": "23322:23:19",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "23337:8:19",
																						"nodeType": "YulIdentifier",
																						"src": "23337:8:19"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "23322:11:19",
																							"nodeType": "YulIdentifier",
																							"src": "23322:11:19"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "23304:10:19",
																					"nodeType": "YulIdentifier",
																					"src": "23304:10:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23316:2:19",
																					"nodeType": "YulLiteral",
																					"src": "23316:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "23301:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "23301:2:19"
																			},
																			"nativeSrc": "23301:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "23301:18:19"
																		},
																		"nativeSrc": "23298:49:19",
																		"nodeType": "YulIf",
																		"src": "23298:49:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "23389:11:19",
																					"nodeType": "YulIdentifier",
																					"src": "23389:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "23406:8:19",
																							"nodeType": "YulIdentifier",
																							"src": "23406:8:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "23434:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "23434:3:19"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "23416:17:19",
																								"nodeType": "YulIdentifier",
																								"src": "23416:17:19"
																							},
																							"nativeSrc": "23416:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "23416:22:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "23402:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "23402:3:19"
																					},
																					"nativeSrc": "23402:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "23402:37:19"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "23360:28:19",
																				"nodeType": "YulIdentifier",
																				"src": "23360:28:19"
																			},
																			"nativeSrc": "23360:80:19",
																			"nodeType": "YulFunctionCall",
																			"src": "23360:80:19"
																		},
																		"nativeSrc": "23360:80:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "23360:80:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "23010:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "23010:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23015:2:19",
																		"nodeType": "YulLiteral",
																		"src": "23015:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23007:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "23007:2:19"
																},
																"nativeSrc": "23007:11:19",
																"nodeType": "YulFunctionCall",
																"src": "23007:11:19"
															},
															"nativeSrc": "23004:446:19",
															"nodeType": "YulIf",
															"src": "23004:446:19"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "22914:543:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "22969:5:19",
														"nodeType": "YulTypedName",
														"src": "22969:5:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "22976:3:19",
														"nodeType": "YulTypedName",
														"src": "22976:3:19",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "22981:10:19",
														"nodeType": "YulTypedName",
														"src": "22981:10:19",
														"type": ""
													}
												],
												"src": "22914:543:19"
											},
											{
												"body": {
													"nativeSrc": "23526:54:19",
													"nodeType": "YulBlock",
													"src": "23526:54:19",
													"statements": [
														{
															"nativeSrc": "23536:37:19",
															"nodeType": "YulAssignment",
															"src": "23536:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "23561:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "23561:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "23567:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "23567:5:19"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "23557:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "23557:3:19"
																},
																"nativeSrc": "23557:16:19",
																"nodeType": "YulFunctionCall",
																"src": "23557:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "23536:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "23536:8:19"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "23463:117:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "23501:4:19",
														"nodeType": "YulTypedName",
														"src": "23501:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "23507:5:19",
														"nodeType": "YulTypedName",
														"src": "23507:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "23517:8:19",
														"nodeType": "YulTypedName",
														"src": "23517:8:19",
														"type": ""
													}
												],
												"src": "23463:117:19"
											},
											{
												"body": {
													"nativeSrc": "23637:118:19",
													"nodeType": "YulBlock",
													"src": "23637:118:19",
													"statements": [
														{
															"nativeSrc": "23647:68:19",
															"nodeType": "YulVariableDeclaration",
															"src": "23647:68:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "23696:1:19",
																						"nodeType": "YulLiteral",
																						"src": "23696:1:19",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "23699:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "23699:5:19"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "23692:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "23692:3:19"
																				},
																				"nativeSrc": "23692:13:19",
																				"nodeType": "YulFunctionCall",
																				"src": "23692:13:19"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "23711:1:19",
																						"nodeType": "YulLiteral",
																						"src": "23711:1:19",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "23707:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "23707:3:19"
																				},
																				"nativeSrc": "23707:6:19",
																				"nodeType": "YulFunctionCall",
																				"src": "23707:6:19"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "23663:28:19",
																			"nodeType": "YulIdentifier",
																			"src": "23663:28:19"
																		},
																		"nativeSrc": "23663:51:19",
																		"nodeType": "YulFunctionCall",
																		"src": "23663:51:19"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "23659:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "23659:3:19"
																},
																"nativeSrc": "23659:56:19",
																"nodeType": "YulFunctionCall",
																"src": "23659:56:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "23651:4:19",
																	"nodeType": "YulTypedName",
																	"src": "23651:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23724:25:19",
															"nodeType": "YulAssignment",
															"src": "23724:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "23738:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "23738:4:19"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "23744:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "23744:4:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "23734:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "23734:3:19"
																},
																"nativeSrc": "23734:15:19",
																"nodeType": "YulFunctionCall",
																"src": "23734:15:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "23724:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "23724:6:19"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "23586:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "23614:4:19",
														"nodeType": "YulTypedName",
														"src": "23614:4:19",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "23620:5:19",
														"nodeType": "YulTypedName",
														"src": "23620:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "23630:6:19",
														"nodeType": "YulTypedName",
														"src": "23630:6:19",
														"type": ""
													}
												],
												"src": "23586:169:19"
											},
											{
												"body": {
													"nativeSrc": "23841:214:19",
													"nodeType": "YulBlock",
													"src": "23841:214:19",
													"statements": [
														{
															"nativeSrc": "23974:37:19",
															"nodeType": "YulAssignment",
															"src": "23974:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "24001:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "24001:4:19"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "24007:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "24007:3:19"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "23982:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "23982:18:19"
																},
																"nativeSrc": "23982:29:19",
																"nodeType": "YulFunctionCall",
																"src": "23982:29:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "23974:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "23974:4:19"
																}
															]
														},
														{
															"nativeSrc": "24020:29:19",
															"nodeType": "YulAssignment",
															"src": "24020:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "24031:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "24031:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "24041:1:19",
																				"nodeType": "YulLiteral",
																				"src": "24041:1:19",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "24044:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "24044:3:19"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "24037:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "24037:3:19"
																		},
																		"nativeSrc": "24037:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "24037:11:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "24028:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "24028:2:19"
																},
																"nativeSrc": "24028:21:19",
																"nodeType": "YulFunctionCall",
																"src": "24028:21:19"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "24020:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "24020:4:19"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "23760:295:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "23822:4:19",
														"nodeType": "YulTypedName",
														"src": "23822:4:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "23828:3:19",
														"nodeType": "YulTypedName",
														"src": "23828:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "23836:4:19",
														"nodeType": "YulTypedName",
														"src": "23836:4:19",
														"type": ""
													}
												],
												"src": "23760:295:19"
											},
											{
												"body": {
													"nativeSrc": "24152:1303:19",
													"nodeType": "YulBlock",
													"src": "24152:1303:19",
													"statements": [
														{
															"nativeSrc": "24163:51:19",
															"nodeType": "YulVariableDeclaration",
															"src": "24163:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "24210:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "24210:3:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "24177:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "24177:32:19"
																},
																"nativeSrc": "24177:37:19",
																"nodeType": "YulFunctionCall",
																"src": "24177:37:19"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "24167:6:19",
																	"nodeType": "YulTypedName",
																	"src": "24167:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "24299:22:19",
																"nodeType": "YulBlock",
																"src": "24299:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "24301:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "24301:16:19"
																			},
																			"nativeSrc": "24301:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "24301:18:19"
																		},
																		"nativeSrc": "24301:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "24301:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "24271:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "24271:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24279:18:19",
																		"nodeType": "YulLiteral",
																		"src": "24279:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "24268:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "24268:2:19"
																},
																"nativeSrc": "24268:30:19",
																"nodeType": "YulFunctionCall",
																"src": "24268:30:19"
															},
															"nativeSrc": "24265:56:19",
															"nodeType": "YulIf",
															"src": "24265:56:19"
														},
														{
															"nativeSrc": "24331:52:19",
															"nodeType": "YulVariableDeclaration",
															"src": "24331:52:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "24377:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "24377:4:19"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "24371:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "24371:5:19"
																		},
																		"nativeSrc": "24371:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "24371:11:19"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "24345:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "24345:25:19"
																},
																"nativeSrc": "24345:38:19",
																"nodeType": "YulFunctionCall",
																"src": "24345:38:19"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "24335:6:19",
																	"nodeType": "YulTypedName",
																	"src": "24335:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "24476:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "24476:4:19"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "24482:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "24482:6:19"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "24490:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "24490:6:19"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "24430:45:19",
																	"nodeType": "YulIdentifier",
																	"src": "24430:45:19"
																},
																"nativeSrc": "24430:67:19",
																"nodeType": "YulFunctionCall",
																"src": "24430:67:19"
															},
															"nativeSrc": "24430:67:19",
															"nodeType": "YulExpressionStatement",
															"src": "24430:67:19"
														},
														{
															"nativeSrc": "24507:18:19",
															"nodeType": "YulVariableDeclaration",
															"src": "24507:18:19",
															"value": {
																"kind": "number",
																"nativeSrc": "24524:1:19",
																"nodeType": "YulLiteral",
																"src": "24524:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "24511:9:19",
																	"nodeType": "YulTypedName",
																	"src": "24511:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24535:17:19",
															"nodeType": "YulAssignment",
															"src": "24535:17:19",
															"value": {
																"kind": "number",
																"nativeSrc": "24548:4:19",
																"nodeType": "YulLiteral",
																"src": "24548:4:19",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "24535:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "24535:9:19"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "24599:611:19",
																		"nodeType": "YulBlock",
																		"src": "24599:611:19",
																		"statements": [
																			{
																				"nativeSrc": "24613:37:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "24613:37:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "24632:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "24632:6:19"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "24644:4:19",
																									"nodeType": "YulLiteral",
																									"src": "24644:4:19",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "24640:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "24640:3:19"
																							},
																							"nativeSrc": "24640:9:19",
																							"nodeType": "YulFunctionCall",
																							"src": "24640:9:19"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "24628:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "24628:3:19"
																					},
																					"nativeSrc": "24628:22:19",
																					"nodeType": "YulFunctionCall",
																					"src": "24628:22:19"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "24617:7:19",
																						"nodeType": "YulTypedName",
																						"src": "24617:7:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "24664:51:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "24664:51:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "24710:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "24710:4:19"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "24678:31:19",
																						"nodeType": "YulIdentifier",
																						"src": "24678:31:19"
																					},
																					"nativeSrc": "24678:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "24678:37:19"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "24668:6:19",
																						"nodeType": "YulTypedName",
																						"src": "24668:6:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "24728:10:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "24728:10:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "24737:1:19",
																					"nodeType": "YulLiteral",
																					"src": "24737:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "24732:1:19",
																						"nodeType": "YulTypedName",
																						"src": "24732:1:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "24796:163:19",
																					"nodeType": "YulBlock",
																					"src": "24796:163:19",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "24821:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "24821:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "24839:3:19",
																														"nodeType": "YulIdentifier",
																														"src": "24839:3:19"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "24844:9:19",
																														"nodeType": "YulIdentifier",
																														"src": "24844:9:19"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "24835:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "24835:3:19"
																												},
																												"nativeSrc": "24835:19:19",
																												"nodeType": "YulFunctionCall",
																												"src": "24835:19:19"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "24829:5:19",
																											"nodeType": "YulIdentifier",
																											"src": "24829:5:19"
																										},
																										"nativeSrc": "24829:26:19",
																										"nodeType": "YulFunctionCall",
																										"src": "24829:26:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "24814:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "24814:6:19"
																								},
																								"nativeSrc": "24814:42:19",
																								"nodeType": "YulFunctionCall",
																								"src": "24814:42:19"
																							},
																							"nativeSrc": "24814:42:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "24814:42:19"
																						},
																						{
																							"nativeSrc": "24873:24:19",
																							"nodeType": "YulAssignment",
																							"src": "24873:24:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "24887:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "24887:6:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "24895:1:19",
																										"nodeType": "YulLiteral",
																										"src": "24895:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "24883:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "24883:3:19"
																								},
																								"nativeSrc": "24883:14:19",
																								"nodeType": "YulFunctionCall",
																								"src": "24883:14:19"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "24873:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "24873:6:19"
																								}
																							]
																						},
																						{
																							"nativeSrc": "24914:31:19",
																							"nodeType": "YulAssignment",
																							"src": "24914:31:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "24931:9:19",
																										"nodeType": "YulIdentifier",
																										"src": "24931:9:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "24942:2:19",
																										"nodeType": "YulLiteral",
																										"src": "24942:2:19",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "24927:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "24927:3:19"
																								},
																								"nativeSrc": "24927:18:19",
																								"nodeType": "YulFunctionCall",
																								"src": "24927:18:19"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "24914:9:19",
																									"nodeType": "YulIdentifier",
																									"src": "24914:9:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "24762:1:19",
																							"nodeType": "YulIdentifier",
																							"src": "24762:1:19"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "24765:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "24765:7:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "24759:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "24759:2:19"
																					},
																					"nativeSrc": "24759:14:19",
																					"nodeType": "YulFunctionCall",
																					"src": "24759:14:19"
																				},
																				"nativeSrc": "24751:208:19",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "24774:21:19",
																					"nodeType": "YulBlock",
																					"src": "24774:21:19",
																					"statements": [
																						{
																							"nativeSrc": "24776:17:19",
																							"nodeType": "YulAssignment",
																							"src": "24776:17:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "24785:1:19",
																										"nodeType": "YulIdentifier",
																										"src": "24785:1:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "24788:4:19",
																										"nodeType": "YulLiteral",
																										"src": "24788:4:19",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "24781:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "24781:3:19"
																								},
																								"nativeSrc": "24781:12:19",
																								"nodeType": "YulFunctionCall",
																								"src": "24781:12:19"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "24776:1:19",
																									"nodeType": "YulIdentifier",
																									"src": "24776:1:19"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "24755:3:19",
																					"nodeType": "YulBlock",
																					"src": "24755:3:19",
																					"statements": []
																				},
																				"src": "24751:208:19"
																			},
																			{
																				"body": {
																					"nativeSrc": "24995:156:19",
																					"nodeType": "YulBlock",
																					"src": "24995:156:19",
																					"statements": [
																						{
																							"nativeSrc": "25013:43:19",
																							"nodeType": "YulVariableDeclaration",
																							"src": "25013:43:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "25040:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "25040:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "25045:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "25045:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "25036:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "25036:3:19"
																										},
																										"nativeSrc": "25036:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "25036:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "25030:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "25030:5:19"
																								},
																								"nativeSrc": "25030:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "25030:26:19"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "25017:9:19",
																									"nodeType": "YulTypedName",
																									"src": "25017:9:19",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "25080:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "25080:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "25107:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "25107:9:19"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "25122:6:19",
																														"nodeType": "YulIdentifier",
																														"src": "25122:6:19"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "25130:4:19",
																														"nodeType": "YulLiteral",
																														"src": "25130:4:19",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "25118:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "25118:3:19"
																												},
																												"nativeSrc": "25118:17:19",
																												"nodeType": "YulFunctionCall",
																												"src": "25118:17:19"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "25088:18:19",
																											"nodeType": "YulIdentifier",
																											"src": "25088:18:19"
																										},
																										"nativeSrc": "25088:48:19",
																										"nodeType": "YulFunctionCall",
																										"src": "25088:48:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "25073:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "25073:6:19"
																								},
																								"nativeSrc": "25073:64:19",
																								"nodeType": "YulFunctionCall",
																								"src": "25073:64:19"
																							},
																							"nativeSrc": "25073:64:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "25073:64:19"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "24978:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "24978:7:19"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "24987:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "24987:6:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "24975:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "24975:2:19"
																					},
																					"nativeSrc": "24975:19:19",
																					"nodeType": "YulFunctionCall",
																					"src": "24975:19:19"
																				},
																				"nativeSrc": "24972:179:19",
																				"nodeType": "YulIf",
																				"src": "24972:179:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "25171:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "25171:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "25185:6:19",
																											"nodeType": "YulIdentifier",
																											"src": "25185:6:19"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "25193:1:19",
																											"nodeType": "YulLiteral",
																											"src": "25193:1:19",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "25181:3:19",
																										"nodeType": "YulIdentifier",
																										"src": "25181:3:19"
																									},
																									"nativeSrc": "25181:14:19",
																									"nodeType": "YulFunctionCall",
																									"src": "25181:14:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "25197:1:19",
																									"nodeType": "YulLiteral",
																									"src": "25197:1:19",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "25177:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "25177:3:19"
																							},
																							"nativeSrc": "25177:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "25177:22:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "25164:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "25164:6:19"
																					},
																					"nativeSrc": "25164:36:19",
																					"nodeType": "YulFunctionCall",
																					"src": "25164:36:19"
																				},
																				"nativeSrc": "25164:36:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "25164:36:19"
																			}
																		]
																	},
																	"nativeSrc": "24592:618:19",
																	"nodeType": "YulCase",
																	"src": "24592:618:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "24597:1:19",
																		"nodeType": "YulLiteral",
																		"src": "24597:1:19",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "25227:222:19",
																		"nodeType": "YulBlock",
																		"src": "25227:222:19",
																		"statements": [
																			{
																				"nativeSrc": "25241:14:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25241:14:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "25254:1:19",
																					"nodeType": "YulLiteral",
																					"src": "25254:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "25245:5:19",
																						"nodeType": "YulTypedName",
																						"src": "25245:5:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "25278:67:19",
																					"nodeType": "YulBlock",
																					"src": "25278:67:19",
																					"statements": [
																						{
																							"nativeSrc": "25296:35:19",
																							"nodeType": "YulAssignment",
																							"src": "25296:35:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "25315:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "25315:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "25320:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "25320:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "25311:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "25311:3:19"
																										},
																										"nativeSrc": "25311:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "25311:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "25305:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "25305:5:19"
																								},
																								"nativeSrc": "25305:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "25305:26:19"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "25296:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "25296:5:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "25271:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "25271:6:19"
																				},
																				"nativeSrc": "25268:77:19",
																				"nodeType": "YulIf",
																				"src": "25268:77:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "25365:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "25365:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "25424:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "25424:5:19"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "25431:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "25431:6:19"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "25371:52:19",
																								"nodeType": "YulIdentifier",
																								"src": "25371:52:19"
																							},
																							"nativeSrc": "25371:67:19",
																							"nodeType": "YulFunctionCall",
																							"src": "25371:67:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "25358:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "25358:6:19"
																					},
																					"nativeSrc": "25358:81:19",
																					"nodeType": "YulFunctionCall",
																					"src": "25358:81:19"
																				},
																				"nativeSrc": "25358:81:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "25358:81:19"
																			}
																		]
																	},
																	"nativeSrc": "25219:230:19",
																	"nodeType": "YulCase",
																	"src": "25219:230:19",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "24572:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "24572:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24580:2:19",
																		"nodeType": "YulLiteral",
																		"src": "24580:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "24569:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "24569:2:19"
																},
																"nativeSrc": "24569:14:19",
																"nodeType": "YulFunctionCall",
																"src": "24569:14:19"
															},
															"nativeSrc": "24562:887:19",
															"nodeType": "YulSwitch",
															"src": "24562:887:19"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "24060:1395:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "24141:4:19",
														"nodeType": "YulTypedName",
														"src": "24141:4:19",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "24147:3:19",
														"nodeType": "YulTypedName",
														"src": "24147:3:19",
														"type": ""
													}
												],
												"src": "24060:1395:19"
											},
											{
												"body": {
													"nativeSrc": "25587:206:19",
													"nodeType": "YulBlock",
													"src": "25587:206:19",
													"statements": [
														{
															"nativeSrc": "25597:26:19",
															"nodeType": "YulAssignment",
															"src": "25597:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25609:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "25609:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25620:2:19",
																		"nodeType": "YulLiteral",
																		"src": "25620:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25605:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "25605:3:19"
																},
																"nativeSrc": "25605:18:19",
																"nodeType": "YulFunctionCall",
																"src": "25605:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25597:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "25597:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25677:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "25677:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25690:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "25690:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25701:1:19",
																				"nodeType": "YulLiteral",
																				"src": "25701:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25686:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "25686:3:19"
																		},
																		"nativeSrc": "25686:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "25686:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25633:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "25633:43:19"
																},
																"nativeSrc": "25633:71:19",
																"nodeType": "YulFunctionCall",
																"src": "25633:71:19"
															},
															"nativeSrc": "25633:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "25633:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25758:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "25758:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25771:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "25771:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25782:2:19",
																				"nodeType": "YulLiteral",
																				"src": "25782:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25767:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "25767:3:19"
																		},
																		"nativeSrc": "25767:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "25767:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25714:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "25714:43:19"
																},
																"nativeSrc": "25714:72:19",
																"nodeType": "YulFunctionCall",
																"src": "25714:72:19"
															},
															"nativeSrc": "25714:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "25714:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "25461:332:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25551:9:19",
														"nodeType": "YulTypedName",
														"src": "25551:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "25563:6:19",
														"nodeType": "YulTypedName",
														"src": "25563:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25571:6:19",
														"nodeType": "YulTypedName",
														"src": "25571:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25582:4:19",
														"nodeType": "YulTypedName",
														"src": "25582:4:19",
														"type": ""
													}
												],
												"src": "25461:332:19"
											},
											{
												"body": {
													"nativeSrc": "25827:152:19",
													"nodeType": "YulBlock",
													"src": "25827:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25844:1:19",
																		"nodeType": "YulLiteral",
																		"src": "25844:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25847:77:19",
																		"nodeType": "YulLiteral",
																		"src": "25847:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25837:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "25837:6:19"
																},
																"nativeSrc": "25837:88:19",
																"nodeType": "YulFunctionCall",
																"src": "25837:88:19"
															},
															"nativeSrc": "25837:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "25837:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25941:1:19",
																		"nodeType": "YulLiteral",
																		"src": "25941:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25944:4:19",
																		"nodeType": "YulLiteral",
																		"src": "25944:4:19",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25934:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "25934:6:19"
																},
																"nativeSrc": "25934:15:19",
																"nodeType": "YulFunctionCall",
																"src": "25934:15:19"
															},
															"nativeSrc": "25934:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "25934:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25965:1:19",
																		"nodeType": "YulLiteral",
																		"src": "25965:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25968:4:19",
																		"nodeType": "YulLiteral",
																		"src": "25968:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "25958:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "25958:6:19"
																},
																"nativeSrc": "25958:15:19",
																"nodeType": "YulFunctionCall",
																"src": "25958:15:19"
															},
															"nativeSrc": "25958:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "25958:15:19"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "25799:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "25799:180:19"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_638577bb24e430bfb6d1d8a9d5466bf3f38c559db3bf705cb3f80a995566acc6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not master address\")\n\n    }\n\n    function abi_encode_t_stringliteral_638577bb24e430bfb6d1d8a9d5466bf3f38c559db3bf705cb3f80a995566acc6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_638577bb24e430bfb6d1d8a9d5466bf3f38c559db3bf705cb3f80a995566acc6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_638577bb24e430bfb6d1d8a9d5466bf3f38c559db3bf705cb3f80a995566acc6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_638577bb24e430bfb6d1d8a9d5466bf3f38c559db3bf705cb3f80a995566acc6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed.\")\n\n    }\n\n    function abi_encode_t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough ETH\")\n\n    }\n\n    function abi_encode_t_stringliteral_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610165575f3560e01c806370a08231116100d0578063b88d4fde11610089578063e985e9c511610063578063e985e9c5146104ff578063f2fde38b1461053b578063f4a0a52814610563578063fb37e8831461058b57610165565b8063b88d4fde14610473578063c87b56dd1461049b578063cc98ef96146104d757610165565b806370a082311461037b578063715018a6146103b757806384c4bd4b146103cd5780638da5cb5b146103f757806395d89b4114610421578063a22cb4651461044b57610165565b80630fdb1c10116101225780630fdb1c101461028757806323b872dd1461029d57806342842e0e146102c55780635d06a611146102ed5780636075851e146103155780636352211e1461033f57610165565b806301ffc9a7146101695780630387da42146101a557806306fdde03146101cf578063081812fc146101f9578063095ea7b3146102355780630a4fa1dd1461025d575b5f80fd5b348015610174575f80fd5b5061018f600480360381019061018a919061206b565b6105bb565b60405161019c91906120b0565b60405180910390f35b3480156101b0575f80fd5b506101b961061b565b6040516101c691906120e1565b60405180910390f35b3480156101da575f80fd5b506101e3610621565b6040516101f0919061216a565b60405180910390f35b348015610204575f80fd5b5061021f600480360381019061021a91906121b4565b6106b0565b60405161022c919061221e565b60405180910390f35b348015610240575f80fd5b5061025b60048036038101906102569190612261565b6106cb565b005b348015610268575f80fd5b506102716106e1565b60405161027e919061221e565b60405180910390f35b348015610292575f80fd5b5061029b610706565b005b3480156102a8575f80fd5b506102c360048036038101906102be919061229f565b610861565b005b3480156102d0575f80fd5b506102eb60048036038101906102e6919061229f565b610960565b005b3480156102f8575f80fd5b50610313600480360381019061030e91906122ef565b61097f565b005b348015610320575f80fd5b506103296109ca565b604051610336919061221e565b60405180910390f35b34801561034a575f80fd5b50610365600480360381019061036091906121b4565b6109ef565b604051610372919061221e565b60405180910390f35b348015610386575f80fd5b506103a1600480360381019061039c91906122ef565b610a00565b6040516103ae91906120e1565b60405180910390f35b3480156103c2575f80fd5b506103cb610ab6565b005b3480156103d8575f80fd5b506103e1610ac9565b6040516103ee91906120e1565b60405180910390f35b348015610402575f80fd5b5061040b610acf565b604051610418919061221e565b60405180910390f35b34801561042c575f80fd5b50610435610af7565b604051610442919061216a565b60405180910390f35b348015610456575f80fd5b50610471600480360381019061046c9190612344565b610b87565b005b34801561047e575f80fd5b50610499600480360381019061049491906124ae565b610b9d565b005b3480156104a6575f80fd5b506104c160048036038101906104bc91906121b4565b610bba565b6040516104ce919061216a565b60405180910390f35b3480156104e2575f80fd5b506104fd60048036038101906104f891906122ef565b610cc5565b005b34801561050a575f80fd5b506105256004803603810190610520919061252e565b610d55565b60405161053291906120b0565b60405180910390f35b348015610546575f80fd5b50610561600480360381019061055c91906122ef565b610de3565b005b34801561056e575f80fd5b50610589600480360381019061058491906121b4565b610e67565b005b6105a560048036038101906105a0919061260a565b610e79565b6040516105b291906120e1565b60405180910390f35b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610614575061061382610f83565b5b9050919050565b603b5481565b60605f805461062f9061267e565b80601f016020809104026020016040519081016040528092919081815260200182805461065b9061267e565b80156106a65780601f1061067d576101008083540402835291602001916106a6565b820191905f5260205f20905b81548152906001019060200180831161068957829003601f168201915b5050505050905090565b5f6106ba82611064565b506106c4826110ea565b9050919050565b6106dd82826106d8611123565b61112a565b5050565b603d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b603c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610795576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078c906126f8565b60405180910390fd5b5f603c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16476040516107db90612743565b5f6040518083038185875af1925050503d805f8114610815576040519150601f19603f3d011682016040523d82523d5f602084013e61081a565b606091505b505090508061085e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610855906127a1565b60405180910390fd5b50565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108d1575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016108c8919061221e565b60405180910390fd5b5f6108e483836108df611123565b61113c565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461095a578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401610951939291906127bf565b60405180910390fd5b50505050565b61097a83838360405180602001604052805f815250610b9d565b505050565b610987611347565b80603c5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b603c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f6109f982611064565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a71575f6040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610a68919061221e565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610abe611347565b610ac75f6113ce565b565b603a5481565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060018054610b069061267e565b80601f0160208091040260200160405190810160405280929190818152602001828054610b329061267e565b8015610b7d5780601f10610b5457610100808354040283529160200191610b7d565b820191905f5260205f20905b815481529060010190602001808311610b6057829003601f168201915b5050505050905090565b610b99610b92611123565b8383611491565b5050565b610ba8848484610861565b610bb4848484846115fa565b50505050565b6060610bc582611064565b505f60065f8481526020019081526020015f208054610be39061267e565b80601f0160208091040260200160405190810160405280929190818152602001828054610c0f9061267e565b8015610c5a5780601f10610c3157610100808354040283529160200191610c5a565b820191905f5260205f20905b815481529060010190602001808311610c3d57829003601f168201915b505050505090505f610c6a6117ac565b90505f815103610c7e578192505050610cc0565b5f82511115610cb2578082604051602001610c9a92919061282e565b60405160208183030381529060405292505050610cc0565b610cbb846117c2565b925050505b919050565b610ccd611347565b80603d5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f5b603a54811015610d5157610d44603d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826106cb565b8080600101915050610d0f565b5050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610deb611347565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e5b575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e52919061221e565b60405180910390fd5b610e64816113ce565b50565b610e6f611347565b80603b8190555050565b5f610e82611828565b5f603a549050603b54341015610ecd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec49061289b565b60405180910390fd5b610ed73382611877565b610ee18184611894565b610f0c603d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826106cb565b3373ffffffffffffffffffffffffffffffffffffffff16817f82a09cc58c9cecf0eb61d8994283ec804165931801f8b77e42dcb3b556c5c5be85604051610f53919061216a565b60405180910390a3603a5f815480929190610f6d906128e6565b919050555080915050610f7e6118ee565b919050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061104d57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061105d575061105c826118f8565b5b9050919050565b5f8061106f83611961565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110e157826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016110d891906120e1565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b611137838383600161199a565b505050565b5f8061114784611961565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461118857611187818486611b59565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611213576111c75f855f8061199a565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461129257600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b61134f611123565b73ffffffffffffffffffffffffffffffffffffffff1661136d610acf565b73ffffffffffffffffffffffffffffffffffffffff16146113cc57611390611123565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016113c3919061221e565b60405180910390fd5b565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361150157816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016114f8919061221e565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516115ed91906120b0565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156117a6578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261163d611123565b8685856040518563ffffffff1660e01b815260040161165f949392919061297f565b6020604051808303815f875af192505050801561169a57506040513d601f19601f8201168201806040525081019061169791906129dd565b60015b61171b573d805f81146116c8576040519150601f19603f3d011682016040523d82523d5f602084013e6116cd565b606091505b505f81510361171357836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161170a919061221e565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146117a457836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161179b919061221e565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60606117cd82611064565b505f6117d76117ac565b90505f8151116117f55760405180602001604052805f815250611820565b806117ff84611c1c565b60405160200161181092919061282e565b6040516020818303038152906040525b915050919050565b60026008540361186d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161186490612a52565b60405180910390fd5b6002600881905550565b611890828260405180602001604052805f815250611ce6565b5050565b8060065f8481526020019081526020015f2090816118b29190612c0d565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516118e291906120e1565b60405180910390a15050565b6001600881905550565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806119d257505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611b04575f6119e184611064565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611a4b57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611a5e5750611a5c8184610d55565b155b15611aa057826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611a97919061221e565b60405180910390fd5b8115611b0257838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611b64838383611d01565b611c17575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611bd857806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611bcf91906120e1565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611c0e929190612cdc565b60405180910390fd5b505050565b60605f6001611c2a84611dc1565b0190505f8167ffffffffffffffff811115611c4857611c4761238a565b5b6040519080825280601f01601f191660200182016040528015611c7a5781602001600182028036833780820191505090505b5090505f82602001820190505b600115611cdb578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611cd057611ccf612d03565b5b0494505f8503611c87575b819350505050919050565b611cf08383611f12565b611cfc5f8484846115fa565b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611db857508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611d795750611d788484610d55565b5b80611db757508273ffffffffffffffffffffffffffffffffffffffff16611d9f836110ea565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611e1d577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611e1357611e12612d03565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611e5a576d04ee2d6d415b85acef81000000008381611e5057611e4f612d03565b5b0492506020810190505b662386f26fc100008310611e8957662386f26fc100008381611e7f57611e7e612d03565b5b0492506010810190505b6305f5e1008310611eb2576305f5e1008381611ea857611ea7612d03565b5b0492506008810190505b6127108310611ed7576127108381611ecd57611ecc612d03565b5b0492506004810190505b60648310611efa5760648381611ef057611eef612d03565b5b0492506002810190505b600a8310611f09576001810190505b80915050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611f82575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611f79919061221e565b60405180910390fd5b5f611f8e83835f61113c565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612000575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611ff7919061221e565b60405180910390fd5b505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61204a81612016565b8114612054575f80fd5b50565b5f8135905061206581612041565b92915050565b5f602082840312156120805761207f61200e565b5b5f61208d84828501612057565b91505092915050565b5f8115159050919050565b6120aa81612096565b82525050565b5f6020820190506120c35f8301846120a1565b92915050565b5f819050919050565b6120db816120c9565b82525050565b5f6020820190506120f45f8301846120d2565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61213c826120fa565b6121468185612104565b9350612156818560208601612114565b61215f81612122565b840191505092915050565b5f6020820190508181035f8301526121828184612132565b905092915050565b612193816120c9565b811461219d575f80fd5b50565b5f813590506121ae8161218a565b92915050565b5f602082840312156121c9576121c861200e565b5b5f6121d6848285016121a0565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f612208826121df565b9050919050565b612218816121fe565b82525050565b5f6020820190506122315f83018461220f565b92915050565b612240816121fe565b811461224a575f80fd5b50565b5f8135905061225b81612237565b92915050565b5f80604083850312156122775761227661200e565b5b5f6122848582860161224d565b9250506020612295858286016121a0565b9150509250929050565b5f805f606084860312156122b6576122b561200e565b5b5f6122c38682870161224d565b93505060206122d48682870161224d565b92505060406122e5868287016121a0565b9150509250925092565b5f602082840312156123045761230361200e565b5b5f6123118482850161224d565b91505092915050565b61232381612096565b811461232d575f80fd5b50565b5f8135905061233e8161231a565b92915050565b5f806040838503121561235a5761235961200e565b5b5f6123678582860161224d565b925050602061237885828601612330565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6123c082612122565b810181811067ffffffffffffffff821117156123df576123de61238a565b5b80604052505050565b5f6123f1612005565b90506123fd82826123b7565b919050565b5f67ffffffffffffffff82111561241c5761241b61238a565b5b61242582612122565b9050602081019050919050565b828183375f83830152505050565b5f61245261244d84612402565b6123e8565b90508281526020810184848401111561246e5761246d612386565b5b612479848285612432565b509392505050565b5f82601f83011261249557612494612382565b5b81356124a5848260208601612440565b91505092915050565b5f805f80608085870312156124c6576124c561200e565b5b5f6124d38782880161224d565b94505060206124e48782880161224d565b93505060406124f5878288016121a0565b925050606085013567ffffffffffffffff81111561251657612515612012565b5b61252287828801612481565b91505092959194509250565b5f80604083850312156125445761254361200e565b5b5f6125518582860161224d565b92505060206125628582860161224d565b9150509250929050565b5f67ffffffffffffffff8211156125865761258561238a565b5b61258f82612122565b9050602081019050919050565b5f6125ae6125a98461256c565b6123e8565b9050828152602081018484840111156125ca576125c9612386565b5b6125d5848285612432565b509392505050565b5f82601f8301126125f1576125f0612382565b5b813561260184826020860161259c565b91505092915050565b5f6020828403121561261f5761261e61200e565b5b5f82013567ffffffffffffffff81111561263c5761263b612012565b5b612648848285016125dd565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061269557607f821691505b6020821081036126a8576126a7612651565b5b50919050565b7f4e6f74206d6173746572206164647265737300000000000000000000000000005f82015250565b5f6126e2601283612104565b91506126ed826126ae565b602082019050919050565b5f6020820190508181035f83015261270f816126d6565b9050919050565b5f81905092915050565b50565b5f61272e5f83612716565b915061273982612720565b5f82019050919050565b5f61274d82612723565b9150819050919050565b7f5472616e73666572206661696c65642e000000000000000000000000000000005f82015250565b5f61278b601083612104565b915061279682612757565b602082019050919050565b5f6020820190508181035f8301526127b88161277f565b9050919050565b5f6060820190506127d25f83018661220f565b6127df60208301856120d2565b6127ec604083018461220f565b949350505050565b5f81905092915050565b5f612808826120fa565b61281281856127f4565b9350612822818560208601612114565b80840191505092915050565b5f61283982856127fe565b915061284582846127fe565b91508190509392505050565b7f4e6f7420656e6f756768204554480000000000000000000000000000000000005f82015250565b5f612885600e83612104565b915061289082612851565b602082019050919050565b5f6020820190508181035f8301526128b281612879565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6128f0826120c9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612922576129216128b9565b5b600182019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f6129518261292d565b61295b8185612937565b935061296b818560208601612114565b61297481612122565b840191505092915050565b5f6080820190506129925f83018761220f565b61299f602083018661220f565b6129ac60408301856120d2565b81810360608301526129be8184612947565b905095945050505050565b5f815190506129d781612041565b92915050565b5f602082840312156129f2576129f161200e565b5b5f6129ff848285016129c9565b91505092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612a3c601f83612104565b9150612a4782612a08565b602082019050919050565b5f6020820190508181035f830152612a6981612a30565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302612acc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612a91565b612ad68683612a91565b95508019841693508086168417925050509392505050565b5f819050919050565b5f612b11612b0c612b07846120c9565b612aee565b6120c9565b9050919050565b5f819050919050565b612b2a83612af7565b612b3e612b3682612b18565b848454612a9d565b825550505050565b5f90565b612b52612b46565b612b5d818484612b21565b505050565b5b81811015612b8057612b755f82612b4a565b600181019050612b63565b5050565b601f821115612bc557612b9681612a70565b612b9f84612a82565b81016020851015612bae578190505b612bc2612bba85612a82565b830182612b62565b50505b505050565b5f82821c905092915050565b5f612be55f1984600802612bca565b1980831691505092915050565b5f612bfd8383612bd6565b9150826002028217905092915050565b612c16826120fa565b67ffffffffffffffff811115612c2f57612c2e61238a565b5b612c39825461267e565b612c44828285612b84565b5f60209050601f831160018114612c75575f8415612c63578287015190505b612c6d8582612bf2565b865550612cd4565b601f198416612c8386612a70565b5f5b82811015612caa57848901518255600182019150602085019450602081019050612c85565b86831015612cc75784890151612cc3601f891682612bd6565b8355505b6001600288020188555050505b505050505050565b5f604082019050612cef5f83018561220f565b612cfc60208301846120d2565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea26469706673582212207b115481d904876e3db03058100b6a9fee4140052cc26a17dd2f7fa8a7d7207864736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x165 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x4FF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0xF4A0A528 EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0xFB37E883 EQ PUSH2 0x58B JUMPI PUSH2 0x165 JUMP JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xCC98EF96 EQ PUSH2 0x4D7 JUMPI PUSH2 0x165 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0x84C4BD4B EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x44B JUMPI PUSH2 0x165 JUMP JUMPDEST DUP1 PUSH4 0xFDB1C10 GT PUSH2 0x122 JUMPI DUP1 PUSH4 0xFDB1C10 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x5D06A611 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x6075851E EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x33F JUMPI PUSH2 0x165 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x387DA42 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0xA4FA1DD EQ PUSH2 0x25D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x174 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x206B JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E3 PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x216A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x240 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x2261 JUMP JUMPDEST PUSH2 0x6CB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29B PUSH2 0x706 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x229F JUMP JUMPDEST PUSH2 0x861 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x229F JUMP JUMPDEST PUSH2 0x960 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x22EF JUMP JUMPDEST PUSH2 0x97F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x329 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x365 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x22EF JUMP JUMPDEST PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CB PUSH2 0xAB6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E1 PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x402 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x40B PUSH2 0xACF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x435 PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x442 SWAP2 SWAP1 PUSH2 0x216A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x456 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x471 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x2344 JUMP JUMPDEST PUSH2 0xB87 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x24AE JUMP JUMPDEST PUSH2 0xB9D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BC SWAP2 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0x216A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x22EF JUMP JUMPDEST PUSH2 0xCC5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x525 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x520 SWAP2 SWAP1 PUSH2 0x252E JUMP JUMPDEST PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x532 SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x546 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x561 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55C SWAP2 SWAP1 PUSH2 0x22EF JUMP JUMPDEST PUSH2 0xDE3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x589 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x584 SWAP2 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST PUSH2 0xE67 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x614 JUMPI POP PUSH2 0x613 DUP3 PUSH2 0xF83 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3B SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x62F SWAP1 PUSH2 0x267E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x65B SWAP1 PUSH2 0x267E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6A6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x67D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6A6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x689 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x6BA DUP3 PUSH2 0x1064 JUMP JUMPDEST POP PUSH2 0x6C4 DUP3 PUSH2 0x10EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DD DUP3 DUP3 PUSH2 0x6D8 PUSH2 0x1123 JUMP JUMPDEST PUSH2 0x112A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3D PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3C PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78C SWAP1 PUSH2 0x26F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3C PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x7DB SWAP1 PUSH2 0x2743 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x815 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x81A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x85E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x855 SWAP1 PUSH2 0x27A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8D1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x8E4 DUP4 DUP4 PUSH2 0x8DF PUSH2 0x1123 JUMP JUMPDEST PUSH2 0x113C JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x95A JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x951 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x97A DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xB9D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x987 PUSH2 0x1347 JUMP JUMPDEST DUP1 PUSH1 0x3C PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3C PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x9F9 DUP3 PUSH2 0x1064 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA71 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA68 SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xABE PUSH2 0x1347 JUMP JUMPDEST PUSH2 0xAC7 PUSH0 PUSH2 0x13CE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3A SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xB06 SWAP1 PUSH2 0x267E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB32 SWAP1 PUSH2 0x267E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB7D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB54 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB7D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB60 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB99 PUSH2 0xB92 PUSH2 0x1123 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1491 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBA8 DUP5 DUP5 DUP5 PUSH2 0x861 JUMP JUMPDEST PUSH2 0xBB4 DUP5 DUP5 DUP5 DUP5 PUSH2 0x15FA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xBC5 DUP3 PUSH2 0x1064 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0xBE3 SWAP1 PUSH2 0x267E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC0F SWAP1 PUSH2 0x267E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC5A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC31 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC5A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC3D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0xC6A PUSH2 0x17AC JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0xC7E JUMPI DUP2 SWAP3 POP POP POP PUSH2 0xCC0 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0xCB2 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC9A SWAP3 SWAP2 SWAP1 PUSH2 0x282E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0xCBB DUP5 PUSH2 0x17C2 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCCD PUSH2 0x1347 JUMP JUMPDEST DUP1 PUSH1 0x3D PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 JUMPDEST PUSH1 0x3A SLOAD DUP2 LT ISZERO PUSH2 0xD51 JUMPI PUSH2 0xD44 PUSH1 0x3D PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x6CB JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xD0F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDEB PUSH2 0x1347 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE5B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE52 SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE64 DUP2 PUSH2 0x13CE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE6F PUSH2 0x1347 JUMP JUMPDEST DUP1 PUSH1 0x3B DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE82 PUSH2 0x1828 JUMP JUMPDEST PUSH0 PUSH1 0x3A SLOAD SWAP1 POP PUSH1 0x3B SLOAD CALLVALUE LT ISZERO PUSH2 0xECD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC4 SWAP1 PUSH2 0x289B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xED7 CALLER DUP3 PUSH2 0x1877 JUMP JUMPDEST PUSH2 0xEE1 DUP2 DUP5 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0xF0C PUSH1 0x3D PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x6CB JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0x82A09CC58C9CECF0EB61D8994283EC804165931801F8B77E42DCB3B556C5C5BE DUP6 PUSH1 0x40 MLOAD PUSH2 0xF53 SWAP2 SWAP1 PUSH2 0x216A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x3A PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xF6D SWAP1 PUSH2 0x28E6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 SWAP2 POP POP PUSH2 0xF7E PUSH2 0x18EE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x104D JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x105D JUMPI POP PUSH2 0x105C DUP3 PUSH2 0x18F8 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x106F DUP4 PUSH2 0x1961 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10E1 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D8 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1137 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x199A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1147 DUP5 PUSH2 0x1961 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1188 JUMPI PUSH2 0x1187 DUP2 DUP5 DUP7 PUSH2 0x1B59 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1213 JUMPI PUSH2 0x11C7 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x199A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1292 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x134F PUSH2 0x1123 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x136D PUSH2 0xACF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13CC JUMPI PUSH2 0x1390 PUSH2 0x1123 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C3 SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1501 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F8 SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x15ED SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x17A6 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x163D PUSH2 0x1123 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x165F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x297F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x169A JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1697 SWAP2 SWAP1 PUSH2 0x29DD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x171B JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x16C8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1713 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x170A SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x17A4 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x179B SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x17CD DUP3 PUSH2 0x1064 JUMP JUMPDEST POP PUSH0 PUSH2 0x17D7 PUSH2 0x17AC JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x17F5 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1820 JUMP JUMPDEST DUP1 PUSH2 0x17FF DUP5 PUSH2 0x1C1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1810 SWAP3 SWAP2 SWAP1 PUSH2 0x282E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x8 SLOAD SUB PUSH2 0x186D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1864 SWAP1 PUSH2 0x2A52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x8 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1890 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1CE6 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x18B2 SWAP2 SWAP1 PUSH2 0x2C0D JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x18E2 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x19D2 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1B04 JUMPI PUSH0 PUSH2 0x19E1 DUP5 PUSH2 0x1064 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1A4B JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1A5E JUMPI POP PUSH2 0x1A5C DUP2 DUP5 PUSH2 0xD55 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1AA0 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A97 SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1B02 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1B64 DUP4 DUP4 DUP4 PUSH2 0x1D01 JUMP JUMPDEST PUSH2 0x1C17 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BD8 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BCF SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C0E SWAP3 SWAP2 SWAP1 PUSH2 0x2CDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1C2A DUP5 PUSH2 0x1DC1 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C48 JUMPI PUSH2 0x1C47 PUSH2 0x238A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1C7A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1CDB JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1CD0 JUMPI PUSH2 0x1CCF PUSH2 0x2D03 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1C87 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CF0 DUP4 DUP4 PUSH2 0x1F12 JUMP JUMPDEST PUSH2 0x1CFC PUSH0 DUP5 DUP5 DUP5 PUSH2 0x15FA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1DB8 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1D79 JUMPI POP PUSH2 0x1D78 DUP5 DUP5 PUSH2 0xD55 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1DB7 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D9F DUP4 PUSH2 0x10EA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1E1D JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1E13 JUMPI PUSH2 0x1E12 PUSH2 0x2D03 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1E5A JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1E50 JUMPI PUSH2 0x1E4F PUSH2 0x2D03 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1E89 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1E7F JUMPI PUSH2 0x1E7E PUSH2 0x2D03 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1EB2 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1EA8 JUMPI PUSH2 0x1EA7 PUSH2 0x2D03 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1ED7 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1ECD JUMPI PUSH2 0x1ECC PUSH2 0x2D03 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1EFA JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1EF0 JUMPI PUSH2 0x1EEF PUSH2 0x2D03 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1F09 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F82 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F79 SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1F8E DUP4 DUP4 PUSH0 PUSH2 0x113C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2000 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FF7 SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x204A DUP2 PUSH2 0x2016 JUMP JUMPDEST DUP2 EQ PUSH2 0x2054 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2065 DUP2 PUSH2 0x2041 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2080 JUMPI PUSH2 0x207F PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x208D DUP5 DUP3 DUP6 ADD PUSH2 0x2057 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20AA DUP2 PUSH2 0x2096 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20C3 PUSH0 DUP4 ADD DUP5 PUSH2 0x20A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20DB DUP2 PUSH2 0x20C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20F4 PUSH0 DUP4 ADD DUP5 PUSH2 0x20D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x213C DUP3 PUSH2 0x20FA JUMP JUMPDEST PUSH2 0x2146 DUP2 DUP6 PUSH2 0x2104 JUMP JUMPDEST SWAP4 POP PUSH2 0x2156 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2114 JUMP JUMPDEST PUSH2 0x215F DUP2 PUSH2 0x2122 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2182 DUP2 DUP5 PUSH2 0x2132 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2193 DUP2 PUSH2 0x20C9 JUMP JUMPDEST DUP2 EQ PUSH2 0x219D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21AE DUP2 PUSH2 0x218A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21C9 JUMPI PUSH2 0x21C8 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21D6 DUP5 DUP3 DUP6 ADD PUSH2 0x21A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2208 DUP3 PUSH2 0x21DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2218 DUP2 PUSH2 0x21FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2231 PUSH0 DUP4 ADD DUP5 PUSH2 0x220F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2240 DUP2 PUSH2 0x21FE JUMP JUMPDEST DUP2 EQ PUSH2 0x224A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x225B DUP2 PUSH2 0x2237 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2277 JUMPI PUSH2 0x2276 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2284 DUP6 DUP3 DUP7 ADD PUSH2 0x224D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2295 DUP6 DUP3 DUP7 ADD PUSH2 0x21A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22B6 JUMPI PUSH2 0x22B5 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22C3 DUP7 DUP3 DUP8 ADD PUSH2 0x224D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x22D4 DUP7 DUP3 DUP8 ADD PUSH2 0x224D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x22E5 DUP7 DUP3 DUP8 ADD PUSH2 0x21A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2304 JUMPI PUSH2 0x2303 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2311 DUP5 DUP3 DUP6 ADD PUSH2 0x224D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2323 DUP2 PUSH2 0x2096 JUMP JUMPDEST DUP2 EQ PUSH2 0x232D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x233E DUP2 PUSH2 0x231A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x235A JUMPI PUSH2 0x2359 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2367 DUP6 DUP3 DUP7 ADD PUSH2 0x224D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2378 DUP6 DUP3 DUP7 ADD PUSH2 0x2330 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x23C0 DUP3 PUSH2 0x2122 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x23DF JUMPI PUSH2 0x23DE PUSH2 0x238A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23F1 PUSH2 0x2005 JUMP JUMPDEST SWAP1 POP PUSH2 0x23FD DUP3 DUP3 PUSH2 0x23B7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x241C JUMPI PUSH2 0x241B PUSH2 0x238A JUMP JUMPDEST JUMPDEST PUSH2 0x2425 DUP3 PUSH2 0x2122 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2452 PUSH2 0x244D DUP5 PUSH2 0x2402 JUMP JUMPDEST PUSH2 0x23E8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x246E JUMPI PUSH2 0x246D PUSH2 0x2386 JUMP JUMPDEST JUMPDEST PUSH2 0x2479 DUP5 DUP3 DUP6 PUSH2 0x2432 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2495 JUMPI PUSH2 0x2494 PUSH2 0x2382 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x24A5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2440 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x24C6 JUMPI PUSH2 0x24C5 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24D3 DUP8 DUP3 DUP9 ADD PUSH2 0x224D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x24E4 DUP8 DUP3 DUP9 ADD PUSH2 0x224D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x24F5 DUP8 DUP3 DUP9 ADD PUSH2 0x21A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2516 JUMPI PUSH2 0x2515 PUSH2 0x2012 JUMP JUMPDEST JUMPDEST PUSH2 0x2522 DUP8 DUP3 DUP9 ADD PUSH2 0x2481 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2544 JUMPI PUSH2 0x2543 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2551 DUP6 DUP3 DUP7 ADD PUSH2 0x224D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2562 DUP6 DUP3 DUP7 ADD PUSH2 0x224D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2586 JUMPI PUSH2 0x2585 PUSH2 0x238A JUMP JUMPDEST JUMPDEST PUSH2 0x258F DUP3 PUSH2 0x2122 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25AE PUSH2 0x25A9 DUP5 PUSH2 0x256C JUMP JUMPDEST PUSH2 0x23E8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x25CA JUMPI PUSH2 0x25C9 PUSH2 0x2386 JUMP JUMPDEST JUMPDEST PUSH2 0x25D5 DUP5 DUP3 DUP6 PUSH2 0x2432 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x25F1 JUMPI PUSH2 0x25F0 PUSH2 0x2382 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2601 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x259C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x261F JUMPI PUSH2 0x261E PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x263C JUMPI PUSH2 0x263B PUSH2 0x2012 JUMP JUMPDEST JUMPDEST PUSH2 0x2648 DUP5 DUP3 DUP6 ADD PUSH2 0x25DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2695 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x26A8 JUMPI PUSH2 0x26A7 PUSH2 0x2651 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F74206D617374657220616464726573730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26E2 PUSH1 0x12 DUP4 PUSH2 0x2104 JUMP JUMPDEST SWAP2 POP PUSH2 0x26ED DUP3 PUSH2 0x26AE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x270F DUP2 PUSH2 0x26D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x272E PUSH0 DUP4 PUSH2 0x2716 JUMP JUMPDEST SWAP2 POP PUSH2 0x2739 DUP3 PUSH2 0x2720 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x274D DUP3 PUSH2 0x2723 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65642E00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x278B PUSH1 0x10 DUP4 PUSH2 0x2104 JUMP JUMPDEST SWAP2 POP PUSH2 0x2796 DUP3 PUSH2 0x2757 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27B8 DUP2 PUSH2 0x277F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x27D2 PUSH0 DUP4 ADD DUP7 PUSH2 0x220F JUMP JUMPDEST PUSH2 0x27DF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20D2 JUMP JUMPDEST PUSH2 0x27EC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x220F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2808 DUP3 PUSH2 0x20FA JUMP JUMPDEST PUSH2 0x2812 DUP2 DUP6 PUSH2 0x27F4 JUMP JUMPDEST SWAP4 POP PUSH2 0x2822 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2114 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2839 DUP3 DUP6 PUSH2 0x27FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2845 DUP3 DUP5 PUSH2 0x27FE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820455448000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2885 PUSH1 0xE DUP4 PUSH2 0x2104 JUMP JUMPDEST SWAP2 POP PUSH2 0x2890 DUP3 PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28B2 DUP2 PUSH2 0x2879 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x28F0 DUP3 PUSH2 0x20C9 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2922 JUMPI PUSH2 0x2921 PUSH2 0x28B9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2951 DUP3 PUSH2 0x292D JUMP JUMPDEST PUSH2 0x295B DUP2 DUP6 PUSH2 0x2937 JUMP JUMPDEST SWAP4 POP PUSH2 0x296B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2114 JUMP JUMPDEST PUSH2 0x2974 DUP2 PUSH2 0x2122 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2992 PUSH0 DUP4 ADD DUP8 PUSH2 0x220F JUMP JUMPDEST PUSH2 0x299F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x220F JUMP JUMPDEST PUSH2 0x29AC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x20D2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x29BE DUP2 DUP5 PUSH2 0x2947 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x29D7 DUP2 PUSH2 0x2041 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29F2 JUMPI PUSH2 0x29F1 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29FF DUP5 DUP3 DUP6 ADD PUSH2 0x29C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A3C PUSH1 0x1F DUP4 PUSH2 0x2104 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A47 DUP3 PUSH2 0x2A08 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A69 DUP2 PUSH2 0x2A30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2ACC PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2A91 JUMP JUMPDEST PUSH2 0x2AD6 DUP7 DUP4 PUSH2 0x2A91 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2B11 PUSH2 0x2B0C PUSH2 0x2B07 DUP5 PUSH2 0x20C9 JUMP JUMPDEST PUSH2 0x2AEE JUMP JUMPDEST PUSH2 0x20C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B2A DUP4 PUSH2 0x2AF7 JUMP JUMPDEST PUSH2 0x2B3E PUSH2 0x2B36 DUP3 PUSH2 0x2B18 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2A9D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2B52 PUSH2 0x2B46 JUMP JUMPDEST PUSH2 0x2B5D DUP2 DUP5 DUP5 PUSH2 0x2B21 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2B80 JUMPI PUSH2 0x2B75 PUSH0 DUP3 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2B63 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2BC5 JUMPI PUSH2 0x2B96 DUP2 PUSH2 0x2A70 JUMP JUMPDEST PUSH2 0x2B9F DUP5 PUSH2 0x2A82 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2BAE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2BC2 PUSH2 0x2BBA DUP6 PUSH2 0x2A82 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2B62 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BE5 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2BCA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BFD DUP4 DUP4 PUSH2 0x2BD6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C16 DUP3 PUSH2 0x20FA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C2F JUMPI PUSH2 0x2C2E PUSH2 0x238A JUMP JUMPDEST JUMPDEST PUSH2 0x2C39 DUP3 SLOAD PUSH2 0x267E JUMP JUMPDEST PUSH2 0x2C44 DUP3 DUP3 DUP6 PUSH2 0x2B84 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2C75 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2C63 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2C6D DUP6 DUP3 PUSH2 0x2BF2 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2CD4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2C83 DUP7 PUSH2 0x2A70 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2CAA JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C85 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2CC7 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2CC3 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2BD6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2CEF PUSH0 DUP4 ADD DUP6 PUSH2 0x220F JUMP JUMPDEST PUSH2 0x2CFC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20D2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x115481D904876E3DB03058100B6A9FEE4140052CC26A17DD2F7FA8A7 0xD7 KECCAK256 PUSH25 0x64736F6C634300081900330000000000000000000000000000 ",
							"sourceMap": "283:1827:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;937:207:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;398:25:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;466:34:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1791:316;;;;;;;;;;;;;:::i;:::-;;4143:578:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4787:132;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1218:115:18;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;430:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2185:118:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:2;;;;;;;;;;;;;:::i;:::-;;361:30:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1210:593:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;859:244:18;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3928:153:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1111:99:18;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1341:442;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;937:207:10;1039:4;760:10;753:18;;1062:35;;;:11;:35;;;;:75;;;;1101:36;1125:11;1101:23;:36::i;:::-;1062:75;1055:82;;937:207;;;:::o;398:25:18:-;;;;:::o;2365:89:7:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;466:34:18:-;;;;;;;;;;;;;:::o;1791:316::-;1853:14;;;;;;;;;;;1839:28;;:10;:28;;;1831:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1981:12;1999:14;;;;;;;;;;;:19;;2026:21;1999:53;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1980:72;;;2071:7;2063:36;;;;;;;;;;;;:::i;:::-;;;;;;;;;1820:287;1791:316::o;4143:578:7:-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;4787:132::-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;1218:115:18:-;1531:13:2;:11;:13::i;:::-;1312::18::1;1295:14;;:30;;;;;;;;;;;;;;;;;;1218:115:::0;:::o;430:29::-;;;;;;;;;;;;;:::o;2185:118:7:-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;2293:101:2:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;361:30:18:-;;;;:::o;1638:85:2:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2518:93:7:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;3718:144::-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;1210:593:10:-;1283:13;1308:22;1322:7;1308:13;:22::i;:::-;;1341:23;1367:10;:19;1378:7;1367:19;;;;;;;;;;;1341:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:18;1417:10;:8;:10::i;:::-;1396:31;;1522:1;1506:4;1500:18;:23;1496:70;;1546:9;1539:16;;;;;;1496:70;1691:1;1671:9;1665:23;:27;1661:95;;;1729:4;1735:9;1715:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1708:37;;;;;;1661:95;1773:23;1788:7;1773:14;:23::i;:::-;1766:30;;;;1210:593;;;;:::o;859:244:18:-;1531:13:2;:11;:13::i;:::-;968:18:18::1;946:19;;:40;;;;;;;;;;;;;;;;;;1002:9;997:99;1017:15;;1015:1;:17;997:99;;;1053:31;1061:19;;;;;;;;;;;1082:1;1053:7;:31::i;:::-;1034:3;;;;;;;997:99;;;;859:244:::0;:::o;3928:153:7:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;2543:215:2:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1111:99:18:-;1531:13:2;:11;:13::i;:::-;1193:9:18::1;1180:10;:22;;;;1111:99:::0;:::o;1341:442::-;1419:7;2526:21:1;:19;:21::i;:::-;1438:15:18::1;1456;;1438:33;;1503:10;;1490:9;:23;;1482:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;1543:30;1553:10;1565:7;1543:9;:30::i;:::-;1584:31;1597:7;1606:8;1584:12;:31::i;:::-;1626:37;1634:19;;;;;;;;;;;1655:7;1626;:37::i;:::-;1701:10;1679:43;;1692:7;1679:43;1713:8;1679:43;;;;;;:::i;:::-;;;;;;;;1733:15;;:17;;;;;;;;;:::i;:::-;;;;;;1768:7;1761:14;;;2568:20:1::0;:18;:20::i;:::-;1341:442:18;;;:::o;1561:300:7:-;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;16138:241::-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:12:-;709:7;735:10;728:17;;656:96;:::o;14418:120:7:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;1796:162:2:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;15591:312:7:-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;3174:92::-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;2601:287:1:-;1851:1;2733:7;;:19;2725:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1851:1;2863:7;:18;;;;2601:287::o;10633:100:7:-;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;:::-;10633:100;;:::o;1922:167:10:-;2035:9;2013:10;:19;2024:7;2013:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;2059:23;2074:7;2059:23;;;;;;:::i;:::-;;;;;;;;1922:167;;:::o;2894:209:1:-;1808:1;3074:7;:22;;;;2894:209::o;762:146:14:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;5707:115:7:-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;637:698:13:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;10954:182:7:-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;:::-;10954:182;;;:::o;6376:272::-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;12214:916:16:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;9955:327:7:-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;7:75:19:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:118::-;1688:24;1706:5;1688:24;:::i;:::-;1683:3;1676:37;1601:118;;:::o;1725:222::-;1818:4;1856:2;1845:9;1841:18;1833:26;;1869:71;1937:1;1926:9;1922:17;1913:6;1869:71;:::i;:::-;1725:222;;;;:::o;1953:99::-;2005:6;2039:5;2033:12;2023:22;;1953:99;;;:::o;2058:169::-;2142:11;2176:6;2171:3;2164:19;2216:4;2211:3;2207:14;2192:29;;2058:169;;;;:::o;2233:139::-;2322:6;2317:3;2312;2306:23;2363:1;2354:6;2349:3;2345:16;2338:27;2233:139;;;:::o;2378:102::-;2419:6;2470:2;2466:7;2461:2;2454:5;2450:14;2446:28;2436:38;;2378:102;;;:::o;2486:377::-;2574:3;2602:39;2635:5;2602:39;:::i;:::-;2657:71;2721:6;2716:3;2657:71;:::i;:::-;2650:78;;2737:65;2795:6;2790:3;2783:4;2776:5;2772:16;2737:65;:::i;:::-;2827:29;2849:6;2827:29;:::i;:::-;2822:3;2818:39;2811:46;;2578:285;2486:377;;;;:::o;2869:313::-;2982:4;3020:2;3009:9;3005:18;2997:26;;3069:9;3063:4;3059:20;3055:1;3044:9;3040:17;3033:47;3097:78;3170:4;3161:6;3097:78;:::i;:::-;3089:86;;2869:313;;;;:::o;3188:122::-;3261:24;3279:5;3261:24;:::i;:::-;3254:5;3251:35;3241:63;;3300:1;3297;3290:12;3241:63;3188:122;:::o;3316:139::-;3362:5;3400:6;3387:20;3378:29;;3416:33;3443:5;3416:33;:::i;:::-;3316:139;;;;:::o;3461:329::-;3520:6;3569:2;3557:9;3548:7;3544:23;3540:32;3537:119;;;3575:79;;:::i;:::-;3537:119;3695:1;3720:53;3765:7;3756:6;3745:9;3741:22;3720:53;:::i;:::-;3710:63;;3666:117;3461:329;;;;:::o;3796:126::-;3833:7;3873:42;3866:5;3862:54;3851:65;;3796:126;;;:::o;3928:96::-;3965:7;3994:24;4012:5;3994:24;:::i;:::-;3983:35;;3928:96;;;:::o;4030:118::-;4117:24;4135:5;4117:24;:::i;:::-;4112:3;4105:37;4030:118;;:::o;4154:222::-;4247:4;4285:2;4274:9;4270:18;4262:26;;4298:71;4366:1;4355:9;4351:17;4342:6;4298:71;:::i;:::-;4154:222;;;;:::o;4382:122::-;4455:24;4473:5;4455:24;:::i;:::-;4448:5;4445:35;4435:63;;4494:1;4491;4484:12;4435:63;4382:122;:::o;4510:139::-;4556:5;4594:6;4581:20;4572:29;;4610:33;4637:5;4610:33;:::i;:::-;4510:139;;;;:::o;4655:474::-;4723:6;4731;4780:2;4768:9;4759:7;4755:23;4751:32;4748:119;;;4786:79;;:::i;:::-;4748:119;4906:1;4931:53;4976:7;4967:6;4956:9;4952:22;4931:53;:::i;:::-;4921:63;;4877:117;5033:2;5059:53;5104:7;5095:6;5084:9;5080:22;5059:53;:::i;:::-;5049:63;;5004:118;4655:474;;;;;:::o;5135:619::-;5212:6;5220;5228;5277:2;5265:9;5256:7;5252:23;5248:32;5245:119;;;5283:79;;:::i;:::-;5245:119;5403:1;5428:53;5473:7;5464:6;5453:9;5449:22;5428:53;:::i;:::-;5418:63;;5374:117;5530:2;5556:53;5601:7;5592:6;5581:9;5577:22;5556:53;:::i;:::-;5546:63;;5501:118;5658:2;5684:53;5729:7;5720:6;5709:9;5705:22;5684:53;:::i;:::-;5674:63;;5629:118;5135:619;;;;;:::o;5760:329::-;5819:6;5868:2;5856:9;5847:7;5843:23;5839:32;5836:119;;;5874:79;;:::i;:::-;5836:119;5994:1;6019:53;6064:7;6055:6;6044:9;6040:22;6019:53;:::i;:::-;6009:63;;5965:117;5760:329;;;;:::o;6095:116::-;6165:21;6180:5;6165:21;:::i;:::-;6158:5;6155:32;6145:60;;6201:1;6198;6191:12;6145:60;6095:116;:::o;6217:133::-;6260:5;6298:6;6285:20;6276:29;;6314:30;6338:5;6314:30;:::i;:::-;6217:133;;;;:::o;6356:468::-;6421:6;6429;6478:2;6466:9;6457:7;6453:23;6449:32;6446:119;;;6484:79;;:::i;:::-;6446:119;6604:1;6629:53;6674:7;6665:6;6654:9;6650:22;6629:53;:::i;:::-;6619:63;;6575:117;6731:2;6757:50;6799:7;6790:6;6779:9;6775:22;6757:50;:::i;:::-;6747:60;;6702:115;6356:468;;;;;:::o;6830:117::-;6939:1;6936;6929:12;6953:117;7062:1;7059;7052:12;7076:180;7124:77;7121:1;7114:88;7221:4;7218:1;7211:15;7245:4;7242:1;7235:15;7262:281;7345:27;7367:4;7345:27;:::i;:::-;7337:6;7333:40;7475:6;7463:10;7460:22;7439:18;7427:10;7424:34;7421:62;7418:88;;;7486:18;;:::i;:::-;7418:88;7526:10;7522:2;7515:22;7305:238;7262:281;;:::o;7549:129::-;7583:6;7610:20;;:::i;:::-;7600:30;;7639:33;7667:4;7659:6;7639:33;:::i;:::-;7549:129;;;:::o;7684:307::-;7745:4;7835:18;7827:6;7824:30;7821:56;;;7857:18;;:::i;:::-;7821:56;7895:29;7917:6;7895:29;:::i;:::-;7887:37;;7979:4;7973;7969:15;7961:23;;7684:307;;;:::o;7997:148::-;8095:6;8090:3;8085;8072:30;8136:1;8127:6;8122:3;8118:16;8111:27;7997:148;;;:::o;8151:423::-;8228:5;8253:65;8269:48;8310:6;8269:48;:::i;:::-;8253:65;:::i;:::-;8244:74;;8341:6;8334:5;8327:21;8379:4;8372:5;8368:16;8417:3;8408:6;8403:3;8399:16;8396:25;8393:112;;;8424:79;;:::i;:::-;8393:112;8514:54;8561:6;8556:3;8551;8514:54;:::i;:::-;8234:340;8151:423;;;;;:::o;8593:338::-;8648:5;8697:3;8690:4;8682:6;8678:17;8674:27;8664:122;;8705:79;;:::i;:::-;8664:122;8822:6;8809:20;8847:78;8921:3;8913:6;8906:4;8898:6;8894:17;8847:78;:::i;:::-;8838:87;;8654:277;8593:338;;;;:::o;8937:943::-;9032:6;9040;9048;9056;9105:3;9093:9;9084:7;9080:23;9076:33;9073:120;;;9112:79;;:::i;:::-;9073:120;9232:1;9257:53;9302:7;9293:6;9282:9;9278:22;9257:53;:::i;:::-;9247:63;;9203:117;9359:2;9385:53;9430:7;9421:6;9410:9;9406:22;9385:53;:::i;:::-;9375:63;;9330:118;9487:2;9513:53;9558:7;9549:6;9538:9;9534:22;9513:53;:::i;:::-;9503:63;;9458:118;9643:2;9632:9;9628:18;9615:32;9674:18;9666:6;9663:30;9660:117;;;9696:79;;:::i;:::-;9660:117;9801:62;9855:7;9846:6;9835:9;9831:22;9801:62;:::i;:::-;9791:72;;9586:287;8937:943;;;;;;;:::o;9886:474::-;9954:6;9962;10011:2;9999:9;9990:7;9986:23;9982:32;9979:119;;;10017:79;;:::i;:::-;9979:119;10137:1;10162:53;10207:7;10198:6;10187:9;10183:22;10162:53;:::i;:::-;10152:63;;10108:117;10264:2;10290:53;10335:7;10326:6;10315:9;10311:22;10290:53;:::i;:::-;10280:63;;10235:118;9886:474;;;;;:::o;10366:308::-;10428:4;10518:18;10510:6;10507:30;10504:56;;;10540:18;;:::i;:::-;10504:56;10578:29;10600:6;10578:29;:::i;:::-;10570:37;;10662:4;10656;10652:15;10644:23;;10366:308;;;:::o;10680:425::-;10758:5;10783:66;10799:49;10841:6;10799:49;:::i;:::-;10783:66;:::i;:::-;10774:75;;10872:6;10865:5;10858:21;10910:4;10903:5;10899:16;10948:3;10939:6;10934:3;10930:16;10927:25;10924:112;;;10955:79;;:::i;:::-;10924:112;11045:54;11092:6;11087:3;11082;11045:54;:::i;:::-;10764:341;10680:425;;;;;:::o;11125:340::-;11181:5;11230:3;11223:4;11215:6;11211:17;11207:27;11197:122;;11238:79;;:::i;:::-;11197:122;11355:6;11342:20;11380:79;11455:3;11447:6;11440:4;11432:6;11428:17;11380:79;:::i;:::-;11371:88;;11187:278;11125:340;;;;:::o;11471:509::-;11540:6;11589:2;11577:9;11568:7;11564:23;11560:32;11557:119;;;11595:79;;:::i;:::-;11557:119;11743:1;11732:9;11728:17;11715:31;11773:18;11765:6;11762:30;11759:117;;;11795:79;;:::i;:::-;11759:117;11900:63;11955:7;11946:6;11935:9;11931:22;11900:63;:::i;:::-;11890:73;;11686:287;11471:509;;;;:::o;11986:180::-;12034:77;12031:1;12024:88;12131:4;12128:1;12121:15;12155:4;12152:1;12145:15;12172:320;12216:6;12253:1;12247:4;12243:12;12233:22;;12300:1;12294:4;12290:12;12321:18;12311:81;;12377:4;12369:6;12365:17;12355:27;;12311:81;12439:2;12431:6;12428:14;12408:18;12405:38;12402:84;;12458:18;;:::i;:::-;12402:84;12223:269;12172:320;;;:::o;12498:168::-;12638:20;12634:1;12626:6;12622:14;12615:44;12498:168;:::o;12672:366::-;12814:3;12835:67;12899:2;12894:3;12835:67;:::i;:::-;12828:74;;12911:93;13000:3;12911:93;:::i;:::-;13029:2;13024:3;13020:12;13013:19;;12672:366;;;:::o;13044:419::-;13210:4;13248:2;13237:9;13233:18;13225:26;;13297:9;13291:4;13287:20;13283:1;13272:9;13268:17;13261:47;13325:131;13451:4;13325:131;:::i;:::-;13317:139;;13044:419;;;:::o;13469:147::-;13570:11;13607:3;13592:18;;13469:147;;;;:::o;13622:114::-;;:::o;13742:398::-;13901:3;13922:83;14003:1;13998:3;13922:83;:::i;:::-;13915:90;;14014:93;14103:3;14014:93;:::i;:::-;14132:1;14127:3;14123:11;14116:18;;13742:398;;;:::o;14146:379::-;14330:3;14352:147;14495:3;14352:147;:::i;:::-;14345:154;;14516:3;14509:10;;14146:379;;;:::o;14531:166::-;14671:18;14667:1;14659:6;14655:14;14648:42;14531:166;:::o;14703:366::-;14845:3;14866:67;14930:2;14925:3;14866:67;:::i;:::-;14859:74;;14942:93;15031:3;14942:93;:::i;:::-;15060:2;15055:3;15051:12;15044:19;;14703:366;;;:::o;15075:419::-;15241:4;15279:2;15268:9;15264:18;15256:26;;15328:9;15322:4;15318:20;15314:1;15303:9;15299:17;15292:47;15356:131;15482:4;15356:131;:::i;:::-;15348:139;;15075:419;;;:::o;15500:442::-;15649:4;15687:2;15676:9;15672:18;15664:26;;15700:71;15768:1;15757:9;15753:17;15744:6;15700:71;:::i;:::-;15781:72;15849:2;15838:9;15834:18;15825:6;15781:72;:::i;:::-;15863;15931:2;15920:9;15916:18;15907:6;15863:72;:::i;:::-;15500:442;;;;;;:::o;15948:148::-;16050:11;16087:3;16072:18;;15948:148;;;;:::o;16102:390::-;16208:3;16236:39;16269:5;16236:39;:::i;:::-;16291:89;16373:6;16368:3;16291:89;:::i;:::-;16284:96;;16389:65;16447:6;16442:3;16435:4;16428:5;16424:16;16389:65;:::i;:::-;16479:6;16474:3;16470:16;16463:23;;16212:280;16102:390;;;;:::o;16498:435::-;16678:3;16700:95;16791:3;16782:6;16700:95;:::i;:::-;16693:102;;16812:95;16903:3;16894:6;16812:95;:::i;:::-;16805:102;;16924:3;16917:10;;16498:435;;;;;:::o;16939:164::-;17079:16;17075:1;17067:6;17063:14;17056:40;16939:164;:::o;17109:366::-;17251:3;17272:67;17336:2;17331:3;17272:67;:::i;:::-;17265:74;;17348:93;17437:3;17348:93;:::i;:::-;17466:2;17461:3;17457:12;17450:19;;17109:366;;;:::o;17481:419::-;17647:4;17685:2;17674:9;17670:18;17662:26;;17734:9;17728:4;17724:20;17720:1;17709:9;17705:17;17698:47;17762:131;17888:4;17762:131;:::i;:::-;17754:139;;17481:419;;;:::o;17906:180::-;17954:77;17951:1;17944:88;18051:4;18048:1;18041:15;18075:4;18072:1;18065:15;18092:233;18131:3;18154:24;18172:5;18154:24;:::i;:::-;18145:33;;18200:66;18193:5;18190:77;18187:103;;18270:18;;:::i;:::-;18187:103;18317:1;18310:5;18306:13;18299:20;;18092:233;;;:::o;18331:98::-;18382:6;18416:5;18410:12;18400:22;;18331:98;;;:::o;18435:168::-;18518:11;18552:6;18547:3;18540:19;18592:4;18587:3;18583:14;18568:29;;18435:168;;;;:::o;18609:373::-;18695:3;18723:38;18755:5;18723:38;:::i;:::-;18777:70;18840:6;18835:3;18777:70;:::i;:::-;18770:77;;18856:65;18914:6;18909:3;18902:4;18895:5;18891:16;18856:65;:::i;:::-;18946:29;18968:6;18946:29;:::i;:::-;18941:3;18937:39;18930:46;;18699:283;18609:373;;;;:::o;18988:640::-;19183:4;19221:3;19210:9;19206:19;19198:27;;19235:71;19303:1;19292:9;19288:17;19279:6;19235:71;:::i;:::-;19316:72;19384:2;19373:9;19369:18;19360:6;19316:72;:::i;:::-;19398;19466:2;19455:9;19451:18;19442:6;19398:72;:::i;:::-;19517:9;19511:4;19507:20;19502:2;19491:9;19487:18;19480:48;19545:76;19616:4;19607:6;19545:76;:::i;:::-;19537:84;;18988:640;;;;;;;:::o;19634:141::-;19690:5;19721:6;19715:13;19706:22;;19737:32;19763:5;19737:32;:::i;:::-;19634:141;;;;:::o;19781:349::-;19850:6;19899:2;19887:9;19878:7;19874:23;19870:32;19867:119;;;19905:79;;:::i;:::-;19867:119;20025:1;20050:63;20105:7;20096:6;20085:9;20081:22;20050:63;:::i;:::-;20040:73;;19996:127;19781:349;;;;:::o;20136:181::-;20276:33;20272:1;20264:6;20260:14;20253:57;20136:181;:::o;20323:366::-;20465:3;20486:67;20550:2;20545:3;20486:67;:::i;:::-;20479:74;;20562:93;20651:3;20562:93;:::i;:::-;20680:2;20675:3;20671:12;20664:19;;20323:366;;;:::o;20695:419::-;20861:4;20899:2;20888:9;20884:18;20876:26;;20948:9;20942:4;20938:20;20934:1;20923:9;20919:17;20912:47;20976:131;21102:4;20976:131;:::i;:::-;20968:139;;20695:419;;;:::o;21120:141::-;21169:4;21192:3;21184:11;;21215:3;21212:1;21205:14;21249:4;21246:1;21236:18;21228:26;;21120:141;;;:::o;21267:93::-;21304:6;21351:2;21346;21339:5;21335:14;21331:23;21321:33;;21267:93;;;:::o;21366:107::-;21410:8;21460:5;21454:4;21450:16;21429:37;;21366:107;;;;:::o;21479:393::-;21548:6;21598:1;21586:10;21582:18;21621:97;21651:66;21640:9;21621:97;:::i;:::-;21739:39;21769:8;21758:9;21739:39;:::i;:::-;21727:51;;21811:4;21807:9;21800:5;21796:21;21787:30;;21860:4;21850:8;21846:19;21839:5;21836:30;21826:40;;21555:317;;21479:393;;;;;:::o;21878:60::-;21906:3;21927:5;21920:12;;21878:60;;;:::o;21944:142::-;21994:9;22027:53;22045:34;22054:24;22072:5;22054:24;:::i;:::-;22045:34;:::i;:::-;22027:53;:::i;:::-;22014:66;;21944:142;;;:::o;22092:75::-;22135:3;22156:5;22149:12;;22092:75;;;:::o;22173:269::-;22283:39;22314:7;22283:39;:::i;:::-;22344:91;22393:41;22417:16;22393:41;:::i;:::-;22385:6;22378:4;22372:11;22344:91;:::i;:::-;22338:4;22331:105;22249:193;22173:269;;;:::o;22448:73::-;22493:3;22448:73;:::o;22527:189::-;22604:32;;:::i;:::-;22645:65;22703:6;22695;22689:4;22645:65;:::i;:::-;22580:136;22527:189;;:::o;22722:186::-;22782:120;22799:3;22792:5;22789:14;22782:120;;;22853:39;22890:1;22883:5;22853:39;:::i;:::-;22826:1;22819:5;22815:13;22806:22;;22782:120;;;22722:186;;:::o;22914:543::-;23015:2;23010:3;23007:11;23004:446;;;23049:38;23081:5;23049:38;:::i;:::-;23133:29;23151:10;23133:29;:::i;:::-;23123:8;23119:44;23316:2;23304:10;23301:18;23298:49;;;23337:8;23322:23;;23298:49;23360:80;23416:22;23434:3;23416:22;:::i;:::-;23406:8;23402:37;23389:11;23360:80;:::i;:::-;23019:431;;23004:446;22914:543;;;:::o;23463:117::-;23517:8;23567:5;23561:4;23557:16;23536:37;;23463:117;;;;:::o;23586:169::-;23630:6;23663:51;23711:1;23707:6;23699:5;23696:1;23692:13;23663:51;:::i;:::-;23659:56;23744:4;23738;23734:15;23724:25;;23637:118;23586:169;;;;:::o;23760:295::-;23836:4;23982:29;24007:3;24001:4;23982:29;:::i;:::-;23974:37;;24044:3;24041:1;24037:11;24031:4;24028:21;24020:29;;23760:295;;;;:::o;24060:1395::-;24177:37;24210:3;24177:37;:::i;:::-;24279:18;24271:6;24268:30;24265:56;;;24301:18;;:::i;:::-;24265:56;24345:38;24377:4;24371:11;24345:38;:::i;:::-;24430:67;24490:6;24482;24476:4;24430:67;:::i;:::-;24524:1;24548:4;24535:17;;24580:2;24572:6;24569:14;24597:1;24592:618;;;;25254:1;25271:6;25268:77;;;25320:9;25315:3;25311:19;25305:26;25296:35;;25268:77;25371:67;25431:6;25424:5;25371:67;:::i;:::-;25365:4;25358:81;25227:222;24562:887;;24592:618;24644:4;24640:9;24632:6;24628:22;24678:37;24710:4;24678:37;:::i;:::-;24737:1;24751:208;24765:7;24762:1;24759:14;24751:208;;;24844:9;24839:3;24835:19;24829:26;24821:6;24814:42;24895:1;24887:6;24883:14;24873:24;;24942:2;24931:9;24927:18;24914:31;;24788:4;24785:1;24781:12;24776:17;;24751:208;;;24987:6;24978:7;24975:19;24972:179;;;25045:9;25040:3;25036:19;25030:26;25088:48;25130:4;25122:6;25118:17;25107:9;25088:48;:::i;:::-;25080:6;25073:64;24995:156;24972:179;25197:1;25193;25185:6;25181:14;25177:22;25171:4;25164:36;24599:611;;;24562:887;;24152:1303;;;24060:1395;;:::o;25461:332::-;25582:4;25620:2;25609:9;25605:18;25597:26;;25633:71;25701:1;25690:9;25686:17;25677:6;25633:71;:::i;:::-;25714:72;25782:2;25771:9;25767:18;25758:6;25714:72;:::i;:::-;25461:332;;;;;:::o;25799:180::-;25847:77;25844:1;25837:88;25944:4;25941:1;25934:15;25968:4;25965:1;25958:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2324400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_marketPlaceAddress()": "2642",
								"_masterAddress()": "2619",
								"_mintPrice()": "2471",
								"_tokenIdCounter()": "2492",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mintNFT(string)": "infinite",
								"name()": "infinite",
								"owner()": "2604",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"setMarketPlaceAddress(address)": "infinite",
								"setMasterAddress(address)": "infinite",
								"setMintPrice(uint256)": "infinite",
								"supportsInterface(bytes4)": "881",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"withDraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 283,
									"end": 2110,
									"name": "PUSH",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 283,
									"end": 2110,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 283,
									"end": 2110,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "CALLVALUE",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 601,
									"end": 851,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 601,
									"end": 851,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 601,
									"end": 851,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 601,
									"end": 851,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "PUSHSIZE",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "CODESIZE",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "PUSHSIZE",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 601,
									"end": 851,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 601,
									"end": 851,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 601,
									"end": 851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "tag",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 601,
									"end": 851,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 663,
									"end": 673,
									"name": "CALLER",
									"source": 18
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 7,
									"value": "4D514E4654000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 7,
									"value": "4D51540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 706,
									"end": 707,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 694,
									"end": 703,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 694,
									"end": 707,
									"modifierDepth": 2,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 686,
									"end": 742,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "18"
								},
								{
									"begin": 686,
									"end": 742,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 686,
									"end": 742,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 686,
									"end": 742,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 686,
									"end": 742,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 18,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 686,
									"end": 742,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 686,
									"end": 742,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 686,
									"end": 742,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 686,
									"end": 742,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 686,
									"end": 742,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "19"
								},
								{
									"begin": 686,
									"end": 742,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 686,
									"end": 742,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 686,
									"end": 742,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 686,
									"end": 742,
									"modifierDepth": 2,
									"name": "tag",
									"source": 18,
									"value": "19"
								},
								{
									"begin": 686,
									"end": 742,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 686,
									"end": 742,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 686,
									"end": 742,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 686,
									"end": 742,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 686,
									"end": 742,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 686,
									"end": 742,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 686,
									"end": 742,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 686,
									"end": 742,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 686,
									"end": 742,
									"modifierDepth": 2,
									"name": "tag",
									"source": 18,
									"value": "18"
								},
								{
									"begin": 686,
									"end": 742,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 771,
									"end": 772,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 753,
									"end": 768,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 18,
									"value": "3A"
								},
								{
									"begin": 753,
									"end": 772,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 753,
									"end": 772,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 753,
									"end": 772,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 753,
									"end": 772,
									"modifierDepth": 2,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 796,
									"end": 805,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 783,
									"end": 793,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 18,
									"value": "3B"
								},
								{
									"begin": 783,
									"end": 805,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 783,
									"end": 805,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 783,
									"end": 805,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 783,
									"end": 805,
									"modifierDepth": 2,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 833,
									"end": 843,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 18
								},
								{
									"begin": 816,
									"end": 830,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 18,
									"value": "3C"
								},
								{
									"begin": 816,
									"end": 830,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 816,
									"end": 843,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 18,
									"value": "100"
								},
								{
									"begin": 816,
									"end": 843,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 18
								},
								{
									"begin": 816,
									"end": 843,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 816,
									"end": 843,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 18
								},
								{
									"begin": 816,
									"end": 843,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 816,
									"end": 843,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 816,
									"end": 843,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 816,
									"end": 843,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 816,
									"end": 843,
									"modifierDepth": 2,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 816,
									"end": 843,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 816,
									"end": 843,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 816,
									"end": 843,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 816,
									"end": 843,
									"modifierDepth": 2,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 816,
									"end": 843,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 816,
									"end": 843,
									"modifierDepth": 2,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 816,
									"end": 843,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 816,
									"end": 843,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 816,
									"end": 843,
									"modifierDepth": 2,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 601,
									"end": 851,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 283,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "21"
								},
								{
									"begin": 283,
									"end": 2110,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 19,
									"value": "26"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 19,
									"value": "27"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "60"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "26"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 19,
									"value": "60"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "61"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 19,
									"value": "61"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 19,
									"value": "28"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "63"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "27"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 19,
									"value": "63"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 19,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 19
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "65"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "66"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 819,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 19,
									"value": "66"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 19,
									"value": "65"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "67"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "28"
								},
								{
									"begin": 964,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 19,
									"value": "67"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 694,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "tag",
									"source": 19,
									"value": "29"
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1103,
									"end": 1109,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1137,
									"end": 1142,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1131,
									"end": 1143,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 1121,
									"end": 1143,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1121,
									"end": 1143,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1051,
									"end": 1150,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1156,
									"end": 1336,
									"name": "tag",
									"source": 19,
									"value": "30"
								},
								{
									"begin": 1156,
									"end": 1336,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1204,
									"end": 1281,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1201,
									"end": 1202,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1194,
									"end": 1282,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1301,
									"end": 1305,
									"name": "PUSH",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 1298,
									"end": 1299,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 1291,
									"end": 1306,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1325,
									"end": 1329,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 1322,
									"end": 1323,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1315,
									"end": 1330,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 1342,
									"end": 1522,
									"name": "tag",
									"source": 19,
									"value": "31"
								},
								{
									"begin": 1342,
									"end": 1522,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1390,
									"end": 1467,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1387,
									"end": 1388,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1380,
									"end": 1468,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1487,
									"end": 1491,
									"name": "PUSH",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 1477,
									"end": 1492,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1511,
									"end": 1515,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1516,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "tag",
									"source": 19,
									"value": "32"
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1572,
									"end": 1578,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1609,
									"end": 1610,
									"name": "PUSH",
									"source": 19,
									"value": "2"
								},
								{
									"begin": 1603,
									"end": 1607,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1599,
									"end": 1611,
									"name": "DIV",
									"source": 19
								},
								{
									"begin": 1589,
									"end": 1611,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1589,
									"end": 1611,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1656,
									"end": 1657,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 1650,
									"end": 1654,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1646,
									"end": 1658,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 1677,
									"end": 1695,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "72"
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 1733,
									"end": 1737,
									"name": "PUSH",
									"source": 19,
									"value": "7F"
								},
								{
									"begin": 1725,
									"end": 1731,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1721,
									"end": 1738,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 1711,
									"end": 1738,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1711,
									"end": 1738,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "tag",
									"source": 19,
									"value": "72"
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1795,
									"end": 1797,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 1787,
									"end": 1793,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1784,
									"end": 1798,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 1764,
									"end": 1782,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1761,
									"end": 1799,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "74"
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "31"
								},
								{
									"begin": 1814,
									"end": 1832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "tag",
									"source": 19,
									"value": "74"
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "tag",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1579,
									"end": 1848,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1528,
									"end": 1848,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "tag",
									"source": 19,
									"value": "33"
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1903,
									"end": 1907,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1926,
									"end": 1929,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1918,
									"end": 1929,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1918,
									"end": 1929,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1949,
									"end": 1952,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1946,
									"end": 1947,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1939,
									"end": 1953,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1983,
									"end": 1987,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 1981,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "KECCAK256",
									"source": 19
								},
								{
									"begin": 1962,
									"end": 1988,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1962,
									"end": 1988,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1854,
									"end": 1995,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "tag",
									"source": 19,
									"value": "34"
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2038,
									"end": 2044,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2085,
									"end": 2087,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 2080,
									"end": 2082,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 2073,
									"end": 2078,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 2069,
									"end": 2083,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 2065,
									"end": 2088,
									"name": "DIV",
									"source": 19
								},
								{
									"begin": 2055,
									"end": 2088,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2055,
									"end": 2088,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2001,
									"end": 2094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "tag",
									"source": 19,
									"value": "35"
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2144,
									"end": 2152,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2194,
									"end": 2199,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2188,
									"end": 2192,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "SHL",
									"source": 19
								},
								{
									"begin": 2163,
									"end": 2200,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2163,
									"end": 2200,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2100,
									"end": 2207,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "tag",
									"source": 19,
									"value": "36"
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2282,
									"end": 2288,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2332,
									"end": 2333,
									"name": "PUSH",
									"source": 19,
									"value": "8"
								},
								{
									"begin": 2320,
									"end": 2330,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 2316,
									"end": 2334,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "79"
								},
								{
									"begin": 2385,
									"end": 2451,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2374,
									"end": 2383,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "35"
								},
								{
									"begin": 2355,
									"end": 2452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "tag",
									"source": 19,
									"value": "79"
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "80"
								},
								{
									"begin": 2503,
									"end": 2511,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 2492,
									"end": 2501,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "35"
								},
								{
									"begin": 2473,
									"end": 2512,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "tag",
									"source": 19,
									"value": "80"
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2461,
									"end": 2512,
									"name": "SWAP6",
									"source": 19
								},
								{
									"begin": 2461,
									"end": 2512,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2545,
									"end": 2549,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 2541,
									"end": 2550,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 2534,
									"end": 2539,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2530,
									"end": 2551,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 2521,
									"end": 2551,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 2521,
									"end": 2551,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2594,
									"end": 2598,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 2584,
									"end": 2592,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 2580,
									"end": 2599,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 2573,
									"end": 2578,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2570,
									"end": 2600,
									"name": "OR",
									"source": 19
								},
								{
									"begin": 2560,
									"end": 2600,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 2560,
									"end": 2600,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2289,
									"end": 2606,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2289,
									"end": 2606,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2213,
									"end": 2606,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "tag",
									"source": 19,
									"value": "37"
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2640,
									"end": 2643,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2661,
									"end": 2666,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2654,
									"end": 2666,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2654,
									"end": 2666,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2612,
									"end": 2672,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "tag",
									"source": 19,
									"value": "38"
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2728,
									"end": 2737,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "83"
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "84"
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "85"
								},
								{
									"begin": 2806,
									"end": 2811,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "26"
								},
								{
									"begin": 2788,
									"end": 2812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "tag",
									"source": 19,
									"value": "85"
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "37"
								},
								{
									"begin": 2779,
									"end": 2813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "tag",
									"source": 19,
									"value": "84"
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "26"
								},
								{
									"begin": 2761,
									"end": 2814,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "tag",
									"source": 19,
									"value": "83"
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2748,
									"end": 2814,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2748,
									"end": 2814,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2678,
									"end": 2820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "tag",
									"source": 19,
									"value": "39"
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2869,
									"end": 2872,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2890,
									"end": 2895,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2883,
									"end": 2895,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2883,
									"end": 2895,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2826,
									"end": 2901,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "tag",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "88"
								},
								{
									"begin": 3048,
									"end": 3055,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "38"
								},
								{
									"begin": 3017,
									"end": 3056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "tag",
									"source": 19,
									"value": "88"
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "89"
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "90"
								},
								{
									"begin": 3151,
									"end": 3167,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "39"
								},
								{
									"begin": 3127,
									"end": 3168,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "tag",
									"source": 19,
									"value": "90"
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3119,
									"end": 3125,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 3112,
									"end": 3116,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 3106,
									"end": 3117,
									"name": "SLOAD",
									"source": 19
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "36"
								},
								{
									"begin": 3078,
									"end": 3169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "tag",
									"source": 19,
									"value": "89"
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3072,
									"end": 3076,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3065,
									"end": 3170,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 2983,
									"end": 3176,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2907,
									"end": 3176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "tag",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3227,
									"end": 3230,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 3182,
									"end": 3255,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "tag",
									"source": 19,
									"value": "42"
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "93"
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 3338,
									"end": 3370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "tag",
									"source": 19,
									"value": "93"
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "94"
								},
								{
									"begin": 3437,
									"end": 3443,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3429,
									"end": 3435,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 3423,
									"end": 3427,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 3379,
									"end": 3444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "tag",
									"source": 19,
									"value": "94"
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3314,
									"end": 3450,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3261,
									"end": 3450,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "tag",
									"source": 19,
									"value": "43"
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "tag",
									"source": 19,
									"value": "96"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3533,
									"end": 3536,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3526,
									"end": 3531,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3523,
									"end": 3537,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "98"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "99"
								},
								{
									"begin": 3624,
									"end": 3625,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 3617,
									"end": 3622,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "42"
								},
								{
									"begin": 3587,
									"end": 3626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "tag",
									"source": 19,
									"value": "99"
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3560,
									"end": 3561,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 3553,
									"end": 3558,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3549,
									"end": 3562,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 3540,
									"end": 3562,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 3540,
									"end": 3562,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "96"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "tag",
									"source": 19,
									"value": "98"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3456,
									"end": 3642,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "tag",
									"source": 19,
									"value": "44"
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3749,
									"end": 3751,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 3744,
									"end": 3747,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3741,
									"end": 3752,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "101"
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "102"
								},
								{
									"begin": 3815,
									"end": 3820,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "33"
								},
								{
									"begin": 3783,
									"end": 3821,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "tag",
									"source": 19,
									"value": "102"
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "103"
								},
								{
									"begin": 3885,
									"end": 3895,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "34"
								},
								{
									"begin": 3867,
									"end": 3896,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "tag",
									"source": 19,
									"value": "103"
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3857,
									"end": 3865,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3853,
									"end": 3897,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 4050,
									"end": 4052,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 4038,
									"end": 4048,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 4035,
									"end": 4053,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "104"
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 4071,
									"end": 4079,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 4056,
									"end": 4079,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 4056,
									"end": 4079,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "tag",
									"source": 19,
									"value": "104"
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "105"
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "106"
								},
								{
									"begin": 4168,
									"end": 4171,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "34"
								},
								{
									"begin": 4150,
									"end": 4172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "tag",
									"source": 19,
									"value": "106"
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4140,
									"end": 4148,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 4136,
									"end": 4173,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 4123,
									"end": 4134,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "43"
								},
								{
									"begin": 4094,
									"end": 4174,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "tag",
									"source": 19,
									"value": "105"
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3753,
									"end": 4184,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3753,
									"end": 4184,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "tag",
									"source": 19,
									"value": "101"
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3648,
									"end": 4191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "tag",
									"source": 19,
									"value": "45"
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4251,
									"end": 4259,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 4301,
									"end": 4306,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4295,
									"end": 4299,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4291,
									"end": 4307,
									"name": "SHR",
									"source": 19
								},
								{
									"begin": 4270,
									"end": 4307,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 4270,
									"end": 4307,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4197,
									"end": 4314,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "tag",
									"source": 19,
									"value": "46"
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4364,
									"end": 4370,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "109"
								},
								{
									"begin": 4445,
									"end": 4446,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 4441,
									"end": 4447,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 4433,
									"end": 4438,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 4430,
									"end": 4431,
									"name": "PUSH",
									"source": 19,
									"value": "8"
								},
								{
									"begin": 4426,
									"end": 4439,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "45"
								},
								{
									"begin": 4397,
									"end": 4448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "tag",
									"source": 19,
									"value": "109"
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4393,
									"end": 4449,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 4478,
									"end": 4482,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 4472,
									"end": 4476,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 4468,
									"end": 4483,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4371,
									"end": 4489,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4320,
									"end": 4489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "tag",
									"source": 19,
									"value": "47"
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4570,
									"end": 4574,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "111"
								},
								{
									"begin": 4741,
									"end": 4744,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 4735,
									"end": 4739,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "46"
								},
								{
									"begin": 4716,
									"end": 4745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "tag",
									"source": 19,
									"value": "111"
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4708,
									"end": 4745,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 4708,
									"end": 4745,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4778,
									"end": 4781,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4775,
									"end": 4776,
									"name": "PUSH",
									"source": 19,
									"value": "2"
								},
								{
									"begin": 4771,
									"end": 4782,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 4765,
									"end": 4769,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4762,
									"end": 4783,
									"name": "OR",
									"source": 19
								},
								{
									"begin": 4754,
									"end": 4783,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 4754,
									"end": 4783,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4494,
									"end": 4789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "tag",
									"source": 19,
									"value": "9"
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "113"
								},
								{
									"begin": 4944,
									"end": 4947,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "29"
								},
								{
									"begin": 4911,
									"end": 4948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "tag",
									"source": 19,
									"value": "113"
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5013,
									"end": 5031,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5005,
									"end": 5011,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 5002,
									"end": 5032,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "114"
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "115"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "30"
								},
								{
									"begin": 5035,
									"end": 5053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "tag",
									"source": 19,
									"value": "115"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "tag",
									"source": 19,
									"value": "114"
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "116"
								},
								{
									"begin": 5111,
									"end": 5115,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5105,
									"end": 5116,
									"name": "SLOAD",
									"source": 19
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "32"
								},
								{
									"begin": 5079,
									"end": 5117,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "tag",
									"source": 19,
									"value": "116"
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "117"
								},
								{
									"begin": 5224,
									"end": 5230,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5216,
									"end": 5222,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5210,
									"end": 5214,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "44"
								},
								{
									"begin": 5164,
									"end": 5231,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "tag",
									"source": 19,
									"value": "117"
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5258,
									"end": 5259,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 5282,
									"end": 5286,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 5269,
									"end": 5286,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 5269,
									"end": 5286,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5314,
									"end": 5316,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 5306,
									"end": 5312,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 5303,
									"end": 5317,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 5331,
									"end": 5332,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "119"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 5988,
									"end": 5989,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 6005,
									"end": 6011,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "120"
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 6054,
									"end": 6063,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 6049,
									"end": 6052,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 6045,
									"end": 6064,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 6039,
									"end": 6065,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 6030,
									"end": 6065,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 6030,
									"end": 6065,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "tag",
									"source": 19,
									"value": "120"
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "121"
								},
								{
									"begin": 6165,
									"end": 6171,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 6158,
									"end": 6163,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "47"
								},
								{
									"begin": 6105,
									"end": 6172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "tag",
									"source": 19,
									"value": "121"
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6099,
									"end": 6103,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 6092,
									"end": 6173,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 5961,
									"end": 6183,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "118"
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "tag",
									"source": 19,
									"value": "119"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5378,
									"end": 5382,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 5374,
									"end": 5383,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 5366,
									"end": 5372,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 5362,
									"end": 5384,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "122"
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "33"
								},
								{
									"begin": 5412,
									"end": 5449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "tag",
									"source": 19,
									"value": "122"
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5471,
									"end": 5472,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "tag",
									"source": 19,
									"value": "123"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5499,
									"end": 5506,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5496,
									"end": 5497,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 5493,
									"end": 5507,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "125"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 5578,
									"end": 5587,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 5573,
									"end": 5576,
									"name": "DUP10",
									"source": 19
								},
								{
									"begin": 5569,
									"end": 5588,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 5563,
									"end": 5589,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 5555,
									"end": 5561,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5548,
									"end": 5590,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 5629,
									"end": 5630,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 5621,
									"end": 5627,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5617,
									"end": 5631,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 5607,
									"end": 5631,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 5607,
									"end": 5631,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5676,
									"end": 5678,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 5665,
									"end": 5674,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 5661,
									"end": 5679,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 5648,
									"end": 5679,
									"name": "SWAP5",
									"source": 19
								},
								{
									"begin": 5648,
									"end": 5679,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5522,
									"end": 5526,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 5519,
									"end": 5520,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 5515,
									"end": 5527,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 5510,
									"end": 5527,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 5510,
									"end": 5527,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "123"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "tag",
									"source": 19,
									"value": "125"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5721,
									"end": 5727,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 5712,
									"end": 5719,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 5709,
									"end": 5728,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "126"
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 5779,
									"end": 5788,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 5774,
									"end": 5777,
									"name": "DUP10",
									"source": 19
								},
								{
									"begin": 5770,
									"end": 5789,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 5764,
									"end": 5790,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "127"
								},
								{
									"begin": 5864,
									"end": 5868,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 5856,
									"end": 5862,
									"name": "DUP10",
									"source": 19
								},
								{
									"begin": 5852,
									"end": 5869,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 5841,
									"end": 5850,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "46"
								},
								{
									"begin": 5822,
									"end": 5870,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "tag",
									"source": 19,
									"value": "127"
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5814,
									"end": 5820,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 5807,
									"end": 5871,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 5729,
									"end": 5885,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "tag",
									"source": 19,
									"value": "126"
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5931,
									"end": 5932,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 5927,
									"end": 5928,
									"name": "PUSH",
									"source": 19,
									"value": "2"
								},
								{
									"begin": 5919,
									"end": 5925,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 5915,
									"end": 5929,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 5911,
									"end": 5933,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 5905,
									"end": 5909,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 5898,
									"end": 5934,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "tag",
									"source": 19,
									"value": "118"
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4794,
									"end": 6189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "tag",
									"source": 19,
									"value": "48"
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6232,
									"end": 6239,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 6272,
									"end": 6314,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6265,
									"end": 6270,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 6261,
									"end": 6315,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 6250,
									"end": 6315,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 6250,
									"end": 6315,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6195,
									"end": 6321,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "tag",
									"source": 19,
									"value": "49"
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6364,
									"end": 6371,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "130"
								},
								{
									"begin": 6411,
									"end": 6416,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "48"
								},
								{
									"begin": 6393,
									"end": 6417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "tag",
									"source": 19,
									"value": "130"
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6382,
									"end": 6417,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 6382,
									"end": 6417,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6327,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 19,
									"value": "50"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "132"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "49"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 19,
									"value": "132"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 19,
									"value": "14"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "134"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "50"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 19,
									"value": "134"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6781,
									"end": 6950,
									"name": "tag",
									"source": 19,
									"value": "51"
								},
								{
									"begin": 6781,
									"end": 6950,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6865,
									"end": 6876,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 6899,
									"end": 6905,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 6894,
									"end": 6897,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 6887,
									"end": 6906,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 6939,
									"end": 6943,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 6934,
									"end": 6937,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 6930,
									"end": 6944,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 6915,
									"end": 6944,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 6915,
									"end": 6944,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6781,
									"end": 6950,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 6781,
									"end": 6950,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 6781,
									"end": 6950,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6781,
									"end": 6950,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6781,
									"end": 6950,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6956,
									"end": 7136,
									"name": "tag",
									"source": 19,
									"value": "52"
								},
								{
									"begin": 6956,
									"end": 7136,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7096,
									"end": 7128,
									"name": "PUSH",
									"source": 19,
									"value": "6D696E7450726963652069732067726561746572207468616E207A65726F0000"
								},
								{
									"begin": 7092,
									"end": 7093,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 7084,
									"end": 7090,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 7080,
									"end": 7094,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 7073,
									"end": 7129,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 6956,
									"end": 7136,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6956,
									"end": 7136,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 7142,
									"end": 7508,
									"name": "tag",
									"source": 19,
									"value": "53"
								},
								{
									"begin": 7142,
									"end": 7508,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7284,
									"end": 7287,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 7305,
									"end": 7372,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "138"
								},
								{
									"begin": 7369,
									"end": 7371,
									"name": "PUSH",
									"source": 19,
									"value": "1E"
								},
								{
									"begin": 7364,
									"end": 7367,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 7305,
									"end": 7372,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "51"
								},
								{
									"begin": 7305,
									"end": 7372,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 7305,
									"end": 7372,
									"name": "tag",
									"source": 19,
									"value": "138"
								},
								{
									"begin": 7305,
									"end": 7372,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7298,
									"end": 7372,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 7298,
									"end": 7372,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7381,
									"end": 7474,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "139"
								},
								{
									"begin": 7470,
									"end": 7473,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 7381,
									"end": 7474,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "52"
								},
								{
									"begin": 7381,
									"end": 7474,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 7381,
									"end": 7474,
									"name": "tag",
									"source": 19,
									"value": "139"
								},
								{
									"begin": 7381,
									"end": 7474,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7499,
									"end": 7501,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 7494,
									"end": 7497,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 7490,
									"end": 7502,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 7483,
									"end": 7502,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 7483,
									"end": 7502,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7142,
									"end": 7508,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 7142,
									"end": 7508,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 7142,
									"end": 7508,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7142,
									"end": 7508,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 7514,
									"end": 7933,
									"name": "tag",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 7514,
									"end": 7933,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7680,
									"end": 7684,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 7718,
									"end": 7720,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 7707,
									"end": 7716,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 7703,
									"end": 7721,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 7695,
									"end": 7721,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 7695,
									"end": 7721,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7767,
									"end": 7776,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 7761,
									"end": 7765,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 7757,
									"end": 7777,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 7753,
									"end": 7754,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 7742,
									"end": 7751,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 7738,
									"end": 7755,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 7731,
									"end": 7778,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 7795,
									"end": 7926,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "141"
								},
								{
									"begin": 7921,
									"end": 7925,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 7795,
									"end": 7926,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "53"
								},
								{
									"begin": 7795,
									"end": 7926,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 7795,
									"end": 7926,
									"name": "tag",
									"source": 19,
									"value": "141"
								},
								{
									"begin": 7795,
									"end": 7926,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7787,
									"end": 7926,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 7787,
									"end": 7926,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7514,
									"end": 7933,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 7514,
									"end": 7933,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 7514,
									"end": 7933,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7514,
									"end": 7933,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 283,
									"end": 2110,
									"name": "tag",
									"source": 18,
									"value": "21"
								},
								{
									"begin": 283,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 283,
									"end": 2110,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 283,
									"end": 2110,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 283,
									"end": 2110,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 283,
									"end": 2110,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 2110,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 283,
									"end": 2110,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 2110,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207b115481d904876e3db03058100b6a9fee4140052cc26a17dd2f7fa8a7d7207864736f6c63430008190033",
									".code": [
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "70A08231"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "B88D4FDE"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "28"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "E985E9C5"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "29"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "E985E9C5"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "23"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "F2FDE38B"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "F4A0A528"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "FB37E883"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "tag",
											"source": 18,
											"value": "29"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "B88D4FDE"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "C87B56DD"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "CC98EF96"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "tag",
											"source": 18,
											"value": "28"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "70A08231"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "715018A6"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "84C4BD4B"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "16"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "8DA5CB5B"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "17"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "95D89B41"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "A22CB465"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "tag",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "FDB1C10"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "30"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "FDB1C10"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "23B872DD"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "42842E0E"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "5D06A611"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "6075851E"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "6352211E"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "tag",
											"source": 18,
											"value": "30"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "1FFC9A7"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "387DA42"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "6FDDE03"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "81812FC"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "95EA7B3"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "A4FA1DD"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "tag",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 283,
											"end": 2110,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 398,
											"end": 423,
											"name": "tag",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 398,
											"end": 423,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 398,
											"end": 423,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 398,
											"end": 423,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 423,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 398,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 398,
											"end": 423,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 423,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 423,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 423,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 398,
											"end": 423,
											"name": "tag",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 398,
											"end": 423,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 398,
											"end": 423,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 398,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "39"
										},
										{
											"begin": 398,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 398,
											"end": 423,
											"name": "tag",
											"source": 18,
											"value": "39"
										},
										{
											"begin": 398,
											"end": 423,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 398,
											"end": 423,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 423,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 398,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 398,
											"end": 423,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 398,
											"end": 423,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "42"
										},
										{
											"begin": 398,
											"end": 423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 398,
											"end": 423,
											"name": "tag",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 398,
											"end": 423,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 398,
											"end": 423,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 423,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 398,
											"end": 423,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 423,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 398,
											"end": 423,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 398,
											"end": 423,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 423,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 500,
											"name": "tag",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 466,
											"end": 500,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 466,
											"end": 500,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 500,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "tag",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 466,
											"end": 500,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "61"
										},
										{
											"begin": 466,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "62"
										},
										{
											"begin": 466,
											"end": 500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "tag",
											"source": 18,
											"value": "61"
										},
										{
											"begin": 466,
											"end": 500,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 500,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "63"
										},
										{
											"begin": 466,
											"end": 500,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "54"
										},
										{
											"begin": 466,
											"end": 500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "tag",
											"source": 18,
											"value": "63"
										},
										{
											"begin": 466,
											"end": 500,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 500,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 2107,
											"name": "tag",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 1791,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 2107,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 2107,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 2107,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 1791,
											"end": 2107,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 2107,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 2107,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 2107,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 2107,
											"name": "tag",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 1791,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 2107,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "65"
										},
										{
											"begin": 1791,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "66"
										},
										{
											"begin": 1791,
											"end": 2107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 2107,
											"name": "tag",
											"source": 18,
											"value": "65"
										},
										{
											"begin": 1791,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 2107,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "tag",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "76"
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "tag",
											"source": 18,
											"value": "76"
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "77"
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "79"
										},
										{
											"begin": 1218,
											"end": 1333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "tag",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 1218,
											"end": 1333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "tag",
											"source": 18,
											"value": "77"
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "tag",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 430,
											"end": 459,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "81"
										},
										{
											"begin": 430,
											"end": 459,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 459,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "tag",
											"source": 18,
											"value": "81"
										},
										{
											"begin": 430,
											"end": 459,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "82"
										},
										{
											"begin": 430,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "83"
										},
										{
											"begin": 430,
											"end": 459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "tag",
											"source": 18,
											"value": "82"
										},
										{
											"begin": 430,
											"end": 459,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 430,
											"end": 459,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 430,
											"end": 459,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "54"
										},
										{
											"begin": 430,
											"end": 459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "tag",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 430,
											"end": 459,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 430,
											"end": 459,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 361,
											"end": 391,
											"name": "tag",
											"source": 18,
											"value": "16"
										},
										{
											"begin": 361,
											"end": 391,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 361,
											"end": 391,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 361,
											"end": 391,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 361,
											"end": 391,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 361,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "98"
										},
										{
											"begin": 361,
											"end": 391,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 361,
											"end": 391,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 361,
											"end": 391,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 361,
											"end": 391,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 361,
											"end": 391,
											"name": "tag",
											"source": 18,
											"value": "98"
										},
										{
											"begin": 361,
											"end": 391,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 361,
											"end": 391,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 361,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "99"
										},
										{
											"begin": 361,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 361,
											"end": 391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 361,
											"end": 391,
											"name": "tag",
											"source": 18,
											"value": "99"
										},
										{
											"begin": 361,
											"end": 391,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 361,
											"end": 391,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 361,
											"end": 391,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 361,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "101"
										},
										{
											"begin": 361,
											"end": 391,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 361,
											"end": 391,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 361,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "42"
										},
										{
											"begin": 361,
											"end": 391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 361,
											"end": 391,
											"name": "tag",
											"source": 18,
											"value": "101"
										},
										{
											"begin": 361,
											"end": 391,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 361,
											"end": 391,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 361,
											"end": 391,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 361,
											"end": 391,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 361,
											"end": 391,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 361,
											"end": 391,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 361,
											"end": 391,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 361,
											"end": 391,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "tag",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "125"
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "tag",
											"source": 18,
											"value": "125"
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "126"
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "127"
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "79"
										},
										{
											"begin": 859,
											"end": 1103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "tag",
											"source": 18,
											"value": "127"
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "128"
										},
										{
											"begin": 859,
											"end": 1103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "tag",
											"source": 18,
											"value": "126"
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "tag",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "139"
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "tag",
											"source": 18,
											"value": "139"
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "141"
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "51"
										},
										{
											"begin": 1111,
											"end": 1210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "tag",
											"source": 18,
											"value": "141"
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "142"
										},
										{
											"begin": 1111,
											"end": 1210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "tag",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "tag",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "143"
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "144"
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "145"
										},
										{
											"begin": 1341,
											"end": 1783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "tag",
											"source": 18,
											"value": "144"
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "146"
										},
										{
											"begin": 1341,
											"end": 1783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "tag",
											"source": 18,
											"value": "143"
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "147"
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "42"
										},
										{
											"begin": 1341,
											"end": 1783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "tag",
											"source": 18,
											"value": "147"
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1039,
											"end": 1043,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 770,
											"name": "PUSH",
											"source": 10,
											"value": "49064906"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1073,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 1125,
											"end": 1136,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1101,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 1101,
											"end": 1137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 398,
											"end": 423,
											"name": "tag",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 423,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 398,
											"end": 423,
											"name": "PUSH",
											"source": 18,
											"value": "3B"
										},
										{
											"begin": 398,
											"end": 423,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 398,
											"end": 423,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 398,
											"end": 423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 500,
											"name": "tag",
											"source": 18,
											"value": "62"
										},
										{
											"begin": 466,
											"end": 500,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "PUSH",
											"source": 18,
											"value": "3D"
										},
										{
											"begin": 466,
											"end": 500,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 500,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 466,
											"end": 500,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 466,
											"end": 500,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 466,
											"end": 500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 2107,
											"name": "tag",
											"source": 18,
											"value": "66"
										},
										{
											"begin": 1791,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1853,
											"end": 1867,
											"name": "PUSH",
											"source": 18,
											"value": "3C"
										},
										{
											"begin": 1853,
											"end": 1867,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1853,
											"end": 1867,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1853,
											"end": 1867,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1853,
											"end": 1867,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1853,
											"end": 1867,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1853,
											"end": 1867,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1853,
											"end": 1867,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1853,
											"end": 1867,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1853,
											"end": 1867,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1853,
											"end": 1867,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1839,
											"end": 1867,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1839,
											"end": 1867,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1839,
											"end": 1849,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 1839,
											"end": 1867,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1839,
											"end": 1867,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1839,
											"end": 1867,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "170"
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "171"
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "172"
										},
										{
											"begin": 1831,
											"end": 1890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "tag",
											"source": 18,
											"value": "171"
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "tag",
											"source": 18,
											"value": "170"
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1981,
											"end": 1993,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2013,
											"name": "PUSH",
											"source": 18,
											"value": "3C"
										},
										{
											"begin": 1999,
											"end": 2013,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2013,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2013,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2013,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2013,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1999,
											"end": 2013,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2013,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2013,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2013,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1999,
											"end": 2013,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2018,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1999,
											"end": 2018,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2026,
											"end": 2047,
											"name": "SELFBALANCE",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "173"
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "174"
										},
										{
											"begin": 1999,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "tag",
											"source": 18,
											"value": "173"
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "177"
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "PUSH",
											"source": 18,
											"value": "3F"
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "176"
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "tag",
											"source": 18,
											"value": "177"
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "tag",
											"source": 18,
											"value": "176"
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1980,
											"end": 2052,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1980,
											"end": 2052,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1980,
											"end": 2052,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2071,
											"end": 2078,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2063,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "178"
										},
										{
											"begin": 2063,
											"end": 2099,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2063,
											"end": 2099,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2063,
											"end": 2099,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2063,
											"end": 2099,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2063,
											"end": 2099,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2063,
											"end": 2099,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2063,
											"end": 2099,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2063,
											"end": 2099,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2063,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "179"
										},
										{
											"begin": 2063,
											"end": 2099,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2063,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "180"
										},
										{
											"begin": 2063,
											"end": 2099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2063,
											"end": 2099,
											"name": "tag",
											"source": 18,
											"value": "179"
										},
										{
											"begin": 2063,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2063,
											"end": 2099,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2063,
											"end": 2099,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2063,
											"end": 2099,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2063,
											"end": 2099,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2063,
											"end": 2099,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2063,
											"end": 2099,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2063,
											"end": 2099,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2063,
											"end": 2099,
											"name": "tag",
											"source": 18,
											"value": "178"
										},
										{
											"begin": 2063,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1820,
											"end": 2107,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 2107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 7,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 7,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "tag",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1312,
											"end": 1325,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1295,
											"end": 1309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "3C"
										},
										{
											"begin": 1295,
											"end": 1309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1295,
											"end": 1325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1295,
											"end": 1325,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1295,
											"end": 1325,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1295,
											"end": 1325,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1295,
											"end": 1325,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1295,
											"end": 1325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1295,
											"end": 1325,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1295,
											"end": 1325,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1295,
											"end": 1325,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1295,
											"end": 1325,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1295,
											"end": 1325,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1295,
											"end": 1325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1295,
											"end": 1325,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1295,
											"end": 1325,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1295,
											"end": 1325,
											"modifierDepth": 1,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 1295,
											"end": 1325,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1295,
											"end": 1325,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1295,
											"end": 1325,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1333,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "tag",
											"source": 18,
											"value": "83"
										},
										{
											"begin": 430,
											"end": 459,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "PUSH",
											"source": 18,
											"value": "3C"
										},
										{
											"begin": 430,
											"end": 459,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 459,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 430,
											"end": 459,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 430,
											"end": 459,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 430,
											"end": 459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 7,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 361,
											"end": 391,
											"name": "tag",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 361,
											"end": 391,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 361,
											"end": 391,
											"name": "PUSH",
											"source": 18,
											"value": "3A"
										},
										{
											"begin": 361,
											"end": 391,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 361,
											"end": 391,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 361,
											"end": 391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1283,
											"end": 1296,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 1322,
											"end": 1329,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 1308,
											"end": 1330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1364,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1377,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1385,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 1417,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 1417,
											"end": 1427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1522,
											"end": 1523,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1510,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1523,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1546,
											"end": 1555,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1691,
											"end": 1692,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1680,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1665,
											"end": 1688,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1733,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1744,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 1715,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 1788,
											"end": 1795,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1773,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 1773,
											"end": 1796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "tag",
											"source": 18,
											"value": "128"
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 968,
											"end": 986,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 946,
											"end": 965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "3D"
										},
										{
											"begin": 946,
											"end": 965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 946,
											"end": 986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 946,
											"end": 986,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 946,
											"end": 986,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 946,
											"end": 986,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 946,
											"end": 986,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 946,
											"end": 986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 946,
											"end": 986,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 946,
											"end": 986,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 946,
											"end": 986,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 946,
											"end": 986,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 946,
											"end": 986,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 946,
											"end": 986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 946,
											"end": 986,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 946,
											"end": 986,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 946,
											"end": 986,
											"modifierDepth": 1,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 946,
											"end": 986,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 946,
											"end": 986,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 946,
											"end": 986,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1002,
											"end": 1011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1096,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "239"
										},
										{
											"begin": 997,
											"end": 1096,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1017,
											"end": 1032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "3A"
										},
										{
											"begin": 1017,
											"end": 1032,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1015,
											"end": 1016,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1015,
											"end": 1032,
											"modifierDepth": 1,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 997,
											"end": 1096,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 997,
											"end": 1096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "240"
										},
										{
											"begin": 997,
											"end": 1096,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1053,
											"end": 1084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "242"
										},
										{
											"begin": 1061,
											"end": 1080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "3D"
										},
										{
											"begin": 1061,
											"end": 1080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1061,
											"end": 1080,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1061,
											"end": 1080,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1061,
											"end": 1080,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1061,
											"end": 1080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1061,
											"end": 1080,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1061,
											"end": 1080,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1061,
											"end": 1080,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1061,
											"end": 1080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1061,
											"end": 1080,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1082,
											"end": 1083,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1053,
											"end": 1060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "59"
										},
										{
											"begin": 1053,
											"end": 1084,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1053,
											"end": 1084,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "242"
										},
										{
											"begin": 1053,
											"end": 1084,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1037,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1037,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 1034,
											"end": 1037,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1037,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1037,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1037,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 997,
											"end": 1096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "239"
										},
										{
											"begin": 997,
											"end": 1096,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 997,
											"end": 1096,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "240"
										},
										{
											"begin": 997,
											"end": 1096,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 997,
											"end": 1096,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 859,
											"end": 1103,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 859,
											"end": 1103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "tag",
											"source": 18,
											"value": "142"
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1202,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1180,
											"end": 1190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "3B"
										},
										{
											"begin": 1180,
											"end": 1202,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1180,
											"end": 1202,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1180,
											"end": 1202,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1180,
											"end": 1202,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "tag",
											"source": 18,
											"value": "146"
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2526,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 2526,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "3A"
										},
										{
											"begin": 1456,
											"end": 1471,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1471,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1471,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1503,
											"end": 1513,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "3B"
										},
										{
											"begin": 1503,
											"end": 1513,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1490,
											"end": 1499,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 1490,
											"end": 1513,
											"modifierDepth": 1,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1490,
											"end": 1513,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1482,
											"end": 1532,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "257"
										},
										{
											"begin": 1482,
											"end": 1532,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1482,
											"end": 1532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1532,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1482,
											"end": 1532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1482,
											"end": 1532,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1482,
											"end": 1532,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1482,
											"end": 1532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 1532,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1482,
											"end": 1532,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "258"
										},
										{
											"begin": 1482,
											"end": 1532,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1482,
											"end": 1532,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "259"
										},
										{
											"begin": 1482,
											"end": 1532,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1482,
											"end": 1532,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "258"
										},
										{
											"begin": 1482,
											"end": 1532,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1482,
											"end": 1532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1532,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1482,
											"end": 1532,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1482,
											"end": 1532,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1482,
											"end": 1532,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1482,
											"end": 1532,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1482,
											"end": 1532,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1482,
											"end": 1532,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "257"
										},
										{
											"begin": 1482,
											"end": 1532,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1543,
											"end": 1573,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "260"
										},
										{
											"begin": 1553,
											"end": 1563,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 1565,
											"end": 1572,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1543,
											"end": 1552,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "261"
										},
										{
											"begin": 1543,
											"end": 1573,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1543,
											"end": 1573,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "260"
										},
										{
											"begin": 1543,
											"end": 1573,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "262"
										},
										{
											"begin": 1597,
											"end": 1604,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1606,
											"end": 1614,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1584,
											"end": 1596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "263"
										},
										{
											"begin": 1584,
											"end": 1615,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "262"
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1626,
											"end": 1663,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "264"
										},
										{
											"begin": 1634,
											"end": 1653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "3D"
										},
										{
											"begin": 1634,
											"end": 1653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1653,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1634,
											"end": 1653,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1634,
											"end": 1653,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1634,
											"end": 1653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1634,
											"end": 1653,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1634,
											"end": 1653,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1634,
											"end": 1653,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1634,
											"end": 1653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1634,
											"end": 1653,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1655,
											"end": 1662,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1626,
											"end": 1633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "59"
										},
										{
											"begin": 1626,
											"end": 1663,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1626,
											"end": 1663,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "264"
										},
										{
											"begin": 1626,
											"end": 1663,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1701,
											"end": 1711,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 1679,
											"end": 1722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1679,
											"end": 1722,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1692,
											"end": 1699,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1679,
											"end": 1722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "82A09CC58C9CECF0EB61D8994283EC804165931801F8B77E42DCB3B556C5C5BE"
										},
										{
											"begin": 1713,
											"end": 1721,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1679,
											"end": 1722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1679,
											"end": 1722,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1679,
											"end": 1722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "265"
										},
										{
											"begin": 1679,
											"end": 1722,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1679,
											"end": 1722,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1679,
											"end": 1722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "47"
										},
										{
											"begin": 1679,
											"end": 1722,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1679,
											"end": 1722,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "265"
										},
										{
											"begin": 1679,
											"end": 1722,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1679,
											"end": 1722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1679,
											"end": 1722,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1679,
											"end": 1722,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1679,
											"end": 1722,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1679,
											"end": 1722,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1679,
											"end": 1722,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1679,
											"end": 1722,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 18
										},
										{
											"begin": 1733,
											"end": 1748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "3A"
										},
										{
											"begin": 1733,
											"end": 1748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1733,
											"end": 1750,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1733,
											"end": 1750,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1733,
											"end": 1750,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1733,
											"end": 1750,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1733,
											"end": 1750,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1733,
											"end": 1750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "266"
										},
										{
											"begin": 1733,
											"end": 1750,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1733,
											"end": 1750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "267"
										},
										{
											"begin": 1733,
											"end": 1750,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1733,
											"end": 1750,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "266"
										},
										{
											"begin": 1733,
											"end": 1750,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1733,
											"end": 1750,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1733,
											"end": 1750,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1733,
											"end": 1750,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1733,
											"end": 1750,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1733,
											"end": 1750,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1768,
											"end": 1775,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1761,
											"end": 1775,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1761,
											"end": 1775,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1761,
											"end": 1775,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 2568,
											"end": 2588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 7,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 7,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 7,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 7,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 7
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 7,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 7,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 7,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 7,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 7,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 7,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3238,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3174,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2888,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 2601,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1852,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2733,
											"end": 2740,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2733,
											"end": 2740,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2733,
											"end": 2752,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 2725,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1852,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2863,
											"end": 2870,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2601,
											"end": 2888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 10710,
											"end": 10712,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10700,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 10700,
											"end": 10726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10633,
											"end": 10733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2035,
											"end": 2044,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2023,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2031,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 2013,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 10,
											"value": "F8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7"
										},
										{
											"begin": 2074,
											"end": 2081,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2059,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 2089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2894,
											"end": 3103,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 2894,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1809,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3074,
											"end": 3081,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 14,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 7,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 7,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 7
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 7,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 7,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 13,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 13
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 13
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 11054,
											"end": 11056,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11065,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11048,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 11048,
											"end": 11066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 11107,
											"end": 11108,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11111,
											"end": 11113,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11115,
											"end": 11122,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11124,
											"end": 11128,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11076,
											"end": 11098,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 11076,
											"end": 11129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10954,
											"end": 11136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 16,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 16,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 16,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 16,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "394"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "395"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 16,
											"value": "395"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 16,
											"value": "394"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 16,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "396"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 16,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "398"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 16,
											"value": "398"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 16,
											"value": "396"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 16,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "399"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 16,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "401"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 16,
											"value": "401"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 16,
											"value": "399"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 16,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "402"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 16,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "403"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "404"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 16,
											"value": "404"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 16,
											"value": "403"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 16,
											"value": "402"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "405"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "406"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 16,
											"value": "406"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 16,
											"value": "405"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10022,
											"end": 10024,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 7,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10184,
											"end": 10197,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 7,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10008,
											"end": 10282,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 19,
											"value": "415"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 19,
											"value": "417"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 19,
											"value": "418"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 19,
											"value": "419"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "490"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "418"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 19,
											"value": "490"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "491"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 19,
											"value": "491"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 19,
											"value": "420"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "493"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "419"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 19,
											"value": "493"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 19,
											"value": "34"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "495"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "496"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 19,
											"value": "496"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 19,
											"value": "495"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "497"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "420"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 19,
											"value": "497"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 19,
											"value": "421"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 19,
											"value": "422"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "500"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "421"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 19,
											"value": "500"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 19,
											"value": "37"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "502"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "422"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 19,
											"value": "502"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 19,
											"value": "423"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "tag",
											"source": 19,
											"value": "424"
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "505"
										},
										{
											"begin": 1706,
											"end": 1711,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "423"
										},
										{
											"begin": 1688,
											"end": 1712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "tag",
											"source": 19,
											"value": "505"
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1683,
											"end": 1686,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1676,
											"end": 1713,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1601,
											"end": 1719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "tag",
											"source": 19,
											"value": "42"
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1818,
											"end": 1822,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1858,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1854,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1841,
											"end": 1859,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1833,
											"end": 1859,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1833,
											"end": 1859,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "507"
										},
										{
											"begin": 1937,
											"end": 1938,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1935,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1922,
											"end": 1939,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1913,
											"end": 1919,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "424"
										},
										{
											"begin": 1869,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "tag",
											"source": 19,
											"value": "507"
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1725,
											"end": 1947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1953,
											"end": 2052,
											"name": "tag",
											"source": 19,
											"value": "425"
										},
										{
											"begin": 1953,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2005,
											"end": 2011,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2039,
											"end": 2044,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2023,
											"end": 2045,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2023,
											"end": 2045,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1953,
											"end": 2052,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1953,
											"end": 2052,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1953,
											"end": 2052,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1953,
											"end": 2052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2058,
											"end": 2227,
											"name": "tag",
											"source": 19,
											"value": "426"
										},
										{
											"begin": 2058,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2142,
											"end": 2153,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2182,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2171,
											"end": 2174,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2164,
											"end": 2183,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2216,
											"end": 2220,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2211,
											"end": 2214,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2207,
											"end": 2221,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2192,
											"end": 2221,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2192,
											"end": 2221,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2058,
											"end": 2227,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2058,
											"end": 2227,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2058,
											"end": 2227,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2058,
											"end": 2227,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2058,
											"end": 2227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2233,
											"end": 2372,
											"name": "tag",
											"source": 19,
											"value": "427"
										},
										{
											"begin": 2233,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2322,
											"end": 2328,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2317,
											"end": 2320,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2312,
											"end": 2315,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2306,
											"end": 2329,
											"name": "MCOPY",
											"source": 19
										},
										{
											"begin": 2363,
											"end": 2364,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2360,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2349,
											"end": 2352,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2345,
											"end": 2361,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2338,
											"end": 2365,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2233,
											"end": 2372,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2233,
											"end": 2372,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2233,
											"end": 2372,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2233,
											"end": 2372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2378,
											"end": 2480,
											"name": "tag",
											"source": 19,
											"value": "428"
										},
										{
											"begin": 2378,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2419,
											"end": 2425,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2472,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 2466,
											"end": 2473,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 2461,
											"end": 2463,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 2454,
											"end": 2459,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2446,
											"end": 2474,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2436,
											"end": 2474,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2436,
											"end": 2474,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2378,
											"end": 2480,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2378,
											"end": 2480,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2378,
											"end": 2480,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2378,
											"end": 2480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2486,
											"end": 2863,
											"name": "tag",
											"source": 19,
											"value": "429"
										},
										{
											"begin": 2486,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2574,
											"end": 2577,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "513"
										},
										{
											"begin": 2635,
											"end": 2640,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2602,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "425"
										},
										{
											"begin": 2602,
											"end": 2641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2602,
											"end": 2641,
											"name": "tag",
											"source": 19,
											"value": "513"
										},
										{
											"begin": 2602,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2657,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "514"
										},
										{
											"begin": 2721,
											"end": 2727,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2716,
											"end": 2719,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2657,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "426"
										},
										{
											"begin": 2657,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2657,
											"end": 2728,
											"name": "tag",
											"source": 19,
											"value": "514"
										},
										{
											"begin": 2657,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2650,
											"end": 2728,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 2650,
											"end": 2728,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2737,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "515"
										},
										{
											"begin": 2795,
											"end": 2801,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2790,
											"end": 2793,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2783,
											"end": 2787,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2776,
											"end": 2781,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 2772,
											"end": 2788,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2737,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "427"
										},
										{
											"begin": 2737,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2737,
											"end": 2802,
											"name": "tag",
											"source": 19,
											"value": "515"
										},
										{
											"begin": 2737,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2827,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "516"
										},
										{
											"begin": 2849,
											"end": 2855,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2827,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "428"
										},
										{
											"begin": 2827,
											"end": 2856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2827,
											"end": 2856,
											"name": "tag",
											"source": 19,
											"value": "516"
										},
										{
											"begin": 2827,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2822,
											"end": 2825,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2818,
											"end": 2857,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2811,
											"end": 2857,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2811,
											"end": 2857,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2578,
											"end": 2863,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2486,
											"end": 2863,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2486,
											"end": 2863,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2486,
											"end": 2863,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2486,
											"end": 2863,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2486,
											"end": 2863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2869,
											"end": 3182,
											"name": "tag",
											"source": 19,
											"value": "47"
										},
										{
											"begin": 2869,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2982,
											"end": 2986,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3022,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3009,
											"end": 3018,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3005,
											"end": 3023,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2997,
											"end": 3023,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2997,
											"end": 3023,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3069,
											"end": 3078,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3063,
											"end": 3067,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3059,
											"end": 3079,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3044,
											"end": 3053,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3040,
											"end": 3057,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3033,
											"end": 3080,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3097,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "518"
										},
										{
											"begin": 3170,
											"end": 3174,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3161,
											"end": 3167,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3097,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "429"
										},
										{
											"begin": 3097,
											"end": 3175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3097,
											"end": 3175,
											"name": "tag",
											"source": 19,
											"value": "518"
										},
										{
											"begin": 3097,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3089,
											"end": 3175,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3089,
											"end": 3175,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2869,
											"end": 3182,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2869,
											"end": 3182,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2869,
											"end": 3182,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2869,
											"end": 3182,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2869,
											"end": 3182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3188,
											"end": 3310,
											"name": "tag",
											"source": 19,
											"value": "430"
										},
										{
											"begin": 3188,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3261,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "520"
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3261,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "423"
										},
										{
											"begin": 3261,
											"end": 3285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3261,
											"end": 3285,
											"name": "tag",
											"source": 19,
											"value": "520"
										},
										{
											"begin": 3261,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3254,
											"end": 3259,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3251,
											"end": 3286,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 3241,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "521"
										},
										{
											"begin": 3241,
											"end": 3304,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3300,
											"end": 3301,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3297,
											"end": 3298,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3290,
											"end": 3302,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3241,
											"end": 3304,
											"name": "tag",
											"source": 19,
											"value": "521"
										},
										{
											"begin": 3241,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3188,
											"end": 3310,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3188,
											"end": 3310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3316,
											"end": 3455,
											"name": "tag",
											"source": 19,
											"value": "431"
										},
										{
											"begin": 3316,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3362,
											"end": 3367,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3406,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3387,
											"end": 3407,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 3378,
											"end": 3407,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3378,
											"end": 3407,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3416,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "523"
										},
										{
											"begin": 3443,
											"end": 3448,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3416,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "430"
										},
										{
											"begin": 3416,
											"end": 3449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3416,
											"end": 3449,
											"name": "tag",
											"source": 19,
											"value": "523"
										},
										{
											"begin": 3416,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3316,
											"end": 3455,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3316,
											"end": 3455,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3316,
											"end": 3455,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3316,
											"end": 3455,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3316,
											"end": 3455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3790,
											"name": "tag",
											"source": 19,
											"value": "51"
										},
										{
											"begin": 3461,
											"end": 3790,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3520,
											"end": 3526,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3569,
											"end": 3571,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3557,
											"end": 3566,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3548,
											"end": 3555,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3544,
											"end": 3567,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 3540,
											"end": 3572,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 3537,
											"end": 3656,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3537,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "525"
										},
										{
											"begin": 3537,
											"end": 3656,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3575,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "526"
										},
										{
											"begin": 3575,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 3575,
											"end": 3654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3575,
											"end": 3654,
											"name": "tag",
											"source": 19,
											"value": "526"
										},
										{
											"begin": 3575,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3537,
											"end": 3656,
											"name": "tag",
											"source": 19,
											"value": "525"
										},
										{
											"begin": 3537,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3695,
											"end": 3696,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3720,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "527"
										},
										{
											"begin": 3765,
											"end": 3772,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3745,
											"end": 3754,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3741,
											"end": 3763,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3720,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "431"
										},
										{
											"begin": 3720,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3720,
											"end": 3773,
											"name": "tag",
											"source": 19,
											"value": "527"
										},
										{
											"begin": 3720,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3710,
											"end": 3773,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3710,
											"end": 3773,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3666,
											"end": 3783,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3790,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3790,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3790,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3790,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3796,
											"end": 3922,
											"name": "tag",
											"source": 19,
											"value": "432"
										},
										{
											"begin": 3796,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3833,
											"end": 3840,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3873,
											"end": 3915,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3866,
											"end": 3871,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3862,
											"end": 3916,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3851,
											"end": 3916,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3851,
											"end": 3916,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3796,
											"end": 3922,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3796,
											"end": 3922,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3796,
											"end": 3922,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3796,
											"end": 3922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3928,
											"end": 4024,
											"name": "tag",
											"source": 19,
											"value": "433"
										},
										{
											"begin": 3928,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3965,
											"end": 3972,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3994,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "530"
										},
										{
											"begin": 4012,
											"end": 4017,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3994,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "432"
										},
										{
											"begin": 3994,
											"end": 4018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3994,
											"end": 4018,
											"name": "tag",
											"source": 19,
											"value": "530"
										},
										{
											"begin": 3994,
											"end": 4018,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3983,
											"end": 4018,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3983,
											"end": 4018,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3928,
											"end": 4024,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3928,
											"end": 4024,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3928,
											"end": 4024,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3928,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4030,
											"end": 4148,
											"name": "tag",
											"source": 19,
											"value": "434"
										},
										{
											"begin": 4030,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4117,
											"end": 4141,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "532"
										},
										{
											"begin": 4135,
											"end": 4140,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4117,
											"end": 4141,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "433"
										},
										{
											"begin": 4117,
											"end": 4141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4117,
											"end": 4141,
											"name": "tag",
											"source": 19,
											"value": "532"
										},
										{
											"begin": 4117,
											"end": 4141,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4112,
											"end": 4115,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4105,
											"end": 4142,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4030,
											"end": 4148,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4030,
											"end": 4148,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4030,
											"end": 4148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4154,
											"end": 4376,
											"name": "tag",
											"source": 19,
											"value": "54"
										},
										{
											"begin": 4154,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4247,
											"end": 4251,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4285,
											"end": 4287,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4274,
											"end": 4283,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4270,
											"end": 4288,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4262,
											"end": 4288,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4262,
											"end": 4288,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4298,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "534"
										},
										{
											"begin": 4366,
											"end": 4367,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4355,
											"end": 4364,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4351,
											"end": 4368,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4342,
											"end": 4348,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4298,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "434"
										},
										{
											"begin": 4298,
											"end": 4369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4298,
											"end": 4369,
											"name": "tag",
											"source": 19,
											"value": "534"
										},
										{
											"begin": 4298,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4154,
											"end": 4376,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4154,
											"end": 4376,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4154,
											"end": 4376,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4154,
											"end": 4376,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4154,
											"end": 4376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4382,
											"end": 4504,
											"name": "tag",
											"source": 19,
											"value": "435"
										},
										{
											"begin": 4382,
											"end": 4504,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4455,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "536"
										},
										{
											"begin": 4473,
											"end": 4478,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4455,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "433"
										},
										{
											"begin": 4455,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4455,
											"end": 4479,
											"name": "tag",
											"source": 19,
											"value": "536"
										},
										{
											"begin": 4455,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4448,
											"end": 4453,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4445,
											"end": 4480,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 4435,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "537"
										},
										{
											"begin": 4435,
											"end": 4498,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4494,
											"end": 4495,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4492,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4484,
											"end": 4496,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4435,
											"end": 4498,
											"name": "tag",
											"source": 19,
											"value": "537"
										},
										{
											"begin": 4435,
											"end": 4498,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4382,
											"end": 4504,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4382,
											"end": 4504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4510,
											"end": 4649,
											"name": "tag",
											"source": 19,
											"value": "436"
										},
										{
											"begin": 4510,
											"end": 4649,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4556,
											"end": 4561,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4594,
											"end": 4600,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4581,
											"end": 4601,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 4572,
											"end": 4601,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4572,
											"end": 4601,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4610,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "539"
										},
										{
											"begin": 4637,
											"end": 4642,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4610,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "435"
										},
										{
											"begin": 4610,
											"end": 4643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4610,
											"end": 4643,
											"name": "tag",
											"source": 19,
											"value": "539"
										},
										{
											"begin": 4610,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4510,
											"end": 4649,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4510,
											"end": 4649,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4510,
											"end": 4649,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4510,
											"end": 4649,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4510,
											"end": 4649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4655,
											"end": 5129,
											"name": "tag",
											"source": 19,
											"value": "58"
										},
										{
											"begin": 4655,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4723,
											"end": 4729,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4731,
											"end": 4737,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4780,
											"end": 4782,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4768,
											"end": 4777,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4759,
											"end": 4766,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4755,
											"end": 4778,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 4751,
											"end": 4783,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 4748,
											"end": 4867,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4748,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "541"
										},
										{
											"begin": 4748,
											"end": 4867,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4786,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "542"
										},
										{
											"begin": 4786,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 4786,
											"end": 4865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4786,
											"end": 4865,
											"name": "tag",
											"source": 19,
											"value": "542"
										},
										{
											"begin": 4786,
											"end": 4865,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4748,
											"end": 4867,
											"name": "tag",
											"source": 19,
											"value": "541"
										},
										{
											"begin": 4748,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4906,
											"end": 4907,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "543"
										},
										{
											"begin": 4976,
											"end": 4983,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4956,
											"end": 4965,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4952,
											"end": 4974,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "436"
										},
										{
											"begin": 4931,
											"end": 4984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "tag",
											"source": 19,
											"value": "543"
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4921,
											"end": 4984,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4921,
											"end": 4984,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4877,
											"end": 4994,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5033,
											"end": 5035,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5059,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "544"
										},
										{
											"begin": 5104,
											"end": 5111,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 5095,
											"end": 5101,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5084,
											"end": 5093,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5080,
											"end": 5102,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5059,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "431"
										},
										{
											"begin": 5059,
											"end": 5112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5059,
											"end": 5112,
											"name": "tag",
											"source": 19,
											"value": "544"
										},
										{
											"begin": 5059,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5049,
											"end": 5112,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5049,
											"end": 5112,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5004,
											"end": 5122,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4655,
											"end": 5129,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4655,
											"end": 5129,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4655,
											"end": 5129,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4655,
											"end": 5129,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4655,
											"end": 5129,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4655,
											"end": 5129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5135,
											"end": 5754,
											"name": "tag",
											"source": 19,
											"value": "70"
										},
										{
											"begin": 5135,
											"end": 5754,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5212,
											"end": 5218,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5220,
											"end": 5226,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5228,
											"end": 5234,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5277,
											"end": 5279,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 5265,
											"end": 5274,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5256,
											"end": 5263,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5252,
											"end": 5275,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 5248,
											"end": 5280,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 5245,
											"end": 5364,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5245,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "546"
										},
										{
											"begin": 5245,
											"end": 5364,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "547"
										},
										{
											"begin": 5283,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 5283,
											"end": 5362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5362,
											"name": "tag",
											"source": 19,
											"value": "547"
										},
										{
											"begin": 5283,
											"end": 5362,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5245,
											"end": 5364,
											"name": "tag",
											"source": 19,
											"value": "546"
										},
										{
											"begin": 5245,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5403,
											"end": 5404,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5428,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "548"
										},
										{
											"begin": 5473,
											"end": 5480,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5464,
											"end": 5470,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5453,
											"end": 5462,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5449,
											"end": 5471,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5428,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "436"
										},
										{
											"begin": 5428,
											"end": 5481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5428,
											"end": 5481,
											"name": "tag",
											"source": 19,
											"value": "548"
										},
										{
											"begin": 5428,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5418,
											"end": 5481,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 5418,
											"end": 5481,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5374,
											"end": 5491,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5530,
											"end": 5532,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5556,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "549"
										},
										{
											"begin": 5601,
											"end": 5608,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5592,
											"end": 5598,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5581,
											"end": 5590,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5577,
											"end": 5599,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5556,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "436"
										},
										{
											"begin": 5556,
											"end": 5609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5556,
											"end": 5609,
											"name": "tag",
											"source": 19,
											"value": "549"
										},
										{
											"begin": 5556,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5546,
											"end": 5609,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5546,
											"end": 5609,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5501,
											"end": 5619,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5658,
											"end": 5660,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5684,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "550"
										},
										{
											"begin": 5729,
											"end": 5736,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5720,
											"end": 5726,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5709,
											"end": 5718,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5705,
											"end": 5727,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5684,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "431"
										},
										{
											"begin": 5684,
											"end": 5737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5684,
											"end": 5737,
											"name": "tag",
											"source": 19,
											"value": "550"
										},
										{
											"begin": 5684,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5674,
											"end": 5737,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5674,
											"end": 5737,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5629,
											"end": 5747,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5135,
											"end": 5754,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5135,
											"end": 5754,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5135,
											"end": 5754,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5135,
											"end": 5754,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5135,
											"end": 5754,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5135,
											"end": 5754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5760,
											"end": 6089,
											"name": "tag",
											"source": 19,
											"value": "79"
										},
										{
											"begin": 5760,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5819,
											"end": 5825,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5868,
											"end": 5870,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5856,
											"end": 5865,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5847,
											"end": 5854,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5843,
											"end": 5866,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 5839,
											"end": 5871,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 5836,
											"end": 5955,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5836,
											"end": 5955,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "552"
										},
										{
											"begin": 5836,
											"end": 5955,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5874,
											"end": 5953,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "553"
										},
										{
											"begin": 5874,
											"end": 5953,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 5874,
											"end": 5953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5874,
											"end": 5953,
											"name": "tag",
											"source": 19,
											"value": "553"
										},
										{
											"begin": 5874,
											"end": 5953,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5836,
											"end": 5955,
											"name": "tag",
											"source": 19,
											"value": "552"
										},
										{
											"begin": 5836,
											"end": 5955,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5994,
											"end": 5995,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6019,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "554"
										},
										{
											"begin": 6064,
											"end": 6071,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6055,
											"end": 6061,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6044,
											"end": 6053,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6040,
											"end": 6062,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6019,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "436"
										},
										{
											"begin": 6019,
											"end": 6072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6019,
											"end": 6072,
											"name": "tag",
											"source": 19,
											"value": "554"
										},
										{
											"begin": 6019,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6009,
											"end": 6072,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6009,
											"end": 6072,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5965,
											"end": 6082,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5760,
											"end": 6089,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5760,
											"end": 6089,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5760,
											"end": 6089,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5760,
											"end": 6089,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5760,
											"end": 6089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "tag",
											"source": 19,
											"value": "437"
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "556"
										},
										{
											"begin": 6180,
											"end": 6185,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "421"
										},
										{
											"begin": 6165,
											"end": 6186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "tag",
											"source": 19,
											"value": "556"
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6158,
											"end": 6163,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6155,
											"end": 6187,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "557"
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6201,
											"end": 6202,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6198,
											"end": 6199,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6191,
											"end": 6203,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "tag",
											"source": 19,
											"value": "557"
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6095,
											"end": 6211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "tag",
											"source": 19,
											"value": "438"
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6260,
											"end": 6265,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6304,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6285,
											"end": 6305,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 6276,
											"end": 6305,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6276,
											"end": 6305,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "559"
										},
										{
											"begin": 6338,
											"end": 6343,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "437"
										},
										{
											"begin": 6314,
											"end": 6344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "tag",
											"source": 19,
											"value": "559"
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6217,
											"end": 6350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "tag",
											"source": 19,
											"value": "113"
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6421,
											"end": 6427,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6429,
											"end": 6435,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6478,
											"end": 6480,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6466,
											"end": 6475,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6457,
											"end": 6464,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6453,
											"end": 6476,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 6449,
											"end": 6481,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "561"
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "562"
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 6484,
											"end": 6563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "tag",
											"source": 19,
											"value": "562"
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "tag",
											"source": 19,
											"value": "561"
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6604,
											"end": 6605,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "563"
										},
										{
											"begin": 6674,
											"end": 6681,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6665,
											"end": 6671,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6654,
											"end": 6663,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 6650,
											"end": 6672,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "436"
										},
										{
											"begin": 6629,
											"end": 6682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "tag",
											"source": 19,
											"value": "563"
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6575,
											"end": 6692,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6731,
											"end": 6733,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "564"
										},
										{
											"begin": 6799,
											"end": 6806,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6790,
											"end": 6796,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6779,
											"end": 6788,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 6775,
											"end": 6797,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "438"
										},
										{
											"begin": 6757,
											"end": 6807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "tag",
											"source": 19,
											"value": "564"
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6747,
											"end": 6807,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6747,
											"end": 6807,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6702,
											"end": 6817,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6356,
											"end": 6824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6830,
											"end": 6947,
											"name": "tag",
											"source": 19,
											"value": "439"
										},
										{
											"begin": 6830,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6939,
											"end": 6940,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6936,
											"end": 6937,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6929,
											"end": 6941,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 6953,
											"end": 7070,
											"name": "tag",
											"source": 19,
											"value": "440"
										},
										{
											"begin": 6953,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7062,
											"end": 7063,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7059,
											"end": 7060,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7052,
											"end": 7064,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 7076,
											"end": 7256,
											"name": "tag",
											"source": 19,
											"value": "371"
										},
										{
											"begin": 7076,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7124,
											"end": 7201,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7121,
											"end": 7122,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7114,
											"end": 7202,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7221,
											"end": 7225,
											"name": "PUSH",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 7218,
											"end": 7219,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 7211,
											"end": 7226,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7245,
											"end": 7249,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 7242,
											"end": 7243,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7235,
											"end": 7250,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "tag",
											"source": 19,
											"value": "441"
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "569"
										},
										{
											"begin": 7367,
											"end": 7371,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "428"
										},
										{
											"begin": 7345,
											"end": 7372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "tag",
											"source": 19,
											"value": "569"
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7337,
											"end": 7343,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7333,
											"end": 7373,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7475,
											"end": 7481,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7463,
											"end": 7473,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7460,
											"end": 7482,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7427,
											"end": 7437,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7424,
											"end": 7458,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 7421,
											"end": 7483,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "570"
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "571"
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "371"
										},
										{
											"begin": 7486,
											"end": 7504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "tag",
											"source": 19,
											"value": "571"
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "tag",
											"source": 19,
											"value": "570"
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7526,
											"end": 7536,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7522,
											"end": 7524,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 7515,
											"end": 7537,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7305,
											"end": 7543,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7262,
											"end": 7543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "tag",
											"source": 19,
											"value": "442"
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7583,
											"end": 7589,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "573"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "415"
										},
										{
											"begin": 7610,
											"end": 7630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "tag",
											"source": 19,
											"value": "573"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7600,
											"end": 7630,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7600,
											"end": 7630,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "574"
										},
										{
											"begin": 7667,
											"end": 7671,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7659,
											"end": 7665,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "441"
										},
										{
											"begin": 7639,
											"end": 7672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "tag",
											"source": 19,
											"value": "574"
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7549,
											"end": 7678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "tag",
											"source": 19,
											"value": "443"
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7745,
											"end": 7749,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7827,
											"end": 7833,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7824,
											"end": 7854,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "576"
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "577"
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "371"
										},
										{
											"begin": 7857,
											"end": 7875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "tag",
											"source": 19,
											"value": "577"
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "tag",
											"source": 19,
											"value": "576"
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "578"
										},
										{
											"begin": 7917,
											"end": 7923,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "428"
										},
										{
											"begin": 7895,
											"end": 7924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "tag",
											"source": 19,
											"value": "578"
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7887,
											"end": 7924,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7887,
											"end": 7924,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7979,
											"end": 7983,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7969,
											"end": 7984,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7961,
											"end": 7984,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7961,
											"end": 7984,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7684,
											"end": 7991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "tag",
											"source": 19,
											"value": "444"
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8095,
											"end": 8101,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8090,
											"end": 8093,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8085,
											"end": 8088,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8072,
											"end": 8102,
											"name": "CALLDATACOPY",
											"source": 19
										},
										{
											"begin": 8136,
											"end": 8137,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8127,
											"end": 8133,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8118,
											"end": 8134,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8111,
											"end": 8138,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7997,
											"end": 8145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "tag",
											"source": 19,
											"value": "445"
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8228,
											"end": 8233,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "581"
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "582"
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "443"
										},
										{
											"begin": 8269,
											"end": 8317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "tag",
											"source": 19,
											"value": "582"
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "442"
										},
										{
											"begin": 8253,
											"end": 8318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "tag",
											"source": 19,
											"value": "581"
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8244,
											"end": 8318,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8244,
											"end": 8318,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8341,
											"end": 8347,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8334,
											"end": 8339,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8327,
											"end": 8348,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8379,
											"end": 8383,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8372,
											"end": 8377,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8368,
											"end": 8384,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8417,
											"end": 8420,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8408,
											"end": 8414,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8403,
											"end": 8406,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8399,
											"end": 8415,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8396,
											"end": 8421,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "583"
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "584"
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "440"
										},
										{
											"begin": 8424,
											"end": 8503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "tag",
											"source": 19,
											"value": "584"
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "tag",
											"source": 19,
											"value": "583"
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "585"
										},
										{
											"begin": 8561,
											"end": 8567,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8556,
											"end": 8559,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8551,
											"end": 8554,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "444"
										},
										{
											"begin": 8514,
											"end": 8568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "tag",
											"source": 19,
											"value": "585"
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8234,
											"end": 8574,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8151,
											"end": 8574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "tag",
											"source": 19,
											"value": "446"
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8648,
											"end": 8653,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8697,
											"end": 8700,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8690,
											"end": 8694,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 8682,
											"end": 8688,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8678,
											"end": 8695,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8674,
											"end": 8701,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "587"
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "588"
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "439"
										},
										{
											"begin": 8705,
											"end": 8784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "tag",
											"source": 19,
											"value": "588"
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "tag",
											"source": 19,
											"value": "587"
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8822,
											"end": 8828,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8809,
											"end": 8829,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "589"
										},
										{
											"begin": 8921,
											"end": 8924,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8913,
											"end": 8919,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8906,
											"end": 8910,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8898,
											"end": 8904,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 8894,
											"end": 8911,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "445"
										},
										{
											"begin": 8847,
											"end": 8925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "tag",
											"source": 19,
											"value": "589"
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8838,
											"end": 8925,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8838,
											"end": 8925,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8654,
											"end": 8931,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8593,
											"end": 8931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "tag",
											"source": 19,
											"value": "118"
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9032,
											"end": 9038,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9040,
											"end": 9046,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9048,
											"end": 9054,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9056,
											"end": 9062,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9105,
											"end": 9108,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 9093,
											"end": 9102,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9084,
											"end": 9091,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 9080,
											"end": 9103,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 9076,
											"end": 9109,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "591"
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "592"
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 9112,
											"end": 9191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "tag",
											"source": 19,
											"value": "592"
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "tag",
											"source": 19,
											"value": "591"
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9232,
											"end": 9233,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "593"
										},
										{
											"begin": 9302,
											"end": 9309,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 9293,
											"end": 9299,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9282,
											"end": 9291,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 9278,
											"end": 9300,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "436"
										},
										{
											"begin": 9257,
											"end": 9310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "tag",
											"source": 19,
											"value": "593"
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9247,
											"end": 9310,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 9247,
											"end": 9310,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9203,
											"end": 9320,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9359,
											"end": 9361,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "594"
										},
										{
											"begin": 9430,
											"end": 9437,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 9421,
											"end": 9427,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9410,
											"end": 9419,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 9406,
											"end": 9428,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "436"
										},
										{
											"begin": 9385,
											"end": 9438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "tag",
											"source": 19,
											"value": "594"
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9375,
											"end": 9438,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 9375,
											"end": 9438,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9330,
											"end": 9448,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9487,
											"end": 9489,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "595"
										},
										{
											"begin": 9558,
											"end": 9565,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 9549,
											"end": 9555,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9538,
											"end": 9547,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 9534,
											"end": 9556,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "431"
										},
										{
											"begin": 9513,
											"end": 9566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "tag",
											"source": 19,
											"value": "595"
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9503,
											"end": 9566,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9503,
											"end": 9566,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9458,
											"end": 9576,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9643,
											"end": 9645,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 9632,
											"end": 9641,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9628,
											"end": 9646,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9615,
											"end": 9647,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 9674,
											"end": 9692,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9666,
											"end": 9672,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9663,
											"end": 9693,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "596"
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "597"
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "417"
										},
										{
											"begin": 9696,
											"end": 9775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "tag",
											"source": 19,
											"value": "597"
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "tag",
											"source": 19,
											"value": "596"
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "598"
										},
										{
											"begin": 9855,
											"end": 9862,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 9846,
											"end": 9852,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9835,
											"end": 9844,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 9831,
											"end": 9853,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "446"
										},
										{
											"begin": 9801,
											"end": 9863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "tag",
											"source": 19,
											"value": "598"
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9791,
											"end": 9863,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9791,
											"end": 9863,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9586,
											"end": 9873,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8937,
											"end": 9880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "tag",
											"source": 19,
											"value": "132"
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9954,
											"end": 9960,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 10011,
											"end": 10013,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 9999,
											"end": 10008,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9990,
											"end": 9997,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9986,
											"end": 10009,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 9982,
											"end": 10014,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "600"
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "601"
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 10017,
											"end": 10096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "tag",
											"source": 19,
											"value": "601"
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "tag",
											"source": 19,
											"value": "600"
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10137,
											"end": 10138,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "602"
										},
										{
											"begin": 10207,
											"end": 10214,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10198,
											"end": 10204,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10187,
											"end": 10196,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 10183,
											"end": 10205,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "436"
										},
										{
											"begin": 10162,
											"end": 10215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "tag",
											"source": 19,
											"value": "602"
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10152,
											"end": 10215,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 10152,
											"end": 10215,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10108,
											"end": 10225,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10264,
											"end": 10266,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "603"
										},
										{
											"begin": 10335,
											"end": 10342,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10326,
											"end": 10332,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10315,
											"end": 10324,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 10311,
											"end": 10333,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "436"
										},
										{
											"begin": 10290,
											"end": 10343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "tag",
											"source": 19,
											"value": "603"
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10280,
											"end": 10343,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10280,
											"end": 10343,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10235,
											"end": 10353,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9886,
											"end": 10360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10366,
											"end": 10674,
											"name": "tag",
											"source": 19,
											"value": "447"
										},
										{
											"begin": 10366,
											"end": 10674,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10428,
											"end": 10432,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10518,
											"end": 10536,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10510,
											"end": 10516,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10507,
											"end": 10537,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 10504,
											"end": 10560,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 10504,
											"end": 10560,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "605"
										},
										{
											"begin": 10504,
											"end": 10560,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10540,
											"end": 10558,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "606"
										},
										{
											"begin": 10540,
											"end": 10558,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "371"
										},
										{
											"begin": 10540,
											"end": 10558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10540,
											"end": 10558,
											"name": "tag",
											"source": 19,
											"value": "606"
										},
										{
											"begin": 10540,
											"end": 10558,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10504,
											"end": 10560,
											"name": "tag",
											"source": 19,
											"value": "605"
										},
										{
											"begin": 10504,
											"end": 10560,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10578,
											"end": 10607,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "607"
										},
										{
											"begin": 10600,
											"end": 10606,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10578,
											"end": 10607,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "428"
										},
										{
											"begin": 10578,
											"end": 10607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10578,
											"end": 10607,
											"name": "tag",
											"source": 19,
											"value": "607"
										},
										{
											"begin": 10578,
											"end": 10607,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10570,
											"end": 10607,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10570,
											"end": 10607,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10662,
											"end": 10666,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10656,
											"end": 10660,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10652,
											"end": 10667,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10644,
											"end": 10667,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10644,
											"end": 10667,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10366,
											"end": 10674,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10366,
											"end": 10674,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10366,
											"end": 10674,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10366,
											"end": 10674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10680,
											"end": 11105,
											"name": "tag",
											"source": 19,
											"value": "448"
										},
										{
											"begin": 10680,
											"end": 11105,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10758,
											"end": 10763,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10783,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "609"
										},
										{
											"begin": 10799,
											"end": 10848,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "610"
										},
										{
											"begin": 10841,
											"end": 10847,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10799,
											"end": 10848,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "447"
										},
										{
											"begin": 10799,
											"end": 10848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10799,
											"end": 10848,
											"name": "tag",
											"source": 19,
											"value": "610"
										},
										{
											"begin": 10799,
											"end": 10848,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10783,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "442"
										},
										{
											"begin": 10783,
											"end": 10849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10783,
											"end": 10849,
											"name": "tag",
											"source": 19,
											"value": "609"
										},
										{
											"begin": 10783,
											"end": 10849,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10774,
											"end": 10849,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10774,
											"end": 10849,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10872,
											"end": 10878,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10865,
											"end": 10870,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10858,
											"end": 10879,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10910,
											"end": 10914,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10903,
											"end": 10908,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10899,
											"end": 10915,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10948,
											"end": 10951,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10939,
											"end": 10945,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10934,
											"end": 10937,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10930,
											"end": 10946,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 10924,
											"end": 11036,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 10924,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "611"
										},
										{
											"begin": 10924,
											"end": 11036,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10955,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "612"
										},
										{
											"begin": 10955,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "440"
										},
										{
											"begin": 10955,
											"end": 11034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10955,
											"end": 11034,
											"name": "tag",
											"source": 19,
											"value": "612"
										},
										{
											"begin": 10955,
											"end": 11034,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10924,
											"end": 11036,
											"name": "tag",
											"source": 19,
											"value": "611"
										},
										{
											"begin": 10924,
											"end": 11036,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11045,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "613"
										},
										{
											"begin": 11092,
											"end": 11098,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 11087,
											"end": 11090,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11082,
											"end": 11085,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 11045,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "444"
										},
										{
											"begin": 11045,
											"end": 11099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11045,
											"end": 11099,
											"name": "tag",
											"source": 19,
											"value": "613"
										},
										{
											"begin": 11045,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10764,
											"end": 11105,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10680,
											"end": 11105,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 10680,
											"end": 11105,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 10680,
											"end": 11105,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10680,
											"end": 11105,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10680,
											"end": 11105,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10680,
											"end": 11105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11125,
											"end": 11465,
											"name": "tag",
											"source": 19,
											"value": "449"
										},
										{
											"begin": 11125,
											"end": 11465,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11181,
											"end": 11186,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11230,
											"end": 11233,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11223,
											"end": 11227,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 11215,
											"end": 11221,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11211,
											"end": 11228,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11207,
											"end": 11234,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 11197,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "615"
										},
										{
											"begin": 11197,
											"end": 11319,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 11238,
											"end": 11317,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "616"
										},
										{
											"begin": 11238,
											"end": 11317,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "439"
										},
										{
											"begin": 11238,
											"end": 11317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11238,
											"end": 11317,
											"name": "tag",
											"source": 19,
											"value": "616"
										},
										{
											"begin": 11238,
											"end": 11317,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11197,
											"end": 11319,
											"name": "tag",
											"source": 19,
											"value": "615"
										},
										{
											"begin": 11197,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11355,
											"end": 11361,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11342,
											"end": 11362,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 11380,
											"end": 11459,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "617"
										},
										{
											"begin": 11455,
											"end": 11458,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 11447,
											"end": 11453,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11440,
											"end": 11444,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11432,
											"end": 11438,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 11428,
											"end": 11445,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11380,
											"end": 11459,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "448"
										},
										{
											"begin": 11380,
											"end": 11459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11380,
											"end": 11459,
											"name": "tag",
											"source": 19,
											"value": "617"
										},
										{
											"begin": 11380,
											"end": 11459,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11371,
											"end": 11459,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11371,
											"end": 11459,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11187,
											"end": 11465,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11125,
											"end": 11465,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11125,
											"end": 11465,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11125,
											"end": 11465,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11125,
											"end": 11465,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11125,
											"end": 11465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11471,
											"end": 11980,
											"name": "tag",
											"source": 19,
											"value": "145"
										},
										{
											"begin": 11471,
											"end": 11980,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11540,
											"end": 11546,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11589,
											"end": 11591,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11577,
											"end": 11586,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11568,
											"end": 11575,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 11564,
											"end": 11587,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 11560,
											"end": 11592,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 11557,
											"end": 11676,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 11557,
											"end": 11676,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "619"
										},
										{
											"begin": 11557,
											"end": 11676,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 11595,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "620"
										},
										{
											"begin": 11595,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 11595,
											"end": 11674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11595,
											"end": 11674,
											"name": "tag",
											"source": 19,
											"value": "620"
										},
										{
											"begin": 11595,
											"end": 11674,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11557,
											"end": 11676,
											"name": "tag",
											"source": 19,
											"value": "619"
										},
										{
											"begin": 11557,
											"end": 11676,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11743,
											"end": 11744,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11732,
											"end": 11741,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11728,
											"end": 11745,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11715,
											"end": 11746,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 11773,
											"end": 11791,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11765,
											"end": 11771,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11762,
											"end": 11792,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 11759,
											"end": 11876,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 11759,
											"end": 11876,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "621"
										},
										{
											"begin": 11759,
											"end": 11876,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 11795,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "622"
										},
										{
											"begin": 11795,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "417"
										},
										{
											"begin": 11795,
											"end": 11874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11795,
											"end": 11874,
											"name": "tag",
											"source": 19,
											"value": "622"
										},
										{
											"begin": 11795,
											"end": 11874,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11759,
											"end": 11876,
											"name": "tag",
											"source": 19,
											"value": "621"
										},
										{
											"begin": 11759,
											"end": 11876,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11900,
											"end": 11963,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "623"
										},
										{
											"begin": 11955,
											"end": 11962,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 11946,
											"end": 11952,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11935,
											"end": 11944,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 11931,
											"end": 11953,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11900,
											"end": 11963,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "449"
										},
										{
											"begin": 11900,
											"end": 11963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11900,
											"end": 11963,
											"name": "tag",
											"source": 19,
											"value": "623"
										},
										{
											"begin": 11900,
											"end": 11963,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11890,
											"end": 11963,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11890,
											"end": 11963,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11686,
											"end": 11973,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11471,
											"end": 11980,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11471,
											"end": 11980,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11471,
											"end": 11980,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11471,
											"end": 11980,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11471,
											"end": 11980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11986,
											"end": 12166,
											"name": "tag",
											"source": 19,
											"value": "450"
										},
										{
											"begin": 11986,
											"end": 12166,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12034,
											"end": 12111,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12031,
											"end": 12032,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12024,
											"end": 12112,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12131,
											"end": 12135,
											"name": "PUSH",
											"source": 19,
											"value": "22"
										},
										{
											"begin": 12128,
											"end": 12129,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 12121,
											"end": 12136,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12155,
											"end": 12159,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 12152,
											"end": 12153,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12145,
											"end": 12160,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 12172,
											"end": 12492,
											"name": "tag",
											"source": 19,
											"value": "154"
										},
										{
											"begin": 12172,
											"end": 12492,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12216,
											"end": 12222,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12253,
											"end": 12254,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 12247,
											"end": 12251,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12243,
											"end": 12255,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 12233,
											"end": 12255,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12233,
											"end": 12255,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12300,
											"end": 12301,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 12294,
											"end": 12298,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12290,
											"end": 12302,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 12321,
											"end": 12339,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 12311,
											"end": 12392,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "626"
										},
										{
											"begin": 12311,
											"end": 12392,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 12377,
											"end": 12381,
											"name": "PUSH",
											"source": 19,
											"value": "7F"
										},
										{
											"begin": 12369,
											"end": 12375,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12365,
											"end": 12382,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 12355,
											"end": 12382,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12355,
											"end": 12382,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12311,
											"end": 12392,
											"name": "tag",
											"source": 19,
											"value": "626"
										},
										{
											"begin": 12311,
											"end": 12392,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12439,
											"end": 12441,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12431,
											"end": 12437,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12428,
											"end": 12442,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 12408,
											"end": 12426,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 12405,
											"end": 12443,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 12402,
											"end": 12486,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "627"
										},
										{
											"begin": 12402,
											"end": 12486,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 12458,
											"end": 12476,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "628"
										},
										{
											"begin": 12458,
											"end": 12476,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "450"
										},
										{
											"begin": 12458,
											"end": 12476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12458,
											"end": 12476,
											"name": "tag",
											"source": 19,
											"value": "628"
										},
										{
											"begin": 12458,
											"end": 12476,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12402,
											"end": 12486,
											"name": "tag",
											"source": 19,
											"value": "627"
										},
										{
											"begin": 12402,
											"end": 12486,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12223,
											"end": 12492,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12172,
											"end": 12492,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12172,
											"end": 12492,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12172,
											"end": 12492,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12172,
											"end": 12492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12498,
											"end": 12666,
											"name": "tag",
											"source": 19,
											"value": "451"
										},
										{
											"begin": 12498,
											"end": 12666,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12638,
											"end": 12658,
											"name": "PUSH",
											"source": 19,
											"value": "4E6F74206D617374657220616464726573730000000000000000000000000000"
										},
										{
											"begin": 12634,
											"end": 12635,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12626,
											"end": 12632,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12622,
											"end": 12636,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12615,
											"end": 12659,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12498,
											"end": 12666,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12498,
											"end": 12666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12672,
											"end": 13038,
											"name": "tag",
											"source": 19,
											"value": "452"
										},
										{
											"begin": 12672,
											"end": 13038,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12814,
											"end": 12817,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12835,
											"end": 12902,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "631"
										},
										{
											"begin": 12899,
											"end": 12901,
											"name": "PUSH",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 12894,
											"end": 12897,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 12835,
											"end": 12902,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "426"
										},
										{
											"begin": 12835,
											"end": 12902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12835,
											"end": 12902,
											"name": "tag",
											"source": 19,
											"value": "631"
										},
										{
											"begin": 12835,
											"end": 12902,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12828,
											"end": 12902,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12828,
											"end": 12902,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12911,
											"end": 13004,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "632"
										},
										{
											"begin": 13000,
											"end": 13003,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12911,
											"end": 13004,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "451"
										},
										{
											"begin": 12911,
											"end": 13004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12911,
											"end": 13004,
											"name": "tag",
											"source": 19,
											"value": "632"
										},
										{
											"begin": 12911,
											"end": 13004,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13029,
											"end": 13031,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13024,
											"end": 13027,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13020,
											"end": 13032,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13013,
											"end": 13032,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13013,
											"end": 13032,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12672,
											"end": 13038,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12672,
											"end": 13038,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12672,
											"end": 13038,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12672,
											"end": 13038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13044,
											"end": 13463,
											"name": "tag",
											"source": 19,
											"value": "172"
										},
										{
											"begin": 13044,
											"end": 13463,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13210,
											"end": 13214,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13248,
											"end": 13250,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13237,
											"end": 13246,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13233,
											"end": 13251,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13225,
											"end": 13251,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13225,
											"end": 13251,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13297,
											"end": 13306,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13291,
											"end": 13295,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13287,
											"end": 13307,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 13283,
											"end": 13284,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13272,
											"end": 13281,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13268,
											"end": 13285,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13261,
											"end": 13308,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13325,
											"end": 13456,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "634"
										},
										{
											"begin": 13451,
											"end": 13455,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13325,
											"end": 13456,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "452"
										},
										{
											"begin": 13325,
											"end": 13456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13325,
											"end": 13456,
											"name": "tag",
											"source": 19,
											"value": "634"
										},
										{
											"begin": 13325,
											"end": 13456,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13317,
											"end": 13456,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13317,
											"end": 13456,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13044,
											"end": 13463,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13044,
											"end": 13463,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13044,
											"end": 13463,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13044,
											"end": 13463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13469,
											"end": 13616,
											"name": "tag",
											"source": 19,
											"value": "453"
										},
										{
											"begin": 13469,
											"end": 13616,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13570,
											"end": 13581,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13607,
											"end": 13610,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13592,
											"end": 13610,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13592,
											"end": 13610,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13469,
											"end": 13616,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 13469,
											"end": 13616,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13469,
											"end": 13616,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13469,
											"end": 13616,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13469,
											"end": 13616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13622,
											"end": 13736,
											"name": "tag",
											"source": 19,
											"value": "454"
										},
										{
											"begin": 13622,
											"end": 13736,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13622,
											"end": 13736,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13622,
											"end": 13736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13742,
											"end": 14140,
											"name": "tag",
											"source": 19,
											"value": "455"
										},
										{
											"begin": 13742,
											"end": 14140,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13901,
											"end": 13904,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13922,
											"end": 14005,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "638"
										},
										{
											"begin": 14003,
											"end": 14004,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13998,
											"end": 14001,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13922,
											"end": 14005,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "453"
										},
										{
											"begin": 13922,
											"end": 14005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13922,
											"end": 14005,
											"name": "tag",
											"source": 19,
											"value": "638"
										},
										{
											"begin": 13922,
											"end": 14005,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13915,
											"end": 14005,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13915,
											"end": 14005,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14014,
											"end": 14107,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "639"
										},
										{
											"begin": 14103,
											"end": 14106,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14014,
											"end": 14107,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "454"
										},
										{
											"begin": 14014,
											"end": 14107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14014,
											"end": 14107,
											"name": "tag",
											"source": 19,
											"value": "639"
										},
										{
											"begin": 14014,
											"end": 14107,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14132,
											"end": 14133,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14127,
											"end": 14130,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14123,
											"end": 14134,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14116,
											"end": 14134,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14116,
											"end": 14134,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13742,
											"end": 14140,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13742,
											"end": 14140,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13742,
											"end": 14140,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13742,
											"end": 14140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14146,
											"end": 14525,
											"name": "tag",
											"source": 19,
											"value": "174"
										},
										{
											"begin": 14146,
											"end": 14525,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14330,
											"end": 14333,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14352,
											"end": 14499,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "641"
										},
										{
											"begin": 14495,
											"end": 14498,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14352,
											"end": 14499,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "455"
										},
										{
											"begin": 14352,
											"end": 14499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14352,
											"end": 14499,
											"name": "tag",
											"source": 19,
											"value": "641"
										},
										{
											"begin": 14352,
											"end": 14499,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14345,
											"end": 14499,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14345,
											"end": 14499,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14516,
											"end": 14519,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14509,
											"end": 14519,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14509,
											"end": 14519,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14146,
											"end": 14525,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14146,
											"end": 14525,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14146,
											"end": 14525,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14146,
											"end": 14525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14531,
											"end": 14697,
											"name": "tag",
											"source": 19,
											"value": "456"
										},
										{
											"begin": 14531,
											"end": 14697,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14671,
											"end": 14689,
											"name": "PUSH",
											"source": 19,
											"value": "5472616E73666572206661696C65642E00000000000000000000000000000000"
										},
										{
											"begin": 14667,
											"end": 14668,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14659,
											"end": 14665,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14655,
											"end": 14669,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14648,
											"end": 14690,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14531,
											"end": 14697,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14531,
											"end": 14697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14703,
											"end": 15069,
											"name": "tag",
											"source": 19,
											"value": "457"
										},
										{
											"begin": 14703,
											"end": 15069,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14845,
											"end": 14848,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14866,
											"end": 14933,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "644"
										},
										{
											"begin": 14930,
											"end": 14932,
											"name": "PUSH",
											"source": 19,
											"value": "10"
										},
										{
											"begin": 14925,
											"end": 14928,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14866,
											"end": 14933,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "426"
										},
										{
											"begin": 14866,
											"end": 14933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14866,
											"end": 14933,
											"name": "tag",
											"source": 19,
											"value": "644"
										},
										{
											"begin": 14866,
											"end": 14933,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14859,
											"end": 14933,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14859,
											"end": 14933,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14942,
											"end": 15035,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "645"
										},
										{
											"begin": 15031,
											"end": 15034,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14942,
											"end": 15035,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "456"
										},
										{
											"begin": 14942,
											"end": 15035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14942,
											"end": 15035,
											"name": "tag",
											"source": 19,
											"value": "645"
										},
										{
											"begin": 14942,
											"end": 15035,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15060,
											"end": 15062,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15055,
											"end": 15058,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15051,
											"end": 15063,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15044,
											"end": 15063,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15044,
											"end": 15063,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14703,
											"end": 15069,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14703,
											"end": 15069,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14703,
											"end": 15069,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14703,
											"end": 15069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15075,
											"end": 15494,
											"name": "tag",
											"source": 19,
											"value": "180"
										},
										{
											"begin": 15075,
											"end": 15494,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15241,
											"end": 15245,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15279,
											"end": 15281,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15268,
											"end": 15277,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15264,
											"end": 15282,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15256,
											"end": 15282,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15256,
											"end": 15282,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15328,
											"end": 15337,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15322,
											"end": 15326,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15318,
											"end": 15338,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 15314,
											"end": 15315,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15303,
											"end": 15312,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15299,
											"end": 15316,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15292,
											"end": 15339,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15356,
											"end": 15487,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "647"
										},
										{
											"begin": 15482,
											"end": 15486,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15356,
											"end": 15487,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "457"
										},
										{
											"begin": 15356,
											"end": 15487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15356,
											"end": 15487,
											"name": "tag",
											"source": 19,
											"value": "647"
										},
										{
											"begin": 15356,
											"end": 15487,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15348,
											"end": 15487,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15348,
											"end": 15487,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15075,
											"end": 15494,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15075,
											"end": 15494,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15075,
											"end": 15494,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15075,
											"end": 15494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15500,
											"end": 15942,
											"name": "tag",
											"source": 19,
											"value": "189"
										},
										{
											"begin": 15500,
											"end": 15942,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15649,
											"end": 15653,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15687,
											"end": 15689,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 15676,
											"end": 15685,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15672,
											"end": 15690,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15664,
											"end": 15690,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15664,
											"end": 15690,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15700,
											"end": 15771,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "649"
										},
										{
											"begin": 15768,
											"end": 15769,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15757,
											"end": 15766,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15753,
											"end": 15770,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15744,
											"end": 15750,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 15700,
											"end": 15771,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "434"
										},
										{
											"begin": 15700,
											"end": 15771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15700,
											"end": 15771,
											"name": "tag",
											"source": 19,
											"value": "649"
										},
										{
											"begin": 15700,
											"end": 15771,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15781,
											"end": 15853,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "650"
										},
										{
											"begin": 15849,
											"end": 15851,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15838,
											"end": 15847,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15834,
											"end": 15852,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15825,
											"end": 15831,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 15781,
											"end": 15853,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "424"
										},
										{
											"begin": 15781,
											"end": 15853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15781,
											"end": 15853,
											"name": "tag",
											"source": 19,
											"value": "650"
										},
										{
											"begin": 15781,
											"end": 15853,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15863,
											"end": 15935,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "651"
										},
										{
											"begin": 15931,
											"end": 15933,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 15920,
											"end": 15929,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15916,
											"end": 15934,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15907,
											"end": 15913,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 15863,
											"end": 15935,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "434"
										},
										{
											"begin": 15863,
											"end": 15935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15863,
											"end": 15935,
											"name": "tag",
											"source": 19,
											"value": "651"
										},
										{
											"begin": 15863,
											"end": 15935,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15500,
											"end": 15942,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 15500,
											"end": 15942,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 15500,
											"end": 15942,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15500,
											"end": 15942,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15500,
											"end": 15942,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15500,
											"end": 15942,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15500,
											"end": 15942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15948,
											"end": 16096,
											"name": "tag",
											"source": 19,
											"value": "458"
										},
										{
											"begin": 15948,
											"end": 16096,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16050,
											"end": 16061,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16087,
											"end": 16090,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16072,
											"end": 16090,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16072,
											"end": 16090,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15948,
											"end": 16096,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 15948,
											"end": 16096,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15948,
											"end": 16096,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15948,
											"end": 16096,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15948,
											"end": 16096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16102,
											"end": 16492,
											"name": "tag",
											"source": 19,
											"value": "459"
										},
										{
											"begin": 16102,
											"end": 16492,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16208,
											"end": 16211,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16236,
											"end": 16275,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "654"
										},
										{
											"begin": 16269,
											"end": 16274,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16236,
											"end": 16275,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "425"
										},
										{
											"begin": 16236,
											"end": 16275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16236,
											"end": 16275,
											"name": "tag",
											"source": 19,
											"value": "654"
										},
										{
											"begin": 16236,
											"end": 16275,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16291,
											"end": 16380,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "655"
										},
										{
											"begin": 16373,
											"end": 16379,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16368,
											"end": 16371,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 16291,
											"end": 16380,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "458"
										},
										{
											"begin": 16291,
											"end": 16380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16291,
											"end": 16380,
											"name": "tag",
											"source": 19,
											"value": "655"
										},
										{
											"begin": 16291,
											"end": 16380,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16284,
											"end": 16380,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 16284,
											"end": 16380,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16389,
											"end": 16454,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "656"
										},
										{
											"begin": 16447,
											"end": 16453,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16442,
											"end": 16445,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 16435,
											"end": 16439,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16428,
											"end": 16433,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 16424,
											"end": 16440,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16389,
											"end": 16454,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "427"
										},
										{
											"begin": 16389,
											"end": 16454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16389,
											"end": 16454,
											"name": "tag",
											"source": 19,
											"value": "656"
										},
										{
											"begin": 16389,
											"end": 16454,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16479,
											"end": 16485,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 16474,
											"end": 16477,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 16470,
											"end": 16486,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16463,
											"end": 16486,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16463,
											"end": 16486,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16212,
											"end": 16492,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16102,
											"end": 16492,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 16102,
											"end": 16492,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16102,
											"end": 16492,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16102,
											"end": 16492,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16102,
											"end": 16492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16498,
											"end": 16933,
											"name": "tag",
											"source": 19,
											"value": "233"
										},
										{
											"begin": 16498,
											"end": 16933,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16678,
											"end": 16681,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16700,
											"end": 16795,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "658"
										},
										{
											"begin": 16791,
											"end": 16794,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16782,
											"end": 16788,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 16700,
											"end": 16795,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "459"
										},
										{
											"begin": 16700,
											"end": 16795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16700,
											"end": 16795,
											"name": "tag",
											"source": 19,
											"value": "658"
										},
										{
											"begin": 16700,
											"end": 16795,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16693,
											"end": 16795,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16693,
											"end": 16795,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16812,
											"end": 16907,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "659"
										},
										{
											"begin": 16903,
											"end": 16906,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16894,
											"end": 16900,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 16812,
											"end": 16907,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "459"
										},
										{
											"begin": 16812,
											"end": 16907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16812,
											"end": 16907,
											"name": "tag",
											"source": 19,
											"value": "659"
										},
										{
											"begin": 16812,
											"end": 16907,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16805,
											"end": 16907,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16805,
											"end": 16907,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16924,
											"end": 16927,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16917,
											"end": 16927,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16917,
											"end": 16927,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16498,
											"end": 16933,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 16498,
											"end": 16933,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 16498,
											"end": 16933,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16498,
											"end": 16933,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16498,
											"end": 16933,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16498,
											"end": 16933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16939,
											"end": 17103,
											"name": "tag",
											"source": 19,
											"value": "460"
										},
										{
											"begin": 16939,
											"end": 17103,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17079,
											"end": 17095,
											"name": "PUSH",
											"source": 19,
											"value": "4E6F7420656E6F75676820455448000000000000000000000000000000000000"
										},
										{
											"begin": 17075,
											"end": 17076,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17067,
											"end": 17073,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17063,
											"end": 17077,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17056,
											"end": 17096,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16939,
											"end": 17103,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16939,
											"end": 17103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17109,
											"end": 17475,
											"name": "tag",
											"source": 19,
											"value": "461"
										},
										{
											"begin": 17109,
											"end": 17475,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17251,
											"end": 17254,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17272,
											"end": 17339,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "662"
										},
										{
											"begin": 17336,
											"end": 17338,
											"name": "PUSH",
											"source": 19,
											"value": "E"
										},
										{
											"begin": 17331,
											"end": 17334,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 17272,
											"end": 17339,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "426"
										},
										{
											"begin": 17272,
											"end": 17339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17272,
											"end": 17339,
											"name": "tag",
											"source": 19,
											"value": "662"
										},
										{
											"begin": 17272,
											"end": 17339,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17265,
											"end": 17339,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17265,
											"end": 17339,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17348,
											"end": 17441,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "663"
										},
										{
											"begin": 17437,
											"end": 17440,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17348,
											"end": 17441,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "460"
										},
										{
											"begin": 17348,
											"end": 17441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17348,
											"end": 17441,
											"name": "tag",
											"source": 19,
											"value": "663"
										},
										{
											"begin": 17348,
											"end": 17441,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17466,
											"end": 17468,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 17461,
											"end": 17464,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17457,
											"end": 17469,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17450,
											"end": 17469,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17450,
											"end": 17469,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17109,
											"end": 17475,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17109,
											"end": 17475,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17109,
											"end": 17475,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17109,
											"end": 17475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17481,
											"end": 17900,
											"name": "tag",
											"source": 19,
											"value": "259"
										},
										{
											"begin": 17481,
											"end": 17900,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17647,
											"end": 17651,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17685,
											"end": 17687,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 17674,
											"end": 17683,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17670,
											"end": 17688,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17662,
											"end": 17688,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17662,
											"end": 17688,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17734,
											"end": 17743,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17728,
											"end": 17732,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17724,
											"end": 17744,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 17720,
											"end": 17721,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17709,
											"end": 17718,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 17705,
											"end": 17722,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17698,
											"end": 17745,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17762,
											"end": 17893,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "665"
										},
										{
											"begin": 17888,
											"end": 17892,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17762,
											"end": 17893,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "461"
										},
										{
											"begin": 17762,
											"end": 17893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17762,
											"end": 17893,
											"name": "tag",
											"source": 19,
											"value": "665"
										},
										{
											"begin": 17762,
											"end": 17893,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17754,
											"end": 17893,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17754,
											"end": 17893,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17481,
											"end": 17900,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17481,
											"end": 17900,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17481,
											"end": 17900,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17481,
											"end": 17900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17906,
											"end": 18086,
											"name": "tag",
											"source": 19,
											"value": "462"
										},
										{
											"begin": 17906,
											"end": 18086,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17954,
											"end": 18031,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17951,
											"end": 17952,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17944,
											"end": 18032,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18051,
											"end": 18055,
											"name": "PUSH",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 18048,
											"end": 18049,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 18041,
											"end": 18056,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18075,
											"end": 18079,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 18072,
											"end": 18073,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18065,
											"end": 18080,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 18092,
											"end": 18325,
											"name": "tag",
											"source": 19,
											"value": "267"
										},
										{
											"begin": 18092,
											"end": 18325,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18131,
											"end": 18134,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18154,
											"end": 18178,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "668"
										},
										{
											"begin": 18172,
											"end": 18177,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18154,
											"end": 18178,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "423"
										},
										{
											"begin": 18154,
											"end": 18178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18154,
											"end": 18178,
											"name": "tag",
											"source": 19,
											"value": "668"
										},
										{
											"begin": 18154,
											"end": 18178,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18145,
											"end": 18178,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18145,
											"end": 18178,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18200,
											"end": 18266,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18193,
											"end": 18198,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18190,
											"end": 18267,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 18187,
											"end": 18290,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "669"
										},
										{
											"begin": 18187,
											"end": 18290,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 18270,
											"end": 18288,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "670"
										},
										{
											"begin": 18270,
											"end": 18288,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "462"
										},
										{
											"begin": 18270,
											"end": 18288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18270,
											"end": 18288,
											"name": "tag",
											"source": 19,
											"value": "670"
										},
										{
											"begin": 18270,
											"end": 18288,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18187,
											"end": 18290,
											"name": "tag",
											"source": 19,
											"value": "669"
										},
										{
											"begin": 18187,
											"end": 18290,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18317,
											"end": 18318,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 18310,
											"end": 18315,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18306,
											"end": 18319,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18299,
											"end": 18319,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18299,
											"end": 18319,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18092,
											"end": 18325,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18092,
											"end": 18325,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18092,
											"end": 18325,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18092,
											"end": 18325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18331,
											"end": 18429,
											"name": "tag",
											"source": 19,
											"value": "463"
										},
										{
											"begin": 18331,
											"end": 18429,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18382,
											"end": 18388,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18416,
											"end": 18421,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18410,
											"end": 18422,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 18400,
											"end": 18422,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18400,
											"end": 18422,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18331,
											"end": 18429,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18331,
											"end": 18429,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18331,
											"end": 18429,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18331,
											"end": 18429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18435,
											"end": 18603,
											"name": "tag",
											"source": 19,
											"value": "464"
										},
										{
											"begin": 18435,
											"end": 18603,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18518,
											"end": 18529,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18552,
											"end": 18558,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18547,
											"end": 18550,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18540,
											"end": 18559,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18592,
											"end": 18596,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18587,
											"end": 18590,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18583,
											"end": 18597,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18568,
											"end": 18597,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18568,
											"end": 18597,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18435,
											"end": 18603,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 18435,
											"end": 18603,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18435,
											"end": 18603,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18435,
											"end": 18603,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18435,
											"end": 18603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18609,
											"end": 18982,
											"name": "tag",
											"source": 19,
											"value": "465"
										},
										{
											"begin": 18609,
											"end": 18982,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18695,
											"end": 18698,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18723,
											"end": 18761,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "674"
										},
										{
											"begin": 18755,
											"end": 18760,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18723,
											"end": 18761,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "463"
										},
										{
											"begin": 18723,
											"end": 18761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18723,
											"end": 18761,
											"name": "tag",
											"source": 19,
											"value": "674"
										},
										{
											"begin": 18723,
											"end": 18761,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18777,
											"end": 18847,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "675"
										},
										{
											"begin": 18840,
											"end": 18846,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18835,
											"end": 18838,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 18777,
											"end": 18847,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "464"
										},
										{
											"begin": 18777,
											"end": 18847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18777,
											"end": 18847,
											"name": "tag",
											"source": 19,
											"value": "675"
										},
										{
											"begin": 18777,
											"end": 18847,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18770,
											"end": 18847,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 18770,
											"end": 18847,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18856,
											"end": 18921,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "676"
										},
										{
											"begin": 18914,
											"end": 18920,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18909,
											"end": 18912,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 18902,
											"end": 18906,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18895,
											"end": 18900,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 18891,
											"end": 18907,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18856,
											"end": 18921,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "427"
										},
										{
											"begin": 18856,
											"end": 18921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18856,
											"end": 18921,
											"name": "tag",
											"source": 19,
											"value": "676"
										},
										{
											"begin": 18856,
											"end": 18921,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18946,
											"end": 18975,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "677"
										},
										{
											"begin": 18968,
											"end": 18974,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18946,
											"end": 18975,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "428"
										},
										{
											"begin": 18946,
											"end": 18975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18946,
											"end": 18975,
											"name": "tag",
											"source": 19,
											"value": "677"
										},
										{
											"begin": 18946,
											"end": 18975,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18941,
											"end": 18944,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 18937,
											"end": 18976,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18930,
											"end": 18976,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18930,
											"end": 18976,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18699,
											"end": 18982,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18609,
											"end": 18982,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 18609,
											"end": 18982,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18609,
											"end": 18982,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18609,
											"end": 18982,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18609,
											"end": 18982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18988,
											"end": 19628,
											"name": "tag",
											"source": 19,
											"value": "308"
										},
										{
											"begin": 18988,
											"end": 19628,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19183,
											"end": 19187,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19221,
											"end": 19224,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 19210,
											"end": 19219,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19206,
											"end": 19225,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19198,
											"end": 19225,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19198,
											"end": 19225,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19235,
											"end": 19306,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "679"
										},
										{
											"begin": 19303,
											"end": 19304,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19292,
											"end": 19301,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 19288,
											"end": 19305,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19279,
											"end": 19285,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 19235,
											"end": 19306,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "434"
										},
										{
											"begin": 19235,
											"end": 19306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19235,
											"end": 19306,
											"name": "tag",
											"source": 19,
											"value": "679"
										},
										{
											"begin": 19235,
											"end": 19306,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19316,
											"end": 19388,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "680"
										},
										{
											"begin": 19384,
											"end": 19386,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 19373,
											"end": 19382,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 19369,
											"end": 19387,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19360,
											"end": 19366,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 19316,
											"end": 19388,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "434"
										},
										{
											"begin": 19316,
											"end": 19388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19316,
											"end": 19388,
											"name": "tag",
											"source": 19,
											"value": "680"
										},
										{
											"begin": 19316,
											"end": 19388,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19398,
											"end": 19470,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "681"
										},
										{
											"begin": 19466,
											"end": 19468,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 19455,
											"end": 19464,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 19451,
											"end": 19469,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19442,
											"end": 19448,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 19398,
											"end": 19470,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "424"
										},
										{
											"begin": 19398,
											"end": 19470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19398,
											"end": 19470,
											"name": "tag",
											"source": 19,
											"value": "681"
										},
										{
											"begin": 19398,
											"end": 19470,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19517,
											"end": 19526,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19511,
											"end": 19515,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19507,
											"end": 19527,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 19502,
											"end": 19504,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 19491,
											"end": 19500,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 19487,
											"end": 19505,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19480,
											"end": 19528,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19545,
											"end": 19621,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "682"
										},
										{
											"begin": 19616,
											"end": 19620,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19607,
											"end": 19613,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 19545,
											"end": 19621,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "465"
										},
										{
											"begin": 19545,
											"end": 19621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19545,
											"end": 19621,
											"name": "tag",
											"source": 19,
											"value": "682"
										},
										{
											"begin": 19545,
											"end": 19621,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19537,
											"end": 19621,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19537,
											"end": 19621,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18988,
											"end": 19628,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 18988,
											"end": 19628,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 18988,
											"end": 19628,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18988,
											"end": 19628,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18988,
											"end": 19628,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18988,
											"end": 19628,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18988,
											"end": 19628,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18988,
											"end": 19628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19634,
											"end": 19775,
											"name": "tag",
											"source": 19,
											"value": "466"
										},
										{
											"begin": 19634,
											"end": 19775,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19690,
											"end": 19695,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19721,
											"end": 19727,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19715,
											"end": 19728,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 19706,
											"end": 19728,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19706,
											"end": 19728,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19737,
											"end": 19769,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "684"
										},
										{
											"begin": 19763,
											"end": 19768,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19737,
											"end": 19769,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "419"
										},
										{
											"begin": 19737,
											"end": 19769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19737,
											"end": 19769,
											"name": "tag",
											"source": 19,
											"value": "684"
										},
										{
											"begin": 19737,
											"end": 19769,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19634,
											"end": 19775,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 19634,
											"end": 19775,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19634,
											"end": 19775,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19634,
											"end": 19775,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19634,
											"end": 19775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19781,
											"end": 20130,
											"name": "tag",
											"source": 19,
											"value": "311"
										},
										{
											"begin": 19781,
											"end": 20130,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19850,
											"end": 19856,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19899,
											"end": 19901,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 19887,
											"end": 19896,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19878,
											"end": 19885,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 19874,
											"end": 19897,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 19870,
											"end": 19902,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 19867,
											"end": 19986,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 19867,
											"end": 19986,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "686"
										},
										{
											"begin": 19867,
											"end": 19986,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 19905,
											"end": 19984,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "687"
										},
										{
											"begin": 19905,
											"end": 19984,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 19905,
											"end": 19984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19905,
											"end": 19984,
											"name": "tag",
											"source": 19,
											"value": "687"
										},
										{
											"begin": 19905,
											"end": 19984,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19867,
											"end": 19986,
											"name": "tag",
											"source": 19,
											"value": "686"
										},
										{
											"begin": 19867,
											"end": 19986,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20025,
											"end": 20026,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20050,
											"end": 20113,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "688"
										},
										{
											"begin": 20105,
											"end": 20112,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 20096,
											"end": 20102,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20085,
											"end": 20094,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 20081,
											"end": 20103,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20050,
											"end": 20113,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "466"
										},
										{
											"begin": 20050,
											"end": 20113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20050,
											"end": 20113,
											"name": "tag",
											"source": 19,
											"value": "688"
										},
										{
											"begin": 20050,
											"end": 20113,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20040,
											"end": 20113,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20040,
											"end": 20113,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19996,
											"end": 20123,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19781,
											"end": 20130,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 19781,
											"end": 20130,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19781,
											"end": 20130,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19781,
											"end": 20130,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19781,
											"end": 20130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20136,
											"end": 20317,
											"name": "tag",
											"source": 19,
											"value": "467"
										},
										{
											"begin": 20136,
											"end": 20317,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20276,
											"end": 20309,
											"name": "PUSH",
											"source": 19,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 20272,
											"end": 20273,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20264,
											"end": 20270,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20260,
											"end": 20274,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20253,
											"end": 20310,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20136,
											"end": 20317,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20136,
											"end": 20317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20323,
											"end": 20689,
											"name": "tag",
											"source": 19,
											"value": "468"
										},
										{
											"begin": 20323,
											"end": 20689,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20465,
											"end": 20468,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20486,
											"end": 20553,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "691"
										},
										{
											"begin": 20550,
											"end": 20552,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 20545,
											"end": 20548,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 20486,
											"end": 20553,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "426"
										},
										{
											"begin": 20486,
											"end": 20553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20486,
											"end": 20553,
											"name": "tag",
											"source": 19,
											"value": "691"
										},
										{
											"begin": 20486,
											"end": 20553,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20479,
											"end": 20553,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20479,
											"end": 20553,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20562,
											"end": 20655,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "692"
										},
										{
											"begin": 20651,
											"end": 20654,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20562,
											"end": 20655,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "467"
										},
										{
											"begin": 20562,
											"end": 20655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20562,
											"end": 20655,
											"name": "tag",
											"source": 19,
											"value": "692"
										},
										{
											"begin": 20562,
											"end": 20655,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20680,
											"end": 20682,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 20675,
											"end": 20678,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20671,
											"end": 20683,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20664,
											"end": 20683,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20664,
											"end": 20683,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20323,
											"end": 20689,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20323,
											"end": 20689,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20323,
											"end": 20689,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20323,
											"end": 20689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20695,
											"end": 21114,
											"name": "tag",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 20695,
											"end": 21114,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20861,
											"end": 20865,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20899,
											"end": 20901,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 20888,
											"end": 20897,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20884,
											"end": 20902,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20876,
											"end": 20902,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20876,
											"end": 20902,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20948,
											"end": 20957,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 20942,
											"end": 20946,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 20938,
											"end": 20958,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 20934,
											"end": 20935,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20923,
											"end": 20932,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 20919,
											"end": 20936,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20912,
											"end": 20959,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20976,
											"end": 21107,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "694"
										},
										{
											"begin": 21102,
											"end": 21106,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 20976,
											"end": 21107,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "468"
										},
										{
											"begin": 20976,
											"end": 21107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20976,
											"end": 21107,
											"name": "tag",
											"source": 19,
											"value": "694"
										},
										{
											"begin": 20976,
											"end": 21107,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20968,
											"end": 21107,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20968,
											"end": 21107,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20695,
											"end": 21114,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20695,
											"end": 21114,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20695,
											"end": 21114,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20695,
											"end": 21114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21120,
											"end": 21261,
											"name": "tag",
											"source": 19,
											"value": "469"
										},
										{
											"begin": 21120,
											"end": 21261,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21169,
											"end": 21173,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21192,
											"end": 21195,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21184,
											"end": 21195,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21184,
											"end": 21195,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21215,
											"end": 21218,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21212,
											"end": 21213,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21205,
											"end": 21219,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 21249,
											"end": 21253,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 21246,
											"end": 21247,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21236,
											"end": 21254,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 21228,
											"end": 21254,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21228,
											"end": 21254,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21120,
											"end": 21261,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 21120,
											"end": 21261,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21120,
											"end": 21261,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21120,
											"end": 21261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21267,
											"end": 21360,
											"name": "tag",
											"source": 19,
											"value": "470"
										},
										{
											"begin": 21267,
											"end": 21360,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21304,
											"end": 21310,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21351,
											"end": 21353,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 21346,
											"end": 21348,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 21339,
											"end": 21344,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 21335,
											"end": 21349,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21331,
											"end": 21354,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 21321,
											"end": 21354,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21321,
											"end": 21354,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21267,
											"end": 21360,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 21267,
											"end": 21360,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21267,
											"end": 21360,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21267,
											"end": 21360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21366,
											"end": 21473,
											"name": "tag",
											"source": 19,
											"value": "471"
										},
										{
											"begin": 21366,
											"end": 21473,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21410,
											"end": 21418,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21460,
											"end": 21465,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21454,
											"end": 21458,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21450,
											"end": 21466,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 21429,
											"end": 21466,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21429,
											"end": 21466,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21366,
											"end": 21473,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 21366,
											"end": 21473,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 21366,
											"end": 21473,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21366,
											"end": 21473,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21366,
											"end": 21473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21479,
											"end": 21872,
											"name": "tag",
											"source": 19,
											"value": "472"
										},
										{
											"begin": 21479,
											"end": 21872,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21548,
											"end": 21554,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21598,
											"end": 21599,
											"name": "PUSH",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 21586,
											"end": 21596,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 21582,
											"end": 21600,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 21621,
											"end": 21718,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "699"
										},
										{
											"begin": 21651,
											"end": 21717,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21640,
											"end": 21649,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21621,
											"end": 21718,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "471"
										},
										{
											"begin": 21621,
											"end": 21718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21621,
											"end": 21718,
											"name": "tag",
											"source": 19,
											"value": "699"
										},
										{
											"begin": 21621,
											"end": 21718,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21739,
											"end": 21778,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "700"
										},
										{
											"begin": 21769,
											"end": 21777,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 21758,
											"end": 21767,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 21739,
											"end": 21778,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "471"
										},
										{
											"begin": 21739,
											"end": 21778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21739,
											"end": 21778,
											"name": "tag",
											"source": 19,
											"value": "700"
										},
										{
											"begin": 21739,
											"end": 21778,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21727,
											"end": 21778,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 21727,
											"end": 21778,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21811,
											"end": 21815,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 21807,
											"end": 21816,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 21800,
											"end": 21805,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 21796,
											"end": 21817,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 21787,
											"end": 21817,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 21787,
											"end": 21817,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21860,
											"end": 21864,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 21850,
											"end": 21858,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 21846,
											"end": 21865,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 21839,
											"end": 21844,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 21836,
											"end": 21866,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 21826,
											"end": 21866,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 21826,
											"end": 21866,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21555,
											"end": 21872,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21555,
											"end": 21872,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21479,
											"end": 21872,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 21479,
											"end": 21872,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 21479,
											"end": 21872,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21479,
											"end": 21872,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21479,
											"end": 21872,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21479,
											"end": 21872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21878,
											"end": 21938,
											"name": "tag",
											"source": 19,
											"value": "473"
										},
										{
											"begin": 21878,
											"end": 21938,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21906,
											"end": 21909,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21927,
											"end": 21932,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21920,
											"end": 21932,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21920,
											"end": 21932,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21878,
											"end": 21938,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 21878,
											"end": 21938,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21878,
											"end": 21938,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21878,
											"end": 21938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21944,
											"end": 22086,
											"name": "tag",
											"source": 19,
											"value": "474"
										},
										{
											"begin": 21944,
											"end": 22086,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21994,
											"end": 22003,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22027,
											"end": 22080,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "703"
										},
										{
											"begin": 22045,
											"end": 22079,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "704"
										},
										{
											"begin": 22054,
											"end": 22078,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "705"
										},
										{
											"begin": 22072,
											"end": 22077,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 22054,
											"end": 22078,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "423"
										},
										{
											"begin": 22054,
											"end": 22078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22054,
											"end": 22078,
											"name": "tag",
											"source": 19,
											"value": "705"
										},
										{
											"begin": 22054,
											"end": 22078,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22045,
											"end": 22079,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "473"
										},
										{
											"begin": 22045,
											"end": 22079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22045,
											"end": 22079,
											"name": "tag",
											"source": 19,
											"value": "704"
										},
										{
											"begin": 22045,
											"end": 22079,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22027,
											"end": 22080,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "423"
										},
										{
											"begin": 22027,
											"end": 22080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22027,
											"end": 22080,
											"name": "tag",
											"source": 19,
											"value": "703"
										},
										{
											"begin": 22027,
											"end": 22080,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22014,
											"end": 22080,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22014,
											"end": 22080,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21944,
											"end": 22086,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 21944,
											"end": 22086,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21944,
											"end": 22086,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21944,
											"end": 22086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22092,
											"end": 22167,
											"name": "tag",
											"source": 19,
											"value": "475"
										},
										{
											"begin": 22092,
											"end": 22167,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22135,
											"end": 22138,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22156,
											"end": 22161,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 22149,
											"end": 22161,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22149,
											"end": 22161,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22092,
											"end": 22167,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 22092,
											"end": 22167,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22092,
											"end": 22167,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22092,
											"end": 22167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22173,
											"end": 22442,
											"name": "tag",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 22173,
											"end": 22442,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22283,
											"end": 22322,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "708"
										},
										{
											"begin": 22314,
											"end": 22321,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 22283,
											"end": 22322,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "474"
										},
										{
											"begin": 22283,
											"end": 22322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22283,
											"end": 22322,
											"name": "tag",
											"source": 19,
											"value": "708"
										},
										{
											"begin": 22283,
											"end": 22322,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22344,
											"end": 22435,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "709"
										},
										{
											"begin": 22393,
											"end": 22434,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "710"
										},
										{
											"begin": 22417,
											"end": 22433,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22393,
											"end": 22434,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "475"
										},
										{
											"begin": 22393,
											"end": 22434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22393,
											"end": 22434,
											"name": "tag",
											"source": 19,
											"value": "710"
										},
										{
											"begin": 22393,
											"end": 22434,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22385,
											"end": 22391,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 22378,
											"end": 22382,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 22372,
											"end": 22383,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 22344,
											"end": 22435,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "472"
										},
										{
											"begin": 22344,
											"end": 22435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22344,
											"end": 22435,
											"name": "tag",
											"source": 19,
											"value": "709"
										},
										{
											"begin": 22344,
											"end": 22435,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22338,
											"end": 22342,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22331,
											"end": 22436,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 22249,
											"end": 22442,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22173,
											"end": 22442,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22173,
											"end": 22442,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22173,
											"end": 22442,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22173,
											"end": 22442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22448,
											"end": 22521,
											"name": "tag",
											"source": 19,
											"value": "477"
										},
										{
											"begin": 22448,
											"end": 22521,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22493,
											"end": 22496,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22448,
											"end": 22521,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22448,
											"end": 22521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22527,
											"end": 22716,
											"name": "tag",
											"source": 19,
											"value": "478"
										},
										{
											"begin": 22527,
											"end": 22716,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22604,
											"end": 22636,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "713"
										},
										{
											"begin": 22604,
											"end": 22636,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "477"
										},
										{
											"begin": 22604,
											"end": 22636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22604,
											"end": 22636,
											"name": "tag",
											"source": 19,
											"value": "713"
										},
										{
											"begin": 22604,
											"end": 22636,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22645,
											"end": 22710,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "714"
										},
										{
											"begin": 22703,
											"end": 22709,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 22695,
											"end": 22701,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 22689,
											"end": 22693,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 22645,
											"end": 22710,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 22645,
											"end": 22710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22645,
											"end": 22710,
											"name": "tag",
											"source": 19,
											"value": "714"
										},
										{
											"begin": 22645,
											"end": 22710,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22580,
											"end": 22716,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22527,
											"end": 22716,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22527,
											"end": 22716,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22527,
											"end": 22716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22722,
											"end": 22908,
											"name": "tag",
											"source": 19,
											"value": "479"
										},
										{
											"begin": 22722,
											"end": 22908,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22782,
											"end": 22902,
											"name": "tag",
											"source": 19,
											"value": "716"
										},
										{
											"begin": 22782,
											"end": 22902,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22799,
											"end": 22802,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 22792,
											"end": 22797,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 22789,
											"end": 22803,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 22782,
											"end": 22902,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 22782,
											"end": 22902,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "718"
										},
										{
											"begin": 22782,
											"end": 22902,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "719"
										},
										{
											"begin": 22890,
											"end": 22891,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22883,
											"end": 22888,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "478"
										},
										{
											"begin": 22853,
											"end": 22892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "tag",
											"source": 19,
											"value": "719"
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22826,
											"end": 22827,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 22819,
											"end": 22824,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 22815,
											"end": 22828,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22806,
											"end": 22828,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22806,
											"end": 22828,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22782,
											"end": 22902,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "716"
										},
										{
											"begin": 22782,
											"end": 22902,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22782,
											"end": 22902,
											"name": "tag",
											"source": 19,
											"value": "718"
										},
										{
											"begin": 22782,
											"end": 22902,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22722,
											"end": 22908,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22722,
											"end": 22908,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22722,
											"end": 22908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22914,
											"end": 23457,
											"name": "tag",
											"source": 19,
											"value": "480"
										},
										{
											"begin": 22914,
											"end": 23457,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23015,
											"end": 23017,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 23010,
											"end": 23013,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23007,
											"end": 23018,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 23004,
											"end": 23450,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 23004,
											"end": 23450,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "721"
										},
										{
											"begin": 23004,
											"end": 23450,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 23049,
											"end": 23087,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "722"
										},
										{
											"begin": 23081,
											"end": 23086,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23049,
											"end": 23087,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "469"
										},
										{
											"begin": 23049,
											"end": 23087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23049,
											"end": 23087,
											"name": "tag",
											"source": 19,
											"value": "722"
										},
										{
											"begin": 23049,
											"end": 23087,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23133,
											"end": 23162,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "723"
										},
										{
											"begin": 23151,
											"end": 23161,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 23133,
											"end": 23162,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "470"
										},
										{
											"begin": 23133,
											"end": 23162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23133,
											"end": 23162,
											"name": "tag",
											"source": 19,
											"value": "723"
										},
										{
											"begin": 23133,
											"end": 23162,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23123,
											"end": 23131,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23119,
											"end": 23163,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23316,
											"end": 23318,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 23304,
											"end": 23314,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 23301,
											"end": 23319,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 23298,
											"end": 23347,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 23298,
											"end": 23347,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "724"
										},
										{
											"begin": 23298,
											"end": 23347,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 23337,
											"end": 23345,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23322,
											"end": 23345,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23322,
											"end": 23345,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23298,
											"end": 23347,
											"name": "tag",
											"source": 19,
											"value": "724"
										},
										{
											"begin": 23298,
											"end": 23347,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23360,
											"end": 23440,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "725"
										},
										{
											"begin": 23416,
											"end": 23438,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "726"
										},
										{
											"begin": 23434,
											"end": 23437,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 23416,
											"end": 23438,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "470"
										},
										{
											"begin": 23416,
											"end": 23438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23416,
											"end": 23438,
											"name": "tag",
											"source": 19,
											"value": "726"
										},
										{
											"begin": 23416,
											"end": 23438,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23406,
											"end": 23414,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 23402,
											"end": 23439,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23389,
											"end": 23400,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23360,
											"end": 23440,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "479"
										},
										{
											"begin": 23360,
											"end": 23440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23360,
											"end": 23440,
											"name": "tag",
											"source": 19,
											"value": "725"
										},
										{
											"begin": 23360,
											"end": 23440,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23019,
											"end": 23450,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23019,
											"end": 23450,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23004,
											"end": 23450,
											"name": "tag",
											"source": 19,
											"value": "721"
										},
										{
											"begin": 23004,
											"end": 23450,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22914,
											"end": 23457,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22914,
											"end": 23457,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22914,
											"end": 23457,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22914,
											"end": 23457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23463,
											"end": 23580,
											"name": "tag",
											"source": 19,
											"value": "481"
										},
										{
											"begin": 23463,
											"end": 23580,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23517,
											"end": 23525,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23567,
											"end": 23572,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23561,
											"end": 23565,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23557,
											"end": 23573,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 23536,
											"end": 23573,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23536,
											"end": 23573,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23463,
											"end": 23580,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 23463,
											"end": 23580,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 23463,
											"end": 23580,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23463,
											"end": 23580,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23463,
											"end": 23580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23586,
											"end": 23755,
											"name": "tag",
											"source": 19,
											"value": "482"
										},
										{
											"begin": 23586,
											"end": 23755,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23630,
											"end": 23636,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23663,
											"end": 23714,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "729"
										},
										{
											"begin": 23711,
											"end": 23712,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23707,
											"end": 23713,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 23699,
											"end": 23704,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 23696,
											"end": 23697,
											"name": "PUSH",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 23692,
											"end": 23705,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 23663,
											"end": 23714,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "481"
										},
										{
											"begin": 23663,
											"end": 23714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23663,
											"end": 23714,
											"name": "tag",
											"source": 19,
											"value": "729"
										},
										{
											"begin": 23663,
											"end": 23714,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23659,
											"end": 23715,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 23744,
											"end": 23748,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 23738,
											"end": 23742,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 23734,
											"end": 23749,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 23724,
											"end": 23749,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 23724,
											"end": 23749,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23637,
											"end": 23755,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23586,
											"end": 23755,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 23586,
											"end": 23755,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 23586,
											"end": 23755,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23586,
											"end": 23755,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23586,
											"end": 23755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23760,
											"end": 24055,
											"name": "tag",
											"source": 19,
											"value": "483"
										},
										{
											"begin": 23760,
											"end": 24055,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23836,
											"end": 23840,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23982,
											"end": 24011,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "731"
										},
										{
											"begin": 24007,
											"end": 24010,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 24001,
											"end": 24005,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 23982,
											"end": 24011,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "482"
										},
										{
											"begin": 23982,
											"end": 24011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23982,
											"end": 24011,
											"name": "tag",
											"source": 19,
											"value": "731"
										},
										{
											"begin": 23982,
											"end": 24011,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23974,
											"end": 24011,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 23974,
											"end": 24011,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24044,
											"end": 24047,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24041,
											"end": 24042,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 24037,
											"end": 24048,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 24031,
											"end": 24035,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24028,
											"end": 24049,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 24020,
											"end": 24049,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24020,
											"end": 24049,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23760,
											"end": 24055,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 23760,
											"end": 24055,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 23760,
											"end": 24055,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23760,
											"end": 24055,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23760,
											"end": 24055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24060,
											"end": 25455,
											"name": "tag",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 24060,
											"end": 25455,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24177,
											"end": 24214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "733"
										},
										{
											"begin": 24210,
											"end": 24213,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24177,
											"end": 24214,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "425"
										},
										{
											"begin": 24177,
											"end": 24214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24177,
											"end": 24214,
											"name": "tag",
											"source": 19,
											"value": "733"
										},
										{
											"begin": 24177,
											"end": 24214,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24279,
											"end": 24297,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24271,
											"end": 24277,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24268,
											"end": 24298,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 24265,
											"end": 24321,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 24265,
											"end": 24321,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "734"
										},
										{
											"begin": 24265,
											"end": 24321,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 24301,
											"end": 24319,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "735"
										},
										{
											"begin": 24301,
											"end": 24319,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "371"
										},
										{
											"begin": 24301,
											"end": 24319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24301,
											"end": 24319,
											"name": "tag",
											"source": 19,
											"value": "735"
										},
										{
											"begin": 24301,
											"end": 24319,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24265,
											"end": 24321,
											"name": "tag",
											"source": 19,
											"value": "734"
										},
										{
											"begin": 24265,
											"end": 24321,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24345,
											"end": 24383,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "736"
										},
										{
											"begin": 24377,
											"end": 24381,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24371,
											"end": 24382,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 24345,
											"end": 24383,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "154"
										},
										{
											"begin": 24345,
											"end": 24383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24345,
											"end": 24383,
											"name": "tag",
											"source": 19,
											"value": "736"
										},
										{
											"begin": 24345,
											"end": 24383,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24430,
											"end": 24497,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "737"
										},
										{
											"begin": 24490,
											"end": 24496,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24482,
											"end": 24488,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24476,
											"end": 24480,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 24430,
											"end": 24497,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "480"
										},
										{
											"begin": 24430,
											"end": 24497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24430,
											"end": 24497,
											"name": "tag",
											"source": 19,
											"value": "737"
										},
										{
											"begin": 24430,
											"end": 24497,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24524,
											"end": 24525,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24548,
											"end": 24552,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 24535,
											"end": 24552,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24535,
											"end": 24552,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24580,
											"end": 24582,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 24572,
											"end": 24578,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 24569,
											"end": 24583,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 24597,
											"end": 24598,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 24592,
											"end": 25210,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24592,
											"end": 25210,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 24592,
											"end": 25210,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "739"
										},
										{
											"begin": 24592,
											"end": 25210,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 25254,
											"end": 25255,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 25271,
											"end": 25277,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 25268,
											"end": 25345,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 25268,
											"end": 25345,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "740"
										},
										{
											"begin": 25268,
											"end": 25345,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 25320,
											"end": 25329,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25315,
											"end": 25318,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 25311,
											"end": 25330,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25305,
											"end": 25331,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 25296,
											"end": 25331,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 25296,
											"end": 25331,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25268,
											"end": 25345,
											"name": "tag",
											"source": 19,
											"value": "740"
										},
										{
											"begin": 25268,
											"end": 25345,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25371,
											"end": 25438,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "741"
										},
										{
											"begin": 25431,
											"end": 25437,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 25424,
											"end": 25429,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25371,
											"end": 25438,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "483"
										},
										{
											"begin": 25371,
											"end": 25438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25371,
											"end": 25438,
											"name": "tag",
											"source": 19,
											"value": "741"
										},
										{
											"begin": 25371,
											"end": 25438,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25365,
											"end": 25369,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 25358,
											"end": 25439,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 25227,
											"end": 25449,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24562,
											"end": 25449,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "738"
										},
										{
											"begin": 24562,
											"end": 25449,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24592,
											"end": 25210,
											"name": "tag",
											"source": 19,
											"value": "739"
										},
										{
											"begin": 24592,
											"end": 25210,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24644,
											"end": 24648,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 24640,
											"end": 24649,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 24632,
											"end": 24638,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 24628,
											"end": 24650,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 24678,
											"end": 24715,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "742"
										},
										{
											"begin": 24710,
											"end": 24714,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 24678,
											"end": 24715,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "469"
										},
										{
											"begin": 24678,
											"end": 24715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24678,
											"end": 24715,
											"name": "tag",
											"source": 19,
											"value": "742"
										},
										{
											"begin": 24678,
											"end": 24715,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24737,
											"end": 24738,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24751,
											"end": 24959,
											"name": "tag",
											"source": 19,
											"value": "743"
										},
										{
											"begin": 24751,
											"end": 24959,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24765,
											"end": 24772,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24762,
											"end": 24763,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24759,
											"end": 24773,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 24751,
											"end": 24959,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 24751,
											"end": 24959,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "745"
										},
										{
											"begin": 24751,
											"end": 24959,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 24844,
											"end": 24853,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 24839,
											"end": 24842,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 24835,
											"end": 24854,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24829,
											"end": 24855,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 24821,
											"end": 24827,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24814,
											"end": 24856,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 24895,
											"end": 24896,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 24887,
											"end": 24893,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24883,
											"end": 24897,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24873,
											"end": 24897,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 24873,
											"end": 24897,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24942,
											"end": 24944,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 24931,
											"end": 24940,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 24927,
											"end": 24945,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24914,
											"end": 24945,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 24914,
											"end": 24945,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24788,
											"end": 24792,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 24785,
											"end": 24786,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24781,
											"end": 24793,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24776,
											"end": 24793,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24776,
											"end": 24793,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24751,
											"end": 24959,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "743"
										},
										{
											"begin": 24751,
											"end": 24959,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24751,
											"end": 24959,
											"name": "tag",
											"source": 19,
											"value": "745"
										},
										{
											"begin": 24751,
											"end": 24959,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24987,
											"end": 24993,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 24978,
											"end": 24985,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 24975,
											"end": 24994,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 24972,
											"end": 25151,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 24972,
											"end": 25151,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "746"
										},
										{
											"begin": 24972,
											"end": 25151,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 25045,
											"end": 25054,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 25040,
											"end": 25043,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 25036,
											"end": 25055,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25030,
											"end": 25056,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 25088,
											"end": 25136,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "747"
										},
										{
											"begin": 25130,
											"end": 25134,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 25122,
											"end": 25128,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 25118,
											"end": 25135,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 25107,
											"end": 25116,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25088,
											"end": 25136,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "482"
										},
										{
											"begin": 25088,
											"end": 25136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25088,
											"end": 25136,
											"name": "tag",
											"source": 19,
											"value": "747"
										},
										{
											"begin": 25088,
											"end": 25136,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25080,
											"end": 25086,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 25073,
											"end": 25137,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 24995,
											"end": 25151,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24972,
											"end": 25151,
											"name": "tag",
											"source": 19,
											"value": "746"
										},
										{
											"begin": 24972,
											"end": 25151,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25197,
											"end": 25198,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 25193,
											"end": 25194,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 25185,
											"end": 25191,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 25181,
											"end": 25195,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 25177,
											"end": 25199,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25171,
											"end": 25175,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 25164,
											"end": 25200,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 24599,
											"end": 25210,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24599,
											"end": 25210,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24599,
											"end": 25210,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24562,
											"end": 25449,
											"name": "tag",
											"source": 19,
											"value": "738"
										},
										{
											"begin": 24562,
											"end": 25449,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24562,
											"end": 25449,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24152,
											"end": 25455,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24152,
											"end": 25455,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24152,
											"end": 25455,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24060,
											"end": 25455,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24060,
											"end": 25455,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24060,
											"end": 25455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25461,
											"end": 25793,
											"name": "tag",
											"source": 19,
											"value": "365"
										},
										{
											"begin": 25461,
											"end": 25793,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25582,
											"end": 25586,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 25620,
											"end": 25622,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 25609,
											"end": 25618,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25605,
											"end": 25623,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25597,
											"end": 25623,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 25597,
											"end": 25623,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25633,
											"end": 25704,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "749"
										},
										{
											"begin": 25701,
											"end": 25702,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 25690,
											"end": 25699,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 25686,
											"end": 25703,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25677,
											"end": 25683,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 25633,
											"end": 25704,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "434"
										},
										{
											"begin": 25633,
											"end": 25704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25633,
											"end": 25704,
											"name": "tag",
											"source": 19,
											"value": "749"
										},
										{
											"begin": 25633,
											"end": 25704,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25714,
											"end": 25786,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "750"
										},
										{
											"begin": 25782,
											"end": 25784,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 25771,
											"end": 25780,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 25767,
											"end": 25785,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25758,
											"end": 25764,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 25714,
											"end": 25786,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "424"
										},
										{
											"begin": 25714,
											"end": 25786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25714,
											"end": 25786,
											"name": "tag",
											"source": 19,
											"value": "750"
										},
										{
											"begin": 25714,
											"end": 25786,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25461,
											"end": 25793,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 25461,
											"end": 25793,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 25461,
											"end": 25793,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25461,
											"end": 25793,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25461,
											"end": 25793,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25461,
											"end": 25793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25799,
											"end": 25979,
											"name": "tag",
											"source": 19,
											"value": "377"
										},
										{
											"begin": 25799,
											"end": 25979,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25847,
											"end": 25924,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25844,
											"end": 25845,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 25837,
											"end": 25925,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 25944,
											"end": 25948,
											"name": "PUSH",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 25941,
											"end": 25942,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 25934,
											"end": 25949,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 25968,
											"end": 25972,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 25965,
											"end": 25966,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 25958,
											"end": 25973,
											"name": "REVERT",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_marketPlaceAddress()": "0a4fa1dd",
							"_masterAddress()": "6075851e",
							"_mintPrice()": "0387da42",
							"_tokenIdCounter()": "84c4bd4b",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mintNFT(string)": "fb37e883",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setMarketPlaceAddress(address)": "cc98ef96",
							"setMasterAddress(address)": "5d06a611",
							"setMintPrice(uint256)": "f4a0a528",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"withDraw()": "0fdb1c10"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mintPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"TokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_marketPlaceAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_masterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_mintPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_tokenIdCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketPlaceAddress\",\"type\":\"address\"}],\"name\":\"setMarketPlaceAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"masterAddress\",\"type\":\"address\"}],\"name\":\"setMasterAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mintPrice\",\"type\":\"uint256\"}],\"name\":\"setMintPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withDraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFT.sol\":\"MQNFT\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f\",\"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/NFT.sol\":{\"keccak256\":\"0xed9f7693e1955b1bba43eef616bef780bc1b83f41f7e61aa92a7a86fc4953605\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e04045451f3d6b1ac0b93cc184de7302a4b7878d9d3d3bdb3089462c69844c7\",\"dweb:/ipfs/QmPB3Wqv7G49qywNrU9hyc32k6b4K2URUeduVMcr6bknSG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 688,
								"contract": "contracts/NFT.sol:MQNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 690,
								"contract": "contracts/NFT.sol:MQNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 694,
								"contract": "contracts/NFT.sol:MQNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 698,
								"contract": "contracts/NFT.sol:MQNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 702,
								"contract": "contracts/NFT.sol:MQNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 708,
								"contract": "contracts/NFT.sol:MQNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1827,
								"contract": "contracts/NFT.sol:MQNFT",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 347,
								"contract": "contracts/NFT.sol:MQNFT",
								"label": "_owner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 268,
								"contract": "contracts/NFT.sol:MQNFT",
								"label": "_status",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 337,
								"contract": "contracts/NFT.sol:MQNFT",
								"label": "__gap",
								"offset": 0,
								"slot": "9",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 3446,
								"contract": "contracts/NFT.sol:MQNFT",
								"label": "_tokenIdCounter",
								"offset": 0,
								"slot": "58",
								"type": "t_uint256"
							},
							{
								"astId": 3448,
								"contract": "contracts/NFT.sol:MQNFT",
								"label": "_mintPrice",
								"offset": 0,
								"slot": "59",
								"type": "t_uint256"
							},
							{
								"astId": 3450,
								"contract": "contracts/NFT.sol:MQNFT",
								"label": "_masterAddress",
								"offset": 0,
								"slot": "60",
								"type": "t_address"
							},
							{
								"astId": 3452,
								"contract": "contracts/NFT.sol:MQNFT",
								"label": "_marketPlaceAddress",
								"offset": 0,
								"slot": "61",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							253
						]
					},
					"id": 254,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 253,
							"linearizedBaseContracts": [
								253
							],
							"name": "Initializable",
							"nameLocation": "2367:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:0",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "2813:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 5,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "2950:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 8,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:0",
									"nodeType": "StructDefinition",
									"scope": 253,
									"src": "2685:290:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 13,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 253,
									"src": "3098:115:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 11,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:0",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 16,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:0"
									},
									"src": "3285:30:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:0",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 19,
									"name": "NotInitializing",
									"nameLocation": "3389:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:0"
									},
									"src": "3383:24:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:0",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 24,
									"name": "Initialized",
									"nameLocation": "3514:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "3526:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 21,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:0"
									},
									"src": "3508:34:0"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "4092:1081:0",
										"statements": [
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4158:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 28,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 27,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "4158:20:0"
															},
															"referencedDeclaration": 10,
															"src": "4158:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 32,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 30,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "4191:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:0"
											},
											{
												"assignments": [
													34
												],
												"declarations": [
													{
														"constant": false,
														"id": 34,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4279:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 33,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 38,
												"initialValue": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:0",
													"subExpression": {
														"expression": {
															"id": 35,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4302:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "4302:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:0"
											},
											{
												"assignments": [
													40
												],
												"declarations": [
													{
														"constant": false,
														"id": 40,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4327:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 39,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 43,
												"initialValue": {
													"expression": {
														"id": 41,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "4348:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "4348:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:0"
											},
											{
												"assignments": [
													45
												],
												"declarations": [
													{
														"constant": false,
														"id": 45,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4706:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 44,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 51,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 46,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4726:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 49,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "4746:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:0"
											},
											{
												"assignments": [
													53
												],
												"declarations": [
													{
														"constant": false,
														"id": 53,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4770:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 52,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 66,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 54,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4790:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 59,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$253",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$253",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 57,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:0",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:0",
														"subExpression": {
															"id": 67,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "4856:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:0",
														"subExpression": {
															"id": 69,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "4873:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 76,
												"nodeType": "IfStatement",
												"src": "4851:91:0",
												"trueBody": {
													"id": 75,
													"nodeType": "Block",
													"src": "4887:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 72,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "4908:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 74,
															"nodeType": "RevertStatement",
															"src": "4901:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 77,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4951:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "4951:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:0"
											},
											{
												"condition": {
													"id": 83,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "4983:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 91,
												"nodeType": "IfStatement",
												"src": "4979:67:0",
												"trueBody": {
													"id": 90,
													"nodeType": "Block",
													"src": "4999:47:0",
													"statements": [
														{
															"expression": {
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 84,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5013:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 86,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5013:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 87,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 89,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:0"
														}
													]
												}
											},
											{
												"id": 92,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:0"
											},
											{
												"condition": {
													"id": 93,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "5070:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 105,
												"nodeType": "IfStatement",
												"src": "5066:101:0",
												"trueBody": {
													"id": 104,
													"nodeType": "Block",
													"src": "5086:81:0",
													"statements": [
														{
															"expression": {
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 94,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5100:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 96,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5100:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 99,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 100,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "5142:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 103,
															"nodeType": "EmitStatement",
															"src": "5137:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:0",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 107,
									"name": "initializer",
									"nameLocation": "4078:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:0"
									},
									"src": "4069:1104:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "6291:392:0",
										"statements": [
											{
												"assignments": [
													114
												],
												"declarations": [
													{
														"constant": false,
														"id": 114,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 153,
														"src": "6357:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 113,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 112,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "6357:20:0"
															},
															"referencedDeclaration": 10,
															"src": "6357:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 117,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 115,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "6390:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 118,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6431:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6431:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 120,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "6450:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:0",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 6,
															"src": "6450:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 122,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6468:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "6427:105:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "6477:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 125,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "6498:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 127,
															"nodeType": "RevertStatement",
															"src": "6491:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 130,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6541:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 132,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "6541:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 133,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "6558:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:0"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 136,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6575:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6575:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:0"
											},
											{
												"id": 142,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:0"
											},
											{
												"expression": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 143,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6618:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6618:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 150,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6668:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 149,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "6656:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "EmitStatement",
												"src": "6651:25:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:0",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 154,
									"name": "reinitializer",
									"nameLocation": "6261:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "6275:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 109,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:0"
									},
									"src": "6252:431:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "6921:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 157,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "6931:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:0"
											},
											{
												"id": 160,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:0"
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:0",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 162,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:0"
									},
									"src": "6893:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "7136:89:0",
										"statements": [
											{
												"condition": {
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:0",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 166,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "7151:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 173,
												"nodeType": "IfStatement",
												"src": "7146:73:0",
												"trueBody": {
													"id": 172,
													"nodeType": "Block",
													"src": "7170:49:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 169,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "7191:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 171,
															"nodeType": "RevertStatement",
															"src": "7184:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:0",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:0"
									},
									"scope": 253,
									"src": "7084:141:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "7760:373:0",
										"statements": [
											{
												"assignments": [
													181
												],
												"declarations": [
													{
														"constant": false,
														"id": 181,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "7826:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 180,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 179,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "7826:20:0"
															},
															"referencedDeclaration": 10,
															"src": "7826:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 182,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "7859:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:0"
											},
											{
												"condition": {
													"expression": {
														"id": 185,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "7900:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "7900:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 191,
												"nodeType": "IfStatement",
												"src": "7896:76:0",
												"trueBody": {
													"id": 190,
													"nodeType": "Block",
													"src": "7917:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 187,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "7938:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 189,
															"nodeType": "RevertStatement",
															"src": "7931:30:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 192,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "7985:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "7985:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 195,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 194,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 219,
												"nodeType": "IfStatement",
												"src": "7981:146:0",
												"trueBody": {
													"id": 218,
													"nodeType": "Block",
													"src": "8021:106:0",
													"statements": [
														{
															"expression": {
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 200,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "8035:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:0",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6,
																	"src": "8035:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 204,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 203,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:0",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 209,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 213,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 212,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:0",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 211,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:0",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 210,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "8087:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 217,
															"nodeType": "EmitStatement",
															"src": "8082:34:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:0",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:0"
									},
									"scope": 253,
									"src": "7711:422:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "8308:63:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 227,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "8325:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "8325:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 226,
												"id": 230,
												"nodeType": "Return",
												"src": "8318:46:0"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:0",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "8300:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 224,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:0"
									},
									"scope": 253,
									"src": "8243:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "8543:64:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 238,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "8560:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "8560:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 237,
												"id": 241,
												"nodeType": "Return",
												"src": "8553:47:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:0",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "8537:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:0"
									},
									"scope": 253,
									"src": "8487:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "8827:80:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:0",
													"nodeType": "YulBlock",
													"src": "8846:55:0",
													"statements": [
														{
															"nativeSrc": "8860:31:0",
															"nodeType": "YulAssignment",
															"src": "8860:31:0",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:0",
																"nodeType": "YulIdentifier",
																"src": "8870:21:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 248,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 13,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:0",
														"valueSize": 1
													}
												],
												"id": 250,
												"nodeType": "InlineAssembly",
												"src": "8837:64:0"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:0",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:0"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "8795:30:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 247,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 246,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "8795:20:0"
													},
													"referencedDeclaration": 10,
													"src": "8795:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:0"
									},
									"scope": 253,
									"src": "8737:170:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 254,
							"src": "2349:6560:0",
							"usedErrors": [
								16,
								19
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "113:8797:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
					"exportedSymbols": {
						"Initializable": [
							253
						],
						"ReentrancyGuardUpgradeable": [
							338
						]
					},
					"id": 339,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 255,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 257,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 339,
							"sourceUnit": 254,
							"src": "136:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 256,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 253,
										"src": "144:13:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 259,
										"name": "Initializable",
										"nameLocations": [
											"1000:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 253,
										"src": "1000:13:1"
									},
									"id": 260,
									"nodeType": "InheritanceSpecifier",
									"src": "1000:13:1"
								}
							],
							"canonicalName": "ReentrancyGuardUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 258,
								"nodeType": "StructuredDocumentation",
								"src": "201:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 338,
							"linearizedBaseContracts": [
								338,
								253
							],
							"name": "ReentrancyGuardUpgradeable",
							"nameLocation": "970:26:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 263,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1793:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 338,
									"src": "1768:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 261,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1768:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 262,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1808:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 266,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1840:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 338,
									"src": "1815:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 264,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1815:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 265,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1851:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 268,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1875:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 338,
									"src": "1859:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 267,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1859:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "1949:51:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 273,
														"name": "__ReentrancyGuard_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "1959:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1959:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "1959:34:1"
											}
										]
									},
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 271,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 270,
												"name": "onlyInitializing",
												"nameLocations": [
													"1932:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "1932:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1932:16:1"
										}
									],
									"name": "__ReentrancyGuard_init",
									"nameLocation": "1898:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1920:2:1"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1949:0:1"
									},
									"scope": 338,
									"src": "1889:111:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "2076:39:1",
										"statements": [
											{
												"expression": {
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 282,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "2086:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 283,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "2096:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2086:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "2086:22:1"
											}
										]
									},
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 280,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 279,
												"name": "onlyInitializing",
												"nameLocations": [
													"2059:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "2059:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2059:16:1"
										}
									],
									"name": "__ReentrancyGuard_init_unchained",
									"nameLocation": "2015:32:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2047:2:1"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2076:0:1"
									},
									"scope": 338,
									"src": "2006:109:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "2516:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "2526:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2526:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 292,
												"nodeType": "ExpressionStatement",
												"src": "2526:21:1"
											},
											{
												"id": 293,
												"nodeType": "PlaceholderStatement",
												"src": "2557:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 294,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "2568:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2568:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "2568:20:1"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "2121:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 298,
									"name": "nonReentrant",
									"nameLocation": "2501:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2513:2:1"
									},
									"src": "2492:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "2640:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 302,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "2733:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 303,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "2744:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2733:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2754:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2725:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2725:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "2725:63:1"
											},
											{
												"expression": {
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 308,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "2863:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 309,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "2873:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2863:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "2863:18:1"
											}
										]
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2610:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2629:2:1"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:0:1"
									},
									"scope": 338,
									"src": "2601:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "2932:171:1",
										"statements": [
											{
												"expression": {
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 316,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "3074:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 317,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "3084:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3074:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "3074:22:1"
											}
										]
									},
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2903:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2921:2:1"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2932:0:1"
									},
									"scope": 338,
									"src": "2894:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "3346:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 327,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "3363:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 328,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3374:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3363:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 326,
												"id": 330,
												"nodeType": "Return",
												"src": "3356:26:1"
											}
										]
									},
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "3109:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3291:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3314:2:1"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "3340:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3340:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:6:1"
									},
									"scope": 338,
									"src": "3282:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "3395:254:1",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 337,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3674:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 338,
									"src": "3654:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 334,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3654:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 336,
										"length": {
											"hexValue": "3439",
											"id": 335,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3662:2:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3654:11:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 339,
							"src": "952:2730:1",
							"usedErrors": [
								16,
								19
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "112:3571:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1983
						],
						"Ownable": [
							486
						]
					},
					"id": 487,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 340,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 342,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 487,
							"sourceUnit": 1984,
							"src": "128:45:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 341,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1983,
										"src": "136:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 344,
										"name": "Context",
										"nameLocations": [
											"692:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1983,
										"src": "692:7:2"
									},
									"id": 345,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:2"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 343,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 486,
							"linearizedBaseContracts": [
								486,
								1983
							],
							"name": "Ownable",
							"nameLocation": "681:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 347,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 486,
									"src": "706:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 346,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:2",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 352,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "858:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:2"
									},
									"src": "825:50:2"
								},
								{
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:2",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 357,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "994:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:2"
									},
									"src": "968:41:2"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 363,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1042:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1073:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:2"
									},
									"src": "1015:84:2"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "1259:153:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 369,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "1273:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 370,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 383,
												"nodeType": "IfStatement",
												"src": "1269:95:2",
												"trueBody": {
													"id": 382,
													"nodeType": "Block",
													"src": "1301:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 378,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 376,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 375,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "1322:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 381,
															"nodeType": "RevertStatement",
															"src": "1315:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 385,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "1392:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 384,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "1373:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:2",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 389,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "1237:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:2"
									},
									"scope": 486,
									"src": "1225:187:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "1521:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 392,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "1531:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 394,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:2"
											},
											{
												"id": 395,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:2"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 397,
									"name": "onlyOwner",
									"nameLocation": "1509:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:2"
									},
									"src": "1500:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "1693:30:2",
										"statements": [
											{
												"expression": {
													"id": 403,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 347,
													"src": "1710:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 402,
												"id": 404,
												"nodeType": "Return",
												"src": "1703:13:2"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:2"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "1684:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:2"
									},
									"scope": 486,
									"src": "1638:85:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "1841:117:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 410,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "1855:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 412,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1965,
															"src": "1866:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 421,
												"nodeType": "IfStatement",
												"src": "1851:101:2",
												"trueBody": {
													"id": 420,
													"nodeType": "Block",
													"src": "1880:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 416,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1965,
																			"src": "1928:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 415,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "1901:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 419,
															"nodeType": "RevertStatement",
															"src": "1894:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:2",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:2"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:2"
									},
									"scope": 486,
									"src": "1796:162:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "2347:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 430,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 429,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "2357:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:2"
											}
										]
									},
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 427,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 426,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 397,
												"src": "2337:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:2"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:2"
									},
									"scope": 486,
									"src": "2293:101:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "2613:145:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 445,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "2627:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 446,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 459,
												"nodeType": "IfStatement",
												"src": "2623:91:2",
												"trueBody": {
													"id": 458,
													"nodeType": "Block",
													"src": "2651:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 454,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 452,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 451,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "2672:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 457,
															"nodeType": "RevertStatement",
															"src": "2665:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 461,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "2742:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 460,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "2723:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:2"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 443,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 442,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 397,
												"src": "2603:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2570:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:2"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:2"
									},
									"scope": 486,
									"src": "2543:215:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "2975:124:2",
										"statements": [
											{
												"assignments": [
													472
												],
												"declarations": [
													{
														"constant": false,
														"id": 472,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 484,
														"src": "2985:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 471,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 474,
												"initialValue": {
													"id": 473,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 347,
													"src": "3004:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:2"
											},
											{
												"expression": {
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 475,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "3020:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 476,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "3029:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 480,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "3073:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 481,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "3083:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 479,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "3052:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 483,
												"nodeType": "EmitStatement",
												"src": "3047:45:2"
											}
										]
									},
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "2940:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:2"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:2"
									},
									"scope": 486,
									"src": "2912:187:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 487,
							"src": "663:2438:2",
							"usedErrors": [
								352,
								357
							],
							"usedEvents": [
								363
							]
						}
					],
					"src": "102:3000:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2274
						]
					},
					"id": 491,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 488,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 490,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 491,
							"sourceUnit": 2275,
							"src": "132:59:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 489,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2274,
										"src": "140:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							2274
						],
						"IERC4906": [
							514
						],
						"IERC721": [
							1781
						]
					},
					"id": 515,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 492,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 494,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 491,
							"src": "133:38:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 493,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2274,
										"src": "141:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 496,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 519,
							"src": "172:38:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 495,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1781,
										"src": "180:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 498,
										"name": "IERC165",
										"nameLocations": [
											"279:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2274,
										"src": "279:7:4"
									},
									"id": 499,
									"nodeType": "InheritanceSpecifier",
									"src": "279:7:4"
								},
								{
									"baseName": {
										"id": 500,
										"name": "IERC721",
										"nameLocations": [
											"288:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1781,
										"src": "288:7:4"
									},
									"id": 501,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:4"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 497,
								"nodeType": "StructuredDocumentation",
								"src": "212:45:4",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 514,
							"linearizedBaseContracts": [
								514,
								1781,
								2274
							],
							"name": "IERC4906",
							"nameLocation": "267:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "302:201:4",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 506,
									"name": "MetadataUpdate",
									"nameLocation": "514:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "537:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "529:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:18:4"
									},
									"src": "508:39:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "553:212:4",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 513,
									"name": "BatchMetadataUpdate",
									"nameLocation": "776:19:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "804:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "796:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "826:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "818:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:42:4"
									},
									"src": "770:68:4"
								}
							],
							"scope": 515,
							"src": "257:583:4",
							"usedErrors": [],
							"usedEvents": [
								506,
								513,
								1680,
								1689,
								1698
							]
						}
					],
					"src": "107:734:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							1781
						]
					},
					"id": 519,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 516,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 518,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 519,
							"sourceUnit": 1782,
							"src": "132:52:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 517,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1781,
										"src": "140:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:79:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							655
						],
						"IERC20Errors": [
							560
						],
						"IERC721Errors": [
							608
						]
					},
					"id": 656,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 520,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 521,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:6",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 560,
							"linearizedBaseContracts": [
								560
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:6",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 530,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "652:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "668:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "685:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:6"
									},
									"src": "621:80:6"
								},
								{
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:6",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 535,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "889:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:6"
									},
									"src": "864:41:6"
								},
								{
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:6",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 540,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "1102:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:6"
									},
									"src": "1075:45:6"
								},
								{
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:6",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 549,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1509:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1526:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1545:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:6"
									},
									"src": "1476:85:6"
								},
								{
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:6",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 554,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "1773:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:6"
									},
									"src": "1746:45:6"
								},
								{
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:6",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 559,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "2023:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:6"
									},
									"src": "1997:43:6"
								}
							],
							"scope": 656,
							"src": "278:1764:6",
							"usedErrors": [
								530,
								535,
								540,
								549,
								554,
								559
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 561,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:6",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 608,
							"linearizedBaseContracts": [
								608
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:6",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 566,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "2465:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:6"
									},
									"src": "2440:40:6"
								},
								{
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:6",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 571,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "2652:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:6"
									},
									"src": "2623:46:6"
								},
								{
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:6",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 580,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2996:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "3012:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "3029:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:6"
									},
									"src": "2969:75:6"
								},
								{
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:6",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 585,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "3233:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:6"
									},
									"src": "3207:42:6"
								},
								{
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:6",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 590,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "3447:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:6"
									},
									"src": "3419:46:6"
								},
								{
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:6",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 597,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "3756:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "3774:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:6"
									},
									"src": "3723:68:6"
								},
								{
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:6",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 602,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "4004:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:6"
									},
									"src": "3976:46:6"
								},
								{
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:6",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 607,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "4258:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:6"
									},
									"src": "4230:46:6"
								}
							],
							"scope": 656,
							"src": "2186:2092:6",
							"usedErrors": [
								566,
								571,
								580,
								585,
								590,
								597,
								602,
								607
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 609,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:6",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 655,
							"linearizedBaseContracts": [
								655
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:6",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 620,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "4854:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "4870:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "4887:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "4903:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:6"
									},
									"src": "4821:99:6"
								},
								{
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:6",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 625,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "5110:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:6"
									},
									"src": "5083:43:6"
								},
								{
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:6",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 630,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "5325:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:6"
									},
									"src": "5296:47:6"
								},
								{
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:6",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 637,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5645:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5663:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:6"
									},
									"src": "5610:68:6"
								},
								{
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:6",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 642,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "5892:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:6"
									},
									"src": "5863:47:6"
								},
								{
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:6",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 647,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "6147:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:6"
									},
									"src": "6118:47:6"
								},
								{
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:6",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 654,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "6488:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "6507:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:6"
									},
									"src": "6456:73:6"
								}
							],
							"scope": 656,
							"src": "4424:2107:6",
							"usedErrors": [
								620,
								625,
								630,
								637,
								642,
								647,
								654
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1983
						],
						"ERC165": [
							2262
						],
						"ERC721": [
							1664
						],
						"IERC165": [
							2274
						],
						"IERC721": [
							1781
						],
						"IERC721Errors": [
							608
						],
						"IERC721Metadata": [
							1953
						],
						"IERC721Receiver": [
							1799
						],
						"Strings": [
							2238
						]
					},
					"id": 1665,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 657,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 659,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1665,
							"sourceUnit": 1782,
							"src": "133:38:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 658,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1781,
										"src": "141:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 661,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1665,
							"sourceUnit": 1800,
							"src": "172:54:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 660,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1799,
										"src": "180:15:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 663,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1665,
							"sourceUnit": 1954,
							"src": "227:65:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 662,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1953,
										"src": "235:15:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 665,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1665,
							"sourceUnit": 1984,
							"src": "293:48:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 664,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1983,
										"src": "301:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 667,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1665,
							"sourceUnit": 2239,
							"src": "342:48:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 666,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2238,
										"src": "350:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 670,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1665,
							"sourceUnit": 2263,
							"src": "391:69:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 668,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2274,
										"src": "399:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 669,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2262,
										"src": "408:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 672,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1665,
							"sourceUnit": 656,
							"src": "461:66:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 671,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 608,
										"src": "469:13:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 674,
										"name": "Context",
										"nameLocations": [
											"804:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1983,
										"src": "804:7:7"
									},
									"id": 675,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:7"
								},
								{
									"baseName": {
										"id": 676,
										"name": "ERC165",
										"nameLocations": [
											"813:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2262,
										"src": "813:6:7"
									},
									"id": 677,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:7"
								},
								{
									"baseName": {
										"id": 678,
										"name": "IERC721",
										"nameLocations": [
											"821:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1781,
										"src": "821:7:7"
									},
									"id": 679,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:7"
								},
								{
									"baseName": {
										"id": 680,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1953,
										"src": "830:15:7"
									},
									"id": 681,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:7"
								},
								{
									"baseName": {
										"id": 682,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 608,
										"src": "847:13:7"
									},
									"id": 683,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:7"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 673,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:7",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1664,
							"linearizedBaseContracts": [
								1664,
								608,
								1953,
								1781,
								2262,
								2274,
								1983
							],
							"name": "ERC721",
							"nameLocation": "794:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 686,
									"libraryName": {
										"id": 684,
										"name": "Strings",
										"nameLocations": [
											"873:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2238,
										"src": "873:7:7"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:7",
									"typeName": {
										"id": 685,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 688,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "917:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 687,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 690,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "964:22:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 689,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 694,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "993:51:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 693,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:7",
										"keyType": {
											"id": 691,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 692,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:7",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 698,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "1051:51:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 697,
										"keyName": "owner",
										"keyNameLocation": "1067:5:7",
										"keyType": {
											"id": 695,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 696,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 702,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "1109:59:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 701,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:7",
										"keyType": {
											"id": 699,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 700,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:7",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 708,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:7",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "1175:86:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 707,
										"keyName": "owner",
										"keyNameLocation": "1191:5:7",
										"keyType": {
											"id": 703,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 706,
											"keyName": "operator",
											"keyNameLocation": "1216:8:7",
											"keyType": {
												"id": 704,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:7",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 705,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "1437:57:7",
										"statements": [
											{
												"expression": {
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 716,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "1447:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 717,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "1455:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 719,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:7"
											},
											{
												"expression": {
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 720,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "1470:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 721,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "1480:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:7"
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:7",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 725,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "1393:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 710,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "1414:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 712,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:7"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:7"
									},
									"scope": 1664,
									"src": "1381:113:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2261,
										2273
									],
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "1669:192:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 736,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "1698:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 738,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1781,
																			"src": "1718:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1781_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1781_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 737,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1781",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:7",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 742,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "1754:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 744,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1953,
																			"src": "1774:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1953_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1953_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 743,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1953",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:7",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 751,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "1842:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 749,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1664_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:7",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2261,
															"src": "1818:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 735,
												"id": 754,
												"nodeType": "Return",
												"src": "1679:175:7"
											}
										]
									},
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 732,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 730,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2262,
												"src": "1637:6:7"
											},
											{
												"id": 731,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2274,
												"src": "1645:7:7"
											}
										],
										"src": "1628:25:7"
									},
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "1588:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 727,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:7"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "1663:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 733,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:7"
									},
									"scope": 1664,
									"src": "1561:300:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1706
									],
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "1992:136:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 764,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "2006:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 765,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 778,
												"nodeType": "IfStatement",
												"src": "2002:87:7",
												"trueBody": {
													"id": 777,
													"nodeType": "Block",
													"src": "2027:62:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 773,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 771,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 770,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 566,
																	"src": "2048:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 776,
															"nodeType": "RevertStatement",
															"src": "2041:37:7"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 779,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "2105:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 781,
													"indexExpression": {
														"id": 780,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "2115:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 763,
												"id": 782,
												"nodeType": "Return",
												"src": "2098:23:7"
											}
										]
									},
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:7",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "1939:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:7"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "1983:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:7"
									},
									"scope": 1664,
									"src": "1920:208:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1714
									],
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "2257:46:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 793,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "2288:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 792,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "2274:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 791,
												"id": 795,
												"nodeType": "Return",
												"src": "2267:29:7"
											}
										]
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:7",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "2202:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:7"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "2248:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:7"
									},
									"scope": 1664,
									"src": "2185:118:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1938
									],
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "2425:29:7",
										"statements": [
											{
												"expression": {
													"id": 803,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 688,
													"src": "2442:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 802,
												"id": 804,
												"nodeType": "Return",
												"src": "2435:12:7"
											}
										]
									},
									"documentation": {
										"id": 798,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:7",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:7"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2410:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 800,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:7"
									},
									"scope": 1664,
									"src": "2365:89:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1944
									],
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "2580:31:7",
										"statements": [
											{
												"expression": {
													"id": 812,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 690,
													"src": "2597:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 811,
												"id": 813,
												"nodeType": "Return",
												"src": "2590:14:7"
											}
										]
									},
									"documentation": {
										"id": 807,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:7",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:7"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "2565:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 809,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:7"
									},
									"scope": 1664,
									"src": "2518:93:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1952
									],
									"body": {
										"id": 850,
										"nodeType": "Block",
										"src": "2756:176:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 824,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "2780:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 823,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "2766:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:7"
											},
											{
												"assignments": [
													828
												],
												"declarations": [
													{
														"constant": false,
														"id": 828,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 850,
														"src": "2799:21:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 827,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 829,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "2823:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:7"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 834,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 828,
																		"src": "2856:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 832,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 847,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:7",
													"trueExpression": {
														"arguments": [
															{
																"id": 842,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 828,
																"src": "2892:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 843,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 818,
																		"src": "2901:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:7",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2051,
																	"src": "2901:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 839,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:7",
																	"typeDescriptions": {}
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:7",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 822,
												"id": 849,
												"nodeType": "Return",
												"src": "2843:82:7"
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:7",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "2695:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:7"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "2741:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 820,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:7"
									},
									"scope": 1664,
									"src": "2677:255:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "3240:26:7",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 856,
												"id": 858,
												"nodeType": "Return",
												"src": "3250:9:7"
											}
										]
									},
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:7",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:7"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "3225:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 854,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:7"
									},
									"scope": 1664,
									"src": "3174:92:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1754
									],
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "3384:52:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 869,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "3403:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 870,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "3407:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 871,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1965,
																"src": "3416:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 868,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1467,
															1533
														],
														"referencedDeclaration": 1467,
														"src": "3394:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:7"
											}
										]
									},
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:7",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "3340:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "3352:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:7"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:7"
									},
									"scope": 1664,
									"src": "3323:113:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1770
									],
									"body": {
										"id": 892,
										"nodeType": "Block",
										"src": "3573:78:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 885,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "3597:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 884,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "3583:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 887,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 889,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "3636:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 888,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "3623:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 883,
												"id": 891,
												"nodeType": "Return",
												"src": "3616:28:7"
											}
										]
									},
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:7",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "3518:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:7"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "3564:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:7"
									},
									"scope": 1664,
									"src": "3497:154:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1762
									],
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "3793:69:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 902,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1965,
																"src": "3822:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 904,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "3836:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 905,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "3846:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 901,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "3803:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 907,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:7"
											}
										]
									},
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:7",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "3745:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "3763:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 897,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:7"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:7"
									},
									"scope": 1664,
									"src": "3718:144:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1780
									],
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "4022:59:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 919,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "4039:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 921,
														"indexExpression": {
															"id": 920,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "4058:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 923,
													"indexExpression": {
														"id": 922,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "4065:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 918,
												"id": 924,
												"nodeType": "Return",
												"src": "4032:42:7"
											}
										]
									},
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:7",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "3954:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "3969:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:7"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "4016:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 916,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:7"
									},
									"scope": 1664,
									"src": "3928:153:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1746
									],
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "4223:498:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 936,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "4237:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 937,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 940,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 950,
												"nodeType": "IfStatement",
												"src": "4233:87:7",
												"trueBody": {
													"id": 949,
													"nodeType": "Block",
													"src": "4255:65:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 945,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 943,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 942,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 590,
																	"src": "4276:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 948,
															"nodeType": "RevertStatement",
															"src": "4269:40:7"
														}
													]
												}
											},
											{
												"assignments": [
													952
												],
												"declarations": [
													{
														"constant": false,
														"id": 952,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 971,
														"src": "4538:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 951,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 959,
												"initialValue": {
													"arguments": [
														{
															"id": 954,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "4570:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 955,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "4574:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 956,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1965,
																"src": "4583:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 953,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "4562:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 960,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "4610:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 961,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "4627:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 970,
												"nodeType": "IfStatement",
												"src": "4606:109:7",
												"trueBody": {
													"id": 969,
													"nodeType": "Block",
													"src": "4633:82:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 964,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 929,
																		"src": "4675:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 965,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 933,
																		"src": "4681:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 966,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 952,
																		"src": "4690:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 963,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "4654:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 968,
															"nodeType": "RevertStatement",
															"src": "4647:57:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 927,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:7",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "4165:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "4179:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "4191:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:7"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:7"
									},
									"scope": 1664,
									"src": "4143:578:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1736
									],
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "4863:56:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 983,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "4890:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 984,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "4896:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 985,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "4900:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 982,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															990,
															1016
														],
														"referencedDeclaration": 1016,
														"src": "4873:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:7"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:7",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "4813:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "4827:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "4839:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:7"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:7"
									},
									"scope": 1664,
									"src": "4787:132:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1726
									],
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "5088:105:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1003,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "5111:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1004,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "5117:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1005,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "5121:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1002,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "5098:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1009,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "5162:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1010,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "5168:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1011,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "5172:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1012,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "5181:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1008,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1663,
														"src": "5139:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:7"
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:7",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "5011:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "5025:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "5037:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "5054:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 998,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:7"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:7"
									},
									"scope": 1664,
									"src": "4985:208:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "5782:40:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1024,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "5799:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1026,
													"indexExpression": {
														"id": 1025,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "5807:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1023,
												"id": 1027,
												"nodeType": "Return",
												"src": "5792:23:7"
											}
										]
									},
									"documentation": {
										"id": 1017,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:7",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "5725:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:7"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "5773:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:7"
									},
									"scope": 1664,
									"src": "5707:115:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "6017:48:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1037,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "6034:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1039,
													"indexExpression": {
														"id": 1038,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "6050:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1036,
												"id": 1040,
												"nodeType": "Return",
												"src": "6027:31:7"
											}
										]
									},
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:7",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "5960:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:7"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "6008:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:7"
									},
									"scope": 1664,
									"src": "5938:127:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "6485:163:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1059,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1054,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "6514:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1055,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1060,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "6552:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1061,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1047,
																			"src": "6561:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1064,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1045,
																				"src": "6589:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1065,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1047,
																				"src": "6596:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1063,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 926,
																			"src": "6572:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1069,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "6621:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1068,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1042,
																			"src": "6608:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 1070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1071,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1047,
																		"src": "6633:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1074,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1053,
												"id": 1076,
												"nodeType": "Return",
												"src": "6495:146:7"
											}
										]
									},
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:7",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "6399:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "6414:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "6431:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:7"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "6479:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1051,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:7"
									},
									"scope": 1664,
									"src": "6376:272:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1114,
										"nodeType": "Block",
										"src": "7179:271:7",
										"statements": [
											{
												"condition": {
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:7",
													"subExpression": {
														"arguments": [
															{
																"id": 1089,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1081,
																"src": "7208:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1090,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "7215:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1091,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "7224:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1088,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "7194:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1113,
												"nodeType": "IfStatement",
												"src": "7189:255:7",
												"trueBody": {
													"id": 1112,
													"nodeType": "Block",
													"src": "7234:210:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1094,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1081,
																	"src": "7252:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1095,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1110,
																"nodeType": "Block",
																"src": "7350:84:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1106,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1083,
																					"src": "7402:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1107,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1085,
																					"src": "7411:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1105,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 597,
																				"src": "7375:26:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 1108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1109,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:7"
																	}
																]
															},
															"id": 1111,
															"nodeType": "IfStatement",
															"src": "7248:186:7",
															"trueBody": {
																"id": 1104,
																"nodeType": "Block",
																"src": "7273:71:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1101,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1085,
																					"src": "7321:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1100,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 571,
																				"src": "7298:22:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 1102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1103,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:7"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:7",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 1115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "7108:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "7123:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "7140:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:7"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:7"
									},
									"scope": 1664,
									"src": "7082:368:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "8167:78:7",
										"statements": [
											{
												"id": 1129,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:7",
												"statements": [
													{
														"expression": {
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1123,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 698,
																	"src": "8201:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1125,
																"indexExpression": {
																	"id": 1124,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1118,
																	"src": "8211:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1126,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1120,
																"src": "8223:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1128,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:7",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "8118:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "8135:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1119,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:7"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:7"
									},
									"scope": 1664,
									"src": "8092:153:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1220,
										"nodeType": "Block",
										"src": "8933:700:7",
										"statements": [
											{
												"assignments": [
													1144
												],
												"declarations": [
													{
														"constant": false,
														"id": 1144,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1220,
														"src": "8943:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1143,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1148,
												"initialValue": {
													"arguments": [
														{
															"id": 1146,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "8967:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1145,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "8958:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1149,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "9035:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1150,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1162,
												"nodeType": "IfStatement",
												"src": "9031:86:7",
												"trueBody": {
													"id": 1161,
													"nodeType": "Block",
													"src": "9055:62:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1156,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1144,
																		"src": "9086:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1157,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1138,
																		"src": "9092:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1158,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1136,
																		"src": "9098:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1155,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "9069:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1160,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1163,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "9161:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1164,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1190,
												"nodeType": "IfStatement",
												"src": "9157:256:7",
												"trueBody": {
													"id": 1189,
													"nodeType": "Block",
													"src": "9181:232:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1172,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1170,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1174,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1136,
																		"src": "9298:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1177,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1175,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 1179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1169,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1467,
																		1533
																	],
																	"referencedDeclaration": 1533,
																	"src": "9277:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1181,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:7"
														},
														{
															"id": 1188,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:7",
															"statements": [
																{
																	"expression": {
																		"id": 1186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1182,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 698,
																				"src": "9368:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1184,
																			"indexExpression": {
																				"id": 1183,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1144,
																				"src": "9378:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1187,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:7"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1191,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "9427:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1192,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1205,
												"nodeType": "IfStatement",
												"src": "9423:107:7",
												"trueBody": {
													"id": 1204,
													"nodeType": "Block",
													"src": "9445:85:7",
													"statements": [
														{
															"id": 1203,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:7",
															"statements": [
																{
																	"expression": {
																		"id": 1201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1197,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 698,
																				"src": "9487:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1199,
																			"indexExpression": {
																				"id": 1198,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1134,
																				"src": "9497:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1202,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:7"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1206,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "9540:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1208,
														"indexExpression": {
															"id": 1207,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "9548:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1209,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "9559:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1211,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1213,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "9586:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1214,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "9592:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1215,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "9596:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1212,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1680,
														"src": "9577:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1217,
												"nodeType": "EmitStatement",
												"src": "9572:32:7"
											},
											{
												"expression": {
													"id": 1218,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1144,
													"src": "9622:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1142,
												"id": 1219,
												"nodeType": "Return",
												"src": "9615:11:7"
											}
										]
									},
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:7",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 1221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "8855:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "8867:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "8884:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:7"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "8924:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:7"
									},
									"scope": 1664,
									"src": "8838:795:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "10008:274:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1229,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "10022:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1230,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1233,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1243,
												"nodeType": "IfStatement",
												"src": "10018:87:7",
												"trueBody": {
													"id": 1242,
													"nodeType": "Block",
													"src": "10040:65:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1236,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1235,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 590,
																	"src": "10061:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1241,
															"nodeType": "RevertStatement",
															"src": "10054:40:7"
														}
													]
												}
											},
											{
												"assignments": [
													1245
												],
												"declarations": [
													{
														"constant": false,
														"id": 1245,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1270,
														"src": "10114:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1244,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1254,
												"initialValue": {
													"arguments": [
														{
															"id": 1247,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "10146:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1248,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "10150:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1249,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1246,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "10138:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1255,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1245,
														"src": "10184:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1256,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1269,
												"nodeType": "IfStatement",
												"src": "10180:96:7",
												"trueBody": {
													"id": 1268,
													"nodeType": "Block",
													"src": "10213:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1264,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1262,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1261,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "10234:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1267,
															"nodeType": "RevertStatement",
															"src": "10227:38:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1222,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:7",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 1271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "9970:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "9982:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:7"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:7"
									},
									"scope": 1664,
									"src": "9955:327:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "10690:43:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1280,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "10710:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1281,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "10714:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1279,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1286,
															1312
														],
														"referencedDeclaration": 1312,
														"src": "10700:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1284,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:7"
											}
										]
									},
									"documentation": {
										"id": 1272,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:7",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "10652:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "10664:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:7"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:7"
									},
									"scope": 1664,
									"src": "10633:100:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "11038:98:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1297,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "11054:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1298,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "11058:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1296,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1271,
														"src": "11048:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1302,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1306,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "11111:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1307,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "11115:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1308,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1293,
															"src": "11124:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1301,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1663,
														"src": "11076:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:7"
											}
										]
									},
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:7",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "10973:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "10985:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "11002:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1292,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:7"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:7"
									},
									"scope": 1664,
									"src": "10954:182:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1344,
										"nodeType": "Block",
										"src": "11503:186:7",
										"statements": [
											{
												"assignments": [
													1319
												],
												"declarations": [
													{
														"constant": false,
														"id": 1319,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1344,
														"src": "11513:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1318,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1331,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1321,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1325,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "11557:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1326,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1320,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "11537:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1332,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "11591:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1333,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1336,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1343,
												"nodeType": "IfStatement",
												"src": "11587:96:7",
												"trueBody": {
													"id": 1342,
													"nodeType": "Block",
													"src": "11620:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1339,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1315,
																		"src": "11664:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1338,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "11641:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1341,
															"nodeType": "RevertStatement",
															"src": "11634:38:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1313,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:7",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "11477:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:7"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:7"
									},
									"scope": 1664,
									"src": "11462:227:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1404,
										"nodeType": "Block",
										"src": "12084:389:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1355,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "12098:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1356,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1359,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1369,
												"nodeType": "IfStatement",
												"src": "12094:87:7",
												"trueBody": {
													"id": 1368,
													"nodeType": "Block",
													"src": "12116:65:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1364,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1362,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1361,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 590,
																	"src": "12137:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1367,
															"nodeType": "RevertStatement",
															"src": "12130:40:7"
														}
													]
												}
											},
											{
												"assignments": [
													1371
												],
												"declarations": [
													{
														"constant": false,
														"id": 1371,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1404,
														"src": "12190:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1370,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1380,
												"initialValue": {
													"arguments": [
														{
															"id": 1373,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "12222:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1374,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "12226:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1375,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1372,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "12214:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1381,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "12260:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1382,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1385,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1392,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "12362:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1393,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1348,
															"src": "12379:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1402,
													"nodeType": "IfStatement",
													"src": "12358:109:7",
													"trueBody": {
														"id": 1401,
														"nodeType": "Block",
														"src": "12385:82:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1396,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1348,
																			"src": "12427:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1397,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "12433:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1398,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1371,
																			"src": "12442:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1395,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 580,
																		"src": "12406:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1400,
																"nodeType": "RevertStatement",
																"src": "12399:57:7"
															}
														]
													}
												},
												"id": 1403,
												"nodeType": "IfStatement",
												"src": "12256:211:7",
												"trueBody": {
													"id": 1391,
													"nodeType": "Block",
													"src": "12289:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1388,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1352,
																		"src": "12333:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1387,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "12310:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1390,
															"nodeType": "RevertStatement",
															"src": "12303:38:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1346,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:7",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "12032:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "12046:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "12058:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:7"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:7"
									},
									"scope": 1664,
									"src": "12013:460:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1422,
										"nodeType": "Block",
										"src": "13481:53:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1416,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "13505:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1417,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "13511:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1418,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "13515:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1415,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1423,
															1449
														],
														"referencedDeclaration": 1449,
														"src": "13491:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1421,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:7"
											}
										]
									},
									"documentation": {
										"id": 1406,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:7",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "13429:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "13443:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "13455:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:7"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:7"
									},
									"scope": 1664,
									"src": "13406:128:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1448,
										"nodeType": "Block",
										"src": "13873:102:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1436,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "13893:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1437,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "13899:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1438,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "13903:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1435,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1405,
														"src": "13883:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1440,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1442,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "13944:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1443,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "13950:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1444,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "13954:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1445,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "13963:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1441,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1663,
														"src": "13921:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1447,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:7"
											}
										]
									},
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:7",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "13794:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "13808:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "13820:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "13837:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1431,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:7"
									},
									"returnParameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:7"
									},
									"scope": 1664,
									"src": "13771:204:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1466,
										"nodeType": "Block",
										"src": "14488:50:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1460,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "14507:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1461,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "14511:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1462,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "14520:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1459,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1467,
															1533
														],
														"referencedDeclaration": 1533,
														"src": "14498:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1465,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:7"
											}
										]
									},
									"documentation": {
										"id": 1450,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:7",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "14436:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "14448:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "14465:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:7"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:7"
									},
									"scope": 1664,
									"src": "14418:120:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1532,
										"nodeType": "Block",
										"src": "14814:568:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1479,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1476,
														"src": "14880:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1485,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1480,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "14893:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1481,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1525,
												"nodeType": "IfStatement",
												"src": "14876:460:7",
												"trueBody": {
													"id": 1524,
													"nodeType": "Block",
													"src": "14913:423:7",
													"statements": [
														{
															"assignments": [
																1488
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1488,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1524,
																	"src": "14927:13:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1487,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:7",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1492,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1490,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1472,
																		"src": "14957:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1489,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1599,
																	"src": "14943:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1493,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1474,
																			"src": "15093:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1496,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1495,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1494,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1499,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1488,
																			"src": "15115:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1500,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1474,
																			"src": "15124:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:7",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1504,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1488,
																				"src": "15150:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1505,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1474,
																				"src": "15157:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1503,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 926,
																			"src": "15133:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1514,
															"nodeType": "IfStatement",
															"src": "15089:142:7",
															"trueBody": {
																"id": 1513,
																"nodeType": "Block",
																"src": "15164:67:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1510,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1474,
																					"src": "15211:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1509,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 602,
																				"src": "15189:21:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1512,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:7"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1515,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1476,
																"src": "15249:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1523,
															"nodeType": "IfStatement",
															"src": "15245:81:7",
															"trueBody": {
																"id": 1522,
																"nodeType": "Block",
																"src": "15260:66:7",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1517,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1488,
																					"src": "15292:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1518,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1470,
																					"src": "15299:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1519,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1472,
																					"src": "15303:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1516,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1689,
																				"src": "15283:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1521,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:7"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1526,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "15346:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1528,
														"indexExpression": {
															"id": 1527,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "15362:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1529,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "15373:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1531,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:7"
											}
										]
									},
									"documentation": {
										"id": 1468,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:7",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "14738:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "14750:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "14767:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "14781:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1475,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:7"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:7"
									},
									"scope": 1664,
									"src": "14720:662:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "15684:219:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1543,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1538,
														"src": "15698:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1544,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1547,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1554,
												"nodeType": "IfStatement",
												"src": "15694:91:7",
												"trueBody": {
													"id": 1553,
													"nodeType": "Block",
													"src": "15722:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1550,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1538,
																		"src": "15765:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1549,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 607,
																	"src": "15743:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1552,
															"nodeType": "RevertStatement",
															"src": "15736:38:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1555,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 708,
																"src": "15794:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1558,
															"indexExpression": {
																"id": 1556,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1536,
																"src": "15813:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1559,
														"indexExpression": {
															"id": 1557,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "15820:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1560,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1540,
														"src": "15832:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1562,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1564,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "15870:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1565,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "15877:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1566,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1540,
															"src": "15887:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1563,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1698,
														"src": "15855:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1568,
												"nodeType": "EmitStatement",
												"src": "15850:46:7"
											}
										]
									},
									"documentation": {
										"id": 1534,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:7",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "15619:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "15634:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "15652:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1539,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:7"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:7"
									},
									"scope": 1664,
									"src": "15591:312:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1598,
										"nodeType": "Block",
										"src": "16210:169:7",
										"statements": [
											{
												"assignments": [
													1579
												],
												"declarations": [
													{
														"constant": false,
														"id": 1579,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1598,
														"src": "16220:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1578,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1583,
												"initialValue": {
													"arguments": [
														{
															"id": 1581,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "16245:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1580,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "16236:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1584,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1579,
														"src": "16267:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1585,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1595,
												"nodeType": "IfStatement",
												"src": "16263:88:7",
												"trueBody": {
													"id": 1594,
													"nodeType": "Block",
													"src": "16288:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1591,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1573,
																		"src": "16332:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1590,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "16309:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1593,
															"nodeType": "RevertStatement",
															"src": "16302:38:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1596,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1579,
													"src": "16367:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1577,
												"id": 1597,
												"nodeType": "Return",
												"src": "16360:12:7"
											}
										]
									},
									"documentation": {
										"id": 1571,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:7",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "16161:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:7"
									},
									"returnParameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "16201:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:7"
									},
									"scope": 1664,
									"src": "16138:241:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1662,
										"nodeType": "Block",
										"src": "17020:680:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1611,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "17034:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1661,
												"nodeType": "IfStatement",
												"src": "17030:664:7",
												"trueBody": {
													"id": 1660,
													"nodeType": "Block",
													"src": "17054:640:7",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1640,
																		"nodeType": "Block",
																		"src": "17168:162:7",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1633,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1629,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1627,
																						"src": "17190:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1630,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1799,
																								"src": "17200:15:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1799_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1631,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:7",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1798,
																							"src": "17200:32:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1632,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:7",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1639,
																				"nodeType": "IfStatement",
																				"src": "17186:130:7",
																				"trueBody": {
																					"id": 1638,
																					"nodeType": "Block",
																					"src": "17243:73:7",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1635,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1604,
																										"src": "17294:2:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1634,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 590,
																									"src": "17272:21:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1636,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:7",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1637,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:7"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1641,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1628,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1627,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 1641,
																				"src": "17153:13:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1626,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:7"
																	},
																	"src": "17144:186:7"
																},
																{
																	"block": {
																		"id": 1657,
																		"nodeType": "Block",
																		"src": "17359:325:7",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1648,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1645,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1643,
																							"src": "17381:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1646,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:7",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1647,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1655,
																					"nodeType": "Block",
																					"src": "17480:190:7",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:7",
																								"nodeType": "YulBlock",
																								"src": "17566:86:7",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:7",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:7",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:7",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:7"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:7"
																													},
																													"nativeSrc": "17599:15:7",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:7"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:7",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:7"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:7",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:7"
																													},
																													"nativeSrc": "17616:13:7",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:7"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:7",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:7"
																											},
																											"nativeSrc": "17592:38:7",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:7"
																										},
																										"nativeSrc": "17592:38:7",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:7"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1643,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:7",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1643,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:7",
																									"valueSize": 1
																								}
																							],
																							"id": 1654,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:7"
																						}
																					]
																				},
																				"id": 1656,
																				"nodeType": "IfStatement",
																				"src": "17377:293:7",
																				"trueBody": {
																					"id": 1653,
																					"nodeType": "Block",
																					"src": "17401:73:7",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1650,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1604,
																										"src": "17452:2:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1649,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 590,
																									"src": "17430:21:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1651,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:7",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1652,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:7"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1658,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1644,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1643,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 1658,
																				"src": "17338:19:7",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1642,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:7"
																	},
																	"src": "17331:353:7"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1620,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1965,
																			"src": "17109:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1622,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1602,
																		"src": "17123:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1623,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1606,
																		"src": "17129:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1624,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1608,
																		"src": "17138:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1617,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1604,
																				"src": "17088:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1616,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1799,
																			"src": "17072:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1799_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1799",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:7",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1798,
																	"src": "17072:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:7",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1659,
															"nodeType": "TryStatement",
															"src": "17068:616:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1600,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:7",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "16950:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "16964:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "16976:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "16993:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1607,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:7"
									},
									"returnParameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:7"
									},
									"scope": 1664,
									"src": "16918:782:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1665,
							"src": "776:16926:7",
							"usedErrors": [
								566,
								571,
								580,
								585,
								590,
								597,
								602,
								607
							],
							"usedEvents": [
								1680,
								1689,
								1698
							]
						}
					],
					"src": "107:17596:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2274
						],
						"IERC721": [
							1781
						]
					},
					"id": 1782,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1666,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1668,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1782,
							"sourceUnit": 2275,
							"src": "134:62:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1667,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2274,
										"src": "142:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1670,
										"name": "IERC165",
										"nameLocations": [
											"287:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2274,
										"src": "287:7:8"
									},
									"id": 1671,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:8"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1669,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:8",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1781,
							"linearizedBaseContracts": [
								1781,
								2274
							],
							"name": "IERC721",
							"nameLocation": "276:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1672,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:8",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1680,
									"name": "Transfer",
									"nameLocation": "400:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "409:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "431:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "451:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:8"
									},
									"src": "394:82:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1681,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:8",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1689,
									"name": "Approval",
									"nameLocation": "587:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "596:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "619:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1687,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "645:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:8"
									},
									"src": "581:89:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1690,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:8",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1698,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "819:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1694,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "842:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1696,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "868:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1695,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:8"
									},
									"src": "798:85:8"
								},
								{
									"documentation": {
										"id": 1699,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:8",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "989:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:8"
									},
									"returnParameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "1027:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:8"
									},
									"scope": 1781,
									"src": "970:74:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1707,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:8",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1714,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "1203:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:8"
									},
									"returnParameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "1243:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:8"
									},
									"scope": 1781,
									"src": "1186:72:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1715,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:8",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1726,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "1860:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "1874:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "1886:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "1903:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1722,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:8"
									},
									"returnParameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:8"
									},
									"scope": 1781,
									"src": "1834:99:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1727,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:8",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1736,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "2675:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "2689:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "2701:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:8"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:8"
									},
									"scope": 1781,
									"src": "2649:78:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1737,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:8",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1746,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "3492:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "3506:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "3518:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:8"
									},
									"returnParameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:8"
									},
									"scope": 1781,
									"src": "3470:74:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1747,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:8",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "4024:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "4036:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:8"
									},
									"returnParameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:8"
									},
									"scope": 1781,
									"src": "4007:55:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1755,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:8",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1762,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "4415:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "4433:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1758,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:8"
									},
									"returnParameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:8"
									},
									"scope": 1781,
									"src": "4388:69:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:8",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1770,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "4628:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:8"
									},
									"returnParameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "4668:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:8"
									},
									"scope": 1781,
									"src": "4607:79:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:8",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1780,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "4861:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "4876:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:8"
									},
									"returnParameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "4917:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1777,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:8"
									},
									"scope": 1781,
									"src": "4835:88:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1782,
							"src": "266:4659:8",
							"usedErrors": [],
							"usedEvents": [
								1680,
								1689,
								1698
							]
						}
					],
					"src": "108:4818:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1799
						]
					},
					"id": 1800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1783,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1784,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:9",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1799,
							"linearizedBaseContracts": [
								1799
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1785,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:9",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1798,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "867:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "893:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "915:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "940:19:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1792,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:9"
									},
									"returnParameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "984:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1795,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:9"
									},
									"scope": 1799,
									"src": "832:160:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1800,
							"src": "295:699:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"ERC721": [
							1664
						],
						"ERC721URIStorage": [
							1925
						],
						"IERC165": [
							2274
						],
						"IERC4906": [
							514
						],
						"Strings": [
							2238
						]
					},
					"id": 1926,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1803,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1926,
							"sourceUnit": 1665,
							"src": "154:37:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1802,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1664,
										"src": "162:6:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1805,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1926,
							"sourceUnit": 2239,
							"src": "192:51:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1804,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2238,
										"src": "200:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1807,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1926,
							"sourceUnit": 515,
							"src": "244:58:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1806,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 514,
										"src": "252:8:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 1809,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1926,
							"sourceUnit": 491,
							"src": "303:56:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1808,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2274,
										"src": "311:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1811,
										"name": "IERC4906",
										"nameLocations": [
											"469:8:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 514,
										"src": "469:8:10"
									},
									"id": 1812,
									"nodeType": "InheritanceSpecifier",
									"src": "469:8:10"
								},
								{
									"baseName": {
										"id": 1813,
										"name": "ERC721",
										"nameLocations": [
											"479:6:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1664,
										"src": "479:6:10"
									},
									"id": 1814,
									"nodeType": "InheritanceSpecifier",
									"src": "479:6:10"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1810,
								"nodeType": "StructuredDocumentation",
								"src": "361:69:10",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1925,
							"linearizedBaseContracts": [
								1925,
								1664,
								608,
								1953,
								514,
								1781,
								2262,
								2274,
								1983
							],
							"name": "ERC721URIStorage",
							"nameLocation": "449:16:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1817,
									"libraryName": {
										"id": 1815,
										"name": "Strings",
										"nameLocations": [
											"498:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2238,
										"src": "498:7:10"
									},
									"nodeType": "UsingForDirective",
									"src": "492:26:10",
									"typeName": {
										"id": 1816,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1823,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "730:20:10",
									"nodeType": "VariableDeclaration",
									"scope": 1925,
									"src": "706:65:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1818,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "706:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1821,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "760:10:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1820,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "753:6:10",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1819,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "753:6:10",
												"typeDescriptions": {}
											}
										},
										"id": 1822,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "753:18:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1827,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "860:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 1925,
									"src": "817:53:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1826,
										"keyName": "tokenId",
										"keyNameLocation": "833:7:10",
										"keyType": {
											"id": 1824,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "825:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "817:34:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1825,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "844:6:10",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										756,
										2273
									],
									"body": {
										"id": 1847,
										"nodeType": "Block",
										"src": "1045:99:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1838,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "1062:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1839,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "1077:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1062:35:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1843,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1830,
																"src": "1125:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1841,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1101:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1925_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1107:17:10",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 756,
															"src": "1101:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1844,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1101:36:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1062:75:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1837,
												"id": 1846,
												"nodeType": "Return",
												"src": "1055:82:10"
											}
										]
									},
									"documentation": {
										"id": 1828,
										"nodeType": "StructuredDocumentation",
										"src": "877:55:10",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "946:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1834,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1832,
												"name": "ERC721",
												"nameLocations": [
													"1013:6:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1664,
												"src": "1013:6:10"
											},
											{
												"id": 1833,
												"name": "IERC165",
												"nameLocations": [
													"1021:7:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2274,
												"src": "1021:7:10"
											}
										],
										"src": "1004:25:10"
									},
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "971:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "964:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1829,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "964:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:20:10"
									},
									"returnParameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "1039:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1835,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:6:10"
									},
									"scope": 1925,
									"src": "937:207:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										851
									],
									"body": {
										"id": 1904,
										"nodeType": "Block",
										"src": "1298:505:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1858,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1851,
															"src": "1322:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1857,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "1308:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:22:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1860,
												"nodeType": "ExpressionStatement",
												"src": "1308:22:10"
											},
											{
												"assignments": [
													1862
												],
												"declarations": [
													{
														"constant": false,
														"id": 1862,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1355:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1904,
														"src": "1341:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1861,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1341:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1866,
												"initialValue": {
													"baseExpression": {
														"id": 1863,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1827,
														"src": "1367:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1865,
													"indexExpression": {
														"id": 1864,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1851,
														"src": "1378:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1367:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1341:45:10"
											},
											{
												"assignments": [
													1868
												],
												"declarations": [
													{
														"constant": false,
														"id": 1868,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1410:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1904,
														"src": "1396:18:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1867,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1396:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1871,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1869,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "1417:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1417:10:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1396:31:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1874,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1868,
																	"src": "1506:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1873,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1500:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1872,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1500:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1512:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1500:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1877,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1522:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1500:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1882,
												"nodeType": "IfStatement",
												"src": "1496:70:10",
												"trueBody": {
													"id": 1881,
													"nodeType": "Block",
													"src": "1525:41:10",
													"statements": [
														{
															"expression": {
																"id": 1879,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1862,
																"src": "1546:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1856,
															"id": 1880,
															"nodeType": "Return",
															"src": "1539:16:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1885,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1862,
																	"src": "1671:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1884,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1665:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1883,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1665:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1665:16:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1682:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1665:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1888,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1691:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1665:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1898,
												"nodeType": "IfStatement",
												"src": "1661:95:10",
												"trueBody": {
													"id": 1897,
													"nodeType": "Block",
													"src": "1694:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1893,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1868,
																		"src": "1729:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1894,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1862,
																		"src": "1735:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1890,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:6:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1722:6:10",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1715:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1715:30:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1856,
															"id": 1896,
															"nodeType": "Return",
															"src": "1708:37:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1901,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1851,
															"src": "1788:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1899,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1773:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1925_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1779:8:10",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 851,
														"src": "1773:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1773:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1856,
												"id": 1903,
												"nodeType": "Return",
												"src": "1766:30:10"
											}
										]
									},
									"documentation": {
										"id": 1849,
										"nodeType": "StructuredDocumentation",
										"src": "1150:55:10",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1219:8:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1853,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1265:8:10"
									},
									"parameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1236:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "1228:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:17:10"
									},
									"returnParameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "1283:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1854,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1283:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:15:10"
									},
									"scope": 1925,
									"src": "1210:593:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1923,
										"nodeType": "Block",
										"src": "2003:86:10",
										"statements": [
											{
												"expression": {
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1913,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1827,
															"src": "2013:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1915,
														"indexExpression": {
															"id": 1914,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1908,
															"src": "2024:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2013:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1916,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1910,
														"src": "2035:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2013:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1918,
												"nodeType": "ExpressionStatement",
												"src": "2013:31:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1920,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1908,
															"src": "2074:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1919,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "2059:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1922,
												"nodeType": "EmitStatement",
												"src": "2054:28:10"
											}
										]
									},
									"documentation": {
										"id": 1906,
										"nodeType": "StructuredDocumentation",
										"src": "1809:108:10",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 1924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1931:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1952:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "1944:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1975:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "1961:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1909,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1961:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:42:10"
									},
									"returnParameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2003:0:10"
									},
									"scope": 1925,
									"src": "1922:167:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1926,
							"src": "431:1660:10",
							"usedErrors": [
								566,
								571,
								580,
								585,
								590,
								597,
								602,
								607
							],
							"usedEvents": [
								506,
								513,
								1680,
								1689,
								1698
							]
						}
					],
					"src": "128:1964:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1781
						],
						"IERC721Metadata": [
							1953
						]
					},
					"id": 1954,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1927,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1929,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1954,
							"sourceUnit": 1782,
							"src": "153:39:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1928,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1781,
										"src": "161:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1931,
										"name": "IERC721",
										"nameLocations": [
											"357:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1781,
										"src": "357:7:11"
									},
									"id": 1932,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:11"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1930,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:11",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1953,
							"linearizedBaseContracts": [
								1953,
								1781,
								2274
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1933,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:11",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1938,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:11"
									},
									"returnParameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "473:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1935,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:11"
									},
									"scope": 1953,
									"src": "434:54:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1939,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:11",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1944,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:11"
									},
									"returnParameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1944,
												"src": "600:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1941,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:11"
									},
									"scope": 1953,
									"src": "559:56:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1945,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:11",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1952,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "734:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:11"
									},
									"returnParameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "774:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1949,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:11"
									},
									"scope": 1953,
									"src": "716:73:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1954,
							"src": "328:463:11",
							"usedErrors": [],
							"usedEvents": [
								1680,
								1689,
								1698
							]
						}
					],
					"src": "127:665:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1983
						]
					},
					"id": 1984,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1955,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:12"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1956,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:12",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1983,
							"linearizedBaseContracts": [
								1983
							],
							"name": "Context",
							"nameLocation": "642:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1964,
										"nodeType": "Block",
										"src": "718:34:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1961,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:12",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1960,
												"id": 1963,
												"nodeType": "Return",
												"src": "728:17:12"
											}
										]
									},
									"id": 1965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:12"
									},
									"returnParameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "709:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:12"
									},
									"scope": 1983,
									"src": "656:96:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1973,
										"nodeType": "Block",
										"src": "825:32:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1970,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:12",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1969,
												"id": 1972,
												"nodeType": "Return",
												"src": "835:15:12"
											}
										]
									},
									"id": 1974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:12"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "809:14:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1967,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:12"
									},
									"scope": 1983,
									"src": "758:99:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1981,
										"nodeType": "Block",
										"src": "935:25:12",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1978,
												"id": 1980,
												"nodeType": "Return",
												"src": "945:8:12"
											}
										]
									},
									"id": 1982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:12"
									},
									"returnParameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "926:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:12"
									},
									"scope": 1983,
									"src": "863:97:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1984,
							"src": "624:338:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3328
						],
						"SignedMath": [
							3433
						],
						"Strings": [
							2238
						]
					},
					"id": 2239,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1985,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1987,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2239,
							"sourceUnit": 3329,
							"src": "127:37:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1986,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3328,
										"src": "135:4:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1989,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2239,
							"sourceUnit": 3434,
							"src": "165:49:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1988,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3433,
										"src": "173:10:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1990,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:13",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2238,
							"linearizedBaseContracts": [
								2238
							],
							"name": "Strings",
							"nameLocation": "259:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1993,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 2238,
									"src": "273:56:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1991,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1992,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:13",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1996,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 2238,
									"src": "335:42:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1994,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1995,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1997,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:13",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 2003,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "505:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "520:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:13"
									},
									"src": "470:66:13"
								},
								{
									"body": {
										"id": 2050,
										"nodeType": "Block",
										"src": "708:627:13",
										"statements": [
											{
												"id": 2049,
												"nodeType": "UncheckedBlock",
												"src": "718:611:13",
												"statements": [
													{
														"assignments": [
															2012
														],
														"declarations": [
															{
																"constant": false,
																"id": 2012,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2049,
																"src": "742:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2011,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2019,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2015,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2006,
																		"src": "770:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2013,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3328,
																		"src": "759:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3328_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 2014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:13",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3148,
																	"src": "759:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 2016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:13"
													},
													{
														"assignments": [
															2021
														],
														"declarations": [
															{
																"constant": false,
																"id": 2021,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2049,
																"src": "794:20:13",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 2020,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2026,
														"initialValue": {
															"arguments": [
																{
																	"id": 2024,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2012,
																	"src": "828:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 2022,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 2025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:13"
													},
													{
														"assignments": [
															2028
														],
														"declarations": [
															{
																"constant": false,
																"id": 2028,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:13",
																"nodeType": "VariableDeclaration",
																"scope": 2049,
																"src": "849:11:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2027,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2029,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:13"
													},
													{
														"AST": {
															"nativeSrc": "930:67:13",
															"nodeType": "YulBlock",
															"src": "930:67:13",
															"statements": [
																{
																	"nativeSrc": "948:35:13",
																	"nodeType": "YulAssignment",
																	"src": "948:35:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:13",
																						"nodeType": "YulLiteral",
																						"src": "971:2:13",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:13"
																				},
																				"nativeSrc": "967:15:13",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:13"
																		},
																		"nativeSrc": "955:28:13",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:13"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:13"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2021,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:13",
																"valueSize": 1
															},
															{
																"declaration": 2012,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:13",
																"valueSize": 1
															},
															{
																"declaration": 2028,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:13",
																"valueSize": 1
															}
														],
														"id": 2030,
														"nodeType": "InlineAssembly",
														"src": "921:76:13"
													},
													{
														"body": {
															"id": 2045,
															"nodeType": "Block",
															"src": "1023:269:13",
															"statements": [
																{
																	"expression": {
																		"id": 2033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:13",
																		"subExpression": {
																			"id": 2032,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2028,
																			"src": "1041:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2034,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:13"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:13",
																		"nodeType": "YulBlock",
																		"src": "1124:86:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:13",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:13",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:13"
																									},
																									"nativeSrc": "1164:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:13"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:13",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:13"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:13"
																							},
																							"nativeSrc": "1159:32:13",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:13"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:13",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:13"
																					},
																					"nativeSrc": "1146:46:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:13"
																				},
																				"nativeSrc": "1146:46:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:13"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1993,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:13",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2028,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:13",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2006,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:13",
																			"valueSize": 1
																		}
																	],
																	"id": 2035,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:13"
																},
																{
																	"expression": {
																		"id": 2038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2036,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2006,
																			"src": "1227:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 2037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2039,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:13"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2040,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2006,
																			"src": "1260:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2041,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2044,
																	"nodeType": "IfStatement",
																	"src": "1256:21:13",
																	"trueBody": {
																		"id": 2043,
																		"nodeType": "Break",
																		"src": "1272:5:13"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 2046,
														"nodeType": "WhileStatement",
														"src": "1010:282:13"
													},
													{
														"expression": {
															"id": 2047,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "1312:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2010,
														"id": 2048,
														"nodeType": "Return",
														"src": "1305:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2004,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "655:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:13"
									},
									"returnParameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "693:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2008,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:13"
									},
									"scope": 2238,
									"src": "637:698:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2076,
										"nodeType": "Block",
										"src": "1511:92:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2062,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2054,
																	"src": "1542:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 2066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:13",
															"trueExpression": {
																"hexValue": "2d",
																"id": 2065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2071,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2054,
																			"src": "1588:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 2069,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3433,
																			"src": "1573:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3433_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 2070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:13",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3432,
																		"src": "1573:14:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 2072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2068,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2051,
																"src": "1564:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 2060,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 2059,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 2061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:13",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2058,
												"id": 2075,
												"nodeType": "Return",
												"src": "1521:75:13"
											}
										]
									},
									"documentation": {
										"id": 2052,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:13",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 2077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "1459:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2053,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:13"
									},
									"returnParameters": {
										"id": 2058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "1496:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2056,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:13"
									},
									"scope": 2238,
									"src": "1435:168:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2096,
										"nodeType": "Block",
										"src": "1782:100:13",
										"statements": [
											{
												"id": 2095,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2086,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2080,
																	"src": "1835:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2089,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2080,
																				"src": "1854:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2087,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3328,
																				"src": "1842:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3328_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 2088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:13",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3270,
																			"src": "1842:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2085,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2097,
																	2180,
																	2200
																],
																"referencedDeclaration": 2180,
																"src": "1823:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 2093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2084,
														"id": 2094,
														"nodeType": "Return",
														"src": "1816:49:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2078,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "1729:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:13"
									},
									"returnParameters": {
										"id": 2084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "1767:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2082,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:13"
									},
									"scope": 2238,
									"src": "1708:174:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2179,
										"nodeType": "Block",
										"src": "2095:435:13",
										"statements": [
											{
												"assignments": [
													2108
												],
												"declarations": [
													{
														"constant": false,
														"id": 2108,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 2179,
														"src": "2105:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2107,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2110,
												"initialValue": {
													"id": 2109,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2100,
													"src": "2126:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:13"
											},
											{
												"assignments": [
													2112
												],
												"declarations": [
													{
														"constant": false,
														"id": 2112,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2179,
														"src": "2141:19:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2111,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2121,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2116,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2102,
																	"src": "2177:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2113,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:13"
											},
											{
												"expression": {
													"id": 2126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2122,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2112,
															"src": "2198:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2124,
														"indexExpression": {
															"hexValue": "30",
															"id": 2123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2125,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2127,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:13"
											},
											{
												"expression": {
													"id": 2132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2128,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2112,
															"src": "2223:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2130,
														"indexExpression": {
															"hexValue": "31",
															"id": 2129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2133,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:13"
											},
											{
												"body": {
													"id": 2162,
													"nodeType": "Block",
													"src": "2293:95:13",
													"statements": [
														{
															"expression": {
																"id": 2156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2148,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2112,
																		"src": "2307:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2150,
																	"indexExpression": {
																		"id": 2149,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2135,
																		"src": "2314:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2151,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1993,
																		"src": "2319:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2155,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2152,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2108,
																			"src": "2330:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2157,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:13"
														},
														{
															"expression": {
																"id": 2160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2158,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2108,
																	"src": "2361:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2161,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2142,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2135,
														"src": "2281:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2143,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2163,
												"initializationExpression": {
													"assignments": [
														2135
													],
													"declarations": [
														{
															"constant": false,
															"id": 2135,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 2163,
															"src": "2253:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2134,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2141,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2137,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2102,
																"src": "2269:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:13"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:13",
														"subExpression": {
															"id": 2145,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2135,
															"src": "2290:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2147,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:13"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2164,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2108,
														"src": "2401:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2165,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2173,
												"nodeType": "IfStatement",
												"src": "2397:96:13",
												"trueBody": {
													"id": 2172,
													"nodeType": "Block",
													"src": "2418:75:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2168,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2100,
																		"src": "2468:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2169,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2102,
																		"src": "2475:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2167,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2003,
																	"src": "2439:28:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 2170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2171,
															"nodeType": "RevertStatement",
															"src": "2432:50:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2176,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2112,
															"src": "2516:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2175,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2174,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 2177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2106,
												"id": 2178,
												"nodeType": "Return",
												"src": "2502:21:13"
											}
										]
									},
									"documentation": {
										"id": 2098,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "2026:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "2041:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:13"
									},
									"returnParameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "2080:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2104,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:13"
									},
									"scope": 2238,
									"src": "2005:525:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2199,
										"nodeType": "Block",
										"src": "2762:75:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2193,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2183,
																			"src": "2807:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2191,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2189,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2196,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "2815:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2188,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2097,
															2180,
															2200
														],
														"referencedDeclaration": 2180,
														"src": "2779:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2187,
												"id": 2198,
												"nodeType": "Return",
												"src": "2772:58:13"
											}
										]
									},
									"documentation": {
										"id": 2181,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:13",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 2200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "2710:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:13"
									},
									"returnParameters": {
										"id": 2187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "2747:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2185,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:13"
									},
									"scope": 2238,
									"src": "2689:148:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2236,
										"nodeType": "Block",
										"src": "2992:104:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2212,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2203,
																		"src": "3015:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2210,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:13",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2217,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2205,
																		"src": "3034:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2215,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:13",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2224,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2203,
																			"src": "3063:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2222,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2221,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2230,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2205,
																			"src": "3086:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2228,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2227,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2209,
												"id": 2235,
												"nodeType": "Return",
												"src": "3002:87:13"
											}
										]
									},
									"documentation": {
										"id": 2201,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:13",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "2929:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2202,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "2946:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2204,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:13"
									},
									"returnParameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "2986:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2207,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:13"
									},
									"scope": 2238,
									"src": "2914:182:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2239,
							"src": "251:2847:13",
							"usedErrors": [
								2003
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2262
						],
						"IERC165": [
							2274
						]
					},
					"id": 2263,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2240,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2242,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2263,
							"sourceUnit": 2275,
							"src": "140:38:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2241,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2274,
										"src": "148:7:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2244,
										"name": "IERC165",
										"nameLocations": [
											"687:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2274,
										"src": "687:7:14"
									},
									"id": 2245,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:14"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2243,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:14",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2262,
							"linearizedBaseContracts": [
								2262,
								2274
							],
							"name": "ERC165",
							"nameLocation": "677:6:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2273
									],
									"body": {
										"id": 2260,
										"nodeType": "Block",
										"src": "844:64:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2253,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2248,
														"src": "861:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2255,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2274,
																	"src": "881:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2274_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2274_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2254,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2274",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:14",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2252,
												"id": 2259,
												"nodeType": "Return",
												"src": "854:47:14"
											}
										]
									},
									"documentation": {
										"id": 2246,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:14",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "789:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2247,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:14"
									},
									"returnParameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "838:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2250,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:14"
									},
									"scope": 2262,
									"src": "762:146:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2263,
							"src": "659:251:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2274
						]
					},
					"id": 2275,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2264,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2265,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:15",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2274,
							"linearizedBaseContracts": [
								2274
							],
							"name": "IERC165",
							"nameLocation": "431:7:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2266,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:15",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2273,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2273,
												"src": "817:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2267,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:15"
									},
									"returnParameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2273,
												"src": "860:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2270,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:15"
									},
									"scope": 2274,
									"src": "790:76:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2275,
							"src": "421:447:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3328
						]
					},
					"id": 3329,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2276,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2277,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:16",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3328,
							"linearizedBaseContracts": [
								3328
							],
							"name": "Math",
							"nameLocation": "211:4:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2278,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:16",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2280,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:16"
									},
									"src": "277:29:16"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2285,
									"members": [
										{
											"id": 2281,
											"name": "Floor",
											"nameLocation": "336:5:16",
											"nodeType": "EnumValue",
											"src": "336:5:16"
										},
										{
											"id": 2282,
											"name": "Ceil",
											"nameLocation": "379:4:16",
											"nodeType": "EnumValue",
											"src": "379:4:16"
										},
										{
											"id": 2283,
											"name": "Trunc",
											"nameLocation": "421:5:16",
											"nodeType": "EnumValue",
											"src": "421:5:16"
										},
										{
											"id": 2284,
											"name": "Expand",
											"nameLocation": "451:6:16",
											"nodeType": "EnumValue",
											"src": "451:6:16"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:16",
									"nodeType": "EnumDefinition",
									"src": "312:169:16"
								},
								{
									"body": {
										"id": 2316,
										"nodeType": "Block",
										"src": "661:140:16",
										"statements": [
											{
												"id": 2315,
												"nodeType": "UncheckedBlock",
												"src": "671:124:16",
												"statements": [
													{
														"assignments": [
															2298
														],
														"declarations": [
															{
																"constant": false,
																"id": 2298,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2315,
																"src": "695:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2297,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2302,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2299,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2288,
																"src": "707:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2300,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2290,
																"src": "711:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2303,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "730:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2288,
																"src": "734:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2310,
														"nodeType": "IfStatement",
														"src": "726:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2308,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2296,
															"id": 2309,
															"nodeType": "Return",
															"src": "737:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2312,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2298,
																	"src": "782:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2313,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2296,
														"id": 2314,
														"nodeType": "Return",
														"src": "768:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2286,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:16",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "601:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "612:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:16"
									},
									"returnParameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "646:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2292,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "652:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:16"
									},
									"scope": 3328,
									"src": "585:216:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2344,
										"nodeType": "Block",
										"src": "984:113:16",
										"statements": [
											{
												"id": 2343,
												"nodeType": "UncheckedBlock",
												"src": "994:97:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2329,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2322,
																"src": "1022:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2330,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2320,
																"src": "1026:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2336,
														"nodeType": "IfStatement",
														"src": "1018:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2334,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2328,
															"id": 2335,
															"nodeType": "Return",
															"src": "1029:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2338,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2320,
																		"src": "1074:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2339,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2322,
																		"src": "1078:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2341,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2328,
														"id": 2342,
														"nodeType": "Return",
														"src": "1060:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2318,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:16",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "924:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2322,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "935:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:16"
									},
									"returnParameters": {
										"id": 2328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "969:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "975:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:16"
									},
									"scope": 3328,
									"src": "908:189:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2386,
										"nodeType": "Block",
										"src": "1283:417:16",
										"statements": [
											{
												"id": 2385,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2357,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2348,
																"src": "1551:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2364,
														"nodeType": "IfStatement",
														"src": "1547:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2362,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2356,
															"id": 2363,
															"nodeType": "Return",
															"src": "1559:16:16"
														}
													},
													{
														"assignments": [
															2366
														],
														"declarations": [
															{
																"constant": false,
																"id": 2366,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2385,
																"src": "1589:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2365,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2370,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2367,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2348,
																"src": "1601:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2368,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2350,
																"src": "1605:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2371,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2366,
																	"src": "1624:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2372,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2348,
																	"src": "1628:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2374,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2350,
																"src": "1633:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2380,
														"nodeType": "IfStatement",
														"src": "1620:33:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2378,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2356,
															"id": 2379,
															"nodeType": "Return",
															"src": "1636:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2382,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2366,
																	"src": "1681:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2383,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2356,
														"id": 2384,
														"nodeType": "Return",
														"src": "1667:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2346,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:16",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2348,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "1223:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "1234:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:16"
									},
									"returnParameters": {
										"id": 2356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "1268:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "1274:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:16"
									},
									"scope": 3328,
									"src": "1207:493:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2414,
										"nodeType": "Block",
										"src": "1887:114:16",
										"statements": [
											{
												"id": 2413,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2399,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2392,
																"src": "1925:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2406,
														"nodeType": "IfStatement",
														"src": "1921:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2404,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2398,
															"id": 2405,
															"nodeType": "Return",
															"src": "1933:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2408,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2390,
																		"src": "1978:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2409,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2392,
																		"src": "1982:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2411,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2398,
														"id": 2412,
														"nodeType": "Return",
														"src": "1964:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2388,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:16",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2390,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "1827:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "1838:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:16"
									},
									"returnParameters": {
										"id": 2398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "1872:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "1878:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:16"
									},
									"scope": 3328,
									"src": "1811:190:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2442,
										"nodeType": "Block",
										"src": "2198:114:16",
										"statements": [
											{
												"id": 2441,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2427,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2420,
																"src": "2236:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2434,
														"nodeType": "IfStatement",
														"src": "2232:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2432,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2426,
															"id": 2433,
															"nodeType": "Return",
															"src": "2244:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2436,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2418,
																		"src": "2289:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2437,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2420,
																		"src": "2293:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2439,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2426,
														"id": 2440,
														"nodeType": "Return",
														"src": "2275:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2416,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:16",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2443,
												"src": "2138:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2443,
												"src": "2149:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:16"
									},
									"returnParameters": {
										"id": 2426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2443,
												"src": "2183:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2422,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2443,
												"src": "2189:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:16"
									},
									"scope": 3328,
									"src": "2122:190:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2460,
										"nodeType": "Block",
										"src": "2449:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2453,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2446,
															"src": "2466:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2454,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2448,
															"src": "2470:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2457,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2448,
														"src": "2478:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:16",
													"trueExpression": {
														"id": 2456,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2446,
														"src": "2474:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2452,
												"id": 2459,
												"nodeType": "Return",
												"src": "2459:20:16"
											}
										]
									},
									"documentation": {
										"id": 2444,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:16",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "2395:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2448,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "2406:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:16"
									},
									"returnParameters": {
										"id": 2452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "2440:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:16"
									},
									"scope": 3328,
									"src": "2382:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2478,
										"nodeType": "Block",
										"src": "2624:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2471,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2464,
															"src": "2641:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2472,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2466,
															"src": "2645:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2475,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2466,
														"src": "2653:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:16",
													"trueExpression": {
														"id": 2474,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2464,
														"src": "2649:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2470,
												"id": 2477,
												"nodeType": "Return",
												"src": "2634:20:16"
											}
										]
									},
									"documentation": {
										"id": 2462,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:16",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2464,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2479,
												"src": "2570:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2479,
												"src": "2581:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:16"
									},
									"returnParameters": {
										"id": 2470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2479,
												"src": "2615:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:16"
									},
									"scope": 3328,
									"src": "2557:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2501,
										"nodeType": "Block",
										"src": "2845:82:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2489,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2482,
																	"src": "2900:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2490,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2484,
																	"src": "2904:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2492,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2498,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2493,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2482,
																		"src": "2910:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2494,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2484,
																		"src": "2914:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2496,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2488,
												"id": 2500,
												"nodeType": "Return",
												"src": "2892:28:16"
											}
										]
									},
									"documentation": {
										"id": 2480,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:16",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "2791:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "2802:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:16"
									},
									"returnParameters": {
										"id": 2488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "2836:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:16"
									},
									"scope": 3328,
									"src": "2774:153:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2535,
										"nodeType": "Block",
										"src": "3219:260:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2512,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2507,
														"src": "3233:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2513,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2520,
												"nodeType": "IfStatement",
												"src": "3229:127:16",
												"trueBody": {
													"id": 2519,
													"nodeType": "Block",
													"src": "3241:115:16",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2515,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2505,
																	"src": "3340:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2516,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2507,
																	"src": "3344:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2511,
															"id": 2518,
															"nodeType": "Return",
															"src": "3333:12:16"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2521,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2505,
															"src": "3444:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2525,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2505,
																			"src": "3458:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2528,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2529,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2507,
																"src": "3467:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:16",
													"trueExpression": {
														"hexValue": "30",
														"id": 2524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2511,
												"id": 2534,
												"nodeType": "Return",
												"src": "3437:35:16"
											}
										]
									},
									"documentation": {
										"id": 2503,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:16",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2505,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "3165:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "3176:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:16"
									},
									"returnParameters": {
										"id": 2511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "3210:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:16"
									},
									"scope": 3328,
									"src": "3148:331:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2661,
										"nodeType": "Block",
										"src": "3901:4018:16",
										"statements": [
											{
												"id": 2660,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:16",
												"statements": [
													{
														"assignments": [
															2549
														],
														"declarations": [
															{
																"constant": false,
																"id": 2549,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2660,
																"src": "4232:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2548,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2553,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2550,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2539,
																"src": "4248:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2551,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2541,
																"src": "4252:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:16"
													},
													{
														"assignments": [
															2555
														],
														"declarations": [
															{
																"constant": false,
																"id": 2555,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2660,
																"src": "4312:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2554,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2556,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:16"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:16",
															"nodeType": "YulBlock",
															"src": "4392:122:16",
															"statements": [
																{
																	"nativeSrc": "4410:30:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:16",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:16"
																				},
																				"nativeSrc": "4433:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:16"
																		},
																		"nativeSrc": "4420:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:16"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:16",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:16",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:16"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:16"
																				},
																				"nativeSrc": "4470:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:16"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:16"
																				},
																				"nativeSrc": "4486:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:16"
																		},
																		"nativeSrc": "4466:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2549,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2549,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2555,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2539,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2541,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:16",
																"valueSize": 1
															}
														],
														"id": 2557,
														"nodeType": "InlineAssembly",
														"src": "4383:131:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2558,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2555,
																"src": "4595:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2566,
														"nodeType": "IfStatement",
														"src": "4591:368:16",
														"trueBody": {
															"id": 2565,
															"nodeType": "Block",
															"src": "4607:352:16",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2561,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2549,
																			"src": "4925:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2562,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2543,
																			"src": "4933:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2547,
																	"id": 2564,
																	"nodeType": "Return",
																	"src": "4918:26:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2567,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2543,
																"src": "5065:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2568,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2555,
																"src": "5080:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2574,
														"nodeType": "IfStatement",
														"src": "5061:88:16",
														"trueBody": {
															"id": 2573,
															"nodeType": "Block",
															"src": "5087:62:16",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2570,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2280,
																			"src": "5112:20:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2572,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:16"
																}
															]
														}
													},
													{
														"assignments": [
															2576
														],
														"declarations": [
															{
																"constant": false,
																"id": 2576,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:16",
																"nodeType": "VariableDeclaration",
																"scope": 2660,
																"src": "5404:17:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2575,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2577,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:16"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:16",
															"nodeType": "YulBlock",
															"src": "5444:291:16",
															"statements": [
																{
																	"nativeSrc": "5513:38:16",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:16"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:16"
																		},
																		"nativeSrc": "5526:25:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:16"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:16",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:16"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:16",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:16"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:16"
																				},
																				"nativeSrc": "5653:20:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:16"
																		},
																		"nativeSrc": "5642:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:16",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:16"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:16"
																		},
																		"nativeSrc": "5700:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2543,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2549,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2549,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2549,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2555,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2555,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2576,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2576,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2576,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2539,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2541,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:16",
																"valueSize": 1
															}
														],
														"id": 2578,
														"nodeType": "InlineAssembly",
														"src": "5435:300:16"
													},
													{
														"assignments": [
															2580
														],
														"declarations": [
															{
																"constant": false,
																"id": 2580,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:16",
																"nodeType": "VariableDeclaration",
																"scope": 2660,
																"src": "5939:12:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2579,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2587,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2581,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2543,
																"src": "5954:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2583,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2543,
																			"src": "5973:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2585,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:16"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:16",
															"nodeType": "YulBlock",
															"src": "6008:362:16",
															"statements": [
																{
																	"nativeSrc": "6073:37:16",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:16"
																		},
																		"nativeSrc": "6088:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:16"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:16",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:16",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:16"
																		},
																		"nativeSrc": "6186:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:16",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:16",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:16",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:16",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:16"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:16"
																						},
																						"nativeSrc": "6333:12:16",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:16"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:16"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:16"
																				},
																				"nativeSrc": "6329:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:16",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:16"
																		},
																		"nativeSrc": "6325:31:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:16"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:16",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2543,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2543,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2549,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2549,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2580,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2580,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2580,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2580,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2580,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:16",
																"valueSize": 1
															}
														],
														"id": 2588,
														"nodeType": "InlineAssembly",
														"src": "5999:371:16"
													},
													{
														"expression": {
															"id": 2593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2589,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2549,
																"src": "6436:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2590,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2555,
																	"src": "6445:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2591,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2580,
																	"src": "6453:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2594,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:16"
													},
													{
														"assignments": [
															2596
														],
														"declarations": [
															{
																"constant": false,
																"id": 2596,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:16",
																"nodeType": "VariableDeclaration",
																"scope": 2660,
																"src": "6775:15:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2595,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2603,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2598,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2543,
																			"src": "6798:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2600,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:16"
													},
													{
														"expression": {
															"id": 2610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2604,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2596,
																"src": "7031:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2606,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2543,
																		"src": "7046:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2607,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2596,
																		"src": "7060:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2611,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:16"
													},
													{
														"expression": {
															"id": 2618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2612,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2596,
																"src": "7100:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2614,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2543,
																		"src": "7115:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2615,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2596,
																		"src": "7129:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2619,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:16"
													},
													{
														"expression": {
															"id": 2626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2620,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2596,
																"src": "7170:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2622,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2543,
																		"src": "7185:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2623,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2596,
																		"src": "7199:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2627,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:16"
													},
													{
														"expression": {
															"id": 2634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2628,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2596,
																"src": "7240:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2630,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2543,
																		"src": "7255:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2631,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2596,
																		"src": "7269:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2635,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:16"
													},
													{
														"expression": {
															"id": 2642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2636,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2596,
																"src": "7310:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2638,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2543,
																		"src": "7325:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2639,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2596,
																		"src": "7339:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2643,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:16"
													},
													{
														"expression": {
															"id": 2650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2644,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2596,
																"src": "7381:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2646,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2543,
																		"src": "7396:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2647,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2596,
																		"src": "7410:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2651,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:16"
													},
													{
														"expression": {
															"id": 2656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2652,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2546,
																"src": "7851:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2653,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2549,
																	"src": "7860:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2654,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2596,
																	"src": "7868:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2657,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:16"
													},
													{
														"expression": {
															"id": 2658,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2546,
															"src": "7896:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2547,
														"id": 2659,
														"nodeType": "Return",
														"src": "7889:13:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2537,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:16",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2539,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2662,
												"src": "3819:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2662,
												"src": "3830:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2662,
												"src": "3841:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:16"
									},
									"returnParameters": {
										"id": 2547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2662,
												"src": "3885:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:16"
									},
									"scope": 3328,
									"src": "3803:4116:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2704,
										"nodeType": "Block",
										"src": "8161:192:16",
										"statements": [
											{
												"assignments": [
													2678
												],
												"declarations": [
													{
														"constant": false,
														"id": 2678,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2704,
														"src": "8171:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2677,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2684,
												"initialValue": {
													"arguments": [
														{
															"id": 2680,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2665,
															"src": "8195:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2681,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2667,
															"src": "8198:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2682,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2669,
															"src": "8201:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2679,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2662,
															2705
														],
														"referencedDeclaration": 2662,
														"src": "8188:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2686,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2672,
																"src": "8244:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2285",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2285",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2685,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3327,
															"src": "8227:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2285_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2689,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2665,
																	"src": "8264:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2690,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2667,
																	"src": "8267:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2691,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2669,
																	"src": "8270:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2688,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2701,
												"nodeType": "IfStatement",
												"src": "8223:101:16",
												"trueBody": {
													"id": 2700,
													"nodeType": "Block",
													"src": "8288:36:16",
													"statements": [
														{
															"expression": {
																"id": 2698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2696,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2678,
																	"src": "8302:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2699,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:16"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2702,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2678,
													"src": "8340:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2676,
												"id": 2703,
												"nodeType": "Return",
												"src": "8333:13:16"
											}
										]
									},
									"documentation": {
										"id": 2663,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:16",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2665,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2705,
												"src": "8067:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2705,
												"src": "8078:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2669,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2705,
												"src": "8089:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2672,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2705,
												"src": "8110:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2285",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2671,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2670,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2285,
														"src": "8110:8:16"
													},
													"referencedDeclaration": 2285,
													"src": "8110:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2285",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:16"
									},
									"returnParameters": {
										"id": 2676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2705,
												"src": "8152:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:16"
									},
									"scope": 3328,
									"src": "8051:302:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2816,
										"nodeType": "Block",
										"src": "8644:1585:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2713,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2708,
														"src": "8658:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2719,
												"nodeType": "IfStatement",
												"src": "8654:45:16",
												"trueBody": {
													"id": 2718,
													"nodeType": "Block",
													"src": "8666:33:16",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2712,
															"id": 2717,
															"nodeType": "Return",
															"src": "8680:8:16"
														}
													]
												}
											},
											{
												"assignments": [
													2721
												],
												"declarations": [
													{
														"constant": false,
														"id": 2721,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2816,
														"src": "9378:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2720,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2730,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2722,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2724,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2708,
																			"src": "9406:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2723,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2984,
																			3019
																		],
																		"referencedDeclaration": 2984,
																		"src": "9401:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2728,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:16"
											},
											{
												"id": 2815,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:16",
												"statements": [
													{
														"expression": {
															"id": 2740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2731,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2721,
																"src": "9839:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2732,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2721,
																				"src": "9849:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2735,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2733,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2708,
																					"src": "9858:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2734,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2721,
																					"src": "9862:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2737,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2741,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:16"
													},
													{
														"expression": {
															"id": 2751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2742,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2721,
																"src": "9888:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2743,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2721,
																				"src": "9898:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2746,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2744,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2708,
																					"src": "9907:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2745,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2721,
																					"src": "9911:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2748,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2752,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:16"
													},
													{
														"expression": {
															"id": 2762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2753,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2721,
																"src": "9937:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2754,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2721,
																				"src": "9947:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2757,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2755,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2708,
																					"src": "9956:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2756,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2721,
																					"src": "9960:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2759,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2763,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:16"
													},
													{
														"expression": {
															"id": 2773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2764,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2721,
																"src": "9986:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2765,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2721,
																				"src": "9996:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2768,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2766,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2708,
																					"src": "10005:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2767,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2721,
																					"src": "10009:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2770,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2774,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:16"
													},
													{
														"expression": {
															"id": 2784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2775,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2721,
																"src": "10035:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2776,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2721,
																				"src": "10045:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2779,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2777,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2708,
																					"src": "10054:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2778,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2721,
																					"src": "10058:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2781,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2785,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:16"
													},
													{
														"expression": {
															"id": 2795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2786,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2721,
																"src": "10084:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2787,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2721,
																				"src": "10094:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2788,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2708,
																					"src": "10103:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2789,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2721,
																					"src": "10107:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2792,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2796,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:16"
													},
													{
														"expression": {
															"id": 2806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2797,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2721,
																"src": "10133:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2802,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2798,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2721,
																				"src": "10143:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2801,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2799,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2708,
																					"src": "10152:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2800,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2721,
																					"src": "10156:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2803,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2807,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:16"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2809,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2721,
																	"src": "10193:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2810,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2708,
																		"src": "10201:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2811,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2721,
																		"src": "10205:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2808,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2479,
																"src": "10189:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2712,
														"id": 2814,
														"nodeType": "Return",
														"src": "10182:30:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2706,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:16",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "8601:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:16"
									},
									"returnParameters": {
										"id": 2712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "8635:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:16"
									},
									"scope": 3328,
									"src": "8587:1642:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2851,
										"nodeType": "Block",
										"src": "10405:164:16",
										"statements": [
											{
												"id": 2850,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:16",
												"statements": [
													{
														"assignments": [
															2829
														],
														"declarations": [
															{
																"constant": false,
																"id": 2829,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 2850,
																"src": "10439:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2828,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2833,
														"initialValue": {
															"arguments": [
																{
																	"id": 2831,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2820,
																	"src": "10461:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2830,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2817,
																	2852
																],
																"referencedDeclaration": 2817,
																"src": "10456:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2834,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2829,
																"src": "10484:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2836,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2823,
																						"src": "10511:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2285",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2285",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2835,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3327,
																					"src": "10494:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2285_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2842,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2840,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2838,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2829,
																						"src": "10524:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2839,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2829,
																						"src": "10533:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2841,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2820,
																					"src": "10542:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2847,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2827,
														"id": 2849,
														"nodeType": "Return",
														"src": "10477:75:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2818,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:16",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2820,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2852,
												"src": "10343:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2823,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2852,
												"src": "10354:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2285",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2822,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2821,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2285,
														"src": "10354:8:16"
													},
													"referencedDeclaration": 2285,
													"src": "10354:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2285",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:16"
									},
									"returnParameters": {
										"id": 2827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2852,
												"src": "10396:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:16"
									},
									"scope": 3328,
									"src": "10329:240:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2983,
										"nodeType": "Block",
										"src": "10760:922:16",
										"statements": [
											{
												"assignments": [
													2861
												],
												"declarations": [
													{
														"constant": false,
														"id": 2861,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2983,
														"src": "10770:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2860,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2863,
												"initialValue": {
													"hexValue": "30",
													"id": 2862,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:16"
											},
											{
												"id": 2980,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2864,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2855,
																	"src": "10826:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2878,
														"nodeType": "IfStatement",
														"src": "10822:99:16",
														"trueBody": {
															"id": 2877,
															"nodeType": "Block",
															"src": "10844:77:16",
															"statements": [
																{
																	"expression": {
																		"id": 2871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2869,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2855,
																			"src": "10862:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2870,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2872,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:16"
																},
																{
																	"expression": {
																		"id": 2875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2873,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2861,
																			"src": "10893:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2876,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2879,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2855,
																	"src": "10938:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2882,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2893,
														"nodeType": "IfStatement",
														"src": "10934:96:16",
														"trueBody": {
															"id": 2892,
															"nodeType": "Block",
															"src": "10955:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 2886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2884,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2855,
																			"src": "10973:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2885,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2887,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:16"
																},
																{
																	"expression": {
																		"id": 2890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2888,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2861,
																			"src": "11003:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2891,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2894,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2855,
																	"src": "11047:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2908,
														"nodeType": "IfStatement",
														"src": "11043:96:16",
														"trueBody": {
															"id": 2907,
															"nodeType": "Block",
															"src": "11064:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 2901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2899,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2855,
																			"src": "11082:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2902,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:16"
																},
																{
																	"expression": {
																		"id": 2905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2903,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2861,
																			"src": "11112:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2906,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2909,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2855,
																	"src": "11156:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2912,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2923,
														"nodeType": "IfStatement",
														"src": "11152:96:16",
														"trueBody": {
															"id": 2922,
															"nodeType": "Block",
															"src": "11173:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 2916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2914,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2855,
																			"src": "11191:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2917,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:16"
																},
																{
																	"expression": {
																		"id": 2920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2918,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2861,
																			"src": "11221:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2919,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2921,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2924,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2855,
																	"src": "11265:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2938,
														"nodeType": "IfStatement",
														"src": "11261:93:16",
														"trueBody": {
															"id": 2937,
															"nodeType": "Block",
															"src": "11281:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 2931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2929,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2855,
																			"src": "11299:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2932,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:16"
																},
																{
																	"expression": {
																		"id": 2935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2933,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2861,
																			"src": "11328:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2934,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2936,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2939,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2855,
																	"src": "11371:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2953,
														"nodeType": "IfStatement",
														"src": "11367:93:16",
														"trueBody": {
															"id": 2952,
															"nodeType": "Block",
															"src": "11387:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 2946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2944,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2855,
																			"src": "11405:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2947,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:16"
																},
																{
																	"expression": {
																		"id": 2950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2948,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2861,
																			"src": "11434:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2951,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2954,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2855,
																	"src": "11477:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2968,
														"nodeType": "IfStatement",
														"src": "11473:93:16",
														"trueBody": {
															"id": 2967,
															"nodeType": "Block",
															"src": "11493:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 2961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2959,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2855,
																			"src": "11511:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2962,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:16"
																},
																{
																	"expression": {
																		"id": 2965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2963,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2861,
																			"src": "11540:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2964,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2966,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2969,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2855,
																	"src": "11583:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2979,
														"nodeType": "IfStatement",
														"src": "11579:64:16",
														"trueBody": {
															"id": 2978,
															"nodeType": "Block",
															"src": "11599:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 2976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2974,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2861,
																			"src": "11617:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2977,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2981,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2861,
													"src": "11669:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2859,
												"id": 2982,
												"nodeType": "Return",
												"src": "11662:13:16"
											}
										]
									},
									"documentation": {
										"id": 2853,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:16",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2855,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2984,
												"src": "10713:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:16"
									},
									"returnParameters": {
										"id": 2859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2984,
												"src": "10751:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:16"
									},
									"scope": 3328,
									"src": "10699:983:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3018,
										"nodeType": "Block",
										"src": "11915:168:16",
										"statements": [
											{
												"id": 3017,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:16",
												"statements": [
													{
														"assignments": [
															2996
														],
														"declarations": [
															{
																"constant": false,
																"id": 2996,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3017,
																"src": "11949:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2995,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3000,
														"initialValue": {
															"arguments": [
																{
																	"id": 2998,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2987,
																	"src": "11971:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2997,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2984,
																	3019
																],
																"referencedDeclaration": 2984,
																"src": "11966:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3001,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2996,
																"src": "11998:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3003,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2990,
																						"src": "12025:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2285",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2285",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3002,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3327,
																					"src": "12008:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2285_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3004,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3009,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3007,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3005,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 3006,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2996,
																						"src": "12043:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3008,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2987,
																					"src": "12052:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3014,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2994,
														"id": 3016,
														"nodeType": "Return",
														"src": "11991:75:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2985,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:16",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2987,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3019,
												"src": "11849:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2990,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3019,
												"src": "11864:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2285",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2989,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2988,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2285,
														"src": "11864:8:16"
													},
													"referencedDeclaration": 2285,
													"src": "11864:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2285",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:16"
									},
									"returnParameters": {
										"id": 2994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3019,
												"src": "11906:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:16"
									},
									"scope": 3328,
									"src": "11835:248:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3147,
										"nodeType": "Block",
										"src": "12276:854:16",
										"statements": [
											{
												"assignments": [
													3028
												],
												"declarations": [
													{
														"constant": false,
														"id": 3028,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3147,
														"src": "12286:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3027,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3030,
												"initialValue": {
													"hexValue": "30",
													"id": 3029,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:16"
											},
											{
												"id": 3144,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3031,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3022,
																"src": "12342:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 3034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3047,
														"nodeType": "IfStatement",
														"src": "12338:103:16",
														"trueBody": {
															"id": 3046,
															"nodeType": "Block",
															"src": "12361:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 3040,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3036,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3022,
																			"src": "12379:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 3039,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3037,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3038,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3041,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:16"
																},
																{
																	"expression": {
																		"id": 3044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3042,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3028,
																			"src": "12414:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3043,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3045,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3048,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3022,
																"src": "12458:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 3051,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3064,
														"nodeType": "IfStatement",
														"src": "12454:103:16",
														"trueBody": {
															"id": 3063,
															"nodeType": "Block",
															"src": "12477:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 3057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3053,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3022,
																			"src": "12495:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 3056,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3055,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3058,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:16"
																},
																{
																	"expression": {
																		"id": 3061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3059,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3028,
																			"src": "12530:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3062,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3065,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3022,
																"src": "12574:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 3068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3081,
														"nodeType": "IfStatement",
														"src": "12570:103:16",
														"trueBody": {
															"id": 3080,
															"nodeType": "Block",
															"src": "12593:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 3074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3070,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3022,
																			"src": "12611:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3071,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3072,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3075,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:16"
																},
																{
																	"expression": {
																		"id": 3078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3076,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3028,
																			"src": "12646:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3079,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3082,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3022,
																"src": "12690:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3085,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3098,
														"nodeType": "IfStatement",
														"src": "12686:100:16",
														"trueBody": {
															"id": 3097,
															"nodeType": "Block",
															"src": "12708:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 3091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3087,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3022,
																			"src": "12726:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3090,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3088,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3089,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3092,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:16"
																},
																{
																	"expression": {
																		"id": 3095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3093,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3028,
																			"src": "12760:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3096,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3099,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3022,
																"src": "12803:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3115,
														"nodeType": "IfStatement",
														"src": "12799:100:16",
														"trueBody": {
															"id": 3114,
															"nodeType": "Block",
															"src": "12821:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 3108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3104,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3022,
																			"src": "12839:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3105,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3106,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3109,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:16"
																},
																{
																	"expression": {
																		"id": 3112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3110,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3028,
																			"src": "12873:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3113,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3116,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3022,
																"src": "12916:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3132,
														"nodeType": "IfStatement",
														"src": "12912:100:16",
														"trueBody": {
															"id": 3131,
															"nodeType": "Block",
															"src": "12934:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 3125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3121,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3022,
																			"src": "12952:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3122,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3123,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3126,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:16"
																},
																{
																	"expression": {
																		"id": 3129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3127,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3028,
																			"src": "12986:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3130,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3133,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3022,
																"src": "13029:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3143,
														"nodeType": "IfStatement",
														"src": "13025:66:16",
														"trueBody": {
															"id": 3142,
															"nodeType": "Block",
															"src": "13047:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 3140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3138,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3028,
																			"src": "13065:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3141,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3145,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3028,
													"src": "13117:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3026,
												"id": 3146,
												"nodeType": "Return",
												"src": "13110:13:16"
											}
										]
									},
									"documentation": {
										"id": 3020,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:16",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3022,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3148,
												"src": "12229:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:16"
									},
									"returnParameters": {
										"id": 3026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3148,
												"src": "12267:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:16"
									},
									"scope": 3328,
									"src": "12214:916:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3182,
										"nodeType": "Block",
										"src": "13365:170:16",
										"statements": [
											{
												"id": 3181,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:16",
												"statements": [
													{
														"assignments": [
															3160
														],
														"declarations": [
															{
																"constant": false,
																"id": 3160,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3181,
																"src": "13399:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3159,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3164,
														"initialValue": {
															"arguments": [
																{
																	"id": 3162,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3151,
																	"src": "13422:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3161,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3148,
																	3183
																],
																"referencedDeclaration": 3148,
																"src": "13416:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3165,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3160,
																"src": "13449:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3167,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3154,
																						"src": "13476:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2285",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2285",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3166,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3327,
																					"src": "13459:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2285_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3168,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3173,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3171,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3169,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3170,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3160,
																						"src": "13495:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3172,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3151,
																					"src": "13504:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3178,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3158,
														"id": 3180,
														"nodeType": "Return",
														"src": "13442:76:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3149,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:16",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3151,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3183,
												"src": "13299:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3154,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3183,
												"src": "13314:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2285",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3153,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3152,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2285,
														"src": "13314:8:16"
													},
													"referencedDeclaration": 2285,
													"src": "13314:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2285",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:16"
									},
									"returnParameters": {
										"id": 3158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3183,
												"src": "13356:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:16"
									},
									"scope": 3328,
									"src": "13284:251:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3269,
										"nodeType": "Block",
										"src": "13855:600:16",
										"statements": [
											{
												"assignments": [
													3192
												],
												"declarations": [
													{
														"constant": false,
														"id": 3192,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3269,
														"src": "13865:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3191,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3194,
												"initialValue": {
													"hexValue": "30",
													"id": 3193,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:16"
											},
											{
												"id": 3266,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3195,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3186,
																	"src": "13921:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3198,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3209,
														"nodeType": "IfStatement",
														"src": "13917:98:16",
														"trueBody": {
															"id": 3208,
															"nodeType": "Block",
															"src": "13939:76:16",
															"statements": [
																{
																	"expression": {
																		"id": 3202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3200,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3186,
																			"src": "13957:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3203,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:16"
																},
																{
																	"expression": {
																		"id": 3206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3204,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3192,
																			"src": "13988:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3207,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3210,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3186,
																	"src": "14032:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3224,
														"nodeType": "IfStatement",
														"src": "14028:95:16",
														"trueBody": {
															"id": 3223,
															"nodeType": "Block",
															"src": "14049:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3215,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3186,
																			"src": "14067:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3218,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:16"
																},
																{
																	"expression": {
																		"id": 3221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3219,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3192,
																			"src": "14097:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3222,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3225,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3186,
																	"src": "14140:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3239,
														"nodeType": "IfStatement",
														"src": "14136:95:16",
														"trueBody": {
															"id": 3238,
															"nodeType": "Block",
															"src": "14157:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3230,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3186,
																			"src": "14175:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3233,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:16"
																},
																{
																	"expression": {
																		"id": 3236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3234,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3192,
																			"src": "14205:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3237,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3240,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3186,
																	"src": "14248:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3254,
														"nodeType": "IfStatement",
														"src": "14244:95:16",
														"trueBody": {
															"id": 3253,
															"nodeType": "Block",
															"src": "14265:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3245,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3186,
																			"src": "14283:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3248,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:16"
																},
																{
																	"expression": {
																		"id": 3251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3249,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3192,
																			"src": "14313:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3252,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3255,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3186,
																	"src": "14356:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3265,
														"nodeType": "IfStatement",
														"src": "14352:64:16",
														"trueBody": {
															"id": 3264,
															"nodeType": "Block",
															"src": "14372:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 3262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3260,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3192,
																			"src": "14390:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3263,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3267,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3192,
													"src": "14442:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3190,
												"id": 3268,
												"nodeType": "Return",
												"src": "14435:13:16"
											}
										]
									},
									"documentation": {
										"id": 3184,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:16",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3186,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3270,
												"src": "13808:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:16"
									},
									"returnParameters": {
										"id": 3190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3270,
												"src": "13846:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:16"
									},
									"scope": 3328,
									"src": "13792:663:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3307,
										"nodeType": "Block",
										"src": "14692:177:16",
										"statements": [
											{
												"id": 3306,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:16",
												"statements": [
													{
														"assignments": [
															3282
														],
														"declarations": [
															{
																"constant": false,
																"id": 3282,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3306,
																"src": "14726:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3281,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3286,
														"initialValue": {
															"arguments": [
																{
																	"id": 3284,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3273,
																	"src": "14750:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3283,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3270,
																	3308
																],
																"referencedDeclaration": 3270,
																"src": "14743:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3287,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3282,
																"src": "14777:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3289,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3276,
																						"src": "14804:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2285",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2285",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3288,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3327,
																					"src": "14787:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2285_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3290,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3298,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3296,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3291,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3294,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3292,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3282,
																									"src": "14823:6:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3293,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3295,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3297,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3273,
																					"src": "14838:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3301,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3303,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3280,
														"id": 3305,
														"nodeType": "Return",
														"src": "14770:82:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3271,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:16",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3273,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3308,
												"src": "14626:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3276,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3308,
												"src": "14641:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2285",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3275,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3274,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2285,
														"src": "14641:8:16"
													},
													"referencedDeclaration": 2285,
													"src": "14641:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2285",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:16"
									},
									"returnParameters": {
										"id": 3280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3308,
												"src": "14683:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:16"
									},
									"scope": 3328,
									"src": "14610:259:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3326,
										"nodeType": "Block",
										"src": "15067:48:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3319,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3312,
																	"src": "15090:8:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2285",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2285",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3317,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3323,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3316,
												"id": 3325,
												"nodeType": "Return",
												"src": "15077:31:16"
											}
										]
									},
									"documentation": {
										"id": 3309,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:16",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3312,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3327,
												"src": "15019:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2285",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3311,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3310,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2285,
														"src": "15019:8:16"
													},
													"referencedDeclaration": 2285,
													"src": "15019:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2285",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:16"
									},
									"returnParameters": {
										"id": 3316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3327,
												"src": "15061:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:16"
									},
									"scope": 3328,
									"src": "14993:122:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3329,
							"src": "203:14914:16",
							"usedErrors": [
								2280
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3433
						]
					},
					"id": 3434,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3330,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3331,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:17",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3433,
							"linearizedBaseContracts": [
								3433
							],
							"name": "SignedMath",
							"nameLocation": "224:10:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3348,
										"nodeType": "Block",
										"src": "376:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3341,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3334,
															"src": "393:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3342,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3336,
															"src": "397:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3345,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3336,
														"src": "405:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:17",
													"trueExpression": {
														"id": 3344,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3334,
														"src": "401:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3340,
												"id": 3347,
												"nodeType": "Return",
												"src": "386:20:17"
											}
										]
									},
									"documentation": {
										"id": 3332,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:17",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3334,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3349,
												"src": "325:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3333,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3336,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3349,
												"src": "335:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3335,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:17"
									},
									"returnParameters": {
										"id": 3340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3349,
												"src": "368:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3338,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:17"
									},
									"scope": 3433,
									"src": "312:101:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3366,
										"nodeType": "Block",
										"src": "555:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3359,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3352,
															"src": "572:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3360,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3354,
															"src": "576:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3363,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3354,
														"src": "584:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:17",
													"trueExpression": {
														"id": 3362,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3352,
														"src": "580:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3358,
												"id": 3365,
												"nodeType": "Return",
												"src": "565:20:17"
											}
										]
									},
									"documentation": {
										"id": 3350,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:17",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3352,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3367,
												"src": "504:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3351,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3354,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3367,
												"src": "514:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3353,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:17"
									},
									"returnParameters": {
										"id": 3358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3367,
												"src": "547:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3356,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:17"
									},
									"scope": 3433,
									"src": "491:101:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3410,
										"nodeType": "Block",
										"src": "797:162:17",
										"statements": [
											{
												"assignments": [
													3378
												],
												"declarations": [
													{
														"constant": false,
														"id": 3378,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:17",
														"nodeType": "VariableDeclaration",
														"scope": 3410,
														"src": "859:8:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3377,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3391,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3379,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3370,
																	"src": "871:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3380,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3372,
																	"src": "875:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3382,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3383,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3370,
																				"src": "882:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3384,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3372,
																				"src": "886:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3386,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3389,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:17"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3392,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3378,
														"src": "911:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3400,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3397,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3378,
																						"src": "931:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3396,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3395,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:17",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3398,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3399,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3393,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3402,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3370,
																				"src": "945:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3403,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3372,
																				"src": "949:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3405,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3407,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3376,
												"id": 3409,
												"nodeType": "Return",
												"src": "904:48:17"
											}
										]
									},
									"documentation": {
										"id": 3368,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:17",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3370,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3411,
												"src": "746:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3369,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3372,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3411,
												"src": "756:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3371,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:17"
									},
									"returnParameters": {
										"id": 3376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3411,
												"src": "789:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3374,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:17"
									},
									"scope": 3433,
									"src": "729:230:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3431,
										"nodeType": "Block",
										"src": "1103:158:17",
										"statements": [
											{
												"id": 3430,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:17",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3421,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3414,
																			"src": "1228:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:17",
																		"subExpression": {
																			"id": 3425,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3414,
																			"src": "1242:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:17",
																	"trueExpression": {
																		"id": 3424,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3414,
																		"src": "1237:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3419,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 3428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3418,
														"id": 3429,
														"nodeType": "Return",
														"src": "1213:31:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3412,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:17",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3414,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3432,
												"src": "1061:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3413,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:17"
									},
									"returnParameters": {
										"id": 3418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3432,
												"src": "1094:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:17"
									},
									"scope": 3433,
									"src": "1048:213:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3434,
							"src": "216:1047:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:17"
				},
				"id": 17
			},
			"contracts/NFT.sol": {
				"ast": {
					"absolutePath": "contracts/NFT.sol",
					"exportedSymbols": {
						"Context": [
							1983
						],
						"ERC721": [
							1664
						],
						"ERC721URIStorage": [
							1925
						],
						"IERC165": [
							2274
						],
						"IERC4906": [
							514
						],
						"Initializable": [
							253
						],
						"MQNFT": [
							3628
						],
						"Ownable": [
							486
						],
						"ReentrancyGuardUpgradeable": [
							338
						],
						"Strings": [
							2238
						]
					},
					"id": 3629,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3435,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:18"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 3436,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3629,
							"sourceUnit": 1926,
							"src": "60:78:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3437,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3629,
							"sourceUnit": 487,
							"src": "140:52:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"id": 3438,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3629,
							"sourceUnit": 339,
							"src": "194:85:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3439,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"301:16:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1925,
										"src": "301:16:18"
									},
									"id": 3440,
									"nodeType": "InheritanceSpecifier",
									"src": "301:16:18"
								},
								{
									"baseName": {
										"id": 3441,
										"name": "Ownable",
										"nameLocations": [
											"319:7:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 486,
										"src": "319:7:18"
									},
									"id": 3442,
									"nodeType": "InheritanceSpecifier",
									"src": "319:7:18"
								},
								{
									"baseName": {
										"id": 3443,
										"name": "ReentrancyGuardUpgradeable",
										"nameLocations": [
											"327:26:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 338,
										"src": "327:26:18"
									},
									"id": 3444,
									"nodeType": "InheritanceSpecifier",
									"src": "327:26:18"
								}
							],
							"canonicalName": "MQNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3628,
							"linearizedBaseContracts": [
								3628,
								338,
								253,
								486,
								1925,
								1664,
								608,
								1953,
								514,
								1781,
								2262,
								2274,
								1983
							],
							"name": "MQNFT",
							"nameLocation": "292:5:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "84c4bd4b",
									"id": 3446,
									"mutability": "mutable",
									"name": "_tokenIdCounter",
									"nameLocation": "376:15:18",
									"nodeType": "VariableDeclaration",
									"scope": 3628,
									"src": "361:30:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3445,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "361:7:18",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0387da42",
									"id": 3448,
									"mutability": "mutable",
									"name": "_mintPrice",
									"nameLocation": "413:10:18",
									"nodeType": "VariableDeclaration",
									"scope": 3628,
									"src": "398:25:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3447,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "398:7:18",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6075851e",
									"id": 3450,
									"mutability": "mutable",
									"name": "_masterAddress",
									"nameLocation": "445:14:18",
									"nodeType": "VariableDeclaration",
									"scope": 3628,
									"src": "430:29:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3449,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "430:7:18",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0a4fa1dd",
									"id": 3452,
									"mutability": "mutable",
									"name": "_marketPlaceAddress",
									"nameLocation": "481:19:18",
									"nodeType": "VariableDeclaration",
									"scope": 3628,
									"src": "466:34:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3451,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "466:7:18",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "82a09cc58c9cecf0eb61d8994283ec804165931801f8b77e42dcb3b556c5c5be",
									"id": 3460,
									"name": "TokenCreated",
									"nameLocation": "515:12:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3454,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "544:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3460,
												"src": "528:23:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "528:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3456,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "569:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3460,
												"src": "553:21:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "553:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3458,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenURI",
												"nameLocation": "583:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3460,
												"src": "576:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3457,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "576:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "527:65:18"
									},
									"src": "509:84:18"
								},
								{
									"body": {
										"id": 3493,
										"nodeType": "Block",
										"src": "675:176:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3474,
																"name": "mintPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3462,
																"src": "694:9:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "706:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "694:13:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d696e7450726963652069732067726561746572207468616e207a65726f",
															"id": 3477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "709:32:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_00052edcff9af26a43dacfb193d1551f4a2d191bc2a8ffeacdfcf1710a5074de",
																"typeString": "literal_string \"mintPrice is greater than zero\""
															},
															"value": "mintPrice is greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_00052edcff9af26a43dacfb193d1551f4a2d191bc2a8ffeacdfcf1710a5074de",
																"typeString": "literal_string \"mintPrice is greater than zero\""
															}
														],
														"id": 3473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "686:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "686:56:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3479,
												"nodeType": "ExpressionStatement",
												"src": "686:56:18"
											},
											{
												"expression": {
													"id": 3482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3480,
														"name": "_tokenIdCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3446,
														"src": "753:15:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 3481,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "771:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "753:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3483,
												"nodeType": "ExpressionStatement",
												"src": "753:19:18"
											},
											{
												"expression": {
													"id": 3486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3484,
														"name": "_mintPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3448,
														"src": "783:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3485,
														"name": "mintPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3462,
														"src": "796:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "783:22:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3487,
												"nodeType": "ExpressionStatement",
												"src": "783:22:18"
											},
											{
												"expression": {
													"id": 3491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3488,
														"name": "_masterAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3450,
														"src": "816:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3489,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "833:3:18",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "837:6:18",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "833:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "816:27:18",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3492,
												"nodeType": "ExpressionStatement",
												"src": "816:27:18"
											}
										]
									},
									"id": 3494,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d514e4654",
													"id": 3465,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "639:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_0b39de7fe85528eab25c5def0346d03e1f6447445ebdf468e30eb4c80e4b1060",
														"typeString": "literal_string \"MQNFT\""
													},
													"value": "MQNFT"
												},
												{
													"hexValue": "4d5154",
													"id": 3466,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "648:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_f7667b830154877377062a54010ecc3ee32929a6c09a2ec8704e490c01aa40d1",
														"typeString": "literal_string \"MQT\""
													},
													"value": "MQT"
												}
											],
											"id": 3467,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3464,
												"name": "ERC721",
												"nameLocations": [
													"632:6:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1664,
												"src": "632:6:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "632:22:18"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 3469,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "663:3:18",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 3470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "667:6:18",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "663:10:18",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3471,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3468,
												"name": "Ownable",
												"nameLocations": [
													"655:7:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 486,
												"src": "655:7:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "655:19:18"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3462,
												"mutability": "mutable",
												"name": "mintPrice",
												"nameLocation": "621:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 3494,
												"src": "613:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "612:19:18"
									},
									"returnParameters": {
										"id": 3472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:0:18"
									},
									"scope": 3628,
									"src": "601:250:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3522,
										"nodeType": "Block",
										"src": "935:168:18",
										"statements": [
											{
												"expression": {
													"id": 3503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3501,
														"name": "_marketPlaceAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3452,
														"src": "946:19:18",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3502,
														"name": "marketPlaceAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3496,
														"src": "968:18:18",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "946:40:18",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3504,
												"nodeType": "ExpressionStatement",
												"src": "946:40:18"
											},
											{
												"body": {
													"id": 3520,
													"nodeType": "Block",
													"src": "1038:58:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3516,
																		"name": "_marketPlaceAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3452,
																		"src": "1061:19:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3517,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3506,
																		"src": "1082:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3515,
																	"name": "approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 876,
																	"src": "1053:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 3518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1053:31:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3519,
															"nodeType": "ExpressionStatement",
															"src": "1053:31:18"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3509,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3506,
														"src": "1015:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3510,
														"name": "_tokenIdCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3446,
														"src": "1017:15:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1015:17:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3521,
												"initializationExpression": {
													"assignments": [
														3506
													],
													"declarations": [
														{
															"constant": false,
															"id": 3506,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1010:1:18",
															"nodeType": "VariableDeclaration",
															"scope": 3521,
															"src": "1002:9:18",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3505,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1002:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3508,
													"initialValue": {
														"hexValue": "30",
														"id": 3507,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1012:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1002:11:18"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1034:3:18",
														"subExpression": {
															"id": 3512,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3506,
															"src": "1034:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3514,
													"nodeType": "ExpressionStatement",
													"src": "1034:3:18"
												},
												"nodeType": "ForStatement",
												"src": "997:99:18"
											}
										]
									},
									"functionSelector": "cc98ef96",
									"id": 3523,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3499,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3498,
												"name": "onlyOwner",
												"nameLocations": [
													"926:9:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 397,
												"src": "926:9:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "926:9:18"
										}
									],
									"name": "setMarketPlaceAddress",
									"nameLocation": "868:21:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3496,
												"mutability": "mutable",
												"name": "marketPlaceAddress",
												"nameLocation": "898:18:18",
												"nodeType": "VariableDeclaration",
												"scope": 3523,
												"src": "890:26:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:28:18"
									},
									"returnParameters": {
										"id": 3500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "935:0:18"
									},
									"scope": 3628,
									"src": "859:244:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3534,
										"nodeType": "Block",
										"src": "1169:41:18",
										"statements": [
											{
												"expression": {
													"id": 3532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3530,
														"name": "_mintPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3448,
														"src": "1180:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3531,
														"name": "mintPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3525,
														"src": "1193:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1180:22:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3533,
												"nodeType": "ExpressionStatement",
												"src": "1180:22:18"
											}
										]
									},
									"functionSelector": "f4a0a528",
									"id": 3535,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3528,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3527,
												"name": "onlyOwner",
												"nameLocations": [
													"1159:9:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 397,
												"src": "1159:9:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "1159:9:18"
										}
									],
									"name": "setMintPrice",
									"nameLocation": "1120:12:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3525,
												"mutability": "mutable",
												"name": "mintPrice",
												"nameLocation": "1141:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 3535,
												"src": "1133:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:19:18"
									},
									"returnParameters": {
										"id": 3529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1169:0:18"
									},
									"scope": 3628,
									"src": "1111:99:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3546,
										"nodeType": "Block",
										"src": "1284:49:18",
										"statements": [
											{
												"expression": {
													"id": 3544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3542,
														"name": "_masterAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3450,
														"src": "1295:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3543,
														"name": "masterAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3537,
														"src": "1312:13:18",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1295:30:18",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3545,
												"nodeType": "ExpressionStatement",
												"src": "1295:30:18"
											}
										]
									},
									"functionSelector": "5d06a611",
									"id": 3547,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3540,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3539,
												"name": "onlyOwner",
												"nameLocations": [
													"1274:9:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 397,
												"src": "1274:9:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "1274:9:18"
										}
									],
									"name": "setMasterAddress",
									"nameLocation": "1227:16:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3537,
												"mutability": "mutable",
												"name": "masterAddress",
												"nameLocation": "1252:13:18",
												"nodeType": "VariableDeclaration",
												"scope": 3547,
												"src": "1244:21:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:23:18"
									},
									"returnParameters": {
										"id": 3541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1284:0:18"
									},
									"scope": 3628,
									"src": "1218:115:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3596,
										"nodeType": "Block",
										"src": "1427:356:18",
										"statements": [
											{
												"assignments": [
													3557
												],
												"declarations": [
													{
														"constant": false,
														"id": 3557,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "1446:7:18",
														"nodeType": "VariableDeclaration",
														"scope": 3596,
														"src": "1438:15:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3556,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1438:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3559,
												"initialValue": {
													"id": 3558,
													"name": "_tokenIdCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3446,
													"src": "1456:15:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1438:33:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3561,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1490:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1494:5:18",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1490:9:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 3563,
																"name": "_mintPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3448,
																"src": "1503:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1490:23:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820455448",
															"id": 3565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1515:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a",
																"typeString": "literal_string \"Not enough ETH\""
															},
															"value": "Not enough ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a",
																"typeString": "literal_string \"Not enough ETH\""
															}
														],
														"id": 3560,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1482:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1482:50:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3567,
												"nodeType": "ExpressionStatement",
												"src": "1482:50:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3569,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1553:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1557:6:18",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1553:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3571,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3557,
															"src": "1565:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3568,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1286,
															1312
														],
														"referencedDeclaration": 1286,
														"src": "1543:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1543:30:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3573,
												"nodeType": "ExpressionStatement",
												"src": "1543:30:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3575,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3557,
															"src": "1597:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3576,
															"name": "tokenURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3549,
															"src": "1606:8:18",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3574,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1924,
														"src": "1584:12:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1584:31:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3578,
												"nodeType": "ExpressionStatement",
												"src": "1584:31:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3580,
															"name": "_marketPlaceAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3452,
															"src": "1634:19:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3581,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3557,
															"src": "1655:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3579,
														"name": "approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "1626:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1626:37:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3583,
												"nodeType": "ExpressionStatement",
												"src": "1626:37:18"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3585,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3557,
															"src": "1692:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3586,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1701:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1705:6:18",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1701:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3588,
															"name": "tokenURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3549,
															"src": "1713:8:18",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3584,
														"name": "TokenCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3460,
														"src": "1679:12:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,address,string memory)"
														}
													},
													"id": 3589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1679:43:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3590,
												"nodeType": "EmitStatement",
												"src": "1674:48:18"
											},
											{
												"expression": {
													"id": 3592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1733:17:18",
													"subExpression": {
														"id": 3591,
														"name": "_tokenIdCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3446,
														"src": "1733:15:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3593,
												"nodeType": "ExpressionStatement",
												"src": "1733:17:18"
											},
											{
												"expression": {
													"id": 3594,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3557,
													"src": "1768:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3555,
												"id": 3595,
												"nodeType": "Return",
												"src": "1761:14:18"
											}
										]
									},
									"functionSelector": "fb37e883",
									"id": 3597,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3552,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3551,
												"name": "nonReentrant",
												"nameLocations": [
													"1397:12:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 298,
												"src": "1397:12:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "1397:12:18"
										}
									],
									"name": "mintNFT",
									"nameLocation": "1350:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3549,
												"mutability": "mutable",
												"name": "tokenURI",
												"nameLocation": "1372:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3597,
												"src": "1358:22:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3548,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1358:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1357:24:18"
									},
									"returnParameters": {
										"id": 3555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3597,
												"src": "1419:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1419:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1418:9:18"
									},
									"scope": 3628,
									"src": "1341:442:18",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3626,
										"nodeType": "Block",
										"src": "1820:287:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3601,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1839:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1843:6:18",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1839:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3603,
																"name": "_masterAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3450,
																"src": "1853:14:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1839:28:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206d61737465722061646472657373",
															"id": 3605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1869:20:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_638577bb24e430bfb6d1d8a9d5466bf3f38c559db3bf705cb3f80a995566acc6",
																"typeString": "literal_string \"Not master address\""
															},
															"value": "Not master address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_638577bb24e430bfb6d1d8a9d5466bf3f38c559db3bf705cb3f80a995566acc6",
																"typeString": "literal_string \"Not master address\""
															}
														],
														"id": 3600,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1831:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1831:59:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3607,
												"nodeType": "ExpressionStatement",
												"src": "1831:59:18"
											},
											{
												"assignments": [
													3609,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 3609,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1986:7:18",
														"nodeType": "VariableDeclaration",
														"scope": 3626,
														"src": "1981:12:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3608,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1981:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 3620,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 3618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2049:2:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 3610,
																"name": "_masterAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3450,
																"src": "1999:14:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2014:4:18",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1999:19:18",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 3617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 3614,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2034:4:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MQNFT_$3628",
																				"typeString": "contract MQNFT"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_MQNFT_$3628",
																				"typeString": "contract MQNFT"
																			}
																		],
																		"id": 3613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2026:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3612,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2026:7:18",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2026:13:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 3616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2040:7:18",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2026:21:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1999:49:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 3619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1999:53:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1980:72:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3622,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3609,
															"src": "2071:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65642e",
															"id": 3623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2080:18:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
																"typeString": "literal_string \"Transfer failed.\""
															},
															"value": "Transfer failed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
																"typeString": "literal_string \"Transfer failed.\""
															}
														],
														"id": 3621,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2063:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2063:36:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3625,
												"nodeType": "ExpressionStatement",
												"src": "2063:36:18"
											}
										]
									},
									"functionSelector": "0fdb1c10",
									"id": 3627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withDraw",
									"nameLocation": "1800:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:18"
									},
									"returnParameters": {
										"id": 3599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1820:0:18"
									},
									"scope": 3628,
									"src": "1791:316:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3629,
							"src": "283:1827:18",
							"usedErrors": [
								16,
								19,
								352,
								357,
								566,
								571,
								580,
								585,
								590,
								597,
								602,
								607
							],
							"usedEvents": [
								24,
								363,
								506,
								513,
								1680,
								1689,
								1698,
								3460
							]
						}
					],
					"src": "33:2079:18"
				},
				"id": 18
			}
		}
	}
}