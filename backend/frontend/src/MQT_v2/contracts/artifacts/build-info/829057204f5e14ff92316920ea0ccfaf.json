{
	"id": "829057204f5e14ff92316920ea0ccfaf",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MQT.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\ncontract MQTOpenCollection is Initializable, ERC721URIStorageUpgradeable, OwnableUpgradeable, ReentrancyGuardUpgradeable {\n    uint256 private _tokenIds;\n    address payable public mintPaymentReceiver;\n    uint256 public mintPrice;\n\n    event TokenCreated(uint256 indexed tokenId, address indexed owner, string tokenURI, uint256 price);\n    \n    function initialize(uint256 _mintPrice, address payable _mintPaymentReceiver) public initializer {\n        __ERC721URIStorage_init();\n        __Ownable_init(msg.sender);\n        __ReentrancyGuard_init(); \n        __ERC721_init(\"MetaqeeurToken\", \"MQT\");\n        mintPrice = _mintPrice;\n        mintPaymentReceiver = _mintPaymentReceiver;    \n    }\n\n    function setPaymentReceiver(address payable _receiver) public onlyOwner {\n        mintPaymentReceiver = _receiver;\n    }\n\n    function setMintPrice(uint256 _price) public onlyOwner {\n        require(_price > 0, \"mintPrice must be a positive number\");\n        mintPrice = _price;\n    }\n\n    function mintNFT(string memory tokenURI, uint256 price) public payable nonReentrant returns (uint256) {\n        require(msg.value >= mintPrice, \"Price must be greater than mintPrice\");\n\n        _tokenIds++;\n        uint256 newTokenId = _tokenIds;\n        _mint(msg.sender, newTokenId);\n        _setTokenURI(newTokenId, tokenURI);\n        \n        // Transfer the minting fee to the mintPaymentReceiver\n        mintPaymentReceiver.transfer(msg.value);\n\n        emit TokenCreated(newTokenId, msg.sender, tokenURI, price);\n        return newTokenId;\n    }\n\n    // Function to withdraw to contract owner's address\n    function withdraw() public {\n        uint256 balance = address(this).balance;\n        require(balance > 0, \"No balance to withdraw\");\n        require(payable(msg.sender) == mintPaymentReceiver, \"Not the payment receiver\");\n        mintPaymentReceiver.transfer(balance);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721Upgradeable} from \"../ERC721Upgradeable.sol\";\nimport {Strings} from \"@openzeppelin/contracts/utils/Strings.sol\";\nimport {IERC4906} from \"@openzeppelin/contracts/interfaces/IERC4906.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorageUpgradeable is Initializable, IERC4906, ERC721Upgradeable {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC721URIStorage\n    struct ERC721URIStorageStorage {\n        // Optional mapping for token URIs\n        mapping(uint256 tokenId => string) _tokenURIs;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC721URIStorage\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC721URIStorageStorageLocation = 0x0542a41881ee128a365a727b282c86fa859579490b9bb45aab8503648c8e7900;\n\n    function _getERC721URIStorageStorage() private pure returns (ERC721URIStorageStorage storage $) {\n        assembly {\n            $.slot := ERC721URIStorageStorageLocation\n        }\n    }\n\n    function __ERC721URIStorage_init() internal onlyInitializing {\n    }\n\n    function __ERC721URIStorage_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721Upgradeable, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        ERC721URIStorageStorage storage $ = _getERC721URIStorageStorage();\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = $._tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        ERC721URIStorageStorage storage $ = _getERC721URIStorageStorage();\n        $._tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport {IERC721Receiver} from \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {Strings} from \"@openzeppelin/contracts/utils/Strings.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {ERC165Upgradeable} from \"../../utils/introspection/ERC165Upgradeable.sol\";\nimport {IERC721Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC721\n    struct ERC721Storage {\n        // Token name\n        string _name;\n\n        // Token symbol\n        string _symbol;\n\n        mapping(uint256 tokenId => address) _owners;\n\n        mapping(address owner => uint256) _balances;\n\n        mapping(uint256 tokenId => address) _tokenApprovals;\n\n        mapping(address owner => mapping(address operator => bool)) _operatorApprovals;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC721\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC721StorageLocation = 0x80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300;\n\n    function _getERC721Storage() private pure returns (ERC721Storage storage $) {\n        assembly {\n            $.slot := ERC721StorageLocation\n        }\n    }\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    function __ERC721_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC721_init_unchained(name_, symbol_);\n    }\n\n    function __ERC721_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC721Storage storage $ = _getERC721Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        ERC721Storage storage $ = _getERC721Storage();\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return $._balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        ERC721Storage storage $ = _getERC721Storage();\n        unchecked {\n            $._balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        ERC721Storage storage $ = _getERC721Storage();\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                $._balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                $._balances[to] += 1;\n            }\n        }\n\n        $._owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        ERC721Storage storage $ = _getERC721Storage();\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        $._tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        ERC721Storage storage $ = _getERC721Storage();\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        $._operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ReentrancyGuardUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f\",\"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 463,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 532,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol": {
				"ERC721Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":\"ERC721Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0x48efca78ce4e1a9f74d3ca8539bb53d04b116e507c10cd9e0df6105b8a6ae420\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d9f5e03898857a187d99bd0766daf725abe87f454db82ac6286544d8cb4532f\",\"dweb:/ipfs/QmXFNXaNuxvGCLNL9xAFbvEgRmXDuxw4Ukf9tddiAHDq59\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol": {
				"ERC721URIStorageUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":\"ERC721URIStorageUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0x48efca78ce4e1a9f74d3ca8539bb53d04b116e507c10cd9e0df6105b8a6ae420\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d9f5e03898857a187d99bd0766daf725abe87f454db82ac6286544d8cb4532f\",\"dweb:/ipfs/QmXFNXaNuxvGCLNL9xAFbvEgRmXDuxw4Ukf9tddiAHDq59\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":{\"keccak256\":\"0x7e68925d3373bd2baa7ac36839c464b2e77b67764201c4e0196d62699ee220b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0896e7ff605a131ca982da1175d798c19588852dc74329f5c3675ac76cb80ff\",\"dweb:/ipfs/QmdePp3XmXaKz4A9qqj6enFuqERWvJoN4uRmFzu2cwLPX8\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ERC165Upgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D ADD 0x1F PUSH10 0xBF6E659C6D111FB8052 0xDA EXTCODESIZE SWAP11 PUSH3 0x6D292B 0x25 MSIZE TLOAD PUSH16 0xC5A403F14A616B64736F6C6343000819 STOP CALLER ",
							"sourceMap": "251:2847:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D ADD 0x1F PUSH10 0xBF6E659C6D111FB8052 0xDA EXTCODESIZE SWAP11 PUSH3 0x6D292B 0x25 MSIZE TLOAD PUSH16 0xC5A403F14A616B64736F6C6343000819 STOP CALLER ",
							"sourceMap": "251:2847:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MQT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MQT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE LOG2 0xEF EXTCODEHASH DUP9 0xBE DUP5 STOP 0xCE 0xBD SWAP8 CALLDATACOPY 0xB8 0xCB MLOAD PUSH28 0xF9973BFA41911F1861C42B7B76811B3164736F6C6343000819003300 ",
							"sourceMap": "216:1047:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE LOG2 0xEF EXTCODEHASH DUP9 0xBE DUP5 STOP 0xCE 0xBD SWAP8 CALLDATACOPY 0xB8 0xCB MLOAD PUSH28 0xF9973BFA41911F1861C42B7B76811B3164736F6C6343000819003300 ",
							"sourceMap": "216:1047:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MQT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MQT.sol": {
				"MQTOpenCollection": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "tokenURI",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "TokenCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_mintPrice",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "_mintPaymentReceiver",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenURI",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "mintNFT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintPaymentReceiver",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "setMintPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_receiver",
									"type": "address"
								}
							],
							"name": "setPaymentReceiver",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MQT.sol\":398:2277  contract MQTOpenCollection is Initializable, ERC721URIStorageUpgradeable, OwnableUpgradeable, ReentrancyGuardUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MQT.sol\":398:2277  contract MQTOpenCollection is Initializable, ERC721URIStorageUpgradeable, OwnableUpgradeable, ReentrancyGuardUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xda35a26f\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf4a0a528\n      eq\n      tag_24\n      jumpi\n      jump(tag_1)\n    tag_26:\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa2682c1d\n      eq\n      tag_18\n      jumpi\n      jump(tag_1)\n    tag_25:\n      dup1\n      0x3ccfd60b\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5afa3a72\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x65ebf99a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6817c76c\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_27:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":1843:2061  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721Upgradeable, IERC165) returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3546:3692  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4792:4946  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4618:4731  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5495:6073  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/MQT.sol\":2000:2275  function withdraw() public {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6139:6271  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      stop\n        /* \"contracts/MQT.sol\":1386:1938  function mintNFT(string memory tokenURI, uint256 price) public payable nonReentrant returns (uint256) {... */\n    tag_9:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3366:3484  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MQT.sol\":1096:1216  function setPaymentReceiver(address payable _receiver) public onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      stop\n        /* \"contracts/MQT.sol\":604:628  uint256 public mintPrice */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3044:3309  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3756:3906  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5013:5157  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      tag_105\n      jump\t// in\n    tag_102:\n      stop\n        /* \"contracts/MQT.sol\":556:598  address payable public mintPaymentReceiver */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6337:6545  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      tag_115\n      jump\t// in\n    tag_112:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2127:2797  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_117\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MQT.sol\":744:1090  function initialize(uint256 _mintPrice, address payable _mintPaymentReceiver) public initializer {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      tag_122\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      tag_125\n      jump\t// in\n    tag_122:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5223:5433  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_127\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      tag_130\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      tag_133\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_134\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_134:\n      tag_135\n      jump\t// in\n    tag_133:\n      stop\n        /* \"contracts/MQT.sol\":1222:1380  function setMintPrice(uint256 _price) public onlyOwner {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      tag_137\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_138\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_138:\n      tag_139\n      jump\t// in\n    tag_137:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":1843:2061  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721Upgradeable, IERC165) returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":1956:1960  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":943:953  0x49064906 */\n      0x49064906\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":936:954  bytes4(0x49064906) */\n      0xe0\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":1979:2014  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":1979:1990  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":1979:2014  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":1979:2054  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      dup1\n      tag_141\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2018:2054  super.supportsInterface(interfaceId) */\n      tag_142\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2042:2053  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2018:2041  super.supportsInterface */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2018:2054  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":1979:2054  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n    tag_141:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":1972:2054  return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":1843:2061  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721Upgradeable, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3546:3692  function name() public view virtual returns (string memory) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3591:3604  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3616:3639  ERC721Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3642:3661  _getERC721Storage() */\n      tag_145\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3642:3659  _getERC721Storage */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3642:3661  _getERC721Storage() */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3616:3661  ERC721Storage storage $ = _getERC721Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3678:3679  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3678:3685  $._name */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3671:3685  return $._name */\n      dup1\n      sload\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_149\n      swap1\n      tag_148\n      jump\t// in\n    tag_149:\n      dup1\n      iszero\n      tag_150\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_151\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_150)\n    tag_151:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_152:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_152\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_150:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3546:3692  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4792:4946  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4859:4866  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4878:4900  _requireOwned(tokenId) */\n      tag_154\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4892:4899  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4878:4891  _requireOwned */\n      tag_155\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4878:4900  _requireOwned(tokenId) */\n      jump\t// in\n    tag_154:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4918:4939  _getApproved(tokenId) */\n      tag_156\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4931:4938  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4918:4930  _getApproved */\n      tag_157\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4918:4939  _getApproved(tokenId) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4911:4939  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4792:4946  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4618:4731  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_51:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4689:4724  _approve(to, tokenId, _msgSender()) */\n      tag_159\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4698:4700  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4702:4709  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4711:4723  _msgSender() */\n      tag_160\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4711:4721  _msgSender */\n      tag_161\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4711:4723  _msgSender() */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4689:4697  _approve */\n      tag_162\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4689:4724  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4618:4731  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5495:6073  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_56:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5603:5604  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5589:5605  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5589:5591  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5589:5605  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5585:5672  if (to == address(0)) {... */\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5658:5659  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5628:5661  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5585:5672  if (to == address(0)) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5890:5911  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5914:5948  _update(to, tokenId, _msgSender()) */\n      tag_166\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5922:5924  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5926:5933  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5935:5947  _msgSender() */\n      tag_167\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5935:5945  _msgSender */\n      tag_161\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5935:5947  _msgSender() */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5914:5921  _update */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5914:5948  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5890:5948  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5979:5983  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5962:5983  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5962:5975  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5962:5983  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5958:6067  if (previousOwner != from) {... */\n      tag_169\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6027:6031  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6033:6040  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6042:6055  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6006:6056  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5958:6067  if (previousOwner != from) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5575:6073  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5495:6073  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MQT.sol\":2000:2275  function withdraw() public {... */\n    tag_59:\n        /* \"contracts/MQT.sol\":2037:2052  uint256 balance */\n      0x00\n        /* \"contracts/MQT.sol\":2055:2076  address(this).balance */\n      selfbalance\n        /* \"contracts/MQT.sol\":2037:2076  uint256 balance = address(this).balance */\n      swap1\n      pop\n        /* \"contracts/MQT.sol\":2104:2105  0 */\n      0x00\n        /* \"contracts/MQT.sol\":2094:2101  balance */\n      dup2\n        /* \"contracts/MQT.sol\":2094:2105  balance > 0 */\n      gt\n        /* \"contracts/MQT.sol\":2086:2132  require(balance > 0, \"No balance to withdraw\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"contracts/MQT.sol\":2173:2192  mintPaymentReceiver */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MQT.sol\":2150:2192  payable(msg.sender) == mintPaymentReceiver */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MQT.sol\":2158:2168  msg.sender */\n      caller\n        /* \"contracts/MQT.sol\":2150:2192  payable(msg.sender) == mintPaymentReceiver */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MQT.sol\":2142:2221  require(payable(msg.sender) == mintPaymentReceiver, \"Not the payment receiver\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"contracts/MQT.sol\":2231:2250  mintPaymentReceiver */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MQT.sol\":2231:2259  mintPaymentReceiver.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MQT.sol\":2231:2268  mintPaymentReceiver.transfer(balance) */\n      0x08fc\n        /* \"contracts/MQT.sol\":2260:2267  balance */\n      dup3\n        /* \"contracts/MQT.sol\":2231:2268  mintPaymentReceiver.transfer(balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_180\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_180:\n      pop\n        /* \"contracts/MQT.sol\":2027:2275  {... */\n      pop\n        /* \"contracts/MQT.sol\":2000:2275  function withdraw() public {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6139:6271  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_63:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6225:6264  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_182\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6242:6246  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6248:6250  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6252:6259  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6225:6264  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6225:6241  safeTransferFrom */\n      tag_115\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6225:6264  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6139:6271  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MQT.sol\":1386:1938  function mintNFT(string memory tokenURI, uint256 price) public payable nonReentrant returns (uint256) {... */\n    tag_67:\n        /* \"contracts/MQT.sol\":1479:1486  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      tag_184\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2545  _nonReentrantBefore */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      jump\t// in\n    tag_184:\n        /* \"contracts/MQT.sol\":1519:1528  mintPrice */\n      sload(0x34)\n        /* \"contracts/MQT.sol\":1506:1515  msg.value */\n      callvalue\n        /* \"contracts/MQT.sol\":1506:1528  msg.value >= mintPrice */\n      lt\n      iszero\n        /* \"contracts/MQT.sol\":1498:1569  require(msg.value >= mintPrice, \"Price must be greater than mintPrice\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"contracts/MQT.sol\":1580:1589  _tokenIds */\n      0x32\n      0x00\n        /* \"contracts/MQT.sol\":1580:1591  _tokenIds++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_190\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/MQT.sol\":1601:1619  uint256 newTokenId */\n      0x00\n        /* \"contracts/MQT.sol\":1622:1631  _tokenIds */\n      sload(0x32)\n        /* \"contracts/MQT.sol\":1601:1631  uint256 newTokenId = _tokenIds */\n      swap1\n      pop\n        /* \"contracts/MQT.sol\":1641:1670  _mint(msg.sender, newTokenId) */\n      tag_192\n        /* \"contracts/MQT.sol\":1647:1657  msg.sender */\n      caller\n        /* \"contracts/MQT.sol\":1659:1669  newTokenId */\n      dup3\n        /* \"contracts/MQT.sol\":1641:1646  _mint */\n      tag_193\n        /* \"contracts/MQT.sol\":1641:1670  _mint(msg.sender, newTokenId) */\n      jump\t// in\n    tag_192:\n        /* \"contracts/MQT.sol\":1680:1714  _setTokenURI(newTokenId, tokenURI) */\n      tag_194\n        /* \"contracts/MQT.sol\":1693:1703  newTokenId */\n      dup2\n        /* \"contracts/MQT.sol\":1705:1713  tokenURI */\n      dup6\n        /* \"contracts/MQT.sol\":1680:1692  _setTokenURI */\n      tag_195\n        /* \"contracts/MQT.sol\":1680:1714  _setTokenURI(newTokenId, tokenURI) */\n      jump\t// in\n    tag_194:\n        /* \"contracts/MQT.sol\":1796:1815  mintPaymentReceiver */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MQT.sol\":1796:1824  mintPaymentReceiver.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MQT.sol\":1796:1835  mintPaymentReceiver.transfer(msg.value) */\n      0x08fc\n        /* \"contracts/MQT.sol\":1825:1834  msg.value */\n      callvalue\n        /* \"contracts/MQT.sol\":1796:1835  mintPaymentReceiver.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_197\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_197:\n      pop\n        /* \"contracts/MQT.sol\":1876:1886  msg.sender */\n      caller\n        /* \"contracts/MQT.sol\":1851:1904  TokenCreated(newTokenId, msg.sender, tokenURI, price) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MQT.sol\":1864:1874  newTokenId */\n      dup2\n        /* \"contracts/MQT.sol\":1851:1904  TokenCreated(newTokenId, msg.sender, tokenURI, price) */\n      0x463ec2a62c46678a81e23cde640446ca4b512f102bb3309cf5a3e2a4ae831464\n        /* \"contracts/MQT.sol\":1888:1896  tokenURI */\n      dup7\n        /* \"contracts/MQT.sol\":1898:1903  price */\n      dup7\n        /* \"contracts/MQT.sol\":1851:1904  TokenCreated(newTokenId, msg.sender, tokenURI, price) */\n      mload(0x40)\n      tag_198\n      swap3\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/MQT.sol\":1921:1931  newTokenId */\n      dup1\n        /* \"contracts/MQT.sol\":1914:1931  return newTokenId */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      tag_200\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2586  _nonReentrantAfter */\n      tag_201\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      jump\t// in\n    tag_200:\n        /* \"contracts/MQT.sol\":1386:1938  function mintNFT(string memory tokenURI, uint256 price) public payable nonReentrant returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3366:3484  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3429:3436  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3455:3477  _requireOwned(tokenId) */\n      tag_203\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3469:3476  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3455:3468  _requireOwned */\n      tag_155\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3455:3477  _requireOwned(tokenId) */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3448:3477  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3366:3484  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MQT.sol\":1096:1216  function setPaymentReceiver(address payable _receiver) public onlyOwner {... */\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_205\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_205:\n        /* \"contracts/MQT.sol\":1200:1209  _receiver */\n      dup1\n        /* \"contracts/MQT.sol\":1178:1197  mintPaymentReceiver */\n      0x33\n      0x00\n        /* \"contracts/MQT.sol\":1178:1209  mintPaymentReceiver = _receiver */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MQT.sol\":1096:1216  function setPaymentReceiver(address payable _receiver) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/MQT.sol\":604:628  uint256 public mintPrice */\n    tag_82:\n      sload(0x34)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3044:3309  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3107:3114  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3126:3149  ERC721Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3152:3171  _getERC721Storage() */\n      tag_209\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3152:3169  _getERC721Storage */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3152:3171  _getERC721Storage() */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3126:3171  ERC721Storage storage $ = _getERC721Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3202:3203  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3185:3204  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3185:3190  owner */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3185:3204  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3181:3268  if (owner == address(0)) {... */\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3254:3255  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3227:3257  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3181:3268  if (owner == address(0)) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3284:3285  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3284:3295  $._balances */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3284:3302  $._balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3296:3301  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3284:3302  $._balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3277:3302  return $._balances[owner] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3044:3309  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_92:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_213\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_215\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_216\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_219\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3756:3906  function symbol() public view virtual returns (string memory) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3803:3816  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3828:3851  ERC721Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3854:3873  _getERC721Storage() */\n      tag_221\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3854:3871  _getERC721Storage */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3854:3873  _getERC721Storage() */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3828:3873  ERC721Storage storage $ = _getERC721Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3890:3891  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3890:3899  $._symbol */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3883:3899  return $._symbol */\n      dup1\n      sload\n      tag_222\n      swap1\n      tag_148\n      jump\t// in\n    tag_222:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_223\n      swap1\n      tag_148\n      jump\t// in\n    tag_223:\n      dup1\n      iszero\n      tag_224\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_225\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_224)\n    tag_225:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_226:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_226\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_224:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3756:3906  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5013:5157  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_105:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5098:5150  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_228\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5117:5129  _msgSender() */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5117:5127  _msgSender */\n      tag_161\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5117:5129  _msgSender() */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5131:5139  operator */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5141:5149  approved */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5098:5116  _setApprovalForAll */\n      tag_230\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5098:5150  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5013:5157  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MQT.sol\":556:598  address payable public mintPaymentReceiver */\n    tag_108:\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6337:6545  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_115:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6450:6481  transferFrom(from, to, tokenId) */\n      tag_232\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6463:6467  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6469:6471  to */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6473:6480  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6450:6462  transferFrom */\n      tag_56\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6450:6481  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6491:6538  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_233\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6514:6518  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6520:6522  to */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6524:6531  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6533:6537  data */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6491:6513  _checkOnERC721Received */\n      tag_234\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6491:6538  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":6337:6545  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2127:2797  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2200:2213  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2225:2258  ERC721URIStorageStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2261:2290  _getERC721URIStorageStorage() */\n      tag_236\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2261:2288  _getERC721URIStorageStorage */\n      tag_237\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2261:2290  _getERC721URIStorageStorage() */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2225:2290  ERC721URIStorageStorage storage $ = _getERC721URIStorageStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2300:2322  _requireOwned(tokenId) */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2314:2321  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2300:2313  _requireOwned */\n      tag_155\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2300:2322  _requireOwned(tokenId) */\n      jump\t// in\n    tag_238:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2333:2356  string memory _tokenURI */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2359:2360  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2359:2371  $._tokenURIs */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2359:2380  $._tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2372:2379  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2359:2380  $._tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2333:2380  string memory _tokenURI = $._tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_239\n      swap1\n      tag_148\n      jump\t// in\n    tag_239:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_240\n      swap1\n      tag_148\n      jump\t// in\n    tag_240:\n      dup1\n      iszero\n      tag_241\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_242\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_241)\n    tag_242:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_243:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_243\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_241:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2390:2408  string memory base */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2411:2421  _baseURI() */\n      tag_244\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2411:2419  _baseURI */\n      tag_245\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2411:2421  _baseURI() */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2390:2421  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2516:2517  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2500:2504  base */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2494:2512  bytes(base).length */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2494:2517  bytes(base).length == 0 */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2490:2560  if (bytes(base).length == 0) {... */\n      tag_246\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2540:2549  _tokenURI */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2533:2549  return _tokenURI */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_235)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2490:2560  if (bytes(base).length == 0) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2685:2686  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2665:2674  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2659:2682  bytes(_tokenURI).length */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2659:2686  bytes(_tokenURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2655:2750  if (bytes(_tokenURI).length > 0) {... */\n      iszero\n      tag_247\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2723:2727  base */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2729:2738  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2709:2739  string.concat(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_248\n      swap3\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2702:2739  return string.concat(base, _tokenURI) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_235)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2655:2750  if (bytes(_tokenURI).length > 0) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2767:2790  super.tokenURI(tokenId) */\n      tag_250\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2782:2789  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2767:2781  super.tokenURI */\n      tag_251\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2767:2790  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2760:2790  return super.tokenURI(tokenId) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2127:2797  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_235:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MQT.sol\":744:1090  function initialize(uint256 _mintPrice, address payable _mintPaymentReceiver) public initializer {... */\n    tag_125:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_254\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_255\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_255:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_256\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_256:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_257\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_257:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_258\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_258:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_259:\n        /* \"contracts/MQT.sol\":851:876  __ERC721URIStorage_init() */\n      tag_261\n        /* \"contracts/MQT.sol\":851:874  __ERC721URIStorage_init */\n      tag_262\n        /* \"contracts/MQT.sol\":851:876  __ERC721URIStorage_init() */\n      jump\t// in\n    tag_261:\n        /* \"contracts/MQT.sol\":886:912  __Ownable_init(msg.sender) */\n      tag_263\n        /* \"contracts/MQT.sol\":901:911  msg.sender */\n      caller\n        /* \"contracts/MQT.sol\":886:900  __Ownable_init */\n      tag_264\n        /* \"contracts/MQT.sol\":886:912  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_263:\n        /* \"contracts/MQT.sol\":922:946  __ReentrancyGuard_init() */\n      tag_265\n        /* \"contracts/MQT.sol\":922:944  __ReentrancyGuard_init */\n      tag_266\n        /* \"contracts/MQT.sol\":922:946  __ReentrancyGuard_init() */\n      jump\t// in\n    tag_265:\n        /* \"contracts/MQT.sol\":957:995  __ERC721_init(\"MetaqeeurToken\", \"MQT\") */\n      tag_267\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      0x4d6574617165657572546f6b656e000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x4d51540000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/MQT.sol\":957:970  __ERC721_init */\n      tag_268\n        /* \"contracts/MQT.sol\":957:995  __ERC721_init(\"MetaqeeurToken\", \"MQT\") */\n      jump\t// in\n    tag_267:\n        /* \"contracts/MQT.sol\":1017:1027  _mintPrice */\n      dup7\n        /* \"contracts/MQT.sol\":1005:1014  mintPrice */\n      0x34\n        /* \"contracts/MQT.sol\":1005:1027  mintPrice = _mintPrice */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MQT.sol\":1059:1079  _mintPaymentReceiver */\n      dup6\n        /* \"contracts/MQT.sol\":1037:1056  mintPaymentReceiver */\n      0x33\n      0x00\n        /* \"contracts/MQT.sol\":1037:1079  mintPaymentReceiver = _mintPaymentReceiver */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_270\n      swap2\n      swap1\n      tag_271\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/MQT.sol\":744:1090  function initialize(uint256 _mintPrice, address payable _mintPaymentReceiver) public initializer {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5223:5433  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5311:5315  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5327:5350  ERC721Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5353:5372  _getERC721Storage() */\n      tag_273\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5353:5370  _getERC721Storage */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5353:5372  _getERC721Storage() */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5327:5372  ERC721Storage storage $ = _getERC721Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5389:5390  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5389:5409  $._operatorApprovals */\n      0x05\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5389:5416  $._operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5410:5415  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5389:5416  $._operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5389:5426  $._operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5417:5425  operator */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5389:5426  $._operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5382:5426  return $._operatorApprovals[owner][operator] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":5223:5433  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_135:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_275\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_279\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_216\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/MQT.sol\":1222:1380  function setMintPrice(uint256 _price) public onlyOwner {... */\n    tag_139:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_281\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_281:\n        /* \"contracts/MQT.sol\":1304:1305  0 */\n      0x00\n        /* \"contracts/MQT.sol\":1295:1301  _price */\n      dup2\n        /* \"contracts/MQT.sol\":1295:1305  _price > 0 */\n      gt\n        /* \"contracts/MQT.sol\":1287:1345  require(_price > 0, \"mintPrice must be a positive number\") */\n      tag_283\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_284\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_283:\n        /* \"contracts/MQT.sol\":1367:1373  _price */\n      dup1\n        /* \"contracts/MQT.sol\":1355:1364  mintPrice */\n      0x34\n        /* \"contracts/MQT.sol\":1355:1373  mintPrice = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MQT.sol\":1222:1380  function setMintPrice(uint256 _price) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2674:2985  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165) returns (bool) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2787:2791  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2837:2862  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2822:2862  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2822:2833  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2822:2862  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2822:2926  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_287\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2893:2926  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2878:2926  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2878:2889  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2878:2926  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2822:2926  interfaceId == type(IERC721).interfaceId ||... */\n    tag_287:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2822:2978  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_288\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2942:2978  super.supportsInterface(interfaceId) */\n      tag_289\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2966:2977  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2942:2965  super.supportsInterface */\n      tag_290\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2942:2978  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_289:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2822:2978  interfaceId == type(IERC721).interfaceId ||... */\n    tag_288:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2803:2978  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2674:2985  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":1958:2114  function _getERC721Storage() private pure returns (ERC721Storage storage $) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2009:2032  ERC721Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2077:2098  ERC721StorageLocation */\n      0x80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2067:2098  $.slot := ERC721StorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":1958:2114  function _getERC721Storage() private pure returns (ERC721Storage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17836:18077  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17899:17906  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17918:17931  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17934:17951  _ownerOf(tokenId) */\n      tag_293\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17943:17950  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17934:17942  _ownerOf */\n      tag_294\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17934:17951  _ownerOf(tokenId) */\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17918:17951  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17982:17983  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17965:17984  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17965:17970  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17965:17984  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17961:18049  if (owner == address(0)) {... */\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18030:18037  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18007:18038  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17961:18049  if (owner == address(0)) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18065:18070  owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18058:18070  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17836:18077  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7347:7531  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7417:7424  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7436:7459  ERC721Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7462:7481  _getERC721Storage() */\n      tag_298\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7462:7479  _getERC721Storage */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7462:7481  _getERC721Storage() */\n      jump\t// in\n    tag_298:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7436:7481  ERC721Storage storage $ = _getERC721Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7498:7499  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7498:7515  $._tokenApprovals */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7498:7524  $._tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7516:7523  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7498:7524  $._tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7491:7524  return $._tokenApprovals[tokenId] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7347:7531  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16002:16122  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_162:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16082:16115  _approve(to, tokenId, auth, true) */\n      tag_301\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16091:16093  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16095:16102  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16104:16108  auth */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16110:16114  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16082:16090  _approve */\n      tag_302\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16082:16115  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_301:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16002:16122  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10361:11217  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10447:10454  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10466:10489  ERC721Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10492:10511  _getERC721Storage() */\n      tag_304\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10492:10509  _getERC721Storage */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10492:10511  _getERC721Storage() */\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10466:10511  ERC721Storage storage $ = _getERC721Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10521:10533  address from */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10536:10553  _ownerOf(tokenId) */\n      tag_305\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10545:10552  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10536:10544  _ownerOf */\n      tag_294\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10536:10553  _ownerOf(tokenId) */\n      jump\t// in\n    tag_305:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10521:10553  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10629:10630  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10613:10631  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10613:10617  auth */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10613:10631  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10609:10695  if (auth != address(0)) {... */\n      tag_306\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10647:10684  _checkAuthorized(from, auth, tokenId) */\n      tag_307\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10664:10668  from */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10670:10674  auth */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10676:10683  tokenId */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10647:10663  _checkAuthorized */\n      tag_308\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10647:10684  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_307:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10609:10695  if (auth != address(0)) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10755:10756  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10739:10757  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10739:10743  from */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10739:10757  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10735:10993  if (from != address(0)) {... */\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10855:10903  _approve(address(0), tokenId, address(0), false) */\n      tag_310\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10872:10873  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10876:10883  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10893:10894  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10897:10902  false */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10855:10863  _approve */\n      tag_302\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10855:10903  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_310:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10967:10968  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10946:10947  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10946:10957  $._balances */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10946:10963  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10958:10962  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10946:10963  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10946:10968  $._balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10735:10993  if (from != address(0)) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11021:11022  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11007:11023  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11007:11009  to */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11007:11023  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11003:11112  if (to != address(0)) {... */\n      tag_311\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11086:11087  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11067:11068  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11067:11078  $._balances */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11067:11082  $._balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11079:11081  to */\n      dup9\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11067:11082  $._balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11067:11087  $._balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11003:11112  if (to != address(0)) {... */\n    tag_311:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11143:11145  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11122:11123  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11122:11131  $._owners */\n      0x02\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11122:11140  $._owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11132:11139  tokenId */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11122:11140  $._owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11122:11145  $._owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11180:11187  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11176:11178  to */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11161:11188  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11170:11174  from */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11161:11188  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11206:11210  from */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11199:11210  return from */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":10361:11217  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2601:2888  function _nonReentrantBefore() private {... */\n    tag_185:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1851:1852  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2733:2740  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2733:2752  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2725:2788  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_313\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_314\n      swap1\n      tag_315\n      jump\t// in\n    tag_314:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_313:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1851:1852  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2863:2870  _status */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2863:2881  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2601:2888  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11539:11866  function _mint(address to, uint256 tokenId) internal {... */\n    tag_193:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11620:11621  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11606:11622  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11606:11608  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11606:11622  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11602:11689  if (to == address(0)) {... */\n      tag_317\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11675:11676  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11645:11678  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_318\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_318:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11602:11689  if (to == address(0)) {... */\n    tag_317:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11698:11719  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11722:11754  _update(to, tokenId, address(0)) */\n      tag_319\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11730:11732  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11734:11741  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11751:11752  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11722:11729  _update */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11722:11754  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_319:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11698:11754  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11793:11794  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11768:11795  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11768:11781  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11768:11795  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11764:11860  if (previousOwner != address(0)) {... */\n      tag_320\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11846:11847  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11818:11849  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_321\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11764:11860  if (previousOwner != address(0)) {... */\n    tag_320:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11592:11866  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":11539:11866  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2916:3160  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_195:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":3007:3040  ERC721URIStorageStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":3043:3072  _getERC721URIStorageStorage() */\n      tag_323\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":3043:3070  _getERC721URIStorageStorage */\n      tag_237\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":3043:3072  _getERC721URIStorageStorage() */\n      jump\t// in\n    tag_323:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":3007:3072  ERC721URIStorageStorage storage $ = _getERC721URIStorageStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":3106:3115  _tokenURI */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":3082:3083  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":3082:3094  $._tokenURIs */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":3082:3103  $._tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":3095:3102  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":3082:3103  $._tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":3082:3115  $._tokenURIs[tokenId] = _tokenURI */\n      swap1\n      dup2\n      tag_324\n      swap2\n      swap1\n      tag_325\n      jump\t// in\n    tag_324:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":3130:3153  MetadataUpdate(tokenId) */\n      0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":3145:3152  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":3130:3153  MetadataUpdate(tokenId) */\n      mload(0x40)\n      tag_326\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2997:3160  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":2916:3160  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2894:3103  function _nonReentrantAfter() private {... */\n    tag_201:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1808:1809  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":3074:3081  _status */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":3074:3096  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2894:3103  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_206:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_329\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_161\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_329:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_330\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_95\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_330:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_331\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_332\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_161\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_332:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_333\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_333:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_331:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_216:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_335\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_219\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_219:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17232:17601  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_230:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17335:17358  ERC721Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17361:17380  _getERC721Storage() */\n      tag_338\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17361:17378  _getERC721Storage */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17361:17380  _getERC721Storage() */\n      jump\t// in\n    tag_338:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17335:17380  ERC721Storage storage $ = _getERC721Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17414:17415  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17394:17416  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17394:17402  operator */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17394:17416  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17390:17481  if (operator == address(0)) {... */\n      tag_339\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17461:17469  operator */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17439:17470  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_340\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_340:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17390:17481  if (operator == address(0)) {... */\n    tag_339:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17530:17538  approved */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17490:17491  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17490:17510  $._operatorApprovals */\n      0x05\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17490:17517  $._operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17511:17516  owner */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17490:17517  $._operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17490:17527  $._operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17518:17526  operator */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17490:17527  $._operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17490:17538  $._operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17575:17583  operator */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17553:17594  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17568:17573  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17553:17594  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17585:17593  approved */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17553:17594  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_341\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_341:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17325:17601  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17232:17601  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18616:19398  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_234:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18749:18750  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18732:18734  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18732:18746  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18732:18750  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18728:19392  if (to.code.length > 0) {... */\n      iszero\n      tag_343\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18786:18788  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18770:18806  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18807:18819  _msgSender() */\n      tag_344\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18807:18817  _msgSender */\n      tag_161\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18807:18819  _msgSender() */\n      jump\t// in\n    tag_344:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18821:18825  from */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18827:18834  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18836:18840  data */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18770:18841  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_345\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_346\n      jump\t// in\n    tag_345:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_347\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_348\n      swap2\n      swap1\n      tag_349\n      jump\t// in\n    tag_348:\n      0x01\n    tag_347:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18766:19382  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_350\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_355\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_354)\n    tag_355:\n      0x60\n      swap2\n      pop\n    tag_354:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":19096:19097  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":19079:19085  reason */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":19079:19092  reason.length */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":19079:19097  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":19075:19368  if (reason.length == 0) {... */\n      tag_356\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":19150:19152  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":19128:19153  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_357\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_357:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":19075:19368  if (reason.length == 0) {... */\n    tag_356:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":19320:19326  reason */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":19314:19327  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":19305:19311  reason */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":19301:19303  32 */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":19297:19312  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":19290:19328  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18766:19382  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_350:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18898:18939  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18888:18939  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18888:18894  retval */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18888:18939  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18884:19014  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_360\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18992:18994  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18970:18995  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_361\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_361:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18884:19014  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_360:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18842:19028  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18728:19392  if (to.code.length > 0) {... */\n    tag_343:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":18616:19398  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":1434:1620  function _getERC721URIStorageStorage() private pure returns (ERC721URIStorageStorage storage $) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":1495:1528  ERC721URIStorageStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":1573:1604  ERC721URIStorageStorageLocation */\n      0x0542a41881ee128a365a727b282c86fa859579490b9bb45aab8503648c8e7900\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":1563:1604  $.slot := ERC721URIStorageStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":1434:1620  function _getERC721URIStorageStorage() private pure returns (ERC721URIStorageStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4469:4561  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4520:4533  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4545:4554  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4469:4561  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3972:4227  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4036:4049  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4061:4083  _requireOwned(tokenId) */\n      tag_365\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4075:4082  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4061:4074  _requireOwned */\n      tag_155\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4061:4083  _requireOwned(tokenId) */\n      jump\t// in\n    tag_365:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4094:4115  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4118:4128  _baseURI() */\n      tag_366\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4118:4126  _baseURI */\n      tag_245\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4118:4128  _baseURI() */\n      jump\t// in\n    tag_366:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4094:4128  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4169:4170  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4151:4158  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4145:4166  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4145:4170  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4145:4220  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_367\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_368)\n    tag_367:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4187:4194  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4196:4214  tokenId.toString() */\n      tag_369\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4196:4203  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4196:4212  tokenId.toString */\n      tag_370\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4196:4214  tokenId.toString() */\n      jump\t// in\n    tag_369:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4173:4215  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_371\n      swap3\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_371:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4145:4220  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_368:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":4138:4220  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":3972:4227  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":1626:1694  function __ERC721URIStorage_init() internal onlyInitializing {... */\n    tag_262:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_374\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_375\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_374:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":1626:1694  function __ERC721URIStorage_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_264:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_378\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_375\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_378:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_380\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_381\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_380:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1889:2000  function __ReentrancyGuard_init() internal onlyInitializing {... */\n    tag_266:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_383\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_375\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_383:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1959:1993  __ReentrancyGuard_init_unchained() */\n      tag_385\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1959:1991  __ReentrancyGuard_init_unchained */\n      tag_386\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1959:1993  __ReentrancyGuard_init_unchained() */\n      jump\t// in\n    tag_385:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1889:2000  function __ReentrancyGuard_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2233:2382  function __ERC721_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_268:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_388\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_375\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_388:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2336:2375  __ERC721_init_unchained(name_, symbol_) */\n      tag_390\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2360:2365  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2367:2374  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2336:2359  __ERC721_init_unchained */\n      tag_391\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2336:2375  __ERC721_init_unchained(name_, symbol_) */\n      jump\t// in\n    tag_390:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2233:2382  function __ERC721_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1034:1180  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1110:1114  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1148:1173  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1133:1173  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1133:1144  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1133:1173  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1126:1173  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1034:1180  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7059:7231  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7125:7132  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7144:7167  ERC721Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7170:7189  _getERC721Storage() */\n      tag_394\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7170:7187  _getERC721Storage */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7170:7189  _getERC721Storage() */\n      jump\t// in\n    tag_394:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7144:7189  ERC721Storage storage $ = _getERC721Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7206:7207  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7206:7215  $._owners */\n      0x02\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7206:7224  $._owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7216:7223  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7206:7224  $._owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7199:7224  return $._owners[tokenId] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7059:7231  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16304:17023  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_302:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16408:16431  ERC721Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16434:16453  _getERC721Storage() */\n      tag_396\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16434:16451  _getERC721Storage */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16434:16453  _getERC721Storage() */\n      jump\t// in\n    tag_396:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16408:16453  ERC721Storage storage $ = _getERC721Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16519:16528  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16519:16550  emitEvent || auth != address(0) */\n      dup1\n      tag_397\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16548:16549  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16532:16550  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16532:16536  auth */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16532:16550  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16519:16550  emitEvent || auth != address(0) */\n    tag_397:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16515:16975  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_398\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16566:16579  address owner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16582:16604  _requireOwned(tokenId) */\n      tag_399\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16596:16603  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16582:16595  _requireOwned */\n      tag_155\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16582:16604  _requireOwned(tokenId) */\n      jump\t// in\n    tag_399:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16566:16604  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16748:16749  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16732:16750  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16732:16736  auth */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16732:16750  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16732:16767  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_400\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16763:16767  auth */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16754:16767  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16754:16759  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16754:16767  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16732:16767  auth != address(0) && owner != auth */\n    tag_400:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16732:16801  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_401\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16772:16801  isApprovedForAll(owner, auth) */\n      tag_402\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16789:16794  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16796:16800  auth */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16772:16788  isApprovedForAll */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16772:16801  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_402:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16771:16801  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16732:16801  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_401:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16728:16870  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_403\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16850:16854  auth */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16828:16855  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_404\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_404:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16728:16870  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_403:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16888:16897  emitEvent */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16884:16965  if (emitEvent) {... */\n      iszero\n      tag_405\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16942:16949  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16938:16940  to */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16922:16950  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16931:16936  owner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16922:16950  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16884:16965  if (emitEvent) {... */\n    tag_405:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16552:16975  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16515:16975  if (emitEvent || auth != address(0)) {... */\n    tag_398:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17014:17016  to */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16985:16986  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16985:17002  $._tokenApprovals */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16985:17011  $._tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":17003:17010  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16985:17011  $._tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16985:17016  $._tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16398:17023  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":16304:17023  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8548:8916  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_308:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8660:8698  _isAuthorized(owner, spender, tokenId) */\n      tag_407\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8674:8679  owner */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8681:8688  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8690:8697  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8660:8673  _isAuthorized */\n      tag_408\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8660:8698  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_407:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8655:8910  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_409\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8735:8736  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8718:8737  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8718:8723  owner */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8718:8737  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8714:8900  if (owner == address(0)) {... */\n      tag_410\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8787:8794  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8764:8795  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_411\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_411:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8714:8900  if (owner == address(0)) {... */\n    tag_410:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8868:8875  spender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8877:8884  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8841:8885  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_413\n      swap3\n      swap2\n      swap1\n      tag_414\n      jump\t// in\n    tag_413:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8655:8910  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_409:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8548:8916  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_370:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_416\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_417\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_416:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_418\n      jumpi\n      tag_419\n      tag_420\n      jump\t// in\n    tag_419:\n    tag_418:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_421\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_421:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_422:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_423\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_424\n      jumpi\n      tag_425\n      tag_426\n      jump\t// in\n    tag_425:\n    tag_424:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_422\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_423:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_375:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_429\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_430\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_429:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_431\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_431:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_381:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_433\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_375\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_433:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_435\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_436\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_436:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_435:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_437\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_216\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_437:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2006:2115  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n    tag_386:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_439\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_375\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_439:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1808:1809  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2086:2093  _status */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2086:2108  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2006:2115  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2388:2607  function __ERC721_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_391:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_442\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_375\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_442:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2501:2524  ERC721Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2527:2546  _getERC721Storage() */\n      tag_444\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2527:2544  _getERC721Storage */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2527:2546  _getERC721Storage() */\n      jump\t// in\n    tag_444:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2501:2546  ERC721Storage storage $ = _getERC721Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2566:2571  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2556:2557  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2556:2563  $._name */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2556:2571  $._name = name_ */\n      swap1\n      dup2\n      tag_445\n      swap2\n      swap1\n      tag_325\n      jump\t// in\n    tag_445:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2593:2600  symbol_ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2581:2582  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2581:2590  $._symbol */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2581:2600  $._symbol = symbol_ */\n      swap1\n      dup2\n      tag_446\n      swap2\n      swap1\n      tag_325\n      jump\t// in\n    tag_446:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2491:2607  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":2388:2607  function __ERC721_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7842:8114  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_408:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7945:7949  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7999:8000  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7980:8001  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7980:7987  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7980:8001  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7980:8107  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_448\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8027:8034  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8018:8034  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8018:8023  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8018:8034  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8018:8070  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_449\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8038:8070  isApprovedForAll(owner, spender) */\n      tag_450\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8055:8060  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8062:8069  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8038:8054  isApprovedForAll */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8038:8070  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_450:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8018:8070  owner == spender || isApprovedForAll(owner, spender) */\n    tag_449:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8018:8106  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_451\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8099:8106  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8074:8106  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8074:8095  _getApproved(tokenId) */\n      tag_452\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8087:8094  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8074:8086  _getApproved */\n      tag_157\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8074:8095  _getApproved(tokenId) */\n      jump\t// in\n    tag_452:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8074:8106  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":8018:8106  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_451:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7980:8107  spender != address(0) &&... */\n    tag_448:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7961:8107  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":7842:8114  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_417:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_454\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_455\n      jumpi\n      tag_456\n      tag_426\n      jump\t// in\n    tag_456:\n    tag_455:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_454:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_457\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_458\n      jumpi\n      tag_459\n      tag_426\n      jump\t// in\n    tag_459:\n    tag_458:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_457:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_460\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_461\n      jumpi\n      tag_462\n      tag_426\n      jump\t// in\n    tag_462:\n    tag_461:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_460:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_463\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_464\n      jumpi\n      tag_465\n      tag_426\n      jump\t// in\n    tag_465:\n    tag_464:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_463:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_466\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_467\n      jumpi\n      tag_468\n      tag_426\n      jump\t// in\n    tag_468:\n    tag_467:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_466:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_469\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_470\n      jumpi\n      tag_471\n      tag_426\n      jump\t// in\n    tag_471:\n    tag_470:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_469:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_472\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_472:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_430:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_474\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_254\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_474:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8553:8600  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_475:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_476:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_477:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_478:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_479:\n        /* \"#utility.yul\":561:584   */\n      tag_557\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_478\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_558\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_558:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_480:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_560\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_479\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_31:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_562\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_563\n      tag_476\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":833:952   */\n    tag_562:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_564\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_480\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_481:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_482:\n        /* \"#utility.yul\":1268:1289   */\n      tag_567\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_481\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_34:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_569\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_482\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_483:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_484:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_485:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_486:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_487:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_575\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_483\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":2222:2293   */\n      tag_576\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_484\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_577\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_485\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":2392:2421   */\n      tag_578\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_486\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_39:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_580\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_487\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2830   */\n    tag_488:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2819:2824   */\n      dup2\n        /* \"#utility.yul\":2808:2824   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2836:2958   */\n    tag_489:\n        /* \"#utility.yul\":2909:2933   */\n      tag_583\n        /* \"#utility.yul\":2927:2932   */\n      dup2\n        /* \"#utility.yul\":2909:2933   */\n      tag_488\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":2902:2907   */\n      dup2\n        /* \"#utility.yul\":2899:2934   */\n      eq\n        /* \"#utility.yul\":2889:2952   */\n      tag_584\n      jumpi\n        /* \"#utility.yul\":2948:2949   */\n      0x00\n        /* \"#utility.yul\":2945:2946   */\n      dup1\n        /* \"#utility.yul\":2938:2950   */\n      revert\n        /* \"#utility.yul\":2889:2952   */\n    tag_584:\n        /* \"#utility.yul\":2836:2958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2964:3103   */\n    tag_490:\n        /* \"#utility.yul\":3010:3015   */\n      0x00\n        /* \"#utility.yul\":3048:3054   */\n      dup2\n        /* \"#utility.yul\":3035:3055   */\n      calldataload\n        /* \"#utility.yul\":3026:3055   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3097   */\n      tag_586\n        /* \"#utility.yul\":3091:3096   */\n      dup2\n        /* \"#utility.yul\":3064:3097   */\n      tag_489\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":2964:3103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3438   */\n    tag_43:\n        /* \"#utility.yul\":3168:3174   */\n      0x00\n        /* \"#utility.yul\":3217:3219   */\n      0x20\n        /* \"#utility.yul\":3205:3214   */\n      dup3\n        /* \"#utility.yul\":3196:3203   */\n      dup5\n        /* \"#utility.yul\":3192:3215   */\n      sub\n        /* \"#utility.yul\":3188:3220   */\n      slt\n        /* \"#utility.yul\":3185:3304   */\n      iszero\n      tag_588\n      jumpi\n        /* \"#utility.yul\":3223:3302   */\n      tag_589\n      tag_476\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":3185:3304   */\n    tag_588:\n        /* \"#utility.yul\":3343:3344   */\n      0x00\n        /* \"#utility.yul\":3368:3421   */\n      tag_590\n        /* \"#utility.yul\":3413:3420   */\n      dup5\n        /* \"#utility.yul\":3404:3410   */\n      dup3\n        /* \"#utility.yul\":3393:3402   */\n      dup6\n        /* \"#utility.yul\":3389:3411   */\n      add\n        /* \"#utility.yul\":3368:3421   */\n      tag_490\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":3358:3421   */\n      swap2\n      pop\n        /* \"#utility.yul\":3314:3431   */\n      pop\n        /* \"#utility.yul\":3109:3438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3444:3570   */\n    tag_491:\n        /* \"#utility.yul\":3481:3488   */\n      0x00\n        /* \"#utility.yul\":3521:3563   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3514:3519   */\n      dup3\n        /* \"#utility.yul\":3510:3564   */\n      and\n        /* \"#utility.yul\":3499:3564   */\n      swap1\n      pop\n        /* \"#utility.yul\":3444:3570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3576:3672   */\n    tag_492:\n        /* \"#utility.yul\":3613:3620   */\n      0x00\n        /* \"#utility.yul\":3642:3666   */\n      tag_593\n        /* \"#utility.yul\":3660:3665   */\n      dup3\n        /* \"#utility.yul\":3642:3666   */\n      tag_491\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":3631:3666   */\n      swap1\n      pop\n        /* \"#utility.yul\":3576:3672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3678:3796   */\n    tag_493:\n        /* \"#utility.yul\":3765:3789   */\n      tag_595\n        /* \"#utility.yul\":3783:3788   */\n      dup2\n        /* \"#utility.yul\":3765:3789   */\n      tag_492\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":3760:3763   */\n      dup3\n        /* \"#utility.yul\":3753:3790   */\n      mstore\n        /* \"#utility.yul\":3678:3796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:4024   */\n    tag_46:\n        /* \"#utility.yul\":3895:3899   */\n      0x00\n        /* \"#utility.yul\":3933:3935   */\n      0x20\n        /* \"#utility.yul\":3922:3931   */\n      dup3\n        /* \"#utility.yul\":3918:3936   */\n      add\n        /* \"#utility.yul\":3910:3936   */\n      swap1\n      pop\n        /* \"#utility.yul\":3946:4017   */\n      tag_597\n        /* \"#utility.yul\":4014:4015   */\n      0x00\n        /* \"#utility.yul\":4003:4012   */\n      dup4\n        /* \"#utility.yul\":3999:4016   */\n      add\n        /* \"#utility.yul\":3990:3996   */\n      dup5\n        /* \"#utility.yul\":3946:4017   */\n      tag_493\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":3802:4024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4152   */\n    tag_494:\n        /* \"#utility.yul\":4103:4127   */\n      tag_599\n        /* \"#utility.yul\":4121:4126   */\n      dup2\n        /* \"#utility.yul\":4103:4127   */\n      tag_492\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":4096:4101   */\n      dup2\n        /* \"#utility.yul\":4093:4128   */\n      eq\n        /* \"#utility.yul\":4083:4146   */\n      tag_600\n      jumpi\n        /* \"#utility.yul\":4142:4143   */\n      0x00\n        /* \"#utility.yul\":4139:4140   */\n      dup1\n        /* \"#utility.yul\":4132:4144   */\n      revert\n        /* \"#utility.yul\":4083:4146   */\n    tag_600:\n        /* \"#utility.yul\":4030:4152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4158:4297   */\n    tag_495:\n        /* \"#utility.yul\":4204:4209   */\n      0x00\n        /* \"#utility.yul\":4242:4248   */\n      dup2\n        /* \"#utility.yul\":4229:4249   */\n      calldataload\n        /* \"#utility.yul\":4220:4249   */\n      swap1\n      pop\n        /* \"#utility.yul\":4258:4291   */\n      tag_602\n        /* \"#utility.yul\":4285:4290   */\n      dup2\n        /* \"#utility.yul\":4258:4291   */\n      tag_494\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":4158:4297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4303:4777   */\n    tag_50:\n        /* \"#utility.yul\":4371:4377   */\n      0x00\n        /* \"#utility.yul\":4379:4385   */\n      dup1\n        /* \"#utility.yul\":4428:4430   */\n      0x40\n        /* \"#utility.yul\":4416:4425   */\n      dup4\n        /* \"#utility.yul\":4407:4414   */\n      dup6\n        /* \"#utility.yul\":4403:4426   */\n      sub\n        /* \"#utility.yul\":4399:4431   */\n      slt\n        /* \"#utility.yul\":4396:4515   */\n      iszero\n      tag_604\n      jumpi\n        /* \"#utility.yul\":4434:4513   */\n      tag_605\n      tag_476\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":4396:4515   */\n    tag_604:\n        /* \"#utility.yul\":4554:4555   */\n      0x00\n        /* \"#utility.yul\":4579:4632   */\n      tag_606\n        /* \"#utility.yul\":4624:4631   */\n      dup6\n        /* \"#utility.yul\":4615:4621   */\n      dup3\n        /* \"#utility.yul\":4604:4613   */\n      dup7\n        /* \"#utility.yul\":4600:4622   */\n      add\n        /* \"#utility.yul\":4579:4632   */\n      tag_495\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":4569:4632   */\n      swap3\n      pop\n        /* \"#utility.yul\":4525:4642   */\n      pop\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4707:4760   */\n      tag_607\n        /* \"#utility.yul\":4752:4759   */\n      dup6\n        /* \"#utility.yul\":4743:4749   */\n      dup3\n        /* \"#utility.yul\":4732:4741   */\n      dup7\n        /* \"#utility.yul\":4728:4750   */\n      add\n        /* \"#utility.yul\":4707:4760   */\n      tag_490\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":4697:4760   */\n      swap2\n      pop\n        /* \"#utility.yul\":4652:4770   */\n      pop\n        /* \"#utility.yul\":4303:4777   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5402   */\n    tag_55:\n        /* \"#utility.yul\":4860:4866   */\n      0x00\n        /* \"#utility.yul\":4868:4874   */\n      dup1\n        /* \"#utility.yul\":4876:4882   */\n      0x00\n        /* \"#utility.yul\":4925:4927   */\n      0x60\n        /* \"#utility.yul\":4913:4922   */\n      dup5\n        /* \"#utility.yul\":4904:4911   */\n      dup7\n        /* \"#utility.yul\":4900:4923   */\n      sub\n        /* \"#utility.yul\":4896:4928   */\n      slt\n        /* \"#utility.yul\":4893:5012   */\n      iszero\n      tag_609\n      jumpi\n        /* \"#utility.yul\":4931:5010   */\n      tag_610\n      tag_476\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":4893:5012   */\n    tag_609:\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5076:5129   */\n      tag_611\n        /* \"#utility.yul\":5121:5128   */\n      dup7\n        /* \"#utility.yul\":5112:5118   */\n      dup3\n        /* \"#utility.yul\":5101:5110   */\n      dup8\n        /* \"#utility.yul\":5097:5119   */\n      add\n        /* \"#utility.yul\":5076:5129   */\n      tag_495\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":5066:5129   */\n      swap4\n      pop\n        /* \"#utility.yul\":5022:5139   */\n      pop\n        /* \"#utility.yul\":5178:5180   */\n      0x20\n        /* \"#utility.yul\":5204:5257   */\n      tag_612\n        /* \"#utility.yul\":5249:5256   */\n      dup7\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5229:5238   */\n      dup8\n        /* \"#utility.yul\":5225:5247   */\n      add\n        /* \"#utility.yul\":5204:5257   */\n      tag_495\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":5194:5257   */\n      swap3\n      pop\n        /* \"#utility.yul\":5149:5267   */\n      pop\n        /* \"#utility.yul\":5306:5308   */\n      0x40\n        /* \"#utility.yul\":5332:5385   */\n      tag_613\n        /* \"#utility.yul\":5377:5384   */\n      dup7\n        /* \"#utility.yul\":5368:5374   */\n      dup3\n        /* \"#utility.yul\":5357:5366   */\n      dup8\n        /* \"#utility.yul\":5353:5375   */\n      add\n        /* \"#utility.yul\":5332:5385   */\n      tag_490\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":5322:5385   */\n      swap2\n      pop\n        /* \"#utility.yul\":5277:5395   */\n      pop\n        /* \"#utility.yul\":4783:5402   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5408:5525   */\n    tag_496:\n        /* \"#utility.yul\":5517:5518   */\n      0x00\n        /* \"#utility.yul\":5514:5515   */\n      dup1\n        /* \"#utility.yul\":5507:5519   */\n      revert\n        /* \"#utility.yul\":5531:5648   */\n    tag_497:\n        /* \"#utility.yul\":5640:5641   */\n      0x00\n        /* \"#utility.yul\":5637:5638   */\n      dup1\n        /* \"#utility.yul\":5630:5642   */\n      revert\n        /* \"#utility.yul\":5654:5834   */\n    tag_420:\n        /* \"#utility.yul\":5702:5779   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5699:5700   */\n      0x00\n        /* \"#utility.yul\":5692:5780   */\n      mstore\n        /* \"#utility.yul\":5799:5803   */\n      0x41\n        /* \"#utility.yul\":5796:5797   */\n      0x04\n        /* \"#utility.yul\":5789:5804   */\n      mstore\n        /* \"#utility.yul\":5823:5827   */\n      0x24\n        /* \"#utility.yul\":5820:5821   */\n      0x00\n        /* \"#utility.yul\":5813:5828   */\n      revert\n        /* \"#utility.yul\":5840:6121   */\n    tag_498:\n        /* \"#utility.yul\":5923:5950   */\n      tag_618\n        /* \"#utility.yul\":5945:5949   */\n      dup3\n        /* \"#utility.yul\":5923:5950   */\n      tag_486\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":5915:5921   */\n      dup2\n        /* \"#utility.yul\":5911:5951   */\n      add\n        /* \"#utility.yul\":6053:6059   */\n      dup2\n        /* \"#utility.yul\":6041:6051   */\n      dup2\n        /* \"#utility.yul\":6038:6060   */\n      lt\n        /* \"#utility.yul\":6017:6035   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6005:6015   */\n      dup3\n        /* \"#utility.yul\":6002:6036   */\n      gt\n        /* \"#utility.yul\":5999:6061   */\n      or\n        /* \"#utility.yul\":5996:6084   */\n      iszero\n      tag_619\n      jumpi\n        /* \"#utility.yul\":6064:6082   */\n      tag_620\n      tag_420\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":5996:6084   */\n    tag_619:\n        /* \"#utility.yul\":6104:6114   */\n      dup1\n        /* \"#utility.yul\":6100:6102   */\n      0x40\n        /* \"#utility.yul\":6093:6115   */\n      mstore\n        /* \"#utility.yul\":5883:6121   */\n      pop\n        /* \"#utility.yul\":5840:6121   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6127:6256   */\n    tag_499:\n        /* \"#utility.yul\":6161:6167   */\n      0x00\n        /* \"#utility.yul\":6188:6208   */\n      tag_622\n      tag_475\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":6178:6208   */\n      swap1\n      pop\n        /* \"#utility.yul\":6217:6250   */\n      tag_623\n        /* \"#utility.yul\":6245:6249   */\n      dup3\n        /* \"#utility.yul\":6237:6243   */\n      dup3\n        /* \"#utility.yul\":6217:6250   */\n      tag_498\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":6127:6256   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6262:6570   */\n    tag_500:\n        /* \"#utility.yul\":6324:6328   */\n      0x00\n        /* \"#utility.yul\":6414:6432   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6406:6412   */\n      dup3\n        /* \"#utility.yul\":6403:6433   */\n      gt\n        /* \"#utility.yul\":6400:6456   */\n      iszero\n      tag_625\n      jumpi\n        /* \"#utility.yul\":6436:6454   */\n      tag_626\n      tag_420\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":6400:6456   */\n    tag_625:\n        /* \"#utility.yul\":6474:6503   */\n      tag_627\n        /* \"#utility.yul\":6496:6502   */\n      dup3\n        /* \"#utility.yul\":6474:6503   */\n      tag_486\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":6466:6503   */\n      swap1\n      pop\n        /* \"#utility.yul\":6558:6562   */\n      0x20\n        /* \"#utility.yul\":6552:6556   */\n      dup2\n        /* \"#utility.yul\":6548:6563   */\n      add\n        /* \"#utility.yul\":6540:6563   */\n      swap1\n      pop\n        /* \"#utility.yul\":6262:6570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6576:6724   */\n    tag_501:\n        /* \"#utility.yul\":6674:6680   */\n      dup3\n        /* \"#utility.yul\":6669:6672   */\n      dup2\n        /* \"#utility.yul\":6664:6667   */\n      dup4\n        /* \"#utility.yul\":6651:6681   */\n      calldatacopy\n        /* \"#utility.yul\":6715:6716   */\n      0x00\n        /* \"#utility.yul\":6706:6712   */\n      dup4\n        /* \"#utility.yul\":6701:6704   */\n      dup4\n        /* \"#utility.yul\":6697:6713   */\n      add\n        /* \"#utility.yul\":6690:6717   */\n      mstore\n        /* \"#utility.yul\":6576:6724   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6730:7155   */\n    tag_502:\n        /* \"#utility.yul\":6808:6813   */\n      0x00\n        /* \"#utility.yul\":6833:6899   */\n      tag_630\n        /* \"#utility.yul\":6849:6898   */\n      tag_631\n        /* \"#utility.yul\":6891:6897   */\n      dup5\n        /* \"#utility.yul\":6849:6898   */\n      tag_500\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":6833:6899   */\n      tag_499\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":6824:6899   */\n      swap1\n      pop\n        /* \"#utility.yul\":6922:6928   */\n      dup3\n        /* \"#utility.yul\":6915:6920   */\n      dup2\n        /* \"#utility.yul\":6908:6929   */\n      mstore\n        /* \"#utility.yul\":6960:6964   */\n      0x20\n        /* \"#utility.yul\":6953:6958   */\n      dup2\n        /* \"#utility.yul\":6949:6965   */\n      add\n        /* \"#utility.yul\":6998:7001   */\n      dup5\n        /* \"#utility.yul\":6989:6995   */\n      dup5\n        /* \"#utility.yul\":6984:6987   */\n      dup5\n        /* \"#utility.yul\":6980:6996   */\n      add\n        /* \"#utility.yul\":6977:7002   */\n      gt\n        /* \"#utility.yul\":6974:7086   */\n      iszero\n      tag_632\n      jumpi\n        /* \"#utility.yul\":7005:7084   */\n      tag_633\n      tag_497\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":6974:7086   */\n    tag_632:\n        /* \"#utility.yul\":7095:7149   */\n      tag_634\n        /* \"#utility.yul\":7142:7148   */\n      dup5\n        /* \"#utility.yul\":7137:7140   */\n      dup3\n        /* \"#utility.yul\":7132:7135   */\n      dup6\n        /* \"#utility.yul\":7095:7149   */\n      tag_501\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":6814:7155   */\n      pop\n        /* \"#utility.yul\":6730:7155   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7175:7515   */\n    tag_503:\n        /* \"#utility.yul\":7231:7236   */\n      0x00\n        /* \"#utility.yul\":7280:7283   */\n      dup3\n        /* \"#utility.yul\":7273:7277   */\n      0x1f\n        /* \"#utility.yul\":7265:7271   */\n      dup4\n        /* \"#utility.yul\":7261:7278   */\n      add\n        /* \"#utility.yul\":7257:7284   */\n      slt\n        /* \"#utility.yul\":7247:7369   */\n      tag_636\n      jumpi\n        /* \"#utility.yul\":7288:7367   */\n      tag_637\n      tag_496\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":7247:7369   */\n    tag_636:\n        /* \"#utility.yul\":7405:7411   */\n      dup2\n        /* \"#utility.yul\":7392:7412   */\n      calldataload\n        /* \"#utility.yul\":7430:7509   */\n      tag_638\n        /* \"#utility.yul\":7505:7508   */\n      dup5\n        /* \"#utility.yul\":7497:7503   */\n      dup3\n        /* \"#utility.yul\":7490:7494   */\n      0x20\n        /* \"#utility.yul\":7482:7488   */\n      dup7\n        /* \"#utility.yul\":7478:7495   */\n      add\n        /* \"#utility.yul\":7430:7509   */\n      tag_502\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":7421:7509   */\n      swap2\n      pop\n        /* \"#utility.yul\":7237:7515   */\n      pop\n        /* \"#utility.yul\":7175:7515   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7521:8175   */\n    tag_66:\n        /* \"#utility.yul\":7599:7605   */\n      0x00\n        /* \"#utility.yul\":7607:7613   */\n      dup1\n        /* \"#utility.yul\":7656:7658   */\n      0x40\n        /* \"#utility.yul\":7644:7653   */\n      dup4\n        /* \"#utility.yul\":7635:7642   */\n      dup6\n        /* \"#utility.yul\":7631:7654   */\n      sub\n        /* \"#utility.yul\":7627:7659   */\n      slt\n        /* \"#utility.yul\":7624:7743   */\n      iszero\n      tag_640\n      jumpi\n        /* \"#utility.yul\":7662:7741   */\n      tag_641\n      tag_476\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":7624:7743   */\n    tag_640:\n        /* \"#utility.yul\":7810:7811   */\n      0x00\n        /* \"#utility.yul\":7799:7808   */\n      dup4\n        /* \"#utility.yul\":7795:7812   */\n      add\n        /* \"#utility.yul\":7782:7813   */\n      calldataload\n        /* \"#utility.yul\":7840:7858   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7832:7838   */\n      dup2\n        /* \"#utility.yul\":7829:7859   */\n      gt\n        /* \"#utility.yul\":7826:7943   */\n      iszero\n      tag_642\n      jumpi\n        /* \"#utility.yul\":7862:7941   */\n      tag_643\n      tag_477\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":7826:7943   */\n    tag_642:\n        /* \"#utility.yul\":7967:8030   */\n      tag_644\n        /* \"#utility.yul\":8022:8029   */\n      dup6\n        /* \"#utility.yul\":8013:8019   */\n      dup3\n        /* \"#utility.yul\":8002:8011   */\n      dup7\n        /* \"#utility.yul\":7998:8020   */\n      add\n        /* \"#utility.yul\":7967:8030   */\n      tag_503\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":7957:8030   */\n      swap3\n      pop\n        /* \"#utility.yul\":7753:8040   */\n      pop\n        /* \"#utility.yul\":8079:8081   */\n      0x20\n        /* \"#utility.yul\":8105:8158   */\n      tag_645\n        /* \"#utility.yul\":8150:8157   */\n      dup6\n        /* \"#utility.yul\":8141:8147   */\n      dup3\n        /* \"#utility.yul\":8130:8139   */\n      dup7\n        /* \"#utility.yul\":8126:8148   */\n      add\n        /* \"#utility.yul\":8105:8158   */\n      tag_490\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":8095:8158   */\n      swap2\n      pop\n        /* \"#utility.yul\":8050:8168   */\n      pop\n        /* \"#utility.yul\":7521:8175   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8181:8299   */\n    tag_504:\n        /* \"#utility.yul\":8268:8292   */\n      tag_647\n        /* \"#utility.yul\":8286:8291   */\n      dup2\n        /* \"#utility.yul\":8268:8292   */\n      tag_488\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":8263:8266   */\n      dup3\n        /* \"#utility.yul\":8256:8293   */\n      mstore\n        /* \"#utility.yul\":8181:8299   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8305:8527   */\n    tag_69:\n        /* \"#utility.yul\":8398:8402   */\n      0x00\n        /* \"#utility.yul\":8436:8438   */\n      0x20\n        /* \"#utility.yul\":8425:8434   */\n      dup3\n        /* \"#utility.yul\":8421:8439   */\n      add\n        /* \"#utility.yul\":8413:8439   */\n      swap1\n      pop\n        /* \"#utility.yul\":8449:8520   */\n      tag_649\n        /* \"#utility.yul\":8517:8518   */\n      0x00\n        /* \"#utility.yul\":8506:8515   */\n      dup4\n        /* \"#utility.yul\":8502:8519   */\n      add\n        /* \"#utility.yul\":8493:8499   */\n      dup5\n        /* \"#utility.yul\":8449:8520   */\n      tag_504\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":8305:8527   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8533:8637   */\n    tag_505:\n        /* \"#utility.yul\":8578:8585   */\n      0x00\n        /* \"#utility.yul\":8607:8631   */\n      tag_651\n        /* \"#utility.yul\":8625:8630   */\n      dup3\n        /* \"#utility.yul\":8607:8631   */\n      tag_491\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":8596:8631   */\n      swap1\n      pop\n        /* \"#utility.yul\":8533:8637   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8643:8781   */\n    tag_506:\n        /* \"#utility.yul\":8724:8756   */\n      tag_653\n        /* \"#utility.yul\":8750:8755   */\n      dup2\n        /* \"#utility.yul\":8724:8756   */\n      tag_505\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":8717:8722   */\n      dup2\n        /* \"#utility.yul\":8714:8757   */\n      eq\n        /* \"#utility.yul\":8704:8775   */\n      tag_654\n      jumpi\n        /* \"#utility.yul\":8771:8772   */\n      0x00\n        /* \"#utility.yul\":8768:8769   */\n      dup1\n        /* \"#utility.yul\":8761:8773   */\n      revert\n        /* \"#utility.yul\":8704:8775   */\n    tag_654:\n        /* \"#utility.yul\":8643:8781   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8787:8942   */\n    tag_507:\n        /* \"#utility.yul\":8841:8846   */\n      0x00\n        /* \"#utility.yul\":8879:8885   */\n      dup2\n        /* \"#utility.yul\":8866:8886   */\n      calldataload\n        /* \"#utility.yul\":8857:8886   */\n      swap1\n      pop\n        /* \"#utility.yul\":8895:8936   */\n      tag_656\n        /* \"#utility.yul\":8930:8935   */\n      dup2\n        /* \"#utility.yul\":8895:8936   */\n      tag_506\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":8787:8942   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8948:9293   */\n    tag_78:\n        /* \"#utility.yul\":9015:9021   */\n      0x00\n        /* \"#utility.yul\":9064:9066   */\n      0x20\n        /* \"#utility.yul\":9052:9061   */\n      dup3\n        /* \"#utility.yul\":9043:9050   */\n      dup5\n        /* \"#utility.yul\":9039:9062   */\n      sub\n        /* \"#utility.yul\":9035:9067   */\n      slt\n        /* \"#utility.yul\":9032:9151   */\n      iszero\n      tag_658\n      jumpi\n        /* \"#utility.yul\":9070:9149   */\n      tag_659\n      tag_476\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":9032:9151   */\n    tag_658:\n        /* \"#utility.yul\":9190:9191   */\n      0x00\n        /* \"#utility.yul\":9215:9276   */\n      tag_660\n        /* \"#utility.yul\":9268:9275   */\n      dup5\n        /* \"#utility.yul\":9259:9265   */\n      dup3\n        /* \"#utility.yul\":9248:9257   */\n      dup6\n        /* \"#utility.yul\":9244:9266   */\n      add\n        /* \"#utility.yul\":9215:9276   */\n      tag_507\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":9205:9276   */\n      swap2\n      pop\n        /* \"#utility.yul\":9161:9286   */\n      pop\n        /* \"#utility.yul\":8948:9293   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9299:9628   */\n    tag_87:\n        /* \"#utility.yul\":9358:9364   */\n      0x00\n        /* \"#utility.yul\":9407:9409   */\n      0x20\n        /* \"#utility.yul\":9395:9404   */\n      dup3\n        /* \"#utility.yul\":9386:9393   */\n      dup5\n        /* \"#utility.yul\":9382:9405   */\n      sub\n        /* \"#utility.yul\":9378:9410   */\n      slt\n        /* \"#utility.yul\":9375:9494   */\n      iszero\n      tag_662\n      jumpi\n        /* \"#utility.yul\":9413:9492   */\n      tag_663\n      tag_476\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":9375:9494   */\n    tag_662:\n        /* \"#utility.yul\":9533:9534   */\n      0x00\n        /* \"#utility.yul\":9558:9611   */\n      tag_664\n        /* \"#utility.yul\":9603:9610   */\n      dup5\n        /* \"#utility.yul\":9594:9600   */\n      dup3\n        /* \"#utility.yul\":9583:9592   */\n      dup6\n        /* \"#utility.yul\":9579:9601   */\n      add\n        /* \"#utility.yul\":9558:9611   */\n      tag_495\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":9548:9611   */\n      swap2\n      pop\n        /* \"#utility.yul\":9504:9621   */\n      pop\n        /* \"#utility.yul\":9299:9628   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9634:9750   */\n    tag_508:\n        /* \"#utility.yul\":9704:9725   */\n      tag_666\n        /* \"#utility.yul\":9719:9724   */\n      dup2\n        /* \"#utility.yul\":9704:9725   */\n      tag_481\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":9697:9702   */\n      dup2\n        /* \"#utility.yul\":9694:9726   */\n      eq\n        /* \"#utility.yul\":9684:9744   */\n      tag_667\n      jumpi\n        /* \"#utility.yul\":9740:9741   */\n      0x00\n        /* \"#utility.yul\":9737:9738   */\n      dup1\n        /* \"#utility.yul\":9730:9742   */\n      revert\n        /* \"#utility.yul\":9684:9744   */\n    tag_667:\n        /* \"#utility.yul\":9634:9750   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9756:9889   */\n    tag_509:\n        /* \"#utility.yul\":9799:9804   */\n      0x00\n        /* \"#utility.yul\":9837:9843   */\n      dup2\n        /* \"#utility.yul\":9824:9844   */\n      calldataload\n        /* \"#utility.yul\":9815:9844   */\n      swap1\n      pop\n        /* \"#utility.yul\":9853:9883   */\n      tag_669\n        /* \"#utility.yul\":9877:9882   */\n      dup2\n        /* \"#utility.yul\":9853:9883   */\n      tag_508\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":9756:9889   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9895:10363   */\n    tag_104:\n        /* \"#utility.yul\":9960:9966   */\n      0x00\n        /* \"#utility.yul\":9968:9974   */\n      dup1\n        /* \"#utility.yul\":10017:10019   */\n      0x40\n        /* \"#utility.yul\":10005:10014   */\n      dup4\n        /* \"#utility.yul\":9996:10003   */\n      dup6\n        /* \"#utility.yul\":9992:10015   */\n      sub\n        /* \"#utility.yul\":9988:10020   */\n      slt\n        /* \"#utility.yul\":9985:10104   */\n      iszero\n      tag_671\n      jumpi\n        /* \"#utility.yul\":10023:10102   */\n      tag_672\n      tag_476\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":9985:10104   */\n    tag_671:\n        /* \"#utility.yul\":10143:10144   */\n      0x00\n        /* \"#utility.yul\":10168:10221   */\n      tag_673\n        /* \"#utility.yul\":10213:10220   */\n      dup6\n        /* \"#utility.yul\":10204:10210   */\n      dup3\n        /* \"#utility.yul\":10193:10202   */\n      dup7\n        /* \"#utility.yul\":10189:10211   */\n      add\n        /* \"#utility.yul\":10168:10221   */\n      tag_495\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":10158:10221   */\n      swap3\n      pop\n        /* \"#utility.yul\":10114:10231   */\n      pop\n        /* \"#utility.yul\":10270:10272   */\n      0x20\n        /* \"#utility.yul\":10296:10346   */\n      tag_674\n        /* \"#utility.yul\":10338:10345   */\n      dup6\n        /* \"#utility.yul\":10329:10335   */\n      dup3\n        /* \"#utility.yul\":10318:10327   */\n      dup7\n        /* \"#utility.yul\":10314:10336   */\n      add\n        /* \"#utility.yul\":10296:10346   */\n      tag_509\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":10286:10346   */\n      swap2\n      pop\n        /* \"#utility.yul\":10241:10356   */\n      pop\n        /* \"#utility.yul\":9895:10363   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10369:10511   */\n    tag_510:\n        /* \"#utility.yul\":10472:10504   */\n      tag_676\n        /* \"#utility.yul\":10498:10503   */\n      dup2\n        /* \"#utility.yul\":10472:10504   */\n      tag_505\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":10467:10470   */\n      dup3\n        /* \"#utility.yul\":10460:10505   */\n      mstore\n        /* \"#utility.yul\":10369:10511   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10517:10771   */\n    tag_110:\n        /* \"#utility.yul\":10626:10630   */\n      0x00\n        /* \"#utility.yul\":10664:10666   */\n      0x20\n        /* \"#utility.yul\":10653:10662   */\n      dup3\n        /* \"#utility.yul\":10649:10667   */\n      add\n        /* \"#utility.yul\":10641:10667   */\n      swap1\n      pop\n        /* \"#utility.yul\":10677:10764   */\n      tag_678\n        /* \"#utility.yul\":10761:10762   */\n      0x00\n        /* \"#utility.yul\":10750:10759   */\n      dup4\n        /* \"#utility.yul\":10746:10763   */\n      add\n        /* \"#utility.yul\":10737:10743   */\n      dup5\n        /* \"#utility.yul\":10677:10764   */\n      tag_510\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":10517:10771   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10777:11084   */\n    tag_511:\n        /* \"#utility.yul\":10838:10842   */\n      0x00\n        /* \"#utility.yul\":10928:10946   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10920:10926   */\n      dup3\n        /* \"#utility.yul\":10917:10947   */\n      gt\n        /* \"#utility.yul\":10914:10970   */\n      iszero\n      tag_680\n      jumpi\n        /* \"#utility.yul\":10950:10968   */\n      tag_681\n      tag_420\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":10914:10970   */\n    tag_680:\n        /* \"#utility.yul\":10988:11017   */\n      tag_682\n        /* \"#utility.yul\":11010:11016   */\n      dup3\n        /* \"#utility.yul\":10988:11017   */\n      tag_486\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":10980:11017   */\n      swap1\n      pop\n        /* \"#utility.yul\":11072:11076   */\n      0x20\n        /* \"#utility.yul\":11066:11070   */\n      dup2\n        /* \"#utility.yul\":11062:11077   */\n      add\n        /* \"#utility.yul\":11054:11077   */\n      swap1\n      pop\n        /* \"#utility.yul\":10777:11084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11090:11513   */\n    tag_512:\n        /* \"#utility.yul\":11167:11172   */\n      0x00\n        /* \"#utility.yul\":11192:11257   */\n      tag_684\n        /* \"#utility.yul\":11208:11256   */\n      tag_685\n        /* \"#utility.yul\":11249:11255   */\n      dup5\n        /* \"#utility.yul\":11208:11256   */\n      tag_511\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":11192:11257   */\n      tag_499\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":11183:11257   */\n      swap1\n      pop\n        /* \"#utility.yul\":11280:11286   */\n      dup3\n        /* \"#utility.yul\":11273:11278   */\n      dup2\n        /* \"#utility.yul\":11266:11287   */\n      mstore\n        /* \"#utility.yul\":11318:11322   */\n      0x20\n        /* \"#utility.yul\":11311:11316   */\n      dup2\n        /* \"#utility.yul\":11307:11323   */\n      add\n        /* \"#utility.yul\":11356:11359   */\n      dup5\n        /* \"#utility.yul\":11347:11353   */\n      dup5\n        /* \"#utility.yul\":11342:11345   */\n      dup5\n        /* \"#utility.yul\":11338:11354   */\n      add\n        /* \"#utility.yul\":11335:11360   */\n      gt\n        /* \"#utility.yul\":11332:11444   */\n      iszero\n      tag_686\n      jumpi\n        /* \"#utility.yul\":11363:11442   */\n      tag_687\n      tag_497\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":11332:11444   */\n    tag_686:\n        /* \"#utility.yul\":11453:11507   */\n      tag_688\n        /* \"#utility.yul\":11500:11506   */\n      dup5\n        /* \"#utility.yul\":11495:11498   */\n      dup3\n        /* \"#utility.yul\":11490:11493   */\n      dup6\n        /* \"#utility.yul\":11453:11507   */\n      tag_501\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":11173:11513   */\n      pop\n        /* \"#utility.yul\":11090:11513   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11532:11870   */\n    tag_513:\n        /* \"#utility.yul\":11587:11592   */\n      0x00\n        /* \"#utility.yul\":11636:11639   */\n      dup3\n        /* \"#utility.yul\":11629:11633   */\n      0x1f\n        /* \"#utility.yul\":11621:11627   */\n      dup4\n        /* \"#utility.yul\":11617:11634   */\n      add\n        /* \"#utility.yul\":11613:11640   */\n      slt\n        /* \"#utility.yul\":11603:11725   */\n      tag_690\n      jumpi\n        /* \"#utility.yul\":11644:11723   */\n      tag_691\n      tag_496\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":11603:11725   */\n    tag_690:\n        /* \"#utility.yul\":11761:11767   */\n      dup2\n        /* \"#utility.yul\":11748:11768   */\n      calldataload\n        /* \"#utility.yul\":11786:11864   */\n      tag_692\n        /* \"#utility.yul\":11860:11863   */\n      dup5\n        /* \"#utility.yul\":11852:11858   */\n      dup3\n        /* \"#utility.yul\":11845:11849   */\n      0x20\n        /* \"#utility.yul\":11837:11843   */\n      dup7\n        /* \"#utility.yul\":11833:11850   */\n      add\n        /* \"#utility.yul\":11786:11864   */\n      tag_512\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":11777:11864   */\n      swap2\n      pop\n        /* \"#utility.yul\":11593:11870   */\n      pop\n        /* \"#utility.yul\":11532:11870   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11876:12819   */\n    tag_114:\n        /* \"#utility.yul\":11971:11977   */\n      0x00\n        /* \"#utility.yul\":11979:11985   */\n      dup1\n        /* \"#utility.yul\":11987:11993   */\n      0x00\n        /* \"#utility.yul\":11995:12001   */\n      dup1\n        /* \"#utility.yul\":12044:12047   */\n      0x80\n        /* \"#utility.yul\":12032:12041   */\n      dup6\n        /* \"#utility.yul\":12023:12030   */\n      dup8\n        /* \"#utility.yul\":12019:12042   */\n      sub\n        /* \"#utility.yul\":12015:12048   */\n      slt\n        /* \"#utility.yul\":12012:12132   */\n      iszero\n      tag_694\n      jumpi\n        /* \"#utility.yul\":12051:12130   */\n      tag_695\n      tag_476\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":12012:12132   */\n    tag_694:\n        /* \"#utility.yul\":12171:12172   */\n      0x00\n        /* \"#utility.yul\":12196:12249   */\n      tag_696\n        /* \"#utility.yul\":12241:12248   */\n      dup8\n        /* \"#utility.yul\":12232:12238   */\n      dup3\n        /* \"#utility.yul\":12221:12230   */\n      dup9\n        /* \"#utility.yul\":12217:12239   */\n      add\n        /* \"#utility.yul\":12196:12249   */\n      tag_495\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":12186:12249   */\n      swap5\n      pop\n        /* \"#utility.yul\":12142:12259   */\n      pop\n        /* \"#utility.yul\":12298:12300   */\n      0x20\n        /* \"#utility.yul\":12324:12377   */\n      tag_697\n        /* \"#utility.yul\":12369:12376   */\n      dup8\n        /* \"#utility.yul\":12360:12366   */\n      dup3\n        /* \"#utility.yul\":12349:12358   */\n      dup9\n        /* \"#utility.yul\":12345:12367   */\n      add\n        /* \"#utility.yul\":12324:12377   */\n      tag_495\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":12314:12377   */\n      swap4\n      pop\n        /* \"#utility.yul\":12269:12387   */\n      pop\n        /* \"#utility.yul\":12426:12428   */\n      0x40\n        /* \"#utility.yul\":12452:12505   */\n      tag_698\n        /* \"#utility.yul\":12497:12504   */\n      dup8\n        /* \"#utility.yul\":12488:12494   */\n      dup3\n        /* \"#utility.yul\":12477:12486   */\n      dup9\n        /* \"#utility.yul\":12473:12495   */\n      add\n        /* \"#utility.yul\":12452:12505   */\n      tag_490\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":12442:12505   */\n      swap3\n      pop\n        /* \"#utility.yul\":12397:12515   */\n      pop\n        /* \"#utility.yul\":12582:12584   */\n      0x60\n        /* \"#utility.yul\":12571:12580   */\n      dup6\n        /* \"#utility.yul\":12567:12585   */\n      add\n        /* \"#utility.yul\":12554:12586   */\n      calldataload\n        /* \"#utility.yul\":12613:12631   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12605:12611   */\n      dup2\n        /* \"#utility.yul\":12602:12632   */\n      gt\n        /* \"#utility.yul\":12599:12716   */\n      iszero\n      tag_699\n      jumpi\n        /* \"#utility.yul\":12635:12714   */\n      tag_700\n      tag_477\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":12599:12716   */\n    tag_699:\n        /* \"#utility.yul\":12740:12802   */\n      tag_701\n        /* \"#utility.yul\":12794:12801   */\n      dup8\n        /* \"#utility.yul\":12785:12791   */\n      dup3\n        /* \"#utility.yul\":12774:12783   */\n      dup9\n        /* \"#utility.yul\":12770:12792   */\n      add\n        /* \"#utility.yul\":12740:12802   */\n      tag_513\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":12730:12802   */\n      swap2\n      pop\n        /* \"#utility.yul\":12525:12812   */\n      pop\n        /* \"#utility.yul\":11876:12819   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12825:13315   */\n    tag_124:\n        /* \"#utility.yul\":12901:12907   */\n      0x00\n        /* \"#utility.yul\":12909:12915   */\n      dup1\n        /* \"#utility.yul\":12958:12960   */\n      0x40\n        /* \"#utility.yul\":12946:12955   */\n      dup4\n        /* \"#utility.yul\":12937:12944   */\n      dup6\n        /* \"#utility.yul\":12933:12956   */\n      sub\n        /* \"#utility.yul\":12929:12961   */\n      slt\n        /* \"#utility.yul\":12926:13045   */\n      iszero\n      tag_703\n      jumpi\n        /* \"#utility.yul\":12964:13043   */\n      tag_704\n      tag_476\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":12926:13045   */\n    tag_703:\n        /* \"#utility.yul\":13084:13085   */\n      0x00\n        /* \"#utility.yul\":13109:13162   */\n      tag_705\n        /* \"#utility.yul\":13154:13161   */\n      dup6\n        /* \"#utility.yul\":13145:13151   */\n      dup3\n        /* \"#utility.yul\":13134:13143   */\n      dup7\n        /* \"#utility.yul\":13130:13152   */\n      add\n        /* \"#utility.yul\":13109:13162   */\n      tag_490\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":13099:13162   */\n      swap3\n      pop\n        /* \"#utility.yul\":13055:13172   */\n      pop\n        /* \"#utility.yul\":13211:13213   */\n      0x20\n        /* \"#utility.yul\":13237:13298   */\n      tag_706\n        /* \"#utility.yul\":13290:13297   */\n      dup6\n        /* \"#utility.yul\":13281:13287   */\n      dup3\n        /* \"#utility.yul\":13270:13279   */\n      dup7\n        /* \"#utility.yul\":13266:13288   */\n      add\n        /* \"#utility.yul\":13237:13298   */\n      tag_507\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":13227:13298   */\n      swap2\n      pop\n        /* \"#utility.yul\":13182:13308   */\n      pop\n        /* \"#utility.yul\":12825:13315   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13321:13795   */\n    tag_129:\n        /* \"#utility.yul\":13389:13395   */\n      0x00\n        /* \"#utility.yul\":13397:13403   */\n      dup1\n        /* \"#utility.yul\":13446:13448   */\n      0x40\n        /* \"#utility.yul\":13434:13443   */\n      dup4\n        /* \"#utility.yul\":13425:13432   */\n      dup6\n        /* \"#utility.yul\":13421:13444   */\n      sub\n        /* \"#utility.yul\":13417:13449   */\n      slt\n        /* \"#utility.yul\":13414:13533   */\n      iszero\n      tag_708\n      jumpi\n        /* \"#utility.yul\":13452:13531   */\n      tag_709\n      tag_476\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":13414:13533   */\n    tag_708:\n        /* \"#utility.yul\":13572:13573   */\n      0x00\n        /* \"#utility.yul\":13597:13650   */\n      tag_710\n        /* \"#utility.yul\":13642:13649   */\n      dup6\n        /* \"#utility.yul\":13633:13639   */\n      dup3\n        /* \"#utility.yul\":13622:13631   */\n      dup7\n        /* \"#utility.yul\":13618:13640   */\n      add\n        /* \"#utility.yul\":13597:13650   */\n      tag_495\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":13587:13650   */\n      swap3\n      pop\n        /* \"#utility.yul\":13543:13660   */\n      pop\n        /* \"#utility.yul\":13699:13701   */\n      0x20\n        /* \"#utility.yul\":13725:13778   */\n      tag_711\n        /* \"#utility.yul\":13770:13777   */\n      dup6\n        /* \"#utility.yul\":13761:13767   */\n      dup3\n        /* \"#utility.yul\":13750:13759   */\n      dup7\n        /* \"#utility.yul\":13746:13768   */\n      add\n        /* \"#utility.yul\":13725:13778   */\n      tag_495\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":13715:13778   */\n      swap2\n      pop\n        /* \"#utility.yul\":13670:13788   */\n      pop\n        /* \"#utility.yul\":13321:13795   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13801:13981   */\n    tag_514:\n        /* \"#utility.yul\":13849:13926   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13846:13847   */\n      0x00\n        /* \"#utility.yul\":13839:13927   */\n      mstore\n        /* \"#utility.yul\":13946:13950   */\n      0x22\n        /* \"#utility.yul\":13943:13944   */\n      0x04\n        /* \"#utility.yul\":13936:13951   */\n      mstore\n        /* \"#utility.yul\":13970:13974   */\n      0x24\n        /* \"#utility.yul\":13967:13968   */\n      0x00\n        /* \"#utility.yul\":13960:13975   */\n      revert\n        /* \"#utility.yul\":13987:14307   */\n    tag_148:\n        /* \"#utility.yul\":14031:14037   */\n      0x00\n        /* \"#utility.yul\":14068:14069   */\n      0x02\n        /* \"#utility.yul\":14062:14066   */\n      dup3\n        /* \"#utility.yul\":14058:14070   */\n      div\n        /* \"#utility.yul\":14048:14070   */\n      swap1\n      pop\n        /* \"#utility.yul\":14115:14116   */\n      0x01\n        /* \"#utility.yul\":14109:14113   */\n      dup3\n        /* \"#utility.yul\":14105:14117   */\n      and\n        /* \"#utility.yul\":14136:14154   */\n      dup1\n        /* \"#utility.yul\":14126:14207   */\n      tag_714\n      jumpi\n        /* \"#utility.yul\":14192:14196   */\n      0x7f\n        /* \"#utility.yul\":14184:14190   */\n      dup3\n        /* \"#utility.yul\":14180:14197   */\n      and\n        /* \"#utility.yul\":14170:14197   */\n      swap2\n      pop\n        /* \"#utility.yul\":14126:14207   */\n    tag_714:\n        /* \"#utility.yul\":14254:14256   */\n      0x20\n        /* \"#utility.yul\":14246:14252   */\n      dup3\n        /* \"#utility.yul\":14243:14257   */\n      lt\n        /* \"#utility.yul\":14223:14241   */\n      dup2\n        /* \"#utility.yul\":14220:14258   */\n      sub\n        /* \"#utility.yul\":14217:14301   */\n      tag_715\n      jumpi\n        /* \"#utility.yul\":14273:14291   */\n      tag_716\n      tag_514\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":14217:14301   */\n    tag_715:\n        /* \"#utility.yul\":14038:14307   */\n      pop\n        /* \"#utility.yul\":13987:14307   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14313:14755   */\n    tag_171:\n        /* \"#utility.yul\":14462:14466   */\n      0x00\n        /* \"#utility.yul\":14500:14502   */\n      0x60\n        /* \"#utility.yul\":14489:14498   */\n      dup3\n        /* \"#utility.yul\":14485:14503   */\n      add\n        /* \"#utility.yul\":14477:14503   */\n      swap1\n      pop\n        /* \"#utility.yul\":14513:14584   */\n      tag_718\n        /* \"#utility.yul\":14581:14582   */\n      0x00\n        /* \"#utility.yul\":14570:14579   */\n      dup4\n        /* \"#utility.yul\":14566:14583   */\n      add\n        /* \"#utility.yul\":14557:14563   */\n      dup7\n        /* \"#utility.yul\":14513:14584   */\n      tag_493\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":14594:14666   */\n      tag_719\n        /* \"#utility.yul\":14662:14664   */\n      0x20\n        /* \"#utility.yul\":14651:14660   */\n      dup4\n        /* \"#utility.yul\":14647:14665   */\n      add\n        /* \"#utility.yul\":14638:14644   */\n      dup6\n        /* \"#utility.yul\":14594:14666   */\n      tag_504\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":14676:14748   */\n      tag_720\n        /* \"#utility.yul\":14744:14746   */\n      0x40\n        /* \"#utility.yul\":14733:14742   */\n      dup4\n        /* \"#utility.yul\":14729:14747   */\n      add\n        /* \"#utility.yul\":14720:14726   */\n      dup5\n        /* \"#utility.yul\":14676:14748   */\n      tag_493\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":14313:14755   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14761:14933   */\n    tag_515:\n        /* \"#utility.yul\":14901:14925   */\n      0x4e6f2062616c616e636520746f20776974686472617700000000000000000000\n        /* \"#utility.yul\":14897:14898   */\n      0x00\n        /* \"#utility.yul\":14889:14895   */\n      dup3\n        /* \"#utility.yul\":14885:14899   */\n      add\n        /* \"#utility.yul\":14878:14926   */\n      mstore\n        /* \"#utility.yul\":14761:14933   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14939:15305   */\n    tag_516:\n        /* \"#utility.yul\":15081:15084   */\n      0x00\n        /* \"#utility.yul\":15102:15169   */\n      tag_723\n        /* \"#utility.yul\":15166:15168   */\n      0x16\n        /* \"#utility.yul\":15161:15164   */\n      dup4\n        /* \"#utility.yul\":15102:15169   */\n      tag_484\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":15095:15169   */\n      swap2\n      pop\n        /* \"#utility.yul\":15178:15271   */\n      tag_724\n        /* \"#utility.yul\":15267:15270   */\n      dup3\n        /* \"#utility.yul\":15178:15271   */\n      tag_515\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":15296:15298   */\n      0x20\n        /* \"#utility.yul\":15291:15294   */\n      dup3\n        /* \"#utility.yul\":15287:15299   */\n      add\n        /* \"#utility.yul\":15280:15299   */\n      swap1\n      pop\n        /* \"#utility.yul\":14939:15305   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15311:15730   */\n    tag_175:\n        /* \"#utility.yul\":15477:15481   */\n      0x00\n        /* \"#utility.yul\":15515:15517   */\n      0x20\n        /* \"#utility.yul\":15504:15513   */\n      dup3\n        /* \"#utility.yul\":15500:15518   */\n      add\n        /* \"#utility.yul\":15492:15518   */\n      swap1\n      pop\n        /* \"#utility.yul\":15564:15573   */\n      dup2\n        /* \"#utility.yul\":15558:15562   */\n      dup2\n        /* \"#utility.yul\":15554:15574   */\n      sub\n        /* \"#utility.yul\":15550:15551   */\n      0x00\n        /* \"#utility.yul\":15539:15548   */\n      dup4\n        /* \"#utility.yul\":15535:15552   */\n      add\n        /* \"#utility.yul\":15528:15575   */\n      mstore\n        /* \"#utility.yul\":15592:15723   */\n      tag_726\n        /* \"#utility.yul\":15718:15722   */\n      dup2\n        /* \"#utility.yul\":15592:15723   */\n      tag_516\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":15584:15723   */\n      swap1\n      pop\n        /* \"#utility.yul\":15311:15730   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15736:15910   */\n    tag_517:\n        /* \"#utility.yul\":15876:15902   */\n      0x4e6f7420746865207061796d656e742072656365697665720000000000000000\n        /* \"#utility.yul\":15872:15873   */\n      0x00\n        /* \"#utility.yul\":15864:15870   */\n      dup3\n        /* \"#utility.yul\":15860:15874   */\n      add\n        /* \"#utility.yul\":15853:15903   */\n      mstore\n        /* \"#utility.yul\":15736:15910   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15916:16282   */\n    tag_518:\n        /* \"#utility.yul\":16058:16061   */\n      0x00\n        /* \"#utility.yul\":16079:16146   */\n      tag_729\n        /* \"#utility.yul\":16143:16145   */\n      0x18\n        /* \"#utility.yul\":16138:16141   */\n      dup4\n        /* \"#utility.yul\":16079:16146   */\n      tag_484\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":16072:16146   */\n      swap2\n      pop\n        /* \"#utility.yul\":16155:16248   */\n      tag_730\n        /* \"#utility.yul\":16244:16247   */\n      dup3\n        /* \"#utility.yul\":16155:16248   */\n      tag_517\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":16273:16275   */\n      0x20\n        /* \"#utility.yul\":16268:16271   */\n      dup3\n        /* \"#utility.yul\":16264:16276   */\n      add\n        /* \"#utility.yul\":16257:16276   */\n      swap1\n      pop\n        /* \"#utility.yul\":15916:16282   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16288:16707   */\n    tag_178:\n        /* \"#utility.yul\":16454:16458   */\n      0x00\n        /* \"#utility.yul\":16492:16494   */\n      0x20\n        /* \"#utility.yul\":16481:16490   */\n      dup3\n        /* \"#utility.yul\":16477:16495   */\n      add\n        /* \"#utility.yul\":16469:16495   */\n      swap1\n      pop\n        /* \"#utility.yul\":16541:16550   */\n      dup2\n        /* \"#utility.yul\":16535:16539   */\n      dup2\n        /* \"#utility.yul\":16531:16551   */\n      sub\n        /* \"#utility.yul\":16527:16528   */\n      0x00\n        /* \"#utility.yul\":16516:16525   */\n      dup4\n        /* \"#utility.yul\":16512:16529   */\n      add\n        /* \"#utility.yul\":16505:16552   */\n      mstore\n        /* \"#utility.yul\":16569:16700   */\n      tag_732\n        /* \"#utility.yul\":16695:16699   */\n      dup2\n        /* \"#utility.yul\":16569:16700   */\n      tag_518\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":16561:16700   */\n      swap1\n      pop\n        /* \"#utility.yul\":16288:16707   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16713:16936   */\n    tag_519:\n        /* \"#utility.yul\":16853:16887   */\n      0x5072696365206d7573742062652067726561746572207468616e206d696e7450\n        /* \"#utility.yul\":16849:16850   */\n      0x00\n        /* \"#utility.yul\":16841:16847   */\n      dup3\n        /* \"#utility.yul\":16837:16851   */\n      add\n        /* \"#utility.yul\":16830:16888   */\n      mstore\n        /* \"#utility.yul\":16922:16928   */\n      0x7269636500000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16917:16919   */\n      0x20\n        /* \"#utility.yul\":16909:16915   */\n      dup3\n        /* \"#utility.yul\":16905:16920   */\n      add\n        /* \"#utility.yul\":16898:16929   */\n      mstore\n        /* \"#utility.yul\":16713:16936   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16942:17308   */\n    tag_520:\n        /* \"#utility.yul\":17084:17087   */\n      0x00\n        /* \"#utility.yul\":17105:17172   */\n      tag_735\n        /* \"#utility.yul\":17169:17171   */\n      0x24\n        /* \"#utility.yul\":17164:17167   */\n      dup4\n        /* \"#utility.yul\":17105:17172   */\n      tag_484\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":17098:17172   */\n      swap2\n      pop\n        /* \"#utility.yul\":17181:17274   */\n      tag_736\n        /* \"#utility.yul\":17270:17273   */\n      dup3\n        /* \"#utility.yul\":17181:17274   */\n      tag_519\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":17299:17301   */\n      0x40\n        /* \"#utility.yul\":17294:17297   */\n      dup3\n        /* \"#utility.yul\":17290:17302   */\n      add\n        /* \"#utility.yul\":17283:17302   */\n      swap1\n      pop\n        /* \"#utility.yul\":16942:17308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17314:17733   */\n    tag_189:\n        /* \"#utility.yul\":17480:17484   */\n      0x00\n        /* \"#utility.yul\":17518:17520   */\n      0x20\n        /* \"#utility.yul\":17507:17516   */\n      dup3\n        /* \"#utility.yul\":17503:17521   */\n      add\n        /* \"#utility.yul\":17495:17521   */\n      swap1\n      pop\n        /* \"#utility.yul\":17567:17576   */\n      dup2\n        /* \"#utility.yul\":17561:17565   */\n      dup2\n        /* \"#utility.yul\":17557:17577   */\n      sub\n        /* \"#utility.yul\":17553:17554   */\n      0x00\n        /* \"#utility.yul\":17542:17551   */\n      dup4\n        /* \"#utility.yul\":17538:17555   */\n      add\n        /* \"#utility.yul\":17531:17578   */\n      mstore\n        /* \"#utility.yul\":17595:17726   */\n      tag_738\n        /* \"#utility.yul\":17721:17725   */\n      dup2\n        /* \"#utility.yul\":17595:17726   */\n      tag_520\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":17587:17726   */\n      swap1\n      pop\n        /* \"#utility.yul\":17314:17733   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17739:17919   */\n    tag_521:\n        /* \"#utility.yul\":17787:17864   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17784:17785   */\n      0x00\n        /* \"#utility.yul\":17777:17865   */\n      mstore\n        /* \"#utility.yul\":17884:17888   */\n      0x11\n        /* \"#utility.yul\":17881:17882   */\n      0x04\n        /* \"#utility.yul\":17874:17889   */\n      mstore\n        /* \"#utility.yul\":17908:17912   */\n      0x24\n        /* \"#utility.yul\":17905:17906   */\n      0x00\n        /* \"#utility.yul\":17898:17913   */\n      revert\n        /* \"#utility.yul\":17925:18158   */\n    tag_191:\n        /* \"#utility.yul\":17964:17967   */\n      0x00\n        /* \"#utility.yul\":17987:18011   */\n      tag_741\n        /* \"#utility.yul\":18005:18010   */\n      dup3\n        /* \"#utility.yul\":17987:18011   */\n      tag_488\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":17978:18011   */\n      swap2\n      pop\n        /* \"#utility.yul\":18033:18099   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18026:18031   */\n      dup3\n        /* \"#utility.yul\":18023:18100   */\n      sub\n        /* \"#utility.yul\":18020:18123   */\n      tag_742\n      jumpi\n        /* \"#utility.yul\":18103:18121   */\n      tag_743\n      tag_521\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":18020:18123   */\n    tag_742:\n        /* \"#utility.yul\":18150:18151   */\n      0x01\n        /* \"#utility.yul\":18143:18148   */\n      dup3\n        /* \"#utility.yul\":18139:18152   */\n      add\n        /* \"#utility.yul\":18132:18152   */\n      swap1\n      pop\n        /* \"#utility.yul\":17925:18158   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18164:18587   */\n    tag_199:\n        /* \"#utility.yul\":18305:18309   */\n      0x00\n        /* \"#utility.yul\":18343:18345   */\n      0x40\n        /* \"#utility.yul\":18332:18341   */\n      dup3\n        /* \"#utility.yul\":18328:18346   */\n      add\n        /* \"#utility.yul\":18320:18346   */\n      swap1\n      pop\n        /* \"#utility.yul\":18392:18401   */\n      dup2\n        /* \"#utility.yul\":18386:18390   */\n      dup2\n        /* \"#utility.yul\":18382:18402   */\n      sub\n        /* \"#utility.yul\":18378:18379   */\n      0x00\n        /* \"#utility.yul\":18367:18376   */\n      dup4\n        /* \"#utility.yul\":18363:18380   */\n      add\n        /* \"#utility.yul\":18356:18403   */\n      mstore\n        /* \"#utility.yul\":18420:18498   */\n      tag_745\n        /* \"#utility.yul\":18493:18497   */\n      dup2\n        /* \"#utility.yul\":18484:18490   */\n      dup6\n        /* \"#utility.yul\":18420:18498   */\n      tag_487\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":18412:18498   */\n      swap1\n      pop\n        /* \"#utility.yul\":18508:18580   */\n      tag_746\n        /* \"#utility.yul\":18576:18578   */\n      0x20\n        /* \"#utility.yul\":18565:18574   */\n      dup4\n        /* \"#utility.yul\":18561:18579   */\n      add\n        /* \"#utility.yul\":18552:18558   */\n      dup5\n        /* \"#utility.yul\":18508:18580   */\n      tag_504\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":18164:18587   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18593:18741   */\n    tag_522:\n        /* \"#utility.yul\":18695:18706   */\n      0x00\n        /* \"#utility.yul\":18732:18735   */\n      dup2\n        /* \"#utility.yul\":18717:18735   */\n      swap1\n      pop\n        /* \"#utility.yul\":18593:18741   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18747:19137   */\n    tag_523:\n        /* \"#utility.yul\":18853:18856   */\n      0x00\n        /* \"#utility.yul\":18881:18920   */\n      tag_749\n        /* \"#utility.yul\":18914:18919   */\n      dup3\n        /* \"#utility.yul\":18881:18920   */\n      tag_483\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":18936:19025   */\n      tag_750\n        /* \"#utility.yul\":19018:19024   */\n      dup2\n        /* \"#utility.yul\":19013:19016   */\n      dup6\n        /* \"#utility.yul\":18936:19025   */\n      tag_522\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":18929:19025   */\n      swap4\n      pop\n        /* \"#utility.yul\":19034:19099   */\n      tag_751\n        /* \"#utility.yul\":19092:19098   */\n      dup2\n        /* \"#utility.yul\":19087:19090   */\n      dup6\n        /* \"#utility.yul\":19080:19084   */\n      0x20\n        /* \"#utility.yul\":19073:19078   */\n      dup7\n        /* \"#utility.yul\":19069:19085   */\n      add\n        /* \"#utility.yul\":19034:19099   */\n      tag_485\n      jump\t// in\n    tag_751:\n        /* \"#utility.yul\":19124:19130   */\n      dup1\n        /* \"#utility.yul\":19119:19122   */\n      dup5\n        /* \"#utility.yul\":19115:19131   */\n      add\n        /* \"#utility.yul\":19108:19131   */\n      swap2\n      pop\n        /* \"#utility.yul\":18857:19137   */\n      pop\n        /* \"#utility.yul\":18747:19137   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19143:19578   */\n    tag_249:\n        /* \"#utility.yul\":19323:19326   */\n      0x00\n        /* \"#utility.yul\":19345:19440   */\n      tag_753\n        /* \"#utility.yul\":19436:19439   */\n      dup3\n        /* \"#utility.yul\":19427:19433   */\n      dup6\n        /* \"#utility.yul\":19345:19440   */\n      tag_523\n      jump\t// in\n    tag_753:\n        /* \"#utility.yul\":19338:19440   */\n      swap2\n      pop\n        /* \"#utility.yul\":19457:19552   */\n      tag_754\n        /* \"#utility.yul\":19548:19551   */\n      dup3\n        /* \"#utility.yul\":19539:19545   */\n      dup5\n        /* \"#utility.yul\":19457:19552   */\n      tag_523\n      jump\t// in\n    tag_754:\n        /* \"#utility.yul\":19450:19552   */\n      swap2\n      pop\n        /* \"#utility.yul\":19569:19572   */\n      dup2\n        /* \"#utility.yul\":19562:19572   */\n      swap1\n      pop\n        /* \"#utility.yul\":19143:19578   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19584:19669   */\n    tag_524:\n        /* \"#utility.yul\":19629:19636   */\n      0x00\n        /* \"#utility.yul\":19658:19663   */\n      dup2\n        /* \"#utility.yul\":19647:19663   */\n      swap1\n      pop\n        /* \"#utility.yul\":19584:19669   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19675:19776   */\n    tag_525:\n        /* \"#utility.yul\":19711:19718   */\n      0x00\n        /* \"#utility.yul\":19751:19769   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19744:19749   */\n      dup3\n        /* \"#utility.yul\":19740:19770   */\n      and\n        /* \"#utility.yul\":19729:19770   */\n      swap1\n      pop\n        /* \"#utility.yul\":19675:19776   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19782:19842   */\n    tag_526:\n        /* \"#utility.yul\":19810:19813   */\n      0x00\n        /* \"#utility.yul\":19831:19836   */\n      dup2\n        /* \"#utility.yul\":19824:19836   */\n      swap1\n      pop\n        /* \"#utility.yul\":19782:19842   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19848:20004   */\n    tag_527:\n        /* \"#utility.yul\":19905:19914   */\n      0x00\n        /* \"#utility.yul\":19938:19998   */\n      tag_759\n        /* \"#utility.yul\":19955:19997   */\n      tag_760\n        /* \"#utility.yul\":19964:19996   */\n      tag_761\n        /* \"#utility.yul\":19990:19995   */\n      dup5\n        /* \"#utility.yul\":19964:19996   */\n      tag_524\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":19955:19997   */\n      tag_526\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":19938:19998   */\n      tag_525\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":19925:19998   */\n      swap1\n      pop\n        /* \"#utility.yul\":19848:20004   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20010:20155   */\n    tag_528:\n        /* \"#utility.yul\":20104:20148   */\n      tag_763\n        /* \"#utility.yul\":20142:20147   */\n      dup2\n        /* \"#utility.yul\":20104:20148   */\n      tag_527\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":20099:20102   */\n      dup3\n        /* \"#utility.yul\":20092:20149   */\n      mstore\n        /* \"#utility.yul\":20010:20155   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20161:20397   */\n    tag_271:\n        /* \"#utility.yul\":20261:20265   */\n      0x00\n        /* \"#utility.yul\":20299:20301   */\n      0x20\n        /* \"#utility.yul\":20288:20297   */\n      dup3\n        /* \"#utility.yul\":20284:20302   */\n      add\n        /* \"#utility.yul\":20276:20302   */\n      swap1\n      pop\n        /* \"#utility.yul\":20312:20390   */\n      tag_765\n        /* \"#utility.yul\":20387:20388   */\n      0x00\n        /* \"#utility.yul\":20376:20385   */\n      dup4\n        /* \"#utility.yul\":20372:20389   */\n      add\n        /* \"#utility.yul\":20363:20369   */\n      dup5\n        /* \"#utility.yul\":20312:20390   */\n      tag_528\n      jump\t// in\n    tag_765:\n        /* \"#utility.yul\":20161:20397   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20403:20625   */\n    tag_529:\n        /* \"#utility.yul\":20543:20577   */\n      0x6d696e745072696365206d757374206265206120706f736974697665206e756d\n        /* \"#utility.yul\":20539:20540   */\n      0x00\n        /* \"#utility.yul\":20531:20537   */\n      dup3\n        /* \"#utility.yul\":20527:20541   */\n      add\n        /* \"#utility.yul\":20520:20578   */\n      mstore\n        /* \"#utility.yul\":20612:20617   */\n      0x6265720000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20607:20609   */\n      0x20\n        /* \"#utility.yul\":20599:20605   */\n      dup3\n        /* \"#utility.yul\":20595:20610   */\n      add\n        /* \"#utility.yul\":20588:20618   */\n      mstore\n        /* \"#utility.yul\":20403:20625   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20631:20997   */\n    tag_530:\n        /* \"#utility.yul\":20773:20776   */\n      0x00\n        /* \"#utility.yul\":20794:20861   */\n      tag_768\n        /* \"#utility.yul\":20858:20860   */\n      0x23\n        /* \"#utility.yul\":20853:20856   */\n      dup4\n        /* \"#utility.yul\":20794:20861   */\n      tag_484\n      jump\t// in\n    tag_768:\n        /* \"#utility.yul\":20787:20861   */\n      swap2\n      pop\n        /* \"#utility.yul\":20870:20963   */\n      tag_769\n        /* \"#utility.yul\":20959:20962   */\n      dup3\n        /* \"#utility.yul\":20870:20963   */\n      tag_529\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":20988:20990   */\n      0x40\n        /* \"#utility.yul\":20983:20986   */\n      dup3\n        /* \"#utility.yul\":20979:20991   */\n      add\n        /* \"#utility.yul\":20972:20991   */\n      swap1\n      pop\n        /* \"#utility.yul\":20631:20997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21003:21422   */\n    tag_285:\n        /* \"#utility.yul\":21169:21173   */\n      0x00\n        /* \"#utility.yul\":21207:21209   */\n      0x20\n        /* \"#utility.yul\":21196:21205   */\n      dup3\n        /* \"#utility.yul\":21192:21210   */\n      add\n        /* \"#utility.yul\":21184:21210   */\n      swap1\n      pop\n        /* \"#utility.yul\":21256:21265   */\n      dup2\n        /* \"#utility.yul\":21250:21254   */\n      dup2\n        /* \"#utility.yul\":21246:21266   */\n      sub\n        /* \"#utility.yul\":21242:21243   */\n      0x00\n        /* \"#utility.yul\":21231:21240   */\n      dup4\n        /* \"#utility.yul\":21227:21244   */\n      add\n        /* \"#utility.yul\":21220:21267   */\n      mstore\n        /* \"#utility.yul\":21284:21415   */\n      tag_771\n        /* \"#utility.yul\":21410:21414   */\n      dup2\n        /* \"#utility.yul\":21284:21415   */\n      tag_530\n      jump\t// in\n    tag_771:\n        /* \"#utility.yul\":21276:21415   */\n      swap1\n      pop\n        /* \"#utility.yul\":21003:21422   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21428:21609   */\n    tag_531:\n        /* \"#utility.yul\":21568:21601   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":21564:21565   */\n      0x00\n        /* \"#utility.yul\":21556:21562   */\n      dup3\n        /* \"#utility.yul\":21552:21566   */\n      add\n        /* \"#utility.yul\":21545:21602   */\n      mstore\n        /* \"#utility.yul\":21428:21609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21615:21981   */\n    tag_532:\n        /* \"#utility.yul\":21757:21760   */\n      0x00\n        /* \"#utility.yul\":21778:21845   */\n      tag_774\n        /* \"#utility.yul\":21842:21844   */\n      0x1f\n        /* \"#utility.yul\":21837:21840   */\n      dup4\n        /* \"#utility.yul\":21778:21845   */\n      tag_484\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":21771:21845   */\n      swap2\n      pop\n        /* \"#utility.yul\":21854:21947   */\n      tag_775\n        /* \"#utility.yul\":21943:21946   */\n      dup3\n        /* \"#utility.yul\":21854:21947   */\n      tag_531\n      jump\t// in\n    tag_775:\n        /* \"#utility.yul\":21972:21974   */\n      0x20\n        /* \"#utility.yul\":21967:21970   */\n      dup3\n        /* \"#utility.yul\":21963:21975   */\n      add\n        /* \"#utility.yul\":21956:21975   */\n      swap1\n      pop\n        /* \"#utility.yul\":21615:21981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21987:22406   */\n    tag_315:\n        /* \"#utility.yul\":22153:22157   */\n      0x00\n        /* \"#utility.yul\":22191:22193   */\n      0x20\n        /* \"#utility.yul\":22180:22189   */\n      dup3\n        /* \"#utility.yul\":22176:22194   */\n      add\n        /* \"#utility.yul\":22168:22194   */\n      swap1\n      pop\n        /* \"#utility.yul\":22240:22249   */\n      dup2\n        /* \"#utility.yul\":22234:22238   */\n      dup2\n        /* \"#utility.yul\":22230:22250   */\n      sub\n        /* \"#utility.yul\":22226:22227   */\n      0x00\n        /* \"#utility.yul\":22215:22224   */\n      dup4\n        /* \"#utility.yul\":22211:22228   */\n      add\n        /* \"#utility.yul\":22204:22251   */\n      mstore\n        /* \"#utility.yul\":22268:22399   */\n      tag_777\n        /* \"#utility.yul\":22394:22398   */\n      dup2\n        /* \"#utility.yul\":22268:22399   */\n      tag_532\n      jump\t// in\n    tag_777:\n        /* \"#utility.yul\":22260:22399   */\n      swap1\n      pop\n        /* \"#utility.yul\":21987:22406   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22412:22553   */\n    tag_533:\n        /* \"#utility.yul\":22461:22465   */\n      0x00\n        /* \"#utility.yul\":22484:22487   */\n      dup2\n        /* \"#utility.yul\":22476:22487   */\n      swap1\n      pop\n        /* \"#utility.yul\":22507:22510   */\n      dup2\n        /* \"#utility.yul\":22504:22505   */\n      0x00\n        /* \"#utility.yul\":22497:22511   */\n      mstore\n        /* \"#utility.yul\":22541:22545   */\n      0x20\n        /* \"#utility.yul\":22538:22539   */\n      0x00\n        /* \"#utility.yul\":22528:22546   */\n      keccak256\n        /* \"#utility.yul\":22520:22546   */\n      swap1\n      pop\n        /* \"#utility.yul\":22412:22553   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22559:22652   */\n    tag_534:\n        /* \"#utility.yul\":22596:22602   */\n      0x00\n        /* \"#utility.yul\":22643:22645   */\n      0x20\n        /* \"#utility.yul\":22638:22640   */\n      0x1f\n        /* \"#utility.yul\":22631:22636   */\n      dup4\n        /* \"#utility.yul\":22627:22641   */\n      add\n        /* \"#utility.yul\":22623:22646   */\n      div\n        /* \"#utility.yul\":22613:22646   */\n      swap1\n      pop\n        /* \"#utility.yul\":22559:22652   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22658:22765   */\n    tag_535:\n        /* \"#utility.yul\":22702:22710   */\n      0x00\n        /* \"#utility.yul\":22752:22757   */\n      dup3\n        /* \"#utility.yul\":22746:22750   */\n      dup3\n        /* \"#utility.yul\":22742:22758   */\n      shl\n        /* \"#utility.yul\":22721:22758   */\n      swap1\n      pop\n        /* \"#utility.yul\":22658:22765   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22771:23164   */\n    tag_536:\n        /* \"#utility.yul\":22840:22846   */\n      0x00\n        /* \"#utility.yul\":22890:22891   */\n      0x08\n        /* \"#utility.yul\":22878:22888   */\n      dup4\n        /* \"#utility.yul\":22874:22892   */\n      mul\n        /* \"#utility.yul\":22913:23010   */\n      tag_782\n        /* \"#utility.yul\":22943:23009   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":22932:22941   */\n      dup3\n        /* \"#utility.yul\":22913:23010   */\n      tag_535\n      jump\t// in\n    tag_782:\n        /* \"#utility.yul\":23031:23070   */\n      tag_783\n        /* \"#utility.yul\":23061:23069   */\n      dup7\n        /* \"#utility.yul\":23050:23059   */\n      dup4\n        /* \"#utility.yul\":23031:23070   */\n      tag_535\n      jump\t// in\n    tag_783:\n        /* \"#utility.yul\":23019:23070   */\n      swap6\n      pop\n        /* \"#utility.yul\":23103:23107   */\n      dup1\n        /* \"#utility.yul\":23099:23108   */\n      not\n        /* \"#utility.yul\":23092:23097   */\n      dup5\n        /* \"#utility.yul\":23088:23109   */\n      and\n        /* \"#utility.yul\":23079:23109   */\n      swap4\n      pop\n        /* \"#utility.yul\":23152:23156   */\n      dup1\n        /* \"#utility.yul\":23142:23150   */\n      dup7\n        /* \"#utility.yul\":23138:23157   */\n      and\n        /* \"#utility.yul\":23131:23136   */\n      dup5\n        /* \"#utility.yul\":23128:23158   */\n      or\n        /* \"#utility.yul\":23118:23158   */\n      swap3\n      pop\n        /* \"#utility.yul\":22847:23164   */\n      pop\n      pop\n        /* \"#utility.yul\":22771:23164   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23170:23312   */\n    tag_537:\n        /* \"#utility.yul\":23220:23229   */\n      0x00\n        /* \"#utility.yul\":23253:23306   */\n      tag_785\n        /* \"#utility.yul\":23271:23305   */\n      tag_786\n        /* \"#utility.yul\":23280:23304   */\n      tag_787\n        /* \"#utility.yul\":23298:23303   */\n      dup5\n        /* \"#utility.yul\":23280:23304   */\n      tag_488\n      jump\t// in\n    tag_787:\n        /* \"#utility.yul\":23271:23305   */\n      tag_526\n      jump\t// in\n    tag_786:\n        /* \"#utility.yul\":23253:23306   */\n      tag_488\n      jump\t// in\n    tag_785:\n        /* \"#utility.yul\":23240:23306   */\n      swap1\n      pop\n        /* \"#utility.yul\":23170:23312   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23318:23393   */\n    tag_538:\n        /* \"#utility.yul\":23361:23364   */\n      0x00\n        /* \"#utility.yul\":23382:23387   */\n      dup2\n        /* \"#utility.yul\":23375:23387   */\n      swap1\n      pop\n        /* \"#utility.yul\":23318:23393   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23399:23668   */\n    tag_539:\n        /* \"#utility.yul\":23509:23548   */\n      tag_790\n        /* \"#utility.yul\":23540:23547   */\n      dup4\n        /* \"#utility.yul\":23509:23548   */\n      tag_537\n      jump\t// in\n    tag_790:\n        /* \"#utility.yul\":23570:23661   */\n      tag_791\n        /* \"#utility.yul\":23619:23660   */\n      tag_792\n        /* \"#utility.yul\":23643:23659   */\n      dup3\n        /* \"#utility.yul\":23619:23660   */\n      tag_538\n      jump\t// in\n    tag_792:\n        /* \"#utility.yul\":23611:23617   */\n      dup5\n        /* \"#utility.yul\":23604:23608   */\n      dup5\n        /* \"#utility.yul\":23598:23609   */\n      sload\n        /* \"#utility.yul\":23570:23661   */\n      tag_536\n      jump\t// in\n    tag_791:\n        /* \"#utility.yul\":23564:23568   */\n      dup3\n        /* \"#utility.yul\":23557:23662   */\n      sstore\n        /* \"#utility.yul\":23475:23668   */\n      pop\n        /* \"#utility.yul\":23399:23668   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23674:23747   */\n    tag_540:\n        /* \"#utility.yul\":23719:23722   */\n      0x00\n        /* \"#utility.yul\":23674:23747   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":23753:23942   */\n    tag_541:\n        /* \"#utility.yul\":23830:23862   */\n      tag_795\n      tag_540\n      jump\t// in\n    tag_795:\n        /* \"#utility.yul\":23871:23936   */\n      tag_796\n        /* \"#utility.yul\":23929:23935   */\n      dup2\n        /* \"#utility.yul\":23921:23927   */\n      dup5\n        /* \"#utility.yul\":23915:23919   */\n      dup5\n        /* \"#utility.yul\":23871:23936   */\n      tag_539\n      jump\t// in\n    tag_796:\n        /* \"#utility.yul\":23806:23942   */\n      pop\n        /* \"#utility.yul\":23753:23942   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23948:24134   */\n    tag_542:\n        /* \"#utility.yul\":24008:24128   */\n    tag_798:\n        /* \"#utility.yul\":24025:24028   */\n      dup2\n        /* \"#utility.yul\":24018:24023   */\n      dup2\n        /* \"#utility.yul\":24015:24029   */\n      lt\n        /* \"#utility.yul\":24008:24128   */\n      iszero\n      tag_800\n      jumpi\n        /* \"#utility.yul\":24079:24118   */\n      tag_801\n        /* \"#utility.yul\":24116:24117   */\n      0x00\n        /* \"#utility.yul\":24109:24114   */\n      dup3\n        /* \"#utility.yul\":24079:24118   */\n      tag_541\n      jump\t// in\n    tag_801:\n        /* \"#utility.yul\":24052:24053   */\n      0x01\n        /* \"#utility.yul\":24045:24050   */\n      dup2\n        /* \"#utility.yul\":24041:24054   */\n      add\n        /* \"#utility.yul\":24032:24054   */\n      swap1\n      pop\n        /* \"#utility.yul\":24008:24128   */\n      jump(tag_798)\n    tag_800:\n        /* \"#utility.yul\":23948:24134   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24140:24683   */\n    tag_543:\n        /* \"#utility.yul\":24241:24243   */\n      0x1f\n        /* \"#utility.yul\":24236:24239   */\n      dup3\n        /* \"#utility.yul\":24233:24244   */\n      gt\n        /* \"#utility.yul\":24230:24676   */\n      iszero\n      tag_803\n      jumpi\n        /* \"#utility.yul\":24275:24313   */\n      tag_804\n        /* \"#utility.yul\":24307:24312   */\n      dup2\n        /* \"#utility.yul\":24275:24313   */\n      tag_533\n      jump\t// in\n    tag_804:\n        /* \"#utility.yul\":24359:24388   */\n      tag_805\n        /* \"#utility.yul\":24377:24387   */\n      dup5\n        /* \"#utility.yul\":24359:24388   */\n      tag_534\n      jump\t// in\n    tag_805:\n        /* \"#utility.yul\":24349:24357   */\n      dup2\n        /* \"#utility.yul\":24345:24389   */\n      add\n        /* \"#utility.yul\":24542:24544   */\n      0x20\n        /* \"#utility.yul\":24530:24540   */\n      dup6\n        /* \"#utility.yul\":24527:24545   */\n      lt\n        /* \"#utility.yul\":24524:24573   */\n      iszero\n      tag_806\n      jumpi\n        /* \"#utility.yul\":24563:24571   */\n      dup2\n        /* \"#utility.yul\":24548:24571   */\n      swap1\n      pop\n        /* \"#utility.yul\":24524:24573   */\n    tag_806:\n        /* \"#utility.yul\":24586:24666   */\n      tag_807\n        /* \"#utility.yul\":24642:24664   */\n      tag_808\n        /* \"#utility.yul\":24660:24663   */\n      dup6\n        /* \"#utility.yul\":24642:24664   */\n      tag_534\n      jump\t// in\n    tag_808:\n        /* \"#utility.yul\":24632:24640   */\n      dup4\n        /* \"#utility.yul\":24628:24665   */\n      add\n        /* \"#utility.yul\":24615:24626   */\n      dup3\n        /* \"#utility.yul\":24586:24666   */\n      tag_542\n      jump\t// in\n    tag_807:\n        /* \"#utility.yul\":24245:24676   */\n      pop\n      pop\n        /* \"#utility.yul\":24230:24676   */\n    tag_803:\n        /* \"#utility.yul\":24140:24683   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24689:24806   */\n    tag_544:\n        /* \"#utility.yul\":24743:24751   */\n      0x00\n        /* \"#utility.yul\":24793:24798   */\n      dup3\n        /* \"#utility.yul\":24787:24791   */\n      dup3\n        /* \"#utility.yul\":24783:24799   */\n      shr\n        /* \"#utility.yul\":24762:24799   */\n      swap1\n      pop\n        /* \"#utility.yul\":24689:24806   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24812:24981   */\n    tag_545:\n        /* \"#utility.yul\":24856:24862   */\n      0x00\n        /* \"#utility.yul\":24889:24940   */\n      tag_811\n        /* \"#utility.yul\":24937:24938   */\n      0x00\n        /* \"#utility.yul\":24933:24939   */\n      not\n        /* \"#utility.yul\":24925:24930   */\n      dup5\n        /* \"#utility.yul\":24922:24923   */\n      0x08\n        /* \"#utility.yul\":24918:24931   */\n      mul\n        /* \"#utility.yul\":24889:24940   */\n      tag_544\n      jump\t// in\n    tag_811:\n        /* \"#utility.yul\":24885:24941   */\n      not\n        /* \"#utility.yul\":24970:24974   */\n      dup1\n        /* \"#utility.yul\":24964:24968   */\n      dup4\n        /* \"#utility.yul\":24960:24975   */\n      and\n        /* \"#utility.yul\":24950:24975   */\n      swap2\n      pop\n        /* \"#utility.yul\":24863:24981   */\n      pop\n        /* \"#utility.yul\":24812:24981   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24986:25281   */\n    tag_546:\n        /* \"#utility.yul\":25062:25066   */\n      0x00\n        /* \"#utility.yul\":25208:25237   */\n      tag_813\n        /* \"#utility.yul\":25233:25236   */\n      dup4\n        /* \"#utility.yul\":25227:25231   */\n      dup4\n        /* \"#utility.yul\":25208:25237   */\n      tag_545\n      jump\t// in\n    tag_813:\n        /* \"#utility.yul\":25200:25237   */\n      swap2\n      pop\n        /* \"#utility.yul\":25270:25273   */\n      dup3\n        /* \"#utility.yul\":25267:25268   */\n      0x02\n        /* \"#utility.yul\":25263:25274   */\n      mul\n        /* \"#utility.yul\":25257:25261   */\n      dup3\n        /* \"#utility.yul\":25254:25275   */\n      or\n        /* \"#utility.yul\":25246:25275   */\n      swap1\n      pop\n        /* \"#utility.yul\":24986:25281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25286:26681   */\n    tag_325:\n        /* \"#utility.yul\":25403:25440   */\n      tag_815\n        /* \"#utility.yul\":25436:25439   */\n      dup3\n        /* \"#utility.yul\":25403:25440   */\n      tag_483\n      jump\t// in\n    tag_815:\n        /* \"#utility.yul\":25505:25523   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":25497:25503   */\n      dup2\n        /* \"#utility.yul\":25494:25524   */\n      gt\n        /* \"#utility.yul\":25491:25547   */\n      iszero\n      tag_816\n      jumpi\n        /* \"#utility.yul\":25527:25545   */\n      tag_817\n      tag_420\n      jump\t// in\n    tag_817:\n        /* \"#utility.yul\":25491:25547   */\n    tag_816:\n        /* \"#utility.yul\":25571:25609   */\n      tag_818\n        /* \"#utility.yul\":25603:25607   */\n      dup3\n        /* \"#utility.yul\":25597:25608   */\n      sload\n        /* \"#utility.yul\":25571:25609   */\n      tag_148\n      jump\t// in\n    tag_818:\n        /* \"#utility.yul\":25656:25723   */\n      tag_819\n        /* \"#utility.yul\":25716:25722   */\n      dup3\n        /* \"#utility.yul\":25708:25714   */\n      dup3\n        /* \"#utility.yul\":25702:25706   */\n      dup6\n        /* \"#utility.yul\":25656:25723   */\n      tag_543\n      jump\t// in\n    tag_819:\n        /* \"#utility.yul\":25750:25751   */\n      0x00\n        /* \"#utility.yul\":25774:25778   */\n      0x20\n        /* \"#utility.yul\":25761:25778   */\n      swap1\n      pop\n        /* \"#utility.yul\":25806:25808   */\n      0x1f\n        /* \"#utility.yul\":25798:25804   */\n      dup4\n        /* \"#utility.yul\":25795:25809   */\n      gt\n        /* \"#utility.yul\":25823:25824   */\n      0x01\n        /* \"#utility.yul\":25818:26436   */\n      dup2\n      eq\n      tag_821\n      jumpi\n        /* \"#utility.yul\":26480:26481   */\n      0x00\n        /* \"#utility.yul\":26497:26503   */\n      dup5\n        /* \"#utility.yul\":26494:26571   */\n      iszero\n      tag_822\n      jumpi\n        /* \"#utility.yul\":26546:26555   */\n      dup3\n        /* \"#utility.yul\":26541:26544   */\n      dup8\n        /* \"#utility.yul\":26537:26556   */\n      add\n        /* \"#utility.yul\":26531:26557   */\n      mload\n        /* \"#utility.yul\":26522:26557   */\n      swap1\n      pop\n        /* \"#utility.yul\":26494:26571   */\n    tag_822:\n        /* \"#utility.yul\":26597:26664   */\n      tag_823\n        /* \"#utility.yul\":26657:26663   */\n      dup6\n        /* \"#utility.yul\":26650:26655   */\n      dup3\n        /* \"#utility.yul\":26597:26664   */\n      tag_546\n      jump\t// in\n    tag_823:\n        /* \"#utility.yul\":26591:26595   */\n      dup7\n        /* \"#utility.yul\":26584:26665   */\n      sstore\n        /* \"#utility.yul\":26453:26675   */\n      pop\n        /* \"#utility.yul\":25788:26675   */\n      jump(tag_820)\n        /* \"#utility.yul\":25818:26436   */\n    tag_821:\n        /* \"#utility.yul\":25870:25874   */\n      0x1f\n        /* \"#utility.yul\":25866:25875   */\n      not\n        /* \"#utility.yul\":25858:25864   */\n      dup5\n        /* \"#utility.yul\":25854:25876   */\n      and\n        /* \"#utility.yul\":25904:25941   */\n      tag_824\n        /* \"#utility.yul\":25936:25940   */\n      dup7\n        /* \"#utility.yul\":25904:25941   */\n      tag_533\n      jump\t// in\n    tag_824:\n        /* \"#utility.yul\":25963:25964   */\n      0x00\n        /* \"#utility.yul\":25977:26185   */\n    tag_825:\n        /* \"#utility.yul\":25991:25998   */\n      dup3\n        /* \"#utility.yul\":25988:25989   */\n      dup2\n        /* \"#utility.yul\":25985:25999   */\n      lt\n        /* \"#utility.yul\":25977:26185   */\n      iszero\n      tag_827\n      jumpi\n        /* \"#utility.yul\":26070:26079   */\n      dup5\n        /* \"#utility.yul\":26065:26068   */\n      dup10\n        /* \"#utility.yul\":26061:26080   */\n      add\n        /* \"#utility.yul\":26055:26081   */\n      mload\n        /* \"#utility.yul\":26047:26053   */\n      dup3\n        /* \"#utility.yul\":26040:26082   */\n      sstore\n        /* \"#utility.yul\":26121:26122   */\n      0x01\n        /* \"#utility.yul\":26113:26119   */\n      dup3\n        /* \"#utility.yul\":26109:26123   */\n      add\n        /* \"#utility.yul\":26099:26123   */\n      swap2\n      pop\n        /* \"#utility.yul\":26168:26170   */\n      0x20\n        /* \"#utility.yul\":26157:26166   */\n      dup6\n        /* \"#utility.yul\":26153:26171   */\n      add\n        /* \"#utility.yul\":26140:26171   */\n      swap5\n      pop\n        /* \"#utility.yul\":26014:26018   */\n      0x20\n        /* \"#utility.yul\":26011:26012   */\n      dup2\n        /* \"#utility.yul\":26007:26019   */\n      add\n        /* \"#utility.yul\":26002:26019   */\n      swap1\n      pop\n        /* \"#utility.yul\":25977:26185   */\n      jump(tag_825)\n    tag_827:\n        /* \"#utility.yul\":26213:26219   */\n      dup7\n        /* \"#utility.yul\":26204:26211   */\n      dup4\n        /* \"#utility.yul\":26201:26220   */\n      lt\n        /* \"#utility.yul\":26198:26377   */\n      iszero\n      tag_828\n      jumpi\n        /* \"#utility.yul\":26271:26280   */\n      dup5\n        /* \"#utility.yul\":26266:26269   */\n      dup10\n        /* \"#utility.yul\":26262:26281   */\n      add\n        /* \"#utility.yul\":26256:26282   */\n      mload\n        /* \"#utility.yul\":26314:26362   */\n      tag_829\n        /* \"#utility.yul\":26356:26360   */\n      0x1f\n        /* \"#utility.yul\":26348:26354   */\n      dup10\n        /* \"#utility.yul\":26344:26361   */\n      and\n        /* \"#utility.yul\":26333:26342   */\n      dup3\n        /* \"#utility.yul\":26314:26362   */\n      tag_545\n      jump\t// in\n    tag_829:\n        /* \"#utility.yul\":26306:26312   */\n      dup4\n        /* \"#utility.yul\":26299:26363   */\n      sstore\n        /* \"#utility.yul\":26221:26377   */\n      pop\n        /* \"#utility.yul\":26198:26377   */\n    tag_828:\n        /* \"#utility.yul\":26423:26424   */\n      0x01\n        /* \"#utility.yul\":26419:26420   */\n      0x02\n        /* \"#utility.yul\":26411:26417   */\n      dup9\n        /* \"#utility.yul\":26407:26421   */\n      mul\n        /* \"#utility.yul\":26403:26425   */\n      add\n        /* \"#utility.yul\":26397:26401   */\n      dup9\n        /* \"#utility.yul\":26390:26426   */\n      sstore\n        /* \"#utility.yul\":25825:26436   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":25788:26675   */\n    tag_820:\n      pop\n        /* \"#utility.yul\":25378:26681   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":25286:26681   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26687:26785   */\n    tag_547:\n        /* \"#utility.yul\":26738:26744   */\n      0x00\n        /* \"#utility.yul\":26772:26777   */\n      dup2\n        /* \"#utility.yul\":26766:26778   */\n      mload\n        /* \"#utility.yul\":26756:26778   */\n      swap1\n      pop\n        /* \"#utility.yul\":26687:26785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26791:26959   */\n    tag_548:\n        /* \"#utility.yul\":26874:26885   */\n      0x00\n        /* \"#utility.yul\":26908:26914   */\n      dup3\n        /* \"#utility.yul\":26903:26906   */\n      dup3\n        /* \"#utility.yul\":26896:26915   */\n      mstore\n        /* \"#utility.yul\":26948:26952   */\n      0x20\n        /* \"#utility.yul\":26943:26946   */\n      dup3\n        /* \"#utility.yul\":26939:26953   */\n      add\n        /* \"#utility.yul\":26924:26953   */\n      swap1\n      pop\n        /* \"#utility.yul\":26791:26959   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26965:27338   */\n    tag_549:\n        /* \"#utility.yul\":27051:27054   */\n      0x00\n        /* \"#utility.yul\":27079:27117   */\n      tag_833\n        /* \"#utility.yul\":27111:27116   */\n      dup3\n        /* \"#utility.yul\":27079:27117   */\n      tag_547\n      jump\t// in\n    tag_833:\n        /* \"#utility.yul\":27133:27203   */\n      tag_834\n        /* \"#utility.yul\":27196:27202   */\n      dup2\n        /* \"#utility.yul\":27191:27194   */\n      dup6\n        /* \"#utility.yul\":27133:27203   */\n      tag_548\n      jump\t// in\n    tag_834:\n        /* \"#utility.yul\":27126:27203   */\n      swap4\n      pop\n        /* \"#utility.yul\":27212:27277   */\n      tag_835\n        /* \"#utility.yul\":27270:27276   */\n      dup2\n        /* \"#utility.yul\":27265:27268   */\n      dup6\n        /* \"#utility.yul\":27258:27262   */\n      0x20\n        /* \"#utility.yul\":27251:27256   */\n      dup7\n        /* \"#utility.yul\":27247:27263   */\n      add\n        /* \"#utility.yul\":27212:27277   */\n      tag_485\n      jump\t// in\n    tag_835:\n        /* \"#utility.yul\":27302:27331   */\n      tag_836\n        /* \"#utility.yul\":27324:27330   */\n      dup2\n        /* \"#utility.yul\":27302:27331   */\n      tag_486\n      jump\t// in\n    tag_836:\n        /* \"#utility.yul\":27297:27300   */\n      dup5\n        /* \"#utility.yul\":27293:27332   */\n      add\n        /* \"#utility.yul\":27286:27332   */\n      swap2\n      pop\n        /* \"#utility.yul\":27055:27338   */\n      pop\n        /* \"#utility.yul\":26965:27338   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27344:27984   */\n    tag_346:\n        /* \"#utility.yul\":27539:27543   */\n      0x00\n        /* \"#utility.yul\":27577:27580   */\n      0x80\n        /* \"#utility.yul\":27566:27575   */\n      dup3\n        /* \"#utility.yul\":27562:27581   */\n      add\n        /* \"#utility.yul\":27554:27581   */\n      swap1\n      pop\n        /* \"#utility.yul\":27591:27662   */\n      tag_838\n        /* \"#utility.yul\":27659:27660   */\n      0x00\n        /* \"#utility.yul\":27648:27657   */\n      dup4\n        /* \"#utility.yul\":27644:27661   */\n      add\n        /* \"#utility.yul\":27635:27641   */\n      dup8\n        /* \"#utility.yul\":27591:27662   */\n      tag_493\n      jump\t// in\n    tag_838:\n        /* \"#utility.yul\":27672:27744   */\n      tag_839\n        /* \"#utility.yul\":27740:27742   */\n      0x20\n        /* \"#utility.yul\":27729:27738   */\n      dup4\n        /* \"#utility.yul\":27725:27743   */\n      add\n        /* \"#utility.yul\":27716:27722   */\n      dup7\n        /* \"#utility.yul\":27672:27744   */\n      tag_493\n      jump\t// in\n    tag_839:\n        /* \"#utility.yul\":27754:27826   */\n      tag_840\n        /* \"#utility.yul\":27822:27824   */\n      0x40\n        /* \"#utility.yul\":27811:27820   */\n      dup4\n        /* \"#utility.yul\":27807:27825   */\n      add\n        /* \"#utility.yul\":27798:27804   */\n      dup6\n        /* \"#utility.yul\":27754:27826   */\n      tag_504\n      jump\t// in\n    tag_840:\n        /* \"#utility.yul\":27873:27882   */\n      dup2\n        /* \"#utility.yul\":27867:27871   */\n      dup2\n        /* \"#utility.yul\":27863:27883   */\n      sub\n        /* \"#utility.yul\":27858:27860   */\n      0x60\n        /* \"#utility.yul\":27847:27856   */\n      dup4\n        /* \"#utility.yul\":27843:27861   */\n      add\n        /* \"#utility.yul\":27836:27884   */\n      mstore\n        /* \"#utility.yul\":27901:27977   */\n      tag_841\n        /* \"#utility.yul\":27972:27976   */\n      dup2\n        /* \"#utility.yul\":27963:27969   */\n      dup5\n        /* \"#utility.yul\":27901:27977   */\n      tag_549\n      jump\t// in\n    tag_841:\n        /* \"#utility.yul\":27893:27977   */\n      swap1\n      pop\n        /* \"#utility.yul\":27344:27984   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27990:28131   */\n    tag_550:\n        /* \"#utility.yul\":28046:28051   */\n      0x00\n        /* \"#utility.yul\":28077:28083   */\n      dup2\n        /* \"#utility.yul\":28071:28084   */\n      mload\n        /* \"#utility.yul\":28062:28084   */\n      swap1\n      pop\n        /* \"#utility.yul\":28093:28125   */\n      tag_843\n        /* \"#utility.yul\":28119:28124   */\n      dup2\n        /* \"#utility.yul\":28093:28125   */\n      tag_479\n      jump\t// in\n    tag_843:\n        /* \"#utility.yul\":27990:28131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28137:28486   */\n    tag_349:\n        /* \"#utility.yul\":28206:28212   */\n      0x00\n        /* \"#utility.yul\":28255:28257   */\n      0x20\n        /* \"#utility.yul\":28243:28252   */\n      dup3\n        /* \"#utility.yul\":28234:28241   */\n      dup5\n        /* \"#utility.yul\":28230:28253   */\n      sub\n        /* \"#utility.yul\":28226:28258   */\n      slt\n        /* \"#utility.yul\":28223:28342   */\n      iszero\n      tag_845\n      jumpi\n        /* \"#utility.yul\":28261:28340   */\n      tag_846\n      tag_476\n      jump\t// in\n    tag_846:\n        /* \"#utility.yul\":28223:28342   */\n    tag_845:\n        /* \"#utility.yul\":28381:28382   */\n      0x00\n        /* \"#utility.yul\":28406:28469   */\n      tag_847\n        /* \"#utility.yul\":28461:28468   */\n      dup5\n        /* \"#utility.yul\":28452:28458   */\n      dup3\n        /* \"#utility.yul\":28441:28450   */\n      dup6\n        /* \"#utility.yul\":28437:28459   */\n      add\n        /* \"#utility.yul\":28406:28469   */\n      tag_550\n      jump\t// in\n    tag_847:\n        /* \"#utility.yul\":28396:28469   */\n      swap2\n      pop\n        /* \"#utility.yul\":28352:28479   */\n      pop\n        /* \"#utility.yul\":28137:28486   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28492:28824   */\n    tag_414:\n        /* \"#utility.yul\":28613:28617   */\n      0x00\n        /* \"#utility.yul\":28651:28653   */\n      0x40\n        /* \"#utility.yul\":28640:28649   */\n      dup3\n        /* \"#utility.yul\":28636:28654   */\n      add\n        /* \"#utility.yul\":28628:28654   */\n      swap1\n      pop\n        /* \"#utility.yul\":28664:28735   */\n      tag_849\n        /* \"#utility.yul\":28732:28733   */\n      0x00\n        /* \"#utility.yul\":28721:28730   */\n      dup4\n        /* \"#utility.yul\":28717:28734   */\n      add\n        /* \"#utility.yul\":28708:28714   */\n      dup6\n        /* \"#utility.yul\":28664:28735   */\n      tag_493\n      jump\t// in\n    tag_849:\n        /* \"#utility.yul\":28745:28817   */\n      tag_850\n        /* \"#utility.yul\":28813:28815   */\n      0x20\n        /* \"#utility.yul\":28802:28811   */\n      dup4\n        /* \"#utility.yul\":28798:28816   */\n      add\n        /* \"#utility.yul\":28789:28795   */\n      dup5\n        /* \"#utility.yul\":28745:28817   */\n      tag_504\n      jump\t// in\n    tag_850:\n        /* \"#utility.yul\":28492:28824   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28830:29010   */\n    tag_426:\n        /* \"#utility.yul\":28878:28955   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28875:28876   */\n      0x00\n        /* \"#utility.yul\":28868:28956   */\n      mstore\n        /* \"#utility.yul\":28975:28979   */\n      0x12\n        /* \"#utility.yul\":28972:28973   */\n      0x04\n        /* \"#utility.yul\":28965:28980   */\n      mstore\n        /* \"#utility.yul\":28999:29003   */\n      0x24\n        /* \"#utility.yul\":28996:28997   */\n      0x00\n        /* \"#utility.yul\":28989:29004   */\n      revert\n\n    auxdata: 0xa2646970667358221220a6087b7a35be61ddd3679cb04a0328e98037783c1963a2582682f481c8400b9064736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506133528061001c5f395ff3fe60806040526004361061013f575f3560e01c806370a08231116100b5578063b88d4fde1161006e578063b88d4fde14610429578063c87b56dd14610451578063da35a26f1461048d578063e985e9c5146104b5578063f2fde38b146104f1578063f4a0a528146105195761013f565b806370a0823114610331578063715018a61461036d5780638da5cb5b1461038357806395d89b41146103ad578063a22cb465146103d7578063a2682c1d146103ff5761013f565b80633ccfd60b116101075780633ccfd60b1461023557806342842e0e1461024b5780635afa3a72146102735780636352211e146102a357806365ebf99a146102df5780636817c76c146103075761013f565b806301ffc9a71461014357806306fdde031461017f578063081812fc146101a9578063095ea7b3146101e557806323b872dd1461020d575b5f80fd5b34801561014e575f80fd5b5061016960048036038101906101649190612472565b610541565b60405161017691906124b7565b60405180910390f35b34801561018a575f80fd5b506101936105a1565b6040516101a09190612540565b60405180910390f35b3480156101b4575f80fd5b506101cf60048036038101906101ca9190612593565b61063e565b6040516101dc91906125fd565b60405180910390f35b3480156101f0575f80fd5b5061020b60048036038101906102069190612640565b610659565b005b348015610218575f80fd5b50610233600480360381019061022e919061267e565b61066f565b005b348015610240575f80fd5b5061024961076e565b005b348015610256575f80fd5b50610271600480360381019061026c919061267e565b6108ab565b005b61028d600480360381019061028891906127fa565b6108ca565b60405161029a9190612863565b60405180910390f35b3480156102ae575f80fd5b506102c960048036038101906102c49190612593565b610a11565b6040516102d691906125fd565b60405180910390f35b3480156102ea575f80fd5b50610305600480360381019061030091906128b7565b610a22565b005b348015610312575f80fd5b5061031b610a6d565b6040516103289190612863565b60405180910390f35b34801561033c575f80fd5b50610357600480360381019061035291906128e2565b610a73565b6040516103649190612863565b60405180910390f35b348015610378575f80fd5b50610381610b37565b005b34801561038e575f80fd5b50610397610b4a565b6040516103a491906125fd565b60405180910390f35b3480156103b8575f80fd5b506103c1610b7f565b6040516103ce9190612540565b60405180910390f35b3480156103e2575f80fd5b506103fd60048036038101906103f89190612937565b610c1d565b005b34801561040a575f80fd5b50610413610c33565b6040516104209190612984565b60405180910390f35b348015610434575f80fd5b5061044f600480360381019061044a9190612a3b565b610c58565b005b34801561045c575f80fd5b5061047760048036038101906104729190612593565b610c75565b6040516104849190612540565b60405180910390f35b348015610498575f80fd5b506104b360048036038101906104ae9190612abb565b610d8f565b005b3480156104c0575f80fd5b506104db60048036038101906104d69190612af9565b610fdc565b6040516104e891906124b7565b60405180910390f35b3480156104fc575f80fd5b50610517600480360381019061051291906128e2565b611078565b005b348015610524575f80fd5b5061053f600480360381019061053a9190612593565b6110fc565b005b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061059a575061059982611150565b5b9050919050565b60605f6105ac611231565b9050805f0180546105bc90612b64565b80601f01602080910402602001604051908101604052809291908181526020018280546105e890612b64565b80156106335780601f1061060a57610100808354040283529160200191610633565b820191905f5260205f20905b81548152906001019060200180831161061657829003601f168201915b505050505091505090565b5f61064882611258565b50610652826112de565b9050919050565b61066b8282610666611325565b61132c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106df575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016106d691906125fd565b60405180910390fd5b5f6106f283836106ed611325565b61133e565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610768578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161075f93929190612b94565b60405180910390fd5b50505050565b5f4790505f81116107b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ab90612c13565b60405180910390fd5b60335f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610843576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083a90612c7b565b60405180910390fd5b60335f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f193505050501580156108a7573d5f803e3d5ffd5b5050565b6108c583838360405180602001604052805f815250610c58565b505050565b5f6108d361155b565b603454341015610918576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090f90612d09565b60405180910390fd5b60325f81548092919061092a90612d54565b91905055505f603254905061093f33826115a8565b610949818561169b565b60335f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3490811502906040515f60405180830381858888f193505050501580156109ad573d5f803e3d5ffd5b503373ffffffffffffffffffffffffffffffffffffffff16817f463ec2a62c46678a81e23cde640446ca4b512f102bb3309cf5a3e2a4ae83146486866040516109f7929190612d9b565b60405180910390a380915050610a0b611702565b92915050565b5f610a1b82611258565b9050919050565b610a2a61170b565b8060335f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60345481565b5f80610a7d611231565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610aef575f6040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610ae691906125fd565b60405180910390fd5b806003015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b610b3f61170b565b610b485f611792565b565b5f80610b54611863565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60605f610b8a611231565b9050806001018054610b9b90612b64565b80601f0160208091040260200160405190810160405280929190818152602001828054610bc790612b64565b8015610c125780601f10610be957610100808354040283529160200191610c12565b820191905f5260205f20905b815481529060010190602001808311610bf557829003601f168201915b505050505091505090565b610c2f610c28611325565b838361188a565b5050565b60335f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c6384848461066f565b610c6f84848484611a01565b50505050565b60605f610c80611bb3565b9050610c8b83611258565b505f815f015f8581526020019081526020015f208054610caa90612b64565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd690612b64565b8015610d215780601f10610cf857610100808354040283529160200191610d21565b820191905f5260205f20905b815481529060010190602001808311610d0457829003601f168201915b505050505090505f610d31611bda565b90505f815103610d4657819350505050610d8a565b5f82511115610d7b578082604051602001610d62929190612e03565b6040516020818303038152906040529350505050610d8a565b610d8485611bf0565b93505050505b919050565b5f610d98611c56565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015610de05750825b90505f60018367ffffffffffffffff16148015610e1357505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610e21575080155b15610e58576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610ea5576001855f0160086101000a81548160ff0219169083151502179055505b610ead611c7d565b610eb633611c87565b610ebe611c9b565b610f326040518060400160405280600e81526020017f4d6574617165657572546f6b656e0000000000000000000000000000000000008152506040518060400160405280600381526020017f4d51540000000000000000000000000000000000000000000000000000000000815250611cad565b866034819055508560335f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508315610fd3575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610fca9190612e7b565b60405180910390a15b50505050505050565b5f80610fe6611231565b9050806005015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1691505092915050565b61108061170b565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110f0575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016110e791906125fd565b60405180910390fd5b6110f981611792565b50565b61110461170b565b5f8111611146576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113d90612f04565b60405180910390fd5b8060348190555050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061121a57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061122a575061122982611cc3565b5b9050919050565b5f7f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300905090565b5f8061126383611d2c565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112d557826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016112cc9190612863565b60405180910390fd5b80915050919050565b5f806112e8611231565b9050806004015f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b5f33905090565b6113398383836001611d73565b505050565b5f80611348611231565b90505f61135485611d2c565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461139557611394818587611f40565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611422576113d45f865f80611d73565b6001826003015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16146114a3576001826003015f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b85826002015f8781526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a480925050509392505050565b60025f540361159f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159690612f6c565b60405180910390fd5b60025f81905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611618575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161160f91906125fd565b60405180910390fd5b5f61162483835f61133e565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611696575f6040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161168d91906125fd565b60405180910390fd5b505050565b5f6116a4611bb3565b905081815f015f8581526020019081526020015f2090816116c5919061311e565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7836040516116f59190612863565b60405180910390a1505050565b60015f81905550565b611713611325565b73ffffffffffffffffffffffffffffffffffffffff16611731610b4a565b73ffffffffffffffffffffffffffffffffffffffff161461179057611754611325565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161178791906125fd565b60405180910390fd5b565b5f61179b611863565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f611893611231565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361190557826040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016118fc91906125fd565b60405180910390fd5b81816005015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31846040516119f391906124b7565b60405180910390a350505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611bad578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611a44611325565b8685856040518563ffffffff1660e01b8152600401611a66949392919061323f565b6020604051808303815f875af1925050508015611aa157506040513d601f19601f82011682018060405250810190611a9e919061329d565b60015b611b22573d805f8114611acf576040519150601f19603f3d011682016040523d82523d5f602084013e611ad4565b606091505b505f815103611b1a57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611b1191906125fd565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611bab57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611ba291906125fd565b60405180910390fd5b505b50505050565b5f7f0542a41881ee128a365a727b282c86fa859579490b9bb45aab8503648c8e7900905090565b606060405180602001604052805f815250905090565b6060611bfb82611258565b505f611c05611bda565b90505f815111611c235760405180602001604052805f815250611c4e565b80611c2d84612003565b604051602001611c3e929190612e03565b6040516020818303038152906040525b915050919050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611c856120cd565b565b611c8f6120cd565b611c988161210d565b50565b611ca36120cd565b611cab612191565b565b611cb56120cd565b611cbf82826121a2565b5050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80611d36611231565b9050806002015f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b5f611d7c611231565b90508180611db657505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15611ee8575f611dc585611258565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614158015611e2f57508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611e425750611e408185610fdc565b155b15611e8457836040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611e7b91906125fd565b60405180910390fd5b8215611ee657848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b84816004015f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b611f4b8383836121dd565b611ffe575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611fbf57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611fb69190612863565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611ff59291906132c8565b60405180910390fd5b505050565b60605f60016120118461229d565b0190505f8167ffffffffffffffff81111561202f5761202e6126d6565b5b6040519080825280601f01601f1916602001820160405280156120615781602001600182028036833780820191505090505b5090505f82602001820190505b6001156120c2578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816120b7576120b66132ef565b5b0494505f850361206e575b819350505050919050565b6120d56123ee565b61210b576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6121156120cd565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612185575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161217c91906125fd565b60405180910390fd5b61218e81611792565b50565b6121996120cd565b60015f81905550565b6121aa6120cd565b5f6121b3611231565b905082815f0190816121c5919061311e565b50818160010190816121d7919061311e565b50505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561229457508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061225557506122548484610fdc565b5b8061229357508273ffffffffffffffffffffffffffffffffffffffff1661227b836112de565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106122f9577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816122ef576122ee6132ef565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310612336576d04ee2d6d415b85acef8100000000838161232c5761232b6132ef565b5b0492506020810190505b662386f26fc10000831061236557662386f26fc10000838161235b5761235a6132ef565b5b0492506010810190505b6305f5e100831061238e576305f5e1008381612384576123836132ef565b5b0492506008810190505b61271083106123b35761271083816123a9576123a86132ef565b5b0492506004810190505b606483106123d657606483816123cc576123cb6132ef565b5b0492506002810190505b600a83106123e5576001810190505b80915050919050565b5f6123f7611c56565b5f0160089054906101000a900460ff16905090565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6124518161241d565b811461245b575f80fd5b50565b5f8135905061246c81612448565b92915050565b5f6020828403121561248757612486612415565b5b5f6124948482850161245e565b91505092915050565b5f8115159050919050565b6124b18161249d565b82525050565b5f6020820190506124ca5f8301846124a8565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f612512826124d0565b61251c81856124da565b935061252c8185602086016124ea565b612535816124f8565b840191505092915050565b5f6020820190508181035f8301526125588184612508565b905092915050565b5f819050919050565b61257281612560565b811461257c575f80fd5b50565b5f8135905061258d81612569565b92915050565b5f602082840312156125a8576125a7612415565b5b5f6125b58482850161257f565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6125e7826125be565b9050919050565b6125f7816125dd565b82525050565b5f6020820190506126105f8301846125ee565b92915050565b61261f816125dd565b8114612629575f80fd5b50565b5f8135905061263a81612616565b92915050565b5f806040838503121561265657612655612415565b5b5f6126638582860161262c565b92505060206126748582860161257f565b9150509250929050565b5f805f6060848603121561269557612694612415565b5b5f6126a28682870161262c565b93505060206126b38682870161262c565b92505060406126c48682870161257f565b9150509250925092565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61270c826124f8565b810181811067ffffffffffffffff8211171561272b5761272a6126d6565b5b80604052505050565b5f61273d61240c565b90506127498282612703565b919050565b5f67ffffffffffffffff821115612768576127676126d6565b5b612771826124f8565b9050602081019050919050565b828183375f83830152505050565b5f61279e6127998461274e565b612734565b9050828152602081018484840111156127ba576127b96126d2565b5b6127c584828561277e565b509392505050565b5f82601f8301126127e1576127e06126ce565b5b81356127f184826020860161278c565b91505092915050565b5f80604083850312156128105761280f612415565b5b5f83013567ffffffffffffffff81111561282d5761282c612419565b5b612839858286016127cd565b925050602061284a8582860161257f565b9150509250929050565b61285d81612560565b82525050565b5f6020820190506128765f830184612854565b92915050565b5f612886826125be565b9050919050565b6128968161287c565b81146128a0575f80fd5b50565b5f813590506128b18161288d565b92915050565b5f602082840312156128cc576128cb612415565b5b5f6128d9848285016128a3565b91505092915050565b5f602082840312156128f7576128f6612415565b5b5f6129048482850161262c565b91505092915050565b6129168161249d565b8114612920575f80fd5b50565b5f813590506129318161290d565b92915050565b5f806040838503121561294d5761294c612415565b5b5f61295a8582860161262c565b925050602061296b85828601612923565b9150509250929050565b61297e8161287c565b82525050565b5f6020820190506129975f830184612975565b92915050565b5f67ffffffffffffffff8211156129b7576129b66126d6565b5b6129c0826124f8565b9050602081019050919050565b5f6129df6129da8461299d565b612734565b9050828152602081018484840111156129fb576129fa6126d2565b5b612a0684828561277e565b509392505050565b5f82601f830112612a2257612a216126ce565b5b8135612a328482602086016129cd565b91505092915050565b5f805f8060808587031215612a5357612a52612415565b5b5f612a608782880161262c565b9450506020612a718782880161262c565b9350506040612a828782880161257f565b925050606085013567ffffffffffffffff811115612aa357612aa2612419565b5b612aaf87828801612a0e565b91505092959194509250565b5f8060408385031215612ad157612ad0612415565b5b5f612ade8582860161257f565b9250506020612aef858286016128a3565b9150509250929050565b5f8060408385031215612b0f57612b0e612415565b5b5f612b1c8582860161262c565b9250506020612b2d8582860161262c565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612b7b57607f821691505b602082108103612b8e57612b8d612b37565b5b50919050565b5f606082019050612ba75f8301866125ee565b612bb46020830185612854565b612bc160408301846125ee565b949350505050565b7f4e6f2062616c616e636520746f207769746864726177000000000000000000005f82015250565b5f612bfd6016836124da565b9150612c0882612bc9565b602082019050919050565b5f6020820190508181035f830152612c2a81612bf1565b9050919050565b7f4e6f7420746865207061796d656e7420726563656976657200000000000000005f82015250565b5f612c656018836124da565b9150612c7082612c31565b602082019050919050565b5f6020820190508181035f830152612c9281612c59565b9050919050565b7f5072696365206d7573742062652067726561746572207468616e206d696e74505f8201527f7269636500000000000000000000000000000000000000000000000000000000602082015250565b5f612cf36024836124da565b9150612cfe82612c99565b604082019050919050565b5f6020820190508181035f830152612d2081612ce7565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612d5e82612560565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612d9057612d8f612d27565b5b600182019050919050565b5f6040820190508181035f830152612db38185612508565b9050612dc26020830184612854565b9392505050565b5f81905092915050565b5f612ddd826124d0565b612de78185612dc9565b9350612df78185602086016124ea565b80840191505092915050565b5f612e0e8285612dd3565b9150612e1a8284612dd3565b91508190509392505050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f612e65612e60612e5b84612e26565b612e42565b612e2f565b9050919050565b612e7581612e4b565b82525050565b5f602082019050612e8e5f830184612e6c565b92915050565b7f6d696e745072696365206d757374206265206120706f736974697665206e756d5f8201527f6265720000000000000000000000000000000000000000000000000000000000602082015250565b5f612eee6023836124da565b9150612ef982612e94565b604082019050919050565b5f6020820190508181035f830152612f1b81612ee2565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612f56601f836124da565b9150612f6182612f22565b602082019050919050565b5f6020820190508181035f830152612f8381612f4a565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302612fe67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612fab565b612ff08683612fab565b95508019841693508086168417925050509392505050565b5f61302261301d61301884612560565b612e42565b612560565b9050919050565b5f819050919050565b61303b83613008565b61304f61304782613029565b848454612fb7565b825550505050565b5f90565b613063613057565b61306e818484613032565b505050565b5b81811015613091576130865f8261305b565b600181019050613074565b5050565b601f8211156130d6576130a781612f8a565b6130b084612f9c565b810160208510156130bf578190505b6130d36130cb85612f9c565b830182613073565b50505b505050565b5f82821c905092915050565b5f6130f65f19846008026130db565b1980831691505092915050565b5f61310e83836130e7565b9150826002028217905092915050565b613127826124d0565b67ffffffffffffffff8111156131405761313f6126d6565b5b61314a8254612b64565b613155828285613095565b5f60209050601f831160018114613186575f8415613174578287015190505b61317e8582613103565b8655506131e5565b601f19841661319486612f8a565b5f5b828110156131bb57848901518255600182019150602085019450602081019050613196565b868310156131d857848901516131d4601f8916826130e7565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f613211826131ed565b61321b81856131f7565b935061322b8185602086016124ea565b613234816124f8565b840191505092915050565b5f6080820190506132525f8301876125ee565b61325f60208301866125ee565b61326c6040830185612854565b818103606083015261327e8184613207565b905095945050505050565b5f8151905061329781612448565b92915050565b5f602082840312156132b2576132b1612415565b5b5f6132bf84828501613289565b91505092915050565b5f6040820190506132db5f8301856125ee565b6132e86020830184612854565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea2646970667358221220a6087b7a35be61ddd3679cb04a0328e98037783c1963a2582682f481c8400b9064736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3352 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB5 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0xDA35A26F EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x4B5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0xF4A0A528 EQ PUSH2 0x519 JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0xA2682C1D EQ PUSH2 0x3FF JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0x107 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x5AFA3A72 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x65EBF99A EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x6817C76C EQ PUSH2 0x307 JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH2 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x2540 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST PUSH2 0x63E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x2640 JUMP JUMPDEST PUSH2 0x659 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x218 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x267E JUMP JUMPDEST PUSH2 0x66F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x240 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x76E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x267E JUMP JUMPDEST PUSH2 0x8AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x27FA JUMP JUMPDEST PUSH2 0x8CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x2863 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST PUSH2 0xA11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x28B7 JUMP JUMPDEST PUSH2 0xA22 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0xA6D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x2863 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x357 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x28E2 JUMP JUMPDEST PUSH2 0xA73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x2863 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x378 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH2 0xB37 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x397 PUSH2 0xB4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C1 PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x2540 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x2937 JUMP JUMPDEST PUSH2 0xC1D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x413 PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x2984 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x434 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x2A3B JUMP JUMPDEST PUSH2 0xC58 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x477 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST PUSH2 0xC75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x2540 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x2ABB JUMP JUMPDEST PUSH2 0xD8F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D6 SWAP2 SWAP1 PUSH2 0x2AF9 JUMP JUMPDEST PUSH2 0xFDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E8 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x517 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x512 SWAP2 SWAP1 PUSH2 0x28E2 JUMP JUMPDEST PUSH2 0x1078 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x524 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x53F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53A SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST PUSH2 0x10FC JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x59A JUMPI POP PUSH2 0x599 DUP3 PUSH2 0x1150 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x5AC PUSH2 0x1231 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0x5BC SWAP1 PUSH2 0x2B64 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5E8 SWAP1 PUSH2 0x2B64 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x633 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x60A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x633 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x616 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x648 DUP3 PUSH2 0x1258 JUMP JUMPDEST POP PUSH2 0x652 DUP3 PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x66B DUP3 DUP3 PUSH2 0x666 PUSH2 0x1325 JUMP JUMPDEST PUSH2 0x132C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6DF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x6F2 DUP4 DUP4 PUSH2 0x6ED PUSH2 0x1325 JUMP JUMPDEST PUSH2 0x133E JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x768 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 GT PUSH2 0x7B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AB SWAP1 PUSH2 0x2C13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x33 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x843 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83A SWAP1 PUSH2 0x2C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x33 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8A7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8C5 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xC58 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8D3 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x34 SLOAD CALLVALUE LT ISZERO PUSH2 0x918 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90F SWAP1 PUSH2 0x2D09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x32 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x92A SWAP1 PUSH2 0x2D54 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH1 0x32 SLOAD SWAP1 POP PUSH2 0x93F CALLER DUP3 PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0x949 DUP2 DUP6 PUSH2 0x169B JUMP JUMPDEST PUSH1 0x33 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9AD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0x463EC2A62C46678A81E23CDE640446CA4B512F102BB3309CF5A3E2A4AE831464 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x9F7 SWAP3 SWAP2 SWAP1 PUSH2 0x2D9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 SWAP2 POP POP PUSH2 0xA0B PUSH2 0x1702 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA1B DUP3 PUSH2 0x1258 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA2A PUSH2 0x170B JUMP JUMPDEST DUP1 PUSH1 0x33 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x34 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA7D PUSH2 0x1231 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAEF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE6 SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3F PUSH2 0x170B JUMP JUMPDEST PUSH2 0xB48 PUSH0 PUSH2 0x1792 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB54 PUSH2 0x1863 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xB8A PUSH2 0x1231 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xB9B SWAP1 PUSH2 0x2B64 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBC7 SWAP1 PUSH2 0x2B64 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC12 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBE9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC12 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBF5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xC2F PUSH2 0xC28 PUSH2 0x1325 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x188A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x33 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xC63 DUP5 DUP5 DUP5 PUSH2 0x66F JUMP JUMPDEST PUSH2 0xC6F DUP5 DUP5 DUP5 DUP5 PUSH2 0x1A01 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xC80 PUSH2 0x1BB3 JUMP JUMPDEST SWAP1 POP PUSH2 0xC8B DUP4 PUSH2 0x1258 JUMP JUMPDEST POP PUSH0 DUP2 PUSH0 ADD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0xCAA SWAP1 PUSH2 0x2B64 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCD6 SWAP1 PUSH2 0x2B64 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD21 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCF8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD21 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD04 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0xD31 PUSH2 0x1BDA JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0xD46 JUMPI DUP2 SWAP4 POP POP POP POP PUSH2 0xD8A JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0xD7B JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD62 SWAP3 SWAP2 SWAP1 PUSH2 0x2E03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 POP POP POP POP PUSH2 0xD8A JUMP JUMPDEST PUSH2 0xD84 DUP6 PUSH2 0x1BF0 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD98 PUSH2 0x1C56 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xDE0 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xE13 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xE21 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xE58 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xEA5 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xEAD PUSH2 0x1C7D JUMP JUMPDEST PUSH2 0xEB6 CALLER PUSH2 0x1C87 JUMP JUMPDEST PUSH2 0xEBE PUSH2 0x1C9B JUMP JUMPDEST PUSH2 0xF32 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D6574617165657572546F6B656E000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D51540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1CAD JUMP JUMPDEST DUP7 PUSH1 0x34 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x33 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xFD3 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xFCA SWAP2 SWAP1 PUSH2 0x2E7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xFE6 PUSH2 0x1231 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1080 PUSH2 0x170B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10F0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E7 SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10F9 DUP2 PUSH2 0x1792 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1104 PUSH2 0x170B JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1146 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113D SWAP1 PUSH2 0x2F04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x121A JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x122A JUMPI POP PUSH2 0x1229 DUP3 PUSH2 0x1CC3 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1263 DUP4 PUSH2 0x1D2C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12D5 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12CC SWAP2 SWAP1 PUSH2 0x2863 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x12E8 PUSH2 0x1231 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1339 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1D73 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1348 PUSH2 0x1231 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1354 DUP6 PUSH2 0x1D2C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1395 JUMPI PUSH2 0x1394 DUP2 DUP6 DUP8 PUSH2 0x1F40 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1422 JUMPI PUSH2 0x13D4 PUSH0 DUP7 PUSH0 DUP1 PUSH2 0x1D73 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14A3 JUMPI PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP6 DUP3 PUSH1 0x2 ADD PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x159F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1596 SWAP1 PUSH2 0x2F6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1618 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x160F SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1624 DUP4 DUP4 PUSH0 PUSH2 0x133E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1696 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168D SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16A4 PUSH2 0x1BB3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x16C5 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x16F5 SWAP2 SWAP1 PUSH2 0x2863 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1713 PUSH2 0x1325 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1731 PUSH2 0xB4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1790 JUMPI PUSH2 0x1754 PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1787 SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x179B PUSH2 0x1863 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1893 PUSH2 0x1231 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1905 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18FC SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x5 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP5 PUSH1 0x40 MLOAD PUSH2 0x19F3 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1BAD JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1A44 PUSH2 0x1325 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A66 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x323F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1AA1 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A9E SWAP2 SWAP1 PUSH2 0x329D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1B22 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1ACF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1AD4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1B1A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B11 SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1BAB JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA2 SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x542A41881EE128A365A727B282C86FA859579490B9BB45AAB8503648C8E7900 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1BFB DUP3 PUSH2 0x1258 JUMP JUMPDEST POP PUSH0 PUSH2 0x1C05 PUSH2 0x1BDA JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x1C23 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1C4E JUMP JUMPDEST DUP1 PUSH2 0x1C2D DUP5 PUSH2 0x2003 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C3E SWAP3 SWAP2 SWAP1 PUSH2 0x2E03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1C85 PUSH2 0x20CD JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1C8F PUSH2 0x20CD JUMP JUMPDEST PUSH2 0x1C98 DUP2 PUSH2 0x210D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1CA3 PUSH2 0x20CD JUMP JUMPDEST PUSH2 0x1CAB PUSH2 0x2191 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1CB5 PUSH2 0x20CD JUMP JUMPDEST PUSH2 0x1CBF DUP3 DUP3 PUSH2 0x21A2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1D36 PUSH2 0x1231 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D7C PUSH2 0x1231 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 PUSH2 0x1DB6 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1EE8 JUMPI PUSH0 PUSH2 0x1DC5 DUP6 PUSH2 0x1258 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1E2F JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1E42 JUMPI POP PUSH2 0x1E40 DUP2 DUP6 PUSH2 0xFDC JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1E84 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E7B SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 ISZERO PUSH2 0x1EE6 JUMPI DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP5 DUP2 PUSH1 0x4 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1F4B DUP4 DUP4 DUP4 PUSH2 0x21DD JUMP JUMPDEST PUSH2 0x1FFE JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FBF JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FB6 SWAP2 SWAP1 PUSH2 0x2863 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FF5 SWAP3 SWAP2 SWAP1 PUSH2 0x32C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x2011 DUP5 PUSH2 0x229D JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x202F JUMPI PUSH2 0x202E PUSH2 0x26D6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2061 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x20C2 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x20B7 JUMPI PUSH2 0x20B6 PUSH2 0x32EF JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x206E JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20D5 PUSH2 0x23EE JUMP JUMPDEST PUSH2 0x210B JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2115 PUSH2 0x20CD JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2185 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x217C SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x218E DUP2 PUSH2 0x1792 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2199 PUSH2 0x20CD JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x21AA PUSH2 0x20CD JUMP JUMPDEST PUSH0 PUSH2 0x21B3 PUSH2 0x1231 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x21C5 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x21D7 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2294 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2255 JUMPI POP PUSH2 0x2254 DUP5 DUP5 PUSH2 0xFDC JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2293 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x227B DUP4 PUSH2 0x12DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x22F9 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x22EF JUMPI PUSH2 0x22EE PUSH2 0x32EF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x2336 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x232C JUMPI PUSH2 0x232B PUSH2 0x32EF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x2365 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x235B JUMPI PUSH2 0x235A PUSH2 0x32EF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x238E JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x2384 JUMPI PUSH2 0x2383 PUSH2 0x32EF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x23B3 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x23A9 JUMPI PUSH2 0x23A8 PUSH2 0x32EF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x23D6 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x23CC JUMPI PUSH2 0x23CB PUSH2 0x32EF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x23E5 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23F7 PUSH2 0x1C56 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2451 DUP2 PUSH2 0x241D JUMP JUMPDEST DUP2 EQ PUSH2 0x245B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x246C DUP2 PUSH2 0x2448 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2487 JUMPI PUSH2 0x2486 PUSH2 0x2415 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2494 DUP5 DUP3 DUP6 ADD PUSH2 0x245E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24B1 DUP2 PUSH2 0x249D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24CA PUSH0 DUP4 ADD DUP5 PUSH2 0x24A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2512 DUP3 PUSH2 0x24D0 JUMP JUMPDEST PUSH2 0x251C DUP2 DUP6 PUSH2 0x24DA JUMP JUMPDEST SWAP4 POP PUSH2 0x252C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x24EA JUMP JUMPDEST PUSH2 0x2535 DUP2 PUSH2 0x24F8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2558 DUP2 DUP5 PUSH2 0x2508 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2572 DUP2 PUSH2 0x2560 JUMP JUMPDEST DUP2 EQ PUSH2 0x257C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x258D DUP2 PUSH2 0x2569 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25A8 JUMPI PUSH2 0x25A7 PUSH2 0x2415 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25B5 DUP5 DUP3 DUP6 ADD PUSH2 0x257F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25E7 DUP3 PUSH2 0x25BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25F7 DUP2 PUSH2 0x25DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2610 PUSH0 DUP4 ADD DUP5 PUSH2 0x25EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x261F DUP2 PUSH2 0x25DD JUMP JUMPDEST DUP2 EQ PUSH2 0x2629 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x263A DUP2 PUSH2 0x2616 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2656 JUMPI PUSH2 0x2655 PUSH2 0x2415 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2663 DUP6 DUP3 DUP7 ADD PUSH2 0x262C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2674 DUP6 DUP3 DUP7 ADD PUSH2 0x257F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2695 JUMPI PUSH2 0x2694 PUSH2 0x2415 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x26A2 DUP7 DUP3 DUP8 ADD PUSH2 0x262C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x26B3 DUP7 DUP3 DUP8 ADD PUSH2 0x262C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x26C4 DUP7 DUP3 DUP8 ADD PUSH2 0x257F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x270C DUP3 PUSH2 0x24F8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x272B JUMPI PUSH2 0x272A PUSH2 0x26D6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x273D PUSH2 0x240C JUMP JUMPDEST SWAP1 POP PUSH2 0x2749 DUP3 DUP3 PUSH2 0x2703 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2768 JUMPI PUSH2 0x2767 PUSH2 0x26D6 JUMP JUMPDEST JUMPDEST PUSH2 0x2771 DUP3 PUSH2 0x24F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x279E PUSH2 0x2799 DUP5 PUSH2 0x274E JUMP JUMPDEST PUSH2 0x2734 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x27BA JUMPI PUSH2 0x27B9 PUSH2 0x26D2 JUMP JUMPDEST JUMPDEST PUSH2 0x27C5 DUP5 DUP3 DUP6 PUSH2 0x277E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x27E1 JUMPI PUSH2 0x27E0 PUSH2 0x26CE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x27F1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x278C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2810 JUMPI PUSH2 0x280F PUSH2 0x2415 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x282D JUMPI PUSH2 0x282C PUSH2 0x2419 JUMP JUMPDEST JUMPDEST PUSH2 0x2839 DUP6 DUP3 DUP7 ADD PUSH2 0x27CD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x284A DUP6 DUP3 DUP7 ADD PUSH2 0x257F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x285D DUP2 PUSH2 0x2560 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2876 PUSH0 DUP4 ADD DUP5 PUSH2 0x2854 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2886 DUP3 PUSH2 0x25BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2896 DUP2 PUSH2 0x287C JUMP JUMPDEST DUP2 EQ PUSH2 0x28A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28B1 DUP2 PUSH2 0x288D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28CC JUMPI PUSH2 0x28CB PUSH2 0x2415 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28D9 DUP5 DUP3 DUP6 ADD PUSH2 0x28A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28F7 JUMPI PUSH2 0x28F6 PUSH2 0x2415 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2904 DUP5 DUP3 DUP6 ADD PUSH2 0x262C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2916 DUP2 PUSH2 0x249D JUMP JUMPDEST DUP2 EQ PUSH2 0x2920 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2931 DUP2 PUSH2 0x290D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x294D JUMPI PUSH2 0x294C PUSH2 0x2415 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x295A DUP6 DUP3 DUP7 ADD PUSH2 0x262C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x296B DUP6 DUP3 DUP7 ADD PUSH2 0x2923 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x297E DUP2 PUSH2 0x287C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2997 PUSH0 DUP4 ADD DUP5 PUSH2 0x2975 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x29B7 JUMPI PUSH2 0x29B6 PUSH2 0x26D6 JUMP JUMPDEST JUMPDEST PUSH2 0x29C0 DUP3 PUSH2 0x24F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x29DF PUSH2 0x29DA DUP5 PUSH2 0x299D JUMP JUMPDEST PUSH2 0x2734 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x29FB JUMPI PUSH2 0x29FA PUSH2 0x26D2 JUMP JUMPDEST JUMPDEST PUSH2 0x2A06 DUP5 DUP3 DUP6 PUSH2 0x277E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2A22 JUMPI PUSH2 0x2A21 PUSH2 0x26CE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A32 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x29CD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2A53 JUMPI PUSH2 0x2A52 PUSH2 0x2415 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A60 DUP8 DUP3 DUP9 ADD PUSH2 0x262C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2A71 DUP8 DUP3 DUP9 ADD PUSH2 0x262C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2A82 DUP8 DUP3 DUP9 ADD PUSH2 0x257F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AA3 JUMPI PUSH2 0x2AA2 PUSH2 0x2419 JUMP JUMPDEST JUMPDEST PUSH2 0x2AAF DUP8 DUP3 DUP9 ADD PUSH2 0x2A0E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AD1 JUMPI PUSH2 0x2AD0 PUSH2 0x2415 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2ADE DUP6 DUP3 DUP7 ADD PUSH2 0x257F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2AEF DUP6 DUP3 DUP7 ADD PUSH2 0x28A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B0F JUMPI PUSH2 0x2B0E PUSH2 0x2415 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B1C DUP6 DUP3 DUP7 ADD PUSH2 0x262C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B2D DUP6 DUP3 DUP7 ADD PUSH2 0x262C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2B7B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2B8E JUMPI PUSH2 0x2B8D PUSH2 0x2B37 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2BA7 PUSH0 DUP4 ADD DUP7 PUSH2 0x25EE JUMP JUMPDEST PUSH2 0x2BB4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2854 JUMP JUMPDEST PUSH2 0x2BC1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x25EE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F2062616C616E636520746F20776974686472617700000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BFD PUSH1 0x16 DUP4 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2C08 DUP3 PUSH2 0x2BC9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C2A DUP2 PUSH2 0x2BF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420746865207061796D656E742072656365697665720000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C65 PUSH1 0x18 DUP4 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2C70 DUP3 PUSH2 0x2C31 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C92 DUP2 PUSH2 0x2C59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072696365206D7573742062652067726561746572207468616E206D696E7450 PUSH0 DUP3 ADD MSTORE PUSH32 0x7269636500000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CF3 PUSH1 0x24 DUP4 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2CFE DUP3 PUSH2 0x2C99 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D20 DUP2 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2D5E DUP3 PUSH2 0x2560 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2D90 JUMPI PUSH2 0x2D8F PUSH2 0x2D27 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2DB3 DUP2 DUP6 PUSH2 0x2508 JUMP JUMPDEST SWAP1 POP PUSH2 0x2DC2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2854 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2DDD DUP3 PUSH2 0x24D0 JUMP JUMPDEST PUSH2 0x2DE7 DUP2 DUP6 PUSH2 0x2DC9 JUMP JUMPDEST SWAP4 POP PUSH2 0x2DF7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x24EA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2E0E DUP3 DUP6 PUSH2 0x2DD3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E1A DUP3 DUP5 PUSH2 0x2DD3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2E65 PUSH2 0x2E60 PUSH2 0x2E5B DUP5 PUSH2 0x2E26 JUMP JUMPDEST PUSH2 0x2E42 JUMP JUMPDEST PUSH2 0x2E2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E75 DUP2 PUSH2 0x2E4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E8E PUSH0 DUP4 ADD DUP5 PUSH2 0x2E6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6D696E745072696365206D757374206265206120706F736974697665206E756D PUSH0 DUP3 ADD MSTORE PUSH32 0x6265720000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2EEE PUSH1 0x23 DUP4 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2EF9 DUP3 PUSH2 0x2E94 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F1B DUP2 PUSH2 0x2EE2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F56 PUSH1 0x1F DUP4 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2F61 DUP3 PUSH2 0x2F22 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F83 DUP2 PUSH2 0x2F4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2FE6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2FAB JUMP JUMPDEST PUSH2 0x2FF0 DUP7 DUP4 PUSH2 0x2FAB JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3022 PUSH2 0x301D PUSH2 0x3018 DUP5 PUSH2 0x2560 JUMP JUMPDEST PUSH2 0x2E42 JUMP JUMPDEST PUSH2 0x2560 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x303B DUP4 PUSH2 0x3008 JUMP JUMPDEST PUSH2 0x304F PUSH2 0x3047 DUP3 PUSH2 0x3029 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2FB7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x3063 PUSH2 0x3057 JUMP JUMPDEST PUSH2 0x306E DUP2 DUP5 DUP5 PUSH2 0x3032 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3091 JUMPI PUSH2 0x3086 PUSH0 DUP3 PUSH2 0x305B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3074 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x30D6 JUMPI PUSH2 0x30A7 DUP2 PUSH2 0x2F8A JUMP JUMPDEST PUSH2 0x30B0 DUP5 PUSH2 0x2F9C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x30BF JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x30D3 PUSH2 0x30CB DUP6 PUSH2 0x2F9C JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3073 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x30F6 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x30DB JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x310E DUP4 DUP4 PUSH2 0x30E7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3127 DUP3 PUSH2 0x24D0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3140 JUMPI PUSH2 0x313F PUSH2 0x26D6 JUMP JUMPDEST JUMPDEST PUSH2 0x314A DUP3 SLOAD PUSH2 0x2B64 JUMP JUMPDEST PUSH2 0x3155 DUP3 DUP3 DUP6 PUSH2 0x3095 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3186 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x3174 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x317E DUP6 DUP3 PUSH2 0x3103 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x31E5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3194 DUP7 PUSH2 0x2F8A JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x31BB JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3196 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x31D8 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x31D4 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x30E7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3211 DUP3 PUSH2 0x31ED JUMP JUMPDEST PUSH2 0x321B DUP2 DUP6 PUSH2 0x31F7 JUMP JUMPDEST SWAP4 POP PUSH2 0x322B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x24EA JUMP JUMPDEST PUSH2 0x3234 DUP2 PUSH2 0x24F8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3252 PUSH0 DUP4 ADD DUP8 PUSH2 0x25EE JUMP JUMPDEST PUSH2 0x325F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x25EE JUMP JUMPDEST PUSH2 0x326C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2854 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x327E DUP2 DUP5 PUSH2 0x3207 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3297 DUP2 PUSH2 0x2448 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32B2 JUMPI PUSH2 0x32B1 PUSH2 0x2415 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x32BF DUP5 DUP3 DUP6 ADD PUSH2 0x3289 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x32DB PUSH0 DUP4 ADD DUP6 PUSH2 0x25EE JUMP JUMPDEST PUSH2 0x32E8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2854 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 ADDMOD PUSH28 0x7A35BE61DDD3679CB04A0328E98037783C1963A2582682F481C8400B SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "398:1879:18:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__ERC721URIStorage_init_1716": {
									"entryPoint": 7293,
									"id": 1716,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC721_init_620": {
									"entryPoint": 7341,
									"id": 620,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC721_init_unchained_648": {
									"entryPoint": 8610,
									"id": 648,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 7303,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 8461,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_472": {
									"entryPoint": 7323,
									"id": 472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_unchained_482": {
									"entryPoint": 8593,
									"id": 482,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1452": {
									"entryPoint": 4908,
									"id": 1452,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1526": {
									"entryPoint": 7539,
									"id": 1526,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_804": {
									"entryPoint": 7130,
									"id": 804,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_1080": {
									"entryPoint": 8000,
									"id": 1080,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 8397,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1664": {
									"entryPoint": 6657,
									"id": 1664,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 5899,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_1007": {
									"entryPoint": 4830,
									"id": 1007,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_getERC721Storage_604": {
									"entryPoint": 4657,
									"id": 604,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getERC721URIStorageStorage_1710": {
									"entryPoint": 7091,
									"id": 1710,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 7254,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 6243,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isAuthorized_1043": {
									"entryPoint": 8669,
									"id": 1043,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 9198,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_1256": {
									"entryPoint": 5544,
									"id": 1256,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1863": {
									"entryPoint": 4901,
									"id": 1863,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_516": {
									"entryPoint": 5890,
									"id": 516,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_508": {
									"entryPoint": 5467,
									"id": 508,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_ownerOf_987": {
									"entryPoint": 7468,
									"id": 987,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1600": {
									"entryPoint": 4696,
									"id": 1600,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1571": {
									"entryPoint": 6282,
									"id": 1571,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_1834": {
									"entryPoint": 5787,
									"id": 1834,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_193": {
									"entryPoint": 6034,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_1206": {
									"entryPoint": 4926,
									"id": 1206,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_820": {
									"entryPoint": 1625,
									"id": 820,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_714": {
									"entryPoint": 2675,
									"id": 714,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_837": {
									"entryPoint": 1598,
									"id": 837,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@initialize_3743": {
									"entryPoint": 3471,
									"id": 3743,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@isApprovedForAll_877": {
									"entryPoint": 4060,
									"id": 877,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_3394": {
									"entryPoint": 8861,
									"id": 3394,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintNFT_3829": {
									"entryPoint": 2250,
									"id": 3829,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mintPaymentReceiver_3697": {
									"entryPoint": 3123,
									"id": 3697,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintPrice_3699": {
									"entryPoint": 2669,
									"id": 3699,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_743": {
									"entryPoint": 1441,
									"id": 743,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_727": {
									"entryPoint": 2577,
									"id": 727,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_105": {
									"entryPoint": 2890,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 2871,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_941": {
									"entryPoint": 2219,
									"id": 941,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_967": {
									"entryPoint": 3160,
									"id": 967,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_853": {
									"entryPoint": 3101,
									"id": 853,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setMintPrice_3774": {
									"entryPoint": 4348,
									"id": 3774,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPaymentReceiver_3755": {
									"entryPoint": 2594,
									"id": 3755,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1743": {
									"entryPoint": 1345,
									"id": 1743,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1920": {
									"entryPoint": 7363,
									"id": 1920,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_679": {
									"entryPoint": 4432,
									"id": 679,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_759": {
									"entryPoint": 2943,
									"id": 759,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_2321": {
									"entryPoint": 8195,
									"id": 2321,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1807": {
									"entryPoint": 3189,
									"id": 1807,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_795": {
									"entryPoint": 7152,
									"id": 795,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_923": {
									"entryPoint": 1647,
									"id": 923,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_164": {
									"entryPoint": 4216,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_3865": {
									"entryPoint": 1902,
									"id": 3865,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 10701,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 10124,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 9772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 10403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 10531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 9310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 12937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 10766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 10189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 9599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 10466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": 10423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 11001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 9854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 10811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 10551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 9330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 12957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256": {
									"entryPoint": 10234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 9619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address_payable": {
									"entryPoint": 10939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 10613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 9384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 12807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 11884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 11731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_286b15b37e2bf53146aa048647a24c582b1912850fe58d31cf21c0384de0c864_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9a5e950ca93becddd09d65f9483491477a3ef6c5b9e7978b524dc1807f938867_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cf616f29bbf2da0f655773e6b1629cda188a288c705b27a3713e96ee928d9c47_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 10324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 11779,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 10628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 12863,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 13000,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 11156,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 9399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 11899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 11675,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_286b15b37e2bf53146aa048647a24c582b1912850fe58d31cf21c0384de0c864__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9a5e950ca93becddd09d65f9483491477a3ef6c5b9e7978b524dc1807f938867__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cf616f29bbf2da0f655773e6b1629cda188a288c705b27a3713e96ee928d9c47__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 10339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 10036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 9228,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 10653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 10062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 12170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 12781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 9424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 12791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 9434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 11721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 12437,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 9693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 10364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 9245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 11814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 9568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 11823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 12403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 11851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 12296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 12574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 10110,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 9450,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 12188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 11108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 12547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 9987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 11842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 11604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 12519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 11559,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 13039,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 11063,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9942,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 12329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 9934,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 9938,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 9241,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 9237,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 9464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 12203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 12507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 12379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_286b15b37e2bf53146aa048647a24c582b1912850fe58d31cf21c0384de0c864": {
									"entryPoint": 11924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9a5e950ca93becddd09d65f9483491477a3ef6c5b9e7978b524dc1807f938867": {
									"entryPoint": 11417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5": {
									"entryPoint": 11209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cf616f29bbf2da0f655773e6b1629cda188a288c705b27a3713e96ee928d9c47": {
									"entryPoint": 11313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 12066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 12215,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 12338,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 10381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 9288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 12375,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:29013:19",
										"nodeType": "YulBlock",
										"src": "0:29013:19",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:19",
													"nodeType": "YulBlock",
													"src": "47:35:19",
													"statements": [
														{
															"nativeSrc": "57:19:19",
															"nodeType": "YulAssignment",
															"src": "57:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:19",
																		"nodeType": "YulLiteral",
																		"src": "73:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:19"
																},
																"nativeSrc": "67:9:19",
																"nodeType": "YulFunctionCall",
																"src": "67:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:19"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:19",
														"nodeType": "YulTypedName",
														"src": "40:6:19",
														"type": ""
													}
												],
												"src": "7:75:19"
											},
											{
												"body": {
													"nativeSrc": "177:28:19",
													"nodeType": "YulBlock",
													"src": "177:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:19",
																		"nodeType": "YulLiteral",
																		"src": "194:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:19",
																		"nodeType": "YulLiteral",
																		"src": "197:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:19"
																},
																"nativeSrc": "187:12:19",
																"nodeType": "YulFunctionCall",
																"src": "187:12:19"
															},
															"nativeSrc": "187:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:19"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:19"
											},
											{
												"body": {
													"nativeSrc": "300:28:19",
													"nodeType": "YulBlock",
													"src": "300:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:19",
																		"nodeType": "YulLiteral",
																		"src": "317:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:19",
																		"nodeType": "YulLiteral",
																		"src": "320:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:19"
																},
																"nativeSrc": "310:12:19",
																"nodeType": "YulFunctionCall",
																"src": "310:12:19"
															},
															"nativeSrc": "310:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:19"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:19"
											},
											{
												"body": {
													"nativeSrc": "378:105:19",
													"nodeType": "YulBlock",
													"src": "378:105:19",
													"statements": [
														{
															"nativeSrc": "388:89:19",
															"nodeType": "YulAssignment",
															"src": "388:89:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:19",
																		"nodeType": "YulLiteral",
																		"src": "410:66:19",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:19"
																},
																"nativeSrc": "399:78:19",
																"nodeType": "YulFunctionCall",
																"src": "399:78:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:19",
														"nodeType": "YulTypedName",
														"src": "360:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:19",
														"nodeType": "YulTypedName",
														"src": "370:7:19",
														"type": ""
													}
												],
												"src": "334:149:19"
											},
											{
												"body": {
													"nativeSrc": "531:78:19",
													"nodeType": "YulBlock",
													"src": "531:78:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:19",
																"nodeType": "YulBlock",
																"src": "587:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:19",
																					"nodeType": "YulLiteral",
																					"src": "596:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:19",
																					"nodeType": "YulLiteral",
																					"src": "599:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:19"
																			},
																			"nativeSrc": "589:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:19"
																		},
																		"nativeSrc": "589:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:19",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:19"
																				},
																				"nativeSrc": "561:23:19",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:19"
																		},
																		"nativeSrc": "551:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:19"
																},
																"nativeSrc": "544:42:19",
																"nodeType": "YulFunctionCall",
																"src": "544:42:19"
															},
															"nativeSrc": "541:62:19",
															"nodeType": "YulIf",
															"src": "541:62:19"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:19",
														"nodeType": "YulTypedName",
														"src": "524:5:19",
														"type": ""
													}
												],
												"src": "489:120:19"
											},
											{
												"body": {
													"nativeSrc": "666:86:19",
													"nodeType": "YulBlock",
													"src": "666:86:19",
													"statements": [
														{
															"nativeSrc": "676:29:19",
															"nodeType": "YulAssignment",
															"src": "676:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:19"
																},
																"nativeSrc": "685:20:19",
																"nodeType": "YulFunctionCall",
																"src": "685:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:19"
																},
																"nativeSrc": "714:32:19",
																"nodeType": "YulFunctionCall",
																"src": "714:32:19"
															},
															"nativeSrc": "714:32:19",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:19"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:19",
														"nodeType": "YulTypedName",
														"src": "644:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:19",
														"nodeType": "YulTypedName",
														"src": "652:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:19",
														"nodeType": "YulTypedName",
														"src": "660:5:19",
														"type": ""
													}
												],
												"src": "615:137:19"
											},
											{
												"body": {
													"nativeSrc": "823:262:19",
													"nodeType": "YulBlock",
													"src": "823:262:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:19",
																"nodeType": "YulBlock",
																"src": "869:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:19"
																			},
																			"nativeSrc": "871:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:19"
																		},
																		"nativeSrc": "871:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:19"
																		},
																		"nativeSrc": "840:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:19",
																		"nodeType": "YulLiteral",
																		"src": "865:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:19"
																},
																"nativeSrc": "836:32:19",
																"nodeType": "YulFunctionCall",
																"src": "836:32:19"
															},
															"nativeSrc": "833:119:19",
															"nodeType": "YulIf",
															"src": "833:119:19"
														},
														{
															"nativeSrc": "962:116:19",
															"nodeType": "YulBlock",
															"src": "962:116:19",
															"statements": [
																{
																	"nativeSrc": "977:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:19",
																		"nodeType": "YulLiteral",
																		"src": "991:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:19",
																			"nodeType": "YulTypedName",
																			"src": "981:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:19",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:19"
																				},
																				"nativeSrc": "1036:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:19",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:19"
																		},
																		"nativeSrc": "1016:52:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:19",
														"nodeType": "YulTypedName",
														"src": "793:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:19",
														"nodeType": "YulTypedName",
														"src": "804:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:19",
														"nodeType": "YulTypedName",
														"src": "816:6:19",
														"type": ""
													}
												],
												"src": "758:327:19"
											},
											{
												"body": {
													"nativeSrc": "1133:48:19",
													"nodeType": "YulBlock",
													"src": "1133:48:19",
													"statements": [
														{
															"nativeSrc": "1143:32:19",
															"nodeType": "YulAssignment",
															"src": "1143:32:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:19"
																		},
																		"nativeSrc": "1161:13:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:19"
																},
																"nativeSrc": "1154:21:19",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:19",
														"nodeType": "YulTypedName",
														"src": "1115:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:19",
														"nodeType": "YulTypedName",
														"src": "1125:7:19",
														"type": ""
													}
												],
												"src": "1091:90:19"
											},
											{
												"body": {
													"nativeSrc": "1246:50:19",
													"nodeType": "YulBlock",
													"src": "1246:50:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:19",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:19"
																		},
																		"nativeSrc": "1268:21:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:19"
																},
																"nativeSrc": "1256:34:19",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:19"
															},
															"nativeSrc": "1256:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:19"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:19",
														"nodeType": "YulTypedName",
														"src": "1234:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:19",
														"nodeType": "YulTypedName",
														"src": "1241:3:19",
														"type": ""
													}
												],
												"src": "1187:109:19"
											},
											{
												"body": {
													"nativeSrc": "1394:118:19",
													"nodeType": "YulBlock",
													"src": "1394:118:19",
													"statements": [
														{
															"nativeSrc": "1404:26:19",
															"nodeType": "YulAssignment",
															"src": "1404:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:19"
																},
																"nativeSrc": "1412:18:19",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:19",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:19"
																		},
																		"nativeSrc": "1487:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:19",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:19"
																},
																"nativeSrc": "1440:65:19",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:19"
															},
															"nativeSrc": "1440:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:19",
														"nodeType": "YulTypedName",
														"src": "1366:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:19",
														"nodeType": "YulTypedName",
														"src": "1378:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:19",
														"nodeType": "YulTypedName",
														"src": "1389:4:19",
														"type": ""
													}
												],
												"src": "1302:210:19"
											},
											{
												"body": {
													"nativeSrc": "1577:40:19",
													"nodeType": "YulBlock",
													"src": "1577:40:19",
													"statements": [
														{
															"nativeSrc": "1588:22:19",
															"nodeType": "YulAssignment",
															"src": "1588:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:19"
																},
																"nativeSrc": "1598:12:19",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:19",
														"nodeType": "YulTypedName",
														"src": "1560:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:19",
														"nodeType": "YulTypedName",
														"src": "1570:6:19",
														"type": ""
													}
												],
												"src": "1518:99:19"
											},
											{
												"body": {
													"nativeSrc": "1719:73:19",
													"nodeType": "YulBlock",
													"src": "1719:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:19"
																},
																"nativeSrc": "1729:19:19",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:19"
															},
															"nativeSrc": "1729:19:19",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:19"
														},
														{
															"nativeSrc": "1757:29:19",
															"nodeType": "YulAssignment",
															"src": "1757:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:19"
																},
																"nativeSrc": "1772:14:19",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:19",
														"nodeType": "YulTypedName",
														"src": "1691:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:19",
														"nodeType": "YulTypedName",
														"src": "1696:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:19",
														"nodeType": "YulTypedName",
														"src": "1707:11:19",
														"type": ""
													}
												],
												"src": "1623:169:19"
											},
											{
												"body": {
													"nativeSrc": "1860:77:19",
													"nodeType": "YulBlock",
													"src": "1860:77:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:19"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:19"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:19"
																},
																"nativeSrc": "1871:23:19",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:19"
															},
															"nativeSrc": "1871:23:19",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:19"
																		},
																		"nativeSrc": "1910:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:19"
																},
																"nativeSrc": "1903:27:19",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:19"
															},
															"nativeSrc": "1903:27:19",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:19"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:19",
														"nodeType": "YulTypedName",
														"src": "1842:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:19",
														"nodeType": "YulTypedName",
														"src": "1847:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:19",
														"nodeType": "YulTypedName",
														"src": "1852:6:19",
														"type": ""
													}
												],
												"src": "1798:139:19"
											},
											{
												"body": {
													"nativeSrc": "1991:54:19",
													"nodeType": "YulBlock",
													"src": "1991:54:19",
													"statements": [
														{
															"nativeSrc": "2001:38:19",
															"nodeType": "YulAssignment",
															"src": "2001:38:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:19"
																		},
																		"nativeSrc": "2015:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:19"
																		},
																		"nativeSrc": "2031:7:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:19"
																},
																"nativeSrc": "2011:28:19",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:19"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:19",
														"nodeType": "YulTypedName",
														"src": "1974:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:19",
														"nodeType": "YulTypedName",
														"src": "1984:6:19",
														"type": ""
													}
												],
												"src": "1943:102:19"
											},
											{
												"body": {
													"nativeSrc": "2143:285:19",
													"nodeType": "YulBlock",
													"src": "2143:285:19",
													"statements": [
														{
															"nativeSrc": "2153:53:19",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:19"
																},
																"nativeSrc": "2167:39:19",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:19",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:19",
															"nodeType": "YulAssignment",
															"src": "2215:78:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:19"
																},
																"nativeSrc": "2222:71:19",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:19",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:19"
																		},
																		"nativeSrc": "2337:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:19"
																},
																"nativeSrc": "2302:65:19",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:19"
															},
															"nativeSrc": "2302:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:19"
														},
														{
															"nativeSrc": "2376:46:19",
															"nodeType": "YulAssignment",
															"src": "2376:46:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:19"
																		},
																		"nativeSrc": "2392:29:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:19"
																},
																"nativeSrc": "2383:39:19",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:19",
														"nodeType": "YulTypedName",
														"src": "2124:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:19",
														"nodeType": "YulTypedName",
														"src": "2131:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:19",
														"nodeType": "YulTypedName",
														"src": "2139:3:19",
														"type": ""
													}
												],
												"src": "2051:377:19"
											},
											{
												"body": {
													"nativeSrc": "2552:195:19",
													"nodeType": "YulBlock",
													"src": "2552:195:19",
													"statements": [
														{
															"nativeSrc": "2562:26:19",
															"nodeType": "YulAssignment",
															"src": "2562:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:19",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:19"
																},
																"nativeSrc": "2570:18:19",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:19",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:19"
																		},
																		"nativeSrc": "2605:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:19"
																		},
																		"nativeSrc": "2624:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:19"
																},
																"nativeSrc": "2598:47:19",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:19"
															},
															"nativeSrc": "2598:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:19"
														},
														{
															"nativeSrc": "2654:86:19",
															"nodeType": "YulAssignment",
															"src": "2654:86:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:19"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:19",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:19"
																},
																"nativeSrc": "2662:78:19",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:19",
														"nodeType": "YulTypedName",
														"src": "2524:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:19",
														"nodeType": "YulTypedName",
														"src": "2536:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:19",
														"nodeType": "YulTypedName",
														"src": "2547:4:19",
														"type": ""
													}
												],
												"src": "2434:313:19"
											},
											{
												"body": {
													"nativeSrc": "2798:32:19",
													"nodeType": "YulBlock",
													"src": "2798:32:19",
													"statements": [
														{
															"nativeSrc": "2808:16:19",
															"nodeType": "YulAssignment",
															"src": "2808:16:19",
															"value": {
																"name": "value",
																"nativeSrc": "2819:5:19",
																"nodeType": "YulIdentifier",
																"src": "2819:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2753:77:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:19",
														"nodeType": "YulTypedName",
														"src": "2780:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:19",
														"nodeType": "YulTypedName",
														"src": "2790:7:19",
														"type": ""
													}
												],
												"src": "2753:77:19"
											},
											{
												"body": {
													"nativeSrc": "2879:79:19",
													"nodeType": "YulBlock",
													"src": "2879:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "2936:16:19",
																"nodeType": "YulBlock",
																"src": "2936:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2945:1:19",
																					"nodeType": "YulLiteral",
																					"src": "2945:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2948:1:19",
																					"nodeType": "YulLiteral",
																					"src": "2948:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2938:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2938:6:19"
																			},
																			"nativeSrc": "2938:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2938:12:19"
																		},
																		"nativeSrc": "2938:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "2938:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2902:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2902:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2927:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "2927:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2909:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "2909:17:19"
																				},
																				"nativeSrc": "2909:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2899:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "2899:2:19"
																		},
																		"nativeSrc": "2899:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2899:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2892:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:19"
																},
																"nativeSrc": "2892:43:19",
																"nodeType": "YulFunctionCall",
																"src": "2892:43:19"
															},
															"nativeSrc": "2889:63:19",
															"nodeType": "YulIf",
															"src": "2889:63:19"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2836:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2872:5:19",
														"nodeType": "YulTypedName",
														"src": "2872:5:19",
														"type": ""
													}
												],
												"src": "2836:122:19"
											},
											{
												"body": {
													"nativeSrc": "3016:87:19",
													"nodeType": "YulBlock",
													"src": "3016:87:19",
													"statements": [
														{
															"nativeSrc": "3026:29:19",
															"nodeType": "YulAssignment",
															"src": "3026:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3048:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3048:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3035:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "3035:12:19"
																},
																"nativeSrc": "3035:20:19",
																"nodeType": "YulFunctionCall",
																"src": "3035:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3026:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "3026:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3091:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3091:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3064:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "3064:26:19"
																},
																"nativeSrc": "3064:33:19",
																"nodeType": "YulFunctionCall",
																"src": "3064:33:19"
															},
															"nativeSrc": "3064:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "3064:33:19"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2964:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2994:6:19",
														"nodeType": "YulTypedName",
														"src": "2994:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3002:3:19",
														"nodeType": "YulTypedName",
														"src": "3002:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3010:5:19",
														"nodeType": "YulTypedName",
														"src": "3010:5:19",
														"type": ""
													}
												],
												"src": "2964:139:19"
											},
											{
												"body": {
													"nativeSrc": "3175:263:19",
													"nodeType": "YulBlock",
													"src": "3175:263:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "3221:83:19",
																"nodeType": "YulBlock",
																"src": "3221:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3223:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "3223:77:19"
																			},
																			"nativeSrc": "3223:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3223:79:19"
																		},
																		"nativeSrc": "3223:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3196:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "3196:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3205:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3192:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:19"
																		},
																		"nativeSrc": "3192:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3192:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3217:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3188:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3188:3:19"
																},
																"nativeSrc": "3188:32:19",
																"nodeType": "YulFunctionCall",
																"src": "3188:32:19"
															},
															"nativeSrc": "3185:119:19",
															"nodeType": "YulIf",
															"src": "3185:119:19"
														},
														{
															"nativeSrc": "3314:117:19",
															"nodeType": "YulBlock",
															"src": "3314:117:19",
															"statements": [
																{
																	"nativeSrc": "3329:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3329:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3343:1:19",
																		"nodeType": "YulLiteral",
																		"src": "3343:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3333:6:19",
																			"nodeType": "YulTypedName",
																			"src": "3333:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3358:63:19",
																	"nodeType": "YulAssignment",
																	"src": "3358:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3393:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "3393:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3404:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "3404:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3389:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "3389:3:19"
																				},
																				"nativeSrc": "3389:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3389:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3413:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "3413:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3368:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "3368:20:19"
																		},
																		"nativeSrc": "3368:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3368:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3358:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "3358:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3109:329:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3145:9:19",
														"nodeType": "YulTypedName",
														"src": "3145:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3156:7:19",
														"nodeType": "YulTypedName",
														"src": "3156:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3168:6:19",
														"nodeType": "YulTypedName",
														"src": "3168:6:19",
														"type": ""
													}
												],
												"src": "3109:329:19"
											},
											{
												"body": {
													"nativeSrc": "3489:81:19",
													"nodeType": "YulBlock",
													"src": "3489:81:19",
													"statements": [
														{
															"nativeSrc": "3499:65:19",
															"nodeType": "YulAssignment",
															"src": "3499:65:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3514:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3514:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3521:42:19",
																		"nodeType": "YulLiteral",
																		"src": "3521:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3510:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:19"
																},
																"nativeSrc": "3510:54:19",
																"nodeType": "YulFunctionCall",
																"src": "3510:54:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3499:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "3499:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3444:126:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:19",
														"nodeType": "YulTypedName",
														"src": "3471:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3481:7:19",
														"nodeType": "YulTypedName",
														"src": "3481:7:19",
														"type": ""
													}
												],
												"src": "3444:126:19"
											},
											{
												"body": {
													"nativeSrc": "3621:51:19",
													"nodeType": "YulBlock",
													"src": "3621:51:19",
													"statements": [
														{
															"nativeSrc": "3631:35:19",
															"nodeType": "YulAssignment",
															"src": "3631:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3660:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3660:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3642:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "3642:17:19"
																},
																"nativeSrc": "3642:24:19",
																"nodeType": "YulFunctionCall",
																"src": "3642:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3631:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "3631:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3576:96:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3603:5:19",
														"nodeType": "YulTypedName",
														"src": "3603:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3613:7:19",
														"nodeType": "YulTypedName",
														"src": "3613:7:19",
														"type": ""
													}
												],
												"src": "3576:96:19"
											},
											{
												"body": {
													"nativeSrc": "3743:53:19",
													"nodeType": "YulBlock",
													"src": "3743:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3760:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3760:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3783:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "3783:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3765:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "3765:17:19"
																		},
																		"nativeSrc": "3765:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3765:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3753:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:19"
																},
																"nativeSrc": "3753:37:19",
																"nodeType": "YulFunctionCall",
																"src": "3753:37:19"
															},
															"nativeSrc": "3753:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "3753:37:19"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3678:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3731:5:19",
														"nodeType": "YulTypedName",
														"src": "3731:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3738:3:19",
														"nodeType": "YulTypedName",
														"src": "3738:3:19",
														"type": ""
													}
												],
												"src": "3678:118:19"
											},
											{
												"body": {
													"nativeSrc": "3900:124:19",
													"nodeType": "YulBlock",
													"src": "3900:124:19",
													"statements": [
														{
															"nativeSrc": "3910:26:19",
															"nodeType": "YulAssignment",
															"src": "3910:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3922:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "3922:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3933:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3933:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3918:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:19"
																},
																"nativeSrc": "3918:18:19",
																"nodeType": "YulFunctionCall",
																"src": "3918:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3910:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "3910:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3990:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4003:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4014:1:19",
																				"nodeType": "YulLiteral",
																				"src": "4014:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3999:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:19"
																		},
																		"nativeSrc": "3999:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3946:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "3946:43:19"
																},
																"nativeSrc": "3946:71:19",
																"nodeType": "YulFunctionCall",
																"src": "3946:71:19"
															},
															"nativeSrc": "3946:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "3946:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3802:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3872:9:19",
														"nodeType": "YulTypedName",
														"src": "3872:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3884:6:19",
														"nodeType": "YulTypedName",
														"src": "3884:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3895:4:19",
														"nodeType": "YulTypedName",
														"src": "3895:4:19",
														"type": ""
													}
												],
												"src": "3802:222:19"
											},
											{
												"body": {
													"nativeSrc": "4073:79:19",
													"nodeType": "YulBlock",
													"src": "4073:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "4130:16:19",
																"nodeType": "YulBlock",
																"src": "4130:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4139:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4139:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4142:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4142:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4132:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "4132:6:19"
																			},
																			"nativeSrc": "4132:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4132:12:19"
																		},
																		"nativeSrc": "4132:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4132:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4096:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "4096:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4121:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "4121:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4103:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "4103:17:19"
																				},
																				"nativeSrc": "4103:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4103:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4093:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "4093:2:19"
																		},
																		"nativeSrc": "4093:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4086:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:19"
																},
																"nativeSrc": "4086:43:19",
																"nodeType": "YulFunctionCall",
																"src": "4086:43:19"
															},
															"nativeSrc": "4083:63:19",
															"nodeType": "YulIf",
															"src": "4083:63:19"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4030:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4066:5:19",
														"nodeType": "YulTypedName",
														"src": "4066:5:19",
														"type": ""
													}
												],
												"src": "4030:122:19"
											},
											{
												"body": {
													"nativeSrc": "4210:87:19",
													"nodeType": "YulBlock",
													"src": "4210:87:19",
													"statements": [
														{
															"nativeSrc": "4220:29:19",
															"nodeType": "YulAssignment",
															"src": "4220:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4242:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4242:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4229:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "4229:12:19"
																},
																"nativeSrc": "4229:20:19",
																"nodeType": "YulFunctionCall",
																"src": "4229:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4220:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "4220:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4285:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "4285:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4258:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "4258:26:19"
																},
																"nativeSrc": "4258:33:19",
																"nodeType": "YulFunctionCall",
																"src": "4258:33:19"
															},
															"nativeSrc": "4258:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "4258:33:19"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4158:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4188:6:19",
														"nodeType": "YulTypedName",
														"src": "4188:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4196:3:19",
														"nodeType": "YulTypedName",
														"src": "4196:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4204:5:19",
														"nodeType": "YulTypedName",
														"src": "4204:5:19",
														"type": ""
													}
												],
												"src": "4158:139:19"
											},
											{
												"body": {
													"nativeSrc": "4386:391:19",
													"nodeType": "YulBlock",
													"src": "4386:391:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "4432:83:19",
																"nodeType": "YulBlock",
																"src": "4432:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4434:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "4434:77:19"
																			},
																			"nativeSrc": "4434:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4434:79:19"
																		},
																		"nativeSrc": "4434:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4434:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4407:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4407:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4416:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4416:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4403:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:19"
																		},
																		"nativeSrc": "4403:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4428:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4428:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4399:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4399:3:19"
																},
																"nativeSrc": "4399:32:19",
																"nodeType": "YulFunctionCall",
																"src": "4399:32:19"
															},
															"nativeSrc": "4396:119:19",
															"nodeType": "YulIf",
															"src": "4396:119:19"
														},
														{
															"nativeSrc": "4525:117:19",
															"nodeType": "YulBlock",
															"src": "4525:117:19",
															"statements": [
																{
																	"nativeSrc": "4540:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4554:1:19",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4544:6:19",
																			"nodeType": "YulTypedName",
																			"src": "4544:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4569:63:19",
																	"nodeType": "YulAssignment",
																	"src": "4569:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4604:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "4604:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4615:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "4615:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4600:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4600:3:19"
																				},
																				"nativeSrc": "4600:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4600:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4624:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4624:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4579:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "4579:20:19"
																		},
																		"nativeSrc": "4579:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4579:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4569:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "4569:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4652:118:19",
															"nodeType": "YulBlock",
															"src": "4652:118:19",
															"statements": [
																{
																	"nativeSrc": "4667:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4667:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4681:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4671:6:19",
																			"nodeType": "YulTypedName",
																			"src": "4671:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4697:63:19",
																	"nodeType": "YulAssignment",
																	"src": "4697:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4732:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "4732:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4743:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "4743:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4728:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4728:3:19"
																				},
																				"nativeSrc": "4728:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4728:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4752:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4752:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4707:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "4707:20:19"
																		},
																		"nativeSrc": "4707:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4707:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4697:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "4697:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4303:474:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4348:9:19",
														"nodeType": "YulTypedName",
														"src": "4348:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4359:7:19",
														"nodeType": "YulTypedName",
														"src": "4359:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4371:6:19",
														"nodeType": "YulTypedName",
														"src": "4371:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4379:6:19",
														"nodeType": "YulTypedName",
														"src": "4379:6:19",
														"type": ""
													}
												],
												"src": "4303:474:19"
											},
											{
												"body": {
													"nativeSrc": "4883:519:19",
													"nodeType": "YulBlock",
													"src": "4883:519:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "4929:83:19",
																"nodeType": "YulBlock",
																"src": "4929:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4931:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "4931:77:19"
																			},
																			"nativeSrc": "4931:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4931:79:19"
																		},
																		"nativeSrc": "4931:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4931:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4904:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4904:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4913:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4900:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:19"
																		},
																		"nativeSrc": "4900:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4900:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4925:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4896:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:19"
																},
																"nativeSrc": "4896:32:19",
																"nodeType": "YulFunctionCall",
																"src": "4896:32:19"
															},
															"nativeSrc": "4893:119:19",
															"nodeType": "YulIf",
															"src": "4893:119:19"
														},
														{
															"nativeSrc": "5022:117:19",
															"nodeType": "YulBlock",
															"src": "5022:117:19",
															"statements": [
																{
																	"nativeSrc": "5037:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5037:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5051:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5051:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5041:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5041:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5066:63:19",
																	"nodeType": "YulAssignment",
																	"src": "5066:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5101:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5101:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5112:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5112:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5097:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5097:3:19"
																				},
																				"nativeSrc": "5097:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5097:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5121:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5121:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5076:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "5076:20:19"
																		},
																		"nativeSrc": "5076:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5066:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5066:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5149:118:19",
															"nodeType": "YulBlock",
															"src": "5149:118:19",
															"statements": [
																{
																	"nativeSrc": "5164:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5164:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5178:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5168:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5168:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5194:63:19",
																	"nodeType": "YulAssignment",
																	"src": "5194:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5229:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5229:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5240:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5225:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5225:3:19"
																				},
																				"nativeSrc": "5225:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5225:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5249:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5249:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5204:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "5204:20:19"
																		},
																		"nativeSrc": "5204:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5204:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5194:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5194:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5277:118:19",
															"nodeType": "YulBlock",
															"src": "5277:118:19",
															"statements": [
																{
																	"nativeSrc": "5292:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5306:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5306:2:19",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5296:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5322:63:19",
																	"nodeType": "YulAssignment",
																	"src": "5322:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5357:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5357:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5368:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5368:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5353:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:19"
																				},
																				"nativeSrc": "5353:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5353:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5377:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5377:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5332:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "5332:20:19"
																		},
																		"nativeSrc": "5332:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5322:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5322:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4783:619:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4837:9:19",
														"nodeType": "YulTypedName",
														"src": "4837:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4848:7:19",
														"nodeType": "YulTypedName",
														"src": "4848:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4860:6:19",
														"nodeType": "YulTypedName",
														"src": "4860:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4868:6:19",
														"nodeType": "YulTypedName",
														"src": "4868:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4876:6:19",
														"nodeType": "YulTypedName",
														"src": "4876:6:19",
														"type": ""
													}
												],
												"src": "4783:619:19"
											},
											{
												"body": {
													"nativeSrc": "5497:28:19",
													"nodeType": "YulBlock",
													"src": "5497:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5514:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5514:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5517:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5517:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5507:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5507:6:19"
																},
																"nativeSrc": "5507:12:19",
																"nodeType": "YulFunctionCall",
																"src": "5507:12:19"
															},
															"nativeSrc": "5507:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "5507:12:19"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5408:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "5408:117:19"
											},
											{
												"body": {
													"nativeSrc": "5620:28:19",
													"nodeType": "YulBlock",
													"src": "5620:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5637:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5637:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5640:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5640:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5630:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5630:6:19"
																},
																"nativeSrc": "5630:12:19",
																"nodeType": "YulFunctionCall",
																"src": "5630:12:19"
															},
															"nativeSrc": "5630:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "5630:12:19"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "5531:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "5531:117:19"
											},
											{
												"body": {
													"nativeSrc": "5682:152:19",
													"nodeType": "YulBlock",
													"src": "5682:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5699:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5699:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5702:77:19",
																		"nodeType": "YulLiteral",
																		"src": "5702:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5692:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5692:6:19"
																},
																"nativeSrc": "5692:88:19",
																"nodeType": "YulFunctionCall",
																"src": "5692:88:19"
															},
															"nativeSrc": "5692:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "5692:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5796:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5796:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5799:4:19",
																		"nodeType": "YulLiteral",
																		"src": "5799:4:19",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5789:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5789:6:19"
																},
																"nativeSrc": "5789:15:19",
																"nodeType": "YulFunctionCall",
																"src": "5789:15:19"
															},
															"nativeSrc": "5789:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "5789:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5820:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5820:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5823:4:19",
																		"nodeType": "YulLiteral",
																		"src": "5823:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5813:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5813:6:19"
																},
																"nativeSrc": "5813:15:19",
																"nodeType": "YulFunctionCall",
																"src": "5813:15:19"
															},
															"nativeSrc": "5813:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "5813:15:19"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5654:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "5654:180:19"
											},
											{
												"body": {
													"nativeSrc": "5883:238:19",
													"nodeType": "YulBlock",
													"src": "5883:238:19",
													"statements": [
														{
															"nativeSrc": "5893:58:19",
															"nodeType": "YulVariableDeclaration",
															"src": "5893:58:19",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5915:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5915:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5945:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "5945:4:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5923:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "5923:21:19"
																		},
																		"nativeSrc": "5923:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5923:27:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5911:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5911:3:19"
																},
																"nativeSrc": "5911:40:19",
																"nodeType": "YulFunctionCall",
																"src": "5911:40:19"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5897:10:19",
																	"nodeType": "YulTypedName",
																	"src": "5897:10:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6062:22:19",
																"nodeType": "YulBlock",
																"src": "6062:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6064:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "6064:16:19"
																			},
																			"nativeSrc": "6064:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "6064:18:19"
																		},
																		"nativeSrc": "6064:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "6064:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6005:10:19",
																				"nodeType": "YulIdentifier",
																				"src": "6005:10:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6017:18:19",
																				"nodeType": "YulLiteral",
																				"src": "6017:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6002:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "6002:2:19"
																		},
																		"nativeSrc": "6002:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6002:34:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6041:10:19",
																				"nodeType": "YulIdentifier",
																				"src": "6041:10:19"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6053:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6053:6:19"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6038:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "6038:2:19"
																		},
																		"nativeSrc": "6038:22:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6038:22:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5999:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "5999:2:19"
																},
																"nativeSrc": "5999:62:19",
																"nodeType": "YulFunctionCall",
																"src": "5999:62:19"
															},
															"nativeSrc": "5996:88:19",
															"nodeType": "YulIf",
															"src": "5996:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6100:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6100:2:19",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6104:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "6104:10:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6093:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6093:6:19"
																},
																"nativeSrc": "6093:22:19",
																"nodeType": "YulFunctionCall",
																"src": "6093:22:19"
															},
															"nativeSrc": "6093:22:19",
															"nodeType": "YulExpressionStatement",
															"src": "6093:22:19"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5840:281:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5869:6:19",
														"nodeType": "YulTypedName",
														"src": "5869:6:19",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5877:4:19",
														"nodeType": "YulTypedName",
														"src": "5877:4:19",
														"type": ""
													}
												],
												"src": "5840:281:19"
											},
											{
												"body": {
													"nativeSrc": "6168:88:19",
													"nodeType": "YulBlock",
													"src": "6168:88:19",
													"statements": [
														{
															"nativeSrc": "6178:30:19",
															"nodeType": "YulAssignment",
															"src": "6178:30:19",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6188:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "6188:18:19"
																},
																"nativeSrc": "6188:20:19",
																"nodeType": "YulFunctionCall",
																"src": "6188:20:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6178:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6178:6:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6237:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6237:6:19"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6245:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "6245:4:19"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6217:19:19",
																	"nodeType": "YulIdentifier",
																	"src": "6217:19:19"
																},
																"nativeSrc": "6217:33:19",
																"nodeType": "YulFunctionCall",
																"src": "6217:33:19"
															},
															"nativeSrc": "6217:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "6217:33:19"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6127:129:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6152:4:19",
														"nodeType": "YulTypedName",
														"src": "6152:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6161:6:19",
														"nodeType": "YulTypedName",
														"src": "6161:6:19",
														"type": ""
													}
												],
												"src": "6127:129:19"
											},
											{
												"body": {
													"nativeSrc": "6329:241:19",
													"nodeType": "YulBlock",
													"src": "6329:241:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "6434:22:19",
																"nodeType": "YulBlock",
																"src": "6434:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6436:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "6436:16:19"
																			},
																			"nativeSrc": "6436:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "6436:18:19"
																		},
																		"nativeSrc": "6436:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "6436:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6406:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6406:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6414:18:19",
																		"nodeType": "YulLiteral",
																		"src": "6414:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6403:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "6403:2:19"
																},
																"nativeSrc": "6403:30:19",
																"nodeType": "YulFunctionCall",
																"src": "6403:30:19"
															},
															"nativeSrc": "6400:56:19",
															"nodeType": "YulIf",
															"src": "6400:56:19"
														},
														{
															"nativeSrc": "6466:37:19",
															"nodeType": "YulAssignment",
															"src": "6466:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6496:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6496:6:19"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "6474:21:19",
																	"nodeType": "YulIdentifier",
																	"src": "6474:21:19"
																},
																"nativeSrc": "6474:29:19",
																"nodeType": "YulFunctionCall",
																"src": "6474:29:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6466:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "6466:4:19"
																}
															]
														},
														{
															"nativeSrc": "6540:23:19",
															"nodeType": "YulAssignment",
															"src": "6540:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6552:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "6552:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6558:4:19",
																		"nodeType": "YulLiteral",
																		"src": "6558:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6548:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6548:3:19"
																},
																"nativeSrc": "6548:15:19",
																"nodeType": "YulFunctionCall",
																"src": "6548:15:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6540:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "6540:4:19"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "6262:308:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6313:6:19",
														"nodeType": "YulTypedName",
														"src": "6313:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6324:4:19",
														"nodeType": "YulTypedName",
														"src": "6324:4:19",
														"type": ""
													}
												],
												"src": "6262:308:19"
											},
											{
												"body": {
													"nativeSrc": "6640:84:19",
													"nodeType": "YulBlock",
													"src": "6640:84:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6664:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "6664:3:19"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6669:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "6669:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6674:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6674:6:19"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "6651:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "6651:12:19"
																},
																"nativeSrc": "6651:30:19",
																"nodeType": "YulFunctionCall",
																"src": "6651:30:19"
															},
															"nativeSrc": "6651:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "6651:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6701:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "6701:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6706:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6706:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6697:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6697:3:19"
																		},
																		"nativeSrc": "6697:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6697:16:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6715:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6715:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6690:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6690:6:19"
																},
																"nativeSrc": "6690:27:19",
																"nodeType": "YulFunctionCall",
																"src": "6690:27:19"
															},
															"nativeSrc": "6690:27:19",
															"nodeType": "YulExpressionStatement",
															"src": "6690:27:19"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "6576:148:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6622:3:19",
														"nodeType": "YulTypedName",
														"src": "6622:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6627:3:19",
														"nodeType": "YulTypedName",
														"src": "6627:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6632:6:19",
														"nodeType": "YulTypedName",
														"src": "6632:6:19",
														"type": ""
													}
												],
												"src": "6576:148:19"
											},
											{
												"body": {
													"nativeSrc": "6814:341:19",
													"nodeType": "YulBlock",
													"src": "6814:341:19",
													"statements": [
														{
															"nativeSrc": "6824:75:19",
															"nodeType": "YulAssignment",
															"src": "6824:75:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6891:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6891:6:19"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "6849:41:19",
																			"nodeType": "YulIdentifier",
																			"src": "6849:41:19"
																		},
																		"nativeSrc": "6849:49:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6849:49:19"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6833:15:19",
																	"nodeType": "YulIdentifier",
																	"src": "6833:15:19"
																},
																"nativeSrc": "6833:66:19",
																"nodeType": "YulFunctionCall",
																"src": "6833:66:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6824:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "6824:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6915:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "6915:5:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6922:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6922:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6908:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6908:6:19"
																},
																"nativeSrc": "6908:21:19",
																"nodeType": "YulFunctionCall",
																"src": "6908:21:19"
															},
															"nativeSrc": "6908:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "6908:21:19"
														},
														{
															"nativeSrc": "6938:27:19",
															"nodeType": "YulVariableDeclaration",
															"src": "6938:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6953:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "6953:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6960:4:19",
																		"nodeType": "YulLiteral",
																		"src": "6960:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6949:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6949:3:19"
																},
																"nativeSrc": "6949:16:19",
																"nodeType": "YulFunctionCall",
																"src": "6949:16:19"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6942:3:19",
																	"nodeType": "YulTypedName",
																	"src": "6942:3:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7003:83:19",
																"nodeType": "YulBlock",
																"src": "7003:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7005:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "7005:77:19"
																			},
																			"nativeSrc": "7005:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7005:79:19"
																		},
																		"nativeSrc": "7005:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7005:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "6984:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "6984:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6989:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6989:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6980:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6980:3:19"
																		},
																		"nativeSrc": "6980:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6980:16:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6998:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "6998:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6977:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "6977:2:19"
																},
																"nativeSrc": "6977:25:19",
																"nodeType": "YulFunctionCall",
																"src": "6977:25:19"
															},
															"nativeSrc": "6974:112:19",
															"nodeType": "YulIf",
															"src": "6974:112:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7132:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7132:3:19"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "7137:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7137:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7142:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7142:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "7095:36:19",
																	"nodeType": "YulIdentifier",
																	"src": "7095:36:19"
																},
																"nativeSrc": "7095:54:19",
																"nodeType": "YulFunctionCall",
																"src": "7095:54:19"
															},
															"nativeSrc": "7095:54:19",
															"nodeType": "YulExpressionStatement",
															"src": "7095:54:19"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "6730:425:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6787:3:19",
														"nodeType": "YulTypedName",
														"src": "6787:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6792:6:19",
														"nodeType": "YulTypedName",
														"src": "6792:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6800:3:19",
														"nodeType": "YulTypedName",
														"src": "6800:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6808:5:19",
														"nodeType": "YulTypedName",
														"src": "6808:5:19",
														"type": ""
													}
												],
												"src": "6730:425:19"
											},
											{
												"body": {
													"nativeSrc": "7237:278:19",
													"nodeType": "YulBlock",
													"src": "7237:278:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "7286:83:19",
																"nodeType": "YulBlock",
																"src": "7286:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7288:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "7288:77:19"
																			},
																			"nativeSrc": "7288:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7288:79:19"
																		},
																		"nativeSrc": "7288:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7288:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7265:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "7265:6:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7273:4:19",
																						"nodeType": "YulLiteral",
																						"src": "7273:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7261:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "7261:3:19"
																				},
																				"nativeSrc": "7261:17:19",
																				"nodeType": "YulFunctionCall",
																				"src": "7261:17:19"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7280:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "7280:3:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7257:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7257:3:19"
																		},
																		"nativeSrc": "7257:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7257:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7250:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7250:6:19"
																},
																"nativeSrc": "7250:35:19",
																"nodeType": "YulFunctionCall",
																"src": "7250:35:19"
															},
															"nativeSrc": "7247:122:19",
															"nodeType": "YulIf",
															"src": "7247:122:19"
														},
														{
															"nativeSrc": "7378:34:19",
															"nodeType": "YulVariableDeclaration",
															"src": "7378:34:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7405:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7405:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7392:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "7392:12:19"
																},
																"nativeSrc": "7392:20:19",
																"nodeType": "YulFunctionCall",
																"src": "7392:20:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7382:6:19",
																	"nodeType": "YulTypedName",
																	"src": "7382:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7421:88:19",
															"nodeType": "YulAssignment",
															"src": "7421:88:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7482:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "7482:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7490:4:19",
																				"nodeType": "YulLiteral",
																				"src": "7490:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7478:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7478:3:19"
																		},
																		"nativeSrc": "7478:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7478:17:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7497:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7497:6:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7505:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7505:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "7430:47:19",
																	"nodeType": "YulIdentifier",
																	"src": "7430:47:19"
																},
																"nativeSrc": "7430:79:19",
																"nodeType": "YulFunctionCall",
																"src": "7430:79:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7421:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "7421:5:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "7175:340:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7215:6:19",
														"nodeType": "YulTypedName",
														"src": "7215:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7223:3:19",
														"nodeType": "YulTypedName",
														"src": "7223:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7231:5:19",
														"nodeType": "YulTypedName",
														"src": "7231:5:19",
														"type": ""
													}
												],
												"src": "7175:340:19"
											},
											{
												"body": {
													"nativeSrc": "7614:561:19",
													"nodeType": "YulBlock",
													"src": "7614:561:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "7660:83:19",
																"nodeType": "YulBlock",
																"src": "7660:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7662:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "7662:77:19"
																			},
																			"nativeSrc": "7662:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7662:79:19"
																		},
																		"nativeSrc": "7662:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7662:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7635:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "7635:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7644:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "7644:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7631:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7631:3:19"
																		},
																		"nativeSrc": "7631:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7631:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7656:2:19",
																		"nodeType": "YulLiteral",
																		"src": "7656:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7627:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7627:3:19"
																},
																"nativeSrc": "7627:32:19",
																"nodeType": "YulFunctionCall",
																"src": "7627:32:19"
															},
															"nativeSrc": "7624:119:19",
															"nodeType": "YulIf",
															"src": "7624:119:19"
														},
														{
															"nativeSrc": "7753:287:19",
															"nodeType": "YulBlock",
															"src": "7753:287:19",
															"statements": [
																{
																	"nativeSrc": "7768:45:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7768:45:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7799:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "7799:9:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7810:1:19",
																						"nodeType": "YulLiteral",
																						"src": "7810:1:19",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7795:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "7795:3:19"
																				},
																				"nativeSrc": "7795:17:19",
																				"nodeType": "YulFunctionCall",
																				"src": "7795:17:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7782:12:19",
																			"nodeType": "YulIdentifier",
																			"src": "7782:12:19"
																		},
																		"nativeSrc": "7782:31:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7782:31:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7772:6:19",
																			"nodeType": "YulTypedName",
																			"src": "7772:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7860:83:19",
																		"nodeType": "YulBlock",
																		"src": "7860:83:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7862:77:19",
																						"nodeType": "YulIdentifier",
																						"src": "7862:77:19"
																					},
																					"nativeSrc": "7862:79:19",
																					"nodeType": "YulFunctionCall",
																					"src": "7862:79:19"
																				},
																				"nativeSrc": "7862:79:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "7862:79:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7832:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "7832:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7840:18:19",
																				"nodeType": "YulLiteral",
																				"src": "7840:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7829:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "7829:2:19"
																		},
																		"nativeSrc": "7829:30:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7829:30:19"
																	},
																	"nativeSrc": "7826:117:19",
																	"nodeType": "YulIf",
																	"src": "7826:117:19"
																},
																{
																	"nativeSrc": "7957:73:19",
																	"nodeType": "YulAssignment",
																	"src": "7957:73:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8002:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "8002:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8013:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "8013:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7998:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "7998:3:19"
																				},
																				"nativeSrc": "7998:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "7998:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8022:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "8022:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "7967:30:19",
																			"nodeType": "YulIdentifier",
																			"src": "7967:30:19"
																		},
																		"nativeSrc": "7967:63:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7967:63:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7957:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "7957:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8050:118:19",
															"nodeType": "YulBlock",
															"src": "8050:118:19",
															"statements": [
																{
																	"nativeSrc": "8065:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8065:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8079:2:19",
																		"nodeType": "YulLiteral",
																		"src": "8079:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8069:6:19",
																			"nodeType": "YulTypedName",
																			"src": "8069:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8095:63:19",
																	"nodeType": "YulAssignment",
																	"src": "8095:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8130:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "8130:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8141:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "8141:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8126:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "8126:3:19"
																				},
																				"nativeSrc": "8126:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "8126:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8150:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "8150:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8105:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "8105:20:19"
																		},
																		"nativeSrc": "8105:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8105:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8095:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "8095:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
												"nativeSrc": "7521:654:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7576:9:19",
														"nodeType": "YulTypedName",
														"src": "7576:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7587:7:19",
														"nodeType": "YulTypedName",
														"src": "7587:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7599:6:19",
														"nodeType": "YulTypedName",
														"src": "7599:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7607:6:19",
														"nodeType": "YulTypedName",
														"src": "7607:6:19",
														"type": ""
													}
												],
												"src": "7521:654:19"
											},
											{
												"body": {
													"nativeSrc": "8246:53:19",
													"nodeType": "YulBlock",
													"src": "8246:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8263:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8263:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8286:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "8286:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8268:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "8268:17:19"
																		},
																		"nativeSrc": "8268:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8268:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8256:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8256:6:19"
																},
																"nativeSrc": "8256:37:19",
																"nodeType": "YulFunctionCall",
																"src": "8256:37:19"
															},
															"nativeSrc": "8256:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "8256:37:19"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8181:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8234:5:19",
														"nodeType": "YulTypedName",
														"src": "8234:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8241:3:19",
														"nodeType": "YulTypedName",
														"src": "8241:3:19",
														"type": ""
													}
												],
												"src": "8181:118:19"
											},
											{
												"body": {
													"nativeSrc": "8403:124:19",
													"nodeType": "YulBlock",
													"src": "8403:124:19",
													"statements": [
														{
															"nativeSrc": "8413:26:19",
															"nodeType": "YulAssignment",
															"src": "8413:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8425:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "8425:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8436:2:19",
																		"nodeType": "YulLiteral",
																		"src": "8436:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8421:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8421:3:19"
																},
																"nativeSrc": "8421:18:19",
																"nodeType": "YulFunctionCall",
																"src": "8421:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8413:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "8413:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8493:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8493:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8506:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "8506:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8517:1:19",
																				"nodeType": "YulLiteral",
																				"src": "8517:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8502:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8502:3:19"
																		},
																		"nativeSrc": "8502:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8502:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8449:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "8449:43:19"
																},
																"nativeSrc": "8449:71:19",
																"nodeType": "YulFunctionCall",
																"src": "8449:71:19"
															},
															"nativeSrc": "8449:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "8449:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "8305:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8375:9:19",
														"nodeType": "YulTypedName",
														"src": "8375:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8387:6:19",
														"nodeType": "YulTypedName",
														"src": "8387:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8398:4:19",
														"nodeType": "YulTypedName",
														"src": "8398:4:19",
														"type": ""
													}
												],
												"src": "8305:222:19"
											},
											{
												"body": {
													"nativeSrc": "8586:51:19",
													"nodeType": "YulBlock",
													"src": "8586:51:19",
													"statements": [
														{
															"nativeSrc": "8596:35:19",
															"nodeType": "YulAssignment",
															"src": "8596:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8625:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "8625:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "8607:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "8607:17:19"
																},
																"nativeSrc": "8607:24:19",
																"nodeType": "YulFunctionCall",
																"src": "8607:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8596:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "8596:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "8533:104:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8568:5:19",
														"nodeType": "YulTypedName",
														"src": "8568:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8578:7:19",
														"nodeType": "YulTypedName",
														"src": "8578:7:19",
														"type": ""
													}
												],
												"src": "8533:104:19"
											},
											{
												"body": {
													"nativeSrc": "8694:87:19",
													"nodeType": "YulBlock",
													"src": "8694:87:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "8759:16:19",
																"nodeType": "YulBlock",
																"src": "8759:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8768:1:19",
																					"nodeType": "YulLiteral",
																					"src": "8768:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8771:1:19",
																					"nodeType": "YulLiteral",
																					"src": "8771:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8761:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "8761:6:19"
																			},
																			"nativeSrc": "8761:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8761:12:19"
																		},
																		"nativeSrc": "8761:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "8761:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8717:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "8717:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8750:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "8750:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "8724:25:19",
																					"nodeType": "YulIdentifier",
																					"src": "8724:25:19"
																				},
																				"nativeSrc": "8724:32:19",
																				"nodeType": "YulFunctionCall",
																				"src": "8724:32:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8714:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "8714:2:19"
																		},
																		"nativeSrc": "8714:43:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8714:43:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8707:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8707:6:19"
																},
																"nativeSrc": "8707:51:19",
																"nodeType": "YulFunctionCall",
																"src": "8707:51:19"
															},
															"nativeSrc": "8704:71:19",
															"nodeType": "YulIf",
															"src": "8704:71:19"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "8643:138:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8687:5:19",
														"nodeType": "YulTypedName",
														"src": "8687:5:19",
														"type": ""
													}
												],
												"src": "8643:138:19"
											},
											{
												"body": {
													"nativeSrc": "8847:95:19",
													"nodeType": "YulBlock",
													"src": "8847:95:19",
													"statements": [
														{
															"nativeSrc": "8857:29:19",
															"nodeType": "YulAssignment",
															"src": "8857:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8879:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8879:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8866:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "8866:12:19"
																},
																"nativeSrc": "8866:20:19",
																"nodeType": "YulFunctionCall",
																"src": "8866:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8857:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "8857:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8930:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "8930:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "8895:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "8895:34:19"
																},
																"nativeSrc": "8895:41:19",
																"nodeType": "YulFunctionCall",
																"src": "8895:41:19"
															},
															"nativeSrc": "8895:41:19",
															"nodeType": "YulExpressionStatement",
															"src": "8895:41:19"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nativeSrc": "8787:155:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8825:6:19",
														"nodeType": "YulTypedName",
														"src": "8825:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8833:3:19",
														"nodeType": "YulTypedName",
														"src": "8833:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8841:5:19",
														"nodeType": "YulTypedName",
														"src": "8841:5:19",
														"type": ""
													}
												],
												"src": "8787:155:19"
											},
											{
												"body": {
													"nativeSrc": "9022:271:19",
													"nodeType": "YulBlock",
													"src": "9022:271:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "9068:83:19",
																"nodeType": "YulBlock",
																"src": "9068:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9070:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "9070:77:19"
																			},
																			"nativeSrc": "9070:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "9070:79:19"
																		},
																		"nativeSrc": "9070:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "9070:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9043:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9043:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9052:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "9052:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9039:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9039:3:19"
																		},
																		"nativeSrc": "9039:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9039:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9064:2:19",
																		"nodeType": "YulLiteral",
																		"src": "9064:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9035:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9035:3:19"
																},
																"nativeSrc": "9035:32:19",
																"nodeType": "YulFunctionCall",
																"src": "9035:32:19"
															},
															"nativeSrc": "9032:119:19",
															"nodeType": "YulIf",
															"src": "9032:119:19"
														},
														{
															"nativeSrc": "9161:125:19",
															"nodeType": "YulBlock",
															"src": "9161:125:19",
															"statements": [
																{
																	"nativeSrc": "9176:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9176:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9190:1:19",
																		"nodeType": "YulLiteral",
																		"src": "9190:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9180:6:19",
																			"nodeType": "YulTypedName",
																			"src": "9180:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9205:71:19",
																	"nodeType": "YulAssignment",
																	"src": "9205:71:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9248:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "9248:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9259:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "9259:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9244:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9244:3:19"
																				},
																				"nativeSrc": "9244:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9244:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9268:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9268:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nativeSrc": "9215:28:19",
																			"nodeType": "YulIdentifier",
																			"src": "9215:28:19"
																		},
																		"nativeSrc": "9215:61:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9215:61:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9205:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "9205:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nativeSrc": "8948:345:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8992:9:19",
														"nodeType": "YulTypedName",
														"src": "8992:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9003:7:19",
														"nodeType": "YulTypedName",
														"src": "9003:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9015:6:19",
														"nodeType": "YulTypedName",
														"src": "9015:6:19",
														"type": ""
													}
												],
												"src": "8948:345:19"
											},
											{
												"body": {
													"nativeSrc": "9365:263:19",
													"nodeType": "YulBlock",
													"src": "9365:263:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "9411:83:19",
																"nodeType": "YulBlock",
																"src": "9411:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9413:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "9413:77:19"
																			},
																			"nativeSrc": "9413:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "9413:79:19"
																		},
																		"nativeSrc": "9413:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "9413:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9386:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9386:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9395:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "9395:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9382:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9382:3:19"
																		},
																		"nativeSrc": "9382:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9382:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9407:2:19",
																		"nodeType": "YulLiteral",
																		"src": "9407:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9378:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9378:3:19"
																},
																"nativeSrc": "9378:32:19",
																"nodeType": "YulFunctionCall",
																"src": "9378:32:19"
															},
															"nativeSrc": "9375:119:19",
															"nodeType": "YulIf",
															"src": "9375:119:19"
														},
														{
															"nativeSrc": "9504:117:19",
															"nodeType": "YulBlock",
															"src": "9504:117:19",
															"statements": [
																{
																	"nativeSrc": "9519:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9519:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9533:1:19",
																		"nodeType": "YulLiteral",
																		"src": "9533:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9523:6:19",
																			"nodeType": "YulTypedName",
																			"src": "9523:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9548:63:19",
																	"nodeType": "YulAssignment",
																	"src": "9548:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9583:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "9583:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9594:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "9594:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9579:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9579:3:19"
																				},
																				"nativeSrc": "9579:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9579:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9603:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9603:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9558:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "9558:20:19"
																		},
																		"nativeSrc": "9558:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9558:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9548:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "9548:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "9299:329:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9335:9:19",
														"nodeType": "YulTypedName",
														"src": "9335:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9346:7:19",
														"nodeType": "YulTypedName",
														"src": "9346:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9358:6:19",
														"nodeType": "YulTypedName",
														"src": "9358:6:19",
														"type": ""
													}
												],
												"src": "9299:329:19"
											},
											{
												"body": {
													"nativeSrc": "9674:76:19",
													"nodeType": "YulBlock",
													"src": "9674:76:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "9728:16:19",
																"nodeType": "YulBlock",
																"src": "9728:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9737:1:19",
																					"nodeType": "YulLiteral",
																					"src": "9737:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9740:1:19",
																					"nodeType": "YulLiteral",
																					"src": "9740:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9730:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "9730:6:19"
																			},
																			"nativeSrc": "9730:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "9730:12:19"
																		},
																		"nativeSrc": "9730:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "9730:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9697:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "9697:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9719:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "9719:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9704:14:19",
																					"nodeType": "YulIdentifier",
																					"src": "9704:14:19"
																				},
																				"nativeSrc": "9704:21:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9704:21:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9694:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "9694:2:19"
																		},
																		"nativeSrc": "9694:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9694:32:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9687:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9687:6:19"
																},
																"nativeSrc": "9687:40:19",
																"nodeType": "YulFunctionCall",
																"src": "9687:40:19"
															},
															"nativeSrc": "9684:60:19",
															"nodeType": "YulIf",
															"src": "9684:60:19"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "9634:116:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9667:5:19",
														"nodeType": "YulTypedName",
														"src": "9667:5:19",
														"type": ""
													}
												],
												"src": "9634:116:19"
											},
											{
												"body": {
													"nativeSrc": "9805:84:19",
													"nodeType": "YulBlock",
													"src": "9805:84:19",
													"statements": [
														{
															"nativeSrc": "9815:29:19",
															"nodeType": "YulAssignment",
															"src": "9815:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9837:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "9837:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9824:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "9824:12:19"
																},
																"nativeSrc": "9824:20:19",
																"nodeType": "YulFunctionCall",
																"src": "9824:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9815:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "9815:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9877:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "9877:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9853:23:19",
																	"nodeType": "YulIdentifier",
																	"src": "9853:23:19"
																},
																"nativeSrc": "9853:30:19",
																"nodeType": "YulFunctionCall",
																"src": "9853:30:19"
															},
															"nativeSrc": "9853:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "9853:30:19"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "9756:133:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9783:6:19",
														"nodeType": "YulTypedName",
														"src": "9783:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9791:3:19",
														"nodeType": "YulTypedName",
														"src": "9791:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9799:5:19",
														"nodeType": "YulTypedName",
														"src": "9799:5:19",
														"type": ""
													}
												],
												"src": "9756:133:19"
											},
											{
												"body": {
													"nativeSrc": "9975:388:19",
													"nodeType": "YulBlock",
													"src": "9975:388:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "10021:83:19",
																"nodeType": "YulBlock",
																"src": "10021:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10023:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "10023:77:19"
																			},
																			"nativeSrc": "10023:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10023:79:19"
																		},
																		"nativeSrc": "10023:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "10023:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9996:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9996:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10005:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "10005:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9992:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9992:3:19"
																		},
																		"nativeSrc": "9992:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9992:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10017:2:19",
																		"nodeType": "YulLiteral",
																		"src": "10017:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9988:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9988:3:19"
																},
																"nativeSrc": "9988:32:19",
																"nodeType": "YulFunctionCall",
																"src": "9988:32:19"
															},
															"nativeSrc": "9985:119:19",
															"nodeType": "YulIf",
															"src": "9985:119:19"
														},
														{
															"nativeSrc": "10114:117:19",
															"nodeType": "YulBlock",
															"src": "10114:117:19",
															"statements": [
																{
																	"nativeSrc": "10129:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10129:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10143:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10143:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10133:6:19",
																			"nodeType": "YulTypedName",
																			"src": "10133:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10158:63:19",
																	"nodeType": "YulAssignment",
																	"src": "10158:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10193:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "10193:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10204:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "10204:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10189:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "10189:3:19"
																				},
																				"nativeSrc": "10189:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "10189:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10213:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "10213:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10168:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "10168:20:19"
																		},
																		"nativeSrc": "10168:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10168:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10158:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "10158:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10241:115:19",
															"nodeType": "YulBlock",
															"src": "10241:115:19",
															"statements": [
																{
																	"nativeSrc": "10256:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10256:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10270:2:19",
																		"nodeType": "YulLiteral",
																		"src": "10270:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10260:6:19",
																			"nodeType": "YulTypedName",
																			"src": "10260:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10286:60:19",
																	"nodeType": "YulAssignment",
																	"src": "10286:60:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10318:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "10318:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10329:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "10329:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10314:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "10314:3:19"
																				},
																				"nativeSrc": "10314:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "10314:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10338:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "10338:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "10296:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "10296:17:19"
																		},
																		"nativeSrc": "10296:50:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10296:50:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10286:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "10286:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "9895:468:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9937:9:19",
														"nodeType": "YulTypedName",
														"src": "9937:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9948:7:19",
														"nodeType": "YulTypedName",
														"src": "9948:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9960:6:19",
														"nodeType": "YulTypedName",
														"src": "9960:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9968:6:19",
														"nodeType": "YulTypedName",
														"src": "9968:6:19",
														"type": ""
													}
												],
												"src": "9895:468:19"
											},
											{
												"body": {
													"nativeSrc": "10450:61:19",
													"nodeType": "YulBlock",
													"src": "10450:61:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10467:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "10467:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10498:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "10498:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nativeSrc": "10472:25:19",
																			"nodeType": "YulIdentifier",
																			"src": "10472:25:19"
																		},
																		"nativeSrc": "10472:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10472:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10460:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10460:6:19"
																},
																"nativeSrc": "10460:45:19",
																"nodeType": "YulFunctionCall",
																"src": "10460:45:19"
															},
															"nativeSrc": "10460:45:19",
															"nodeType": "YulExpressionStatement",
															"src": "10460:45:19"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nativeSrc": "10369:142:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10438:5:19",
														"nodeType": "YulTypedName",
														"src": "10438:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10445:3:19",
														"nodeType": "YulTypedName",
														"src": "10445:3:19",
														"type": ""
													}
												],
												"src": "10369:142:19"
											},
											{
												"body": {
													"nativeSrc": "10631:140:19",
													"nodeType": "YulBlock",
													"src": "10631:140:19",
													"statements": [
														{
															"nativeSrc": "10641:26:19",
															"nodeType": "YulAssignment",
															"src": "10641:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10653:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "10653:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10664:2:19",
																		"nodeType": "YulLiteral",
																		"src": "10664:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10649:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10649:3:19"
																},
																"nativeSrc": "10649:18:19",
																"nodeType": "YulFunctionCall",
																"src": "10649:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10641:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "10641:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10737:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10737:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10750:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "10750:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10761:1:19",
																				"nodeType": "YulLiteral",
																				"src": "10761:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10746:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10746:3:19"
																		},
																		"nativeSrc": "10746:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10746:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nativeSrc": "10677:59:19",
																	"nodeType": "YulIdentifier",
																	"src": "10677:59:19"
																},
																"nativeSrc": "10677:87:19",
																"nodeType": "YulFunctionCall",
																"src": "10677:87:19"
															},
															"nativeSrc": "10677:87:19",
															"nodeType": "YulExpressionStatement",
															"src": "10677:87:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nativeSrc": "10517:254:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10603:9:19",
														"nodeType": "YulTypedName",
														"src": "10603:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10615:6:19",
														"nodeType": "YulTypedName",
														"src": "10615:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10626:4:19",
														"nodeType": "YulTypedName",
														"src": "10626:4:19",
														"type": ""
													}
												],
												"src": "10517:254:19"
											},
											{
												"body": {
													"nativeSrc": "10843:241:19",
													"nodeType": "YulBlock",
													"src": "10843:241:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "10948:22:19",
																"nodeType": "YulBlock",
																"src": "10948:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10950:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "10950:16:19"
																			},
																			"nativeSrc": "10950:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10950:18:19"
																		},
																		"nativeSrc": "10950:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "10950:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10920:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10920:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10928:18:19",
																		"nodeType": "YulLiteral",
																		"src": "10928:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10917:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "10917:2:19"
																},
																"nativeSrc": "10917:30:19",
																"nodeType": "YulFunctionCall",
																"src": "10917:30:19"
															},
															"nativeSrc": "10914:56:19",
															"nodeType": "YulIf",
															"src": "10914:56:19"
														},
														{
															"nativeSrc": "10980:37:19",
															"nodeType": "YulAssignment",
															"src": "10980:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11010:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11010:6:19"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "10988:21:19",
																	"nodeType": "YulIdentifier",
																	"src": "10988:21:19"
																},
																"nativeSrc": "10988:29:19",
																"nodeType": "YulFunctionCall",
																"src": "10988:29:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10980:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "10980:4:19"
																}
															]
														},
														{
															"nativeSrc": "11054:23:19",
															"nodeType": "YulAssignment",
															"src": "11054:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "11066:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "11066:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11072:4:19",
																		"nodeType": "YulLiteral",
																		"src": "11072:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11062:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11062:3:19"
																},
																"nativeSrc": "11062:15:19",
																"nodeType": "YulFunctionCall",
																"src": "11062:15:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "11054:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "11054:4:19"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "10777:307:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10827:6:19",
														"nodeType": "YulTypedName",
														"src": "10827:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10838:4:19",
														"nodeType": "YulTypedName",
														"src": "10838:4:19",
														"type": ""
													}
												],
												"src": "10777:307:19"
											},
											{
												"body": {
													"nativeSrc": "11173:340:19",
													"nodeType": "YulBlock",
													"src": "11173:340:19",
													"statements": [
														{
															"nativeSrc": "11183:74:19",
															"nodeType": "YulAssignment",
															"src": "11183:74:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11249:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "11249:6:19"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "11208:40:19",
																			"nodeType": "YulIdentifier",
																			"src": "11208:40:19"
																		},
																		"nativeSrc": "11208:48:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11208:48:19"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "11192:15:19",
																	"nodeType": "YulIdentifier",
																	"src": "11192:15:19"
																},
																"nativeSrc": "11192:65:19",
																"nodeType": "YulFunctionCall",
																"src": "11192:65:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11183:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "11183:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11273:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "11273:5:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11280:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11280:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11266:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "11266:6:19"
																},
																"nativeSrc": "11266:21:19",
																"nodeType": "YulFunctionCall",
																"src": "11266:21:19"
															},
															"nativeSrc": "11266:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "11266:21:19"
														},
														{
															"nativeSrc": "11296:27:19",
															"nodeType": "YulVariableDeclaration",
															"src": "11296:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11311:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "11311:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11318:4:19",
																		"nodeType": "YulLiteral",
																		"src": "11318:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11307:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11307:3:19"
																},
																"nativeSrc": "11307:16:19",
																"nodeType": "YulFunctionCall",
																"src": "11307:16:19"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "11300:3:19",
																	"nodeType": "YulTypedName",
																	"src": "11300:3:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11361:83:19",
																"nodeType": "YulBlock",
																"src": "11361:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "11363:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "11363:77:19"
																			},
																			"nativeSrc": "11363:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "11363:79:19"
																		},
																		"nativeSrc": "11363:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "11363:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "11342:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "11342:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "11347:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "11347:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11338:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11338:3:19"
																		},
																		"nativeSrc": "11338:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11338:16:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11356:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "11356:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11335:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "11335:2:19"
																},
																"nativeSrc": "11335:25:19",
																"nodeType": "YulFunctionCall",
																"src": "11335:25:19"
															},
															"nativeSrc": "11332:112:19",
															"nodeType": "YulIf",
															"src": "11332:112:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "11490:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "11490:3:19"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "11495:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "11495:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11500:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11500:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "11453:36:19",
																	"nodeType": "YulIdentifier",
																	"src": "11453:36:19"
																},
																"nativeSrc": "11453:54:19",
																"nodeType": "YulFunctionCall",
																"src": "11453:54:19"
															},
															"nativeSrc": "11453:54:19",
															"nodeType": "YulExpressionStatement",
															"src": "11453:54:19"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "11090:423:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "11146:3:19",
														"nodeType": "YulTypedName",
														"src": "11146:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11151:6:19",
														"nodeType": "YulTypedName",
														"src": "11151:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11159:3:19",
														"nodeType": "YulTypedName",
														"src": "11159:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11167:5:19",
														"nodeType": "YulTypedName",
														"src": "11167:5:19",
														"type": ""
													}
												],
												"src": "11090:423:19"
											},
											{
												"body": {
													"nativeSrc": "11593:277:19",
													"nodeType": "YulBlock",
													"src": "11593:277:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "11642:83:19",
																"nodeType": "YulBlock",
																"src": "11642:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11644:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "11644:77:19"
																			},
																			"nativeSrc": "11644:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "11644:79:19"
																		},
																		"nativeSrc": "11644:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "11644:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11621:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "11621:6:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11629:4:19",
																						"nodeType": "YulLiteral",
																						"src": "11629:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11617:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "11617:3:19"
																				},
																				"nativeSrc": "11617:17:19",
																				"nodeType": "YulFunctionCall",
																				"src": "11617:17:19"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11636:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "11636:3:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11613:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11613:3:19"
																		},
																		"nativeSrc": "11613:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11613:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11606:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "11606:6:19"
																},
																"nativeSrc": "11606:35:19",
																"nodeType": "YulFunctionCall",
																"src": "11606:35:19"
															},
															"nativeSrc": "11603:122:19",
															"nodeType": "YulIf",
															"src": "11603:122:19"
														},
														{
															"nativeSrc": "11734:34:19",
															"nodeType": "YulVariableDeclaration",
															"src": "11734:34:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11761:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11761:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11748:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "11748:12:19"
																},
																"nativeSrc": "11748:20:19",
																"nodeType": "YulFunctionCall",
																"src": "11748:20:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11738:6:19",
																	"nodeType": "YulTypedName",
																	"src": "11738:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11777:87:19",
															"nodeType": "YulAssignment",
															"src": "11777:87:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11837:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "11837:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11845:4:19",
																				"nodeType": "YulLiteral",
																				"src": "11845:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11833:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11833:3:19"
																		},
																		"nativeSrc": "11833:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11833:17:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11852:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11852:6:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11860:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "11860:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "11786:46:19",
																	"nodeType": "YulIdentifier",
																	"src": "11786:46:19"
																},
																"nativeSrc": "11786:78:19",
																"nodeType": "YulFunctionCall",
																"src": "11786:78:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11777:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "11777:5:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "11532:338:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11571:6:19",
														"nodeType": "YulTypedName",
														"src": "11571:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11579:3:19",
														"nodeType": "YulTypedName",
														"src": "11579:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11587:5:19",
														"nodeType": "YulTypedName",
														"src": "11587:5:19",
														"type": ""
													}
												],
												"src": "11532:338:19"
											},
											{
												"body": {
													"nativeSrc": "12002:817:19",
													"nodeType": "YulBlock",
													"src": "12002:817:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "12049:83:19",
																"nodeType": "YulBlock",
																"src": "12049:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12051:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "12051:77:19"
																			},
																			"nativeSrc": "12051:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "12051:79:19"
																		},
																		"nativeSrc": "12051:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "12051:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12023:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "12023:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12032:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "12032:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12019:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12019:3:19"
																		},
																		"nativeSrc": "12019:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12019:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12044:3:19",
																		"nodeType": "YulLiteral",
																		"src": "12044:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12015:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "12015:3:19"
																},
																"nativeSrc": "12015:33:19",
																"nodeType": "YulFunctionCall",
																"src": "12015:33:19"
															},
															"nativeSrc": "12012:120:19",
															"nodeType": "YulIf",
															"src": "12012:120:19"
														},
														{
															"nativeSrc": "12142:117:19",
															"nodeType": "YulBlock",
															"src": "12142:117:19",
															"statements": [
																{
																	"nativeSrc": "12157:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12157:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12171:1:19",
																		"nodeType": "YulLiteral",
																		"src": "12171:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12161:6:19",
																			"nodeType": "YulTypedName",
																			"src": "12161:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12186:63:19",
																	"nodeType": "YulAssignment",
																	"src": "12186:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12221:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "12221:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12232:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "12232:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12217:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "12217:3:19"
																				},
																				"nativeSrc": "12217:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "12217:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12241:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "12241:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12196:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "12196:20:19"
																		},
																		"nativeSrc": "12196:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12196:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12186:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "12186:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12269:118:19",
															"nodeType": "YulBlock",
															"src": "12269:118:19",
															"statements": [
																{
																	"nativeSrc": "12284:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12284:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12298:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12298:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12288:6:19",
																			"nodeType": "YulTypedName",
																			"src": "12288:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12314:63:19",
																	"nodeType": "YulAssignment",
																	"src": "12314:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12349:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "12349:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12360:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "12360:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12345:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "12345:3:19"
																				},
																				"nativeSrc": "12345:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "12345:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12369:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "12369:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12324:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "12324:20:19"
																		},
																		"nativeSrc": "12324:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12324:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12314:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "12314:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12397:118:19",
															"nodeType": "YulBlock",
															"src": "12397:118:19",
															"statements": [
																{
																	"nativeSrc": "12412:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12412:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12426:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12426:2:19",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12416:6:19",
																			"nodeType": "YulTypedName",
																			"src": "12416:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12442:63:19",
																	"nodeType": "YulAssignment",
																	"src": "12442:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12477:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "12477:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12488:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "12488:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12473:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "12473:3:19"
																				},
																				"nativeSrc": "12473:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "12473:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12497:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "12497:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12452:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "12452:20:19"
																		},
																		"nativeSrc": "12452:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12452:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "12442:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "12442:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12525:287:19",
															"nodeType": "YulBlock",
															"src": "12525:287:19",
															"statements": [
																{
																	"nativeSrc": "12540:46:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12540:46:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12571:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "12571:9:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12582:2:19",
																						"nodeType": "YulLiteral",
																						"src": "12582:2:19",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12567:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "12567:3:19"
																				},
																				"nativeSrc": "12567:18:19",
																				"nodeType": "YulFunctionCall",
																				"src": "12567:18:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12554:12:19",
																			"nodeType": "YulIdentifier",
																			"src": "12554:12:19"
																		},
																		"nativeSrc": "12554:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12554:32:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12544:6:19",
																			"nodeType": "YulTypedName",
																			"src": "12544:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12633:83:19",
																		"nodeType": "YulBlock",
																		"src": "12633:83:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12635:77:19",
																						"nodeType": "YulIdentifier",
																						"src": "12635:77:19"
																					},
																					"nativeSrc": "12635:79:19",
																					"nodeType": "YulFunctionCall",
																					"src": "12635:79:19"
																				},
																				"nativeSrc": "12635:79:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "12635:79:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12605:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "12605:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12613:18:19",
																				"nodeType": "YulLiteral",
																				"src": "12613:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12602:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "12602:2:19"
																		},
																		"nativeSrc": "12602:30:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12602:30:19"
																	},
																	"nativeSrc": "12599:117:19",
																	"nodeType": "YulIf",
																	"src": "12599:117:19"
																},
																{
																	"nativeSrc": "12730:72:19",
																	"nodeType": "YulAssignment",
																	"src": "12730:72:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12774:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "12774:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12785:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "12785:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12770:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "12770:3:19"
																				},
																				"nativeSrc": "12770:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "12770:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12794:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "12794:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "12740:29:19",
																			"nodeType": "YulIdentifier",
																			"src": "12740:29:19"
																		},
																		"nativeSrc": "12740:62:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12740:62:19"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "12730:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "12730:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "11876:943:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11948:9:19",
														"nodeType": "YulTypedName",
														"src": "11948:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11959:7:19",
														"nodeType": "YulTypedName",
														"src": "11959:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11971:6:19",
														"nodeType": "YulTypedName",
														"src": "11971:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11979:6:19",
														"nodeType": "YulTypedName",
														"src": "11979:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11987:6:19",
														"nodeType": "YulTypedName",
														"src": "11987:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11995:6:19",
														"nodeType": "YulTypedName",
														"src": "11995:6:19",
														"type": ""
													}
												],
												"src": "11876:943:19"
											},
											{
												"body": {
													"nativeSrc": "12916:399:19",
													"nodeType": "YulBlock",
													"src": "12916:399:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "12962:83:19",
																"nodeType": "YulBlock",
																"src": "12962:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12964:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "12964:77:19"
																			},
																			"nativeSrc": "12964:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "12964:79:19"
																		},
																		"nativeSrc": "12964:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "12964:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12937:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "12937:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12946:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "12946:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12933:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12933:3:19"
																		},
																		"nativeSrc": "12933:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12933:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12958:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12958:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12929:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "12929:3:19"
																},
																"nativeSrc": "12929:32:19",
																"nodeType": "YulFunctionCall",
																"src": "12929:32:19"
															},
															"nativeSrc": "12926:119:19",
															"nodeType": "YulIf",
															"src": "12926:119:19"
														},
														{
															"nativeSrc": "13055:117:19",
															"nodeType": "YulBlock",
															"src": "13055:117:19",
															"statements": [
																{
																	"nativeSrc": "13070:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13070:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13084:1:19",
																		"nodeType": "YulLiteral",
																		"src": "13084:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13074:6:19",
																			"nodeType": "YulTypedName",
																			"src": "13074:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13099:63:19",
																	"nodeType": "YulAssignment",
																	"src": "13099:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13134:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "13134:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13145:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "13145:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13130:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "13130:3:19"
																				},
																				"nativeSrc": "13130:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "13130:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13154:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "13154:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "13109:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "13109:20:19"
																		},
																		"nativeSrc": "13109:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13109:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13099:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "13099:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13182:126:19",
															"nodeType": "YulBlock",
															"src": "13182:126:19",
															"statements": [
																{
																	"nativeSrc": "13197:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13197:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13211:2:19",
																		"nodeType": "YulLiteral",
																		"src": "13211:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13201:6:19",
																			"nodeType": "YulTypedName",
																			"src": "13201:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13227:71:19",
																	"nodeType": "YulAssignment",
																	"src": "13227:71:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13270:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "13270:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13281:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "13281:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13266:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "13266:3:19"
																				},
																				"nativeSrc": "13266:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "13266:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13290:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "13290:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nativeSrc": "13237:28:19",
																			"nodeType": "YulIdentifier",
																			"src": "13237:28:19"
																		},
																		"nativeSrc": "13237:61:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13237:61:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13227:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "13227:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address_payable",
												"nativeSrc": "12825:490:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12878:9:19",
														"nodeType": "YulTypedName",
														"src": "12878:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12889:7:19",
														"nodeType": "YulTypedName",
														"src": "12889:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12901:6:19",
														"nodeType": "YulTypedName",
														"src": "12901:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12909:6:19",
														"nodeType": "YulTypedName",
														"src": "12909:6:19",
														"type": ""
													}
												],
												"src": "12825:490:19"
											},
											{
												"body": {
													"nativeSrc": "13404:391:19",
													"nodeType": "YulBlock",
													"src": "13404:391:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "13450:83:19",
																"nodeType": "YulBlock",
																"src": "13450:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13452:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "13452:77:19"
																			},
																			"nativeSrc": "13452:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "13452:79:19"
																		},
																		"nativeSrc": "13452:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "13452:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13425:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "13425:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13434:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "13434:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13421:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13421:3:19"
																		},
																		"nativeSrc": "13421:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13421:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13446:2:19",
																		"nodeType": "YulLiteral",
																		"src": "13446:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13417:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13417:3:19"
																},
																"nativeSrc": "13417:32:19",
																"nodeType": "YulFunctionCall",
																"src": "13417:32:19"
															},
															"nativeSrc": "13414:119:19",
															"nodeType": "YulIf",
															"src": "13414:119:19"
														},
														{
															"nativeSrc": "13543:117:19",
															"nodeType": "YulBlock",
															"src": "13543:117:19",
															"statements": [
																{
																	"nativeSrc": "13558:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13558:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13572:1:19",
																		"nodeType": "YulLiteral",
																		"src": "13572:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13562:6:19",
																			"nodeType": "YulTypedName",
																			"src": "13562:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13587:63:19",
																	"nodeType": "YulAssignment",
																	"src": "13587:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13622:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "13622:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13633:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "13633:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13618:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "13618:3:19"
																				},
																				"nativeSrc": "13618:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "13618:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13642:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "13642:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13597:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "13597:20:19"
																		},
																		"nativeSrc": "13597:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13597:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13587:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "13587:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13670:118:19",
															"nodeType": "YulBlock",
															"src": "13670:118:19",
															"statements": [
																{
																	"nativeSrc": "13685:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13685:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13699:2:19",
																		"nodeType": "YulLiteral",
																		"src": "13699:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13689:6:19",
																			"nodeType": "YulTypedName",
																			"src": "13689:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13715:63:19",
																	"nodeType": "YulAssignment",
																	"src": "13715:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13750:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "13750:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13761:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "13761:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13746:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "13746:3:19"
																				},
																				"nativeSrc": "13746:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "13746:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13770:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "13770:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13725:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "13725:20:19"
																		},
																		"nativeSrc": "13725:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13725:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13715:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "13715:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "13321:474:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13366:9:19",
														"nodeType": "YulTypedName",
														"src": "13366:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13377:7:19",
														"nodeType": "YulTypedName",
														"src": "13377:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13389:6:19",
														"nodeType": "YulTypedName",
														"src": "13389:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13397:6:19",
														"nodeType": "YulTypedName",
														"src": "13397:6:19",
														"type": ""
													}
												],
												"src": "13321:474:19"
											},
											{
												"body": {
													"nativeSrc": "13829:152:19",
													"nodeType": "YulBlock",
													"src": "13829:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13846:1:19",
																		"nodeType": "YulLiteral",
																		"src": "13846:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13849:77:19",
																		"nodeType": "YulLiteral",
																		"src": "13849:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13839:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13839:6:19"
																},
																"nativeSrc": "13839:88:19",
																"nodeType": "YulFunctionCall",
																"src": "13839:88:19"
															},
															"nativeSrc": "13839:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "13839:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13943:1:19",
																		"nodeType": "YulLiteral",
																		"src": "13943:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13946:4:19",
																		"nodeType": "YulLiteral",
																		"src": "13946:4:19",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13936:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13936:6:19"
																},
																"nativeSrc": "13936:15:19",
																"nodeType": "YulFunctionCall",
																"src": "13936:15:19"
															},
															"nativeSrc": "13936:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "13936:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13967:1:19",
																		"nodeType": "YulLiteral",
																		"src": "13967:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13970:4:19",
																		"nodeType": "YulLiteral",
																		"src": "13970:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13960:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13960:6:19"
																},
																"nativeSrc": "13960:15:19",
																"nodeType": "YulFunctionCall",
																"src": "13960:15:19"
															},
															"nativeSrc": "13960:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "13960:15:19"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "13801:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "13801:180:19"
											},
											{
												"body": {
													"nativeSrc": "14038:269:19",
													"nodeType": "YulBlock",
													"src": "14038:269:19",
													"statements": [
														{
															"nativeSrc": "14048:22:19",
															"nodeType": "YulAssignment",
															"src": "14048:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14062:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "14062:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14068:1:19",
																		"nodeType": "YulLiteral",
																		"src": "14068:1:19",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14058:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14058:3:19"
																},
																"nativeSrc": "14058:12:19",
																"nodeType": "YulFunctionCall",
																"src": "14058:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14048:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "14048:6:19"
																}
															]
														},
														{
															"nativeSrc": "14079:38:19",
															"nodeType": "YulVariableDeclaration",
															"src": "14079:38:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14109:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "14109:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14115:1:19",
																		"nodeType": "YulLiteral",
																		"src": "14115:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14105:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14105:3:19"
																},
																"nativeSrc": "14105:12:19",
																"nodeType": "YulFunctionCall",
																"src": "14105:12:19"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "14083:18:19",
																	"nodeType": "YulTypedName",
																	"src": "14083:18:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14156:51:19",
																"nodeType": "YulBlock",
																"src": "14156:51:19",
																"statements": [
																	{
																		"nativeSrc": "14170:27:19",
																		"nodeType": "YulAssignment",
																		"src": "14170:27:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "14184:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "14184:6:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14192:4:19",
																					"nodeType": "YulLiteral",
																					"src": "14192:4:19",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "14180:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "14180:3:19"
																			},
																			"nativeSrc": "14180:17:19",
																			"nodeType": "YulFunctionCall",
																			"src": "14180:17:19"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "14170:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "14170:6:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "14136:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "14136:18:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14129:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "14129:6:19"
																},
																"nativeSrc": "14129:26:19",
																"nodeType": "YulFunctionCall",
																"src": "14129:26:19"
															},
															"nativeSrc": "14126:81:19",
															"nodeType": "YulIf",
															"src": "14126:81:19"
														},
														{
															"body": {
																"nativeSrc": "14259:42:19",
																"nodeType": "YulBlock",
																"src": "14259:42:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "14273:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "14273:16:19"
																			},
																			"nativeSrc": "14273:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "14273:18:19"
																		},
																		"nativeSrc": "14273:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "14273:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "14223:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "14223:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "14246:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "14246:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14254:2:19",
																				"nodeType": "YulLiteral",
																				"src": "14254:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "14243:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "14243:2:19"
																		},
																		"nativeSrc": "14243:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14243:14:19"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "14220:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "14220:2:19"
																},
																"nativeSrc": "14220:38:19",
																"nodeType": "YulFunctionCall",
																"src": "14220:38:19"
															},
															"nativeSrc": "14217:84:19",
															"nodeType": "YulIf",
															"src": "14217:84:19"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "13987:320:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "14022:4:19",
														"nodeType": "YulTypedName",
														"src": "14022:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "14031:6:19",
														"nodeType": "YulTypedName",
														"src": "14031:6:19",
														"type": ""
													}
												],
												"src": "13987:320:19"
											},
											{
												"body": {
													"nativeSrc": "14467:288:19",
													"nodeType": "YulBlock",
													"src": "14467:288:19",
													"statements": [
														{
															"nativeSrc": "14477:26:19",
															"nodeType": "YulAssignment",
															"src": "14477:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14489:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "14489:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14500:2:19",
																		"nodeType": "YulLiteral",
																		"src": "14500:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14485:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14485:3:19"
																},
																"nativeSrc": "14485:18:19",
																"nodeType": "YulFunctionCall",
																"src": "14485:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14477:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "14477:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14557:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "14557:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14570:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14570:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14581:1:19",
																				"nodeType": "YulLiteral",
																				"src": "14581:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14566:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14566:3:19"
																		},
																		"nativeSrc": "14566:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14566:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14513:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "14513:43:19"
																},
																"nativeSrc": "14513:71:19",
																"nodeType": "YulFunctionCall",
																"src": "14513:71:19"
															},
															"nativeSrc": "14513:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "14513:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14638:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "14638:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14651:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14651:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14662:2:19",
																				"nodeType": "YulLiteral",
																				"src": "14662:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14647:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14647:3:19"
																		},
																		"nativeSrc": "14647:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14647:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14594:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "14594:43:19"
																},
																"nativeSrc": "14594:72:19",
																"nodeType": "YulFunctionCall",
																"src": "14594:72:19"
															},
															"nativeSrc": "14594:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "14594:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14720:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "14720:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14733:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14733:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14744:2:19",
																				"nodeType": "YulLiteral",
																				"src": "14744:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14729:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14729:3:19"
																		},
																		"nativeSrc": "14729:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14729:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14676:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "14676:43:19"
																},
																"nativeSrc": "14676:72:19",
																"nodeType": "YulFunctionCall",
																"src": "14676:72:19"
															},
															"nativeSrc": "14676:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "14676:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "14313:442:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14423:9:19",
														"nodeType": "YulTypedName",
														"src": "14423:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14435:6:19",
														"nodeType": "YulTypedName",
														"src": "14435:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14443:6:19",
														"nodeType": "YulTypedName",
														"src": "14443:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14451:6:19",
														"nodeType": "YulTypedName",
														"src": "14451:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14462:4:19",
														"nodeType": "YulTypedName",
														"src": "14462:4:19",
														"type": ""
													}
												],
												"src": "14313:442:19"
											},
											{
												"body": {
													"nativeSrc": "14867:66:19",
													"nodeType": "YulBlock",
													"src": "14867:66:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14889:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "14889:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14897:1:19",
																				"nodeType": "YulLiteral",
																				"src": "14897:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14885:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14885:3:19"
																		},
																		"nativeSrc": "14885:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14885:14:19"
																	},
																	{
																		"hexValue": "4e6f2062616c616e636520746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "14901:24:19",
																		"nodeType": "YulLiteral",
																		"src": "14901:24:19",
																		"type": "",
																		"value": "No balance to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14878:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "14878:6:19"
																},
																"nativeSrc": "14878:48:19",
																"nodeType": "YulFunctionCall",
																"src": "14878:48:19"
															},
															"nativeSrc": "14878:48:19",
															"nodeType": "YulExpressionStatement",
															"src": "14878:48:19"
														}
													]
												},
												"name": "store_literal_in_memory_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5",
												"nativeSrc": "14761:172:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14859:6:19",
														"nodeType": "YulTypedName",
														"src": "14859:6:19",
														"type": ""
													}
												],
												"src": "14761:172:19"
											},
											{
												"body": {
													"nativeSrc": "15085:220:19",
													"nodeType": "YulBlock",
													"src": "15085:220:19",
													"statements": [
														{
															"nativeSrc": "15095:74:19",
															"nodeType": "YulAssignment",
															"src": "15095:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15161:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "15161:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15166:2:19",
																		"nodeType": "YulLiteral",
																		"src": "15166:2:19",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15102:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "15102:58:19"
																},
																"nativeSrc": "15102:67:19",
																"nodeType": "YulFunctionCall",
																"src": "15102:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15095:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15095:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15267:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "15267:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5",
																	"nativeSrc": "15178:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "15178:88:19"
																},
																"nativeSrc": "15178:93:19",
																"nodeType": "YulFunctionCall",
																"src": "15178:93:19"
															},
															"nativeSrc": "15178:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "15178:93:19"
														},
														{
															"nativeSrc": "15280:19:19",
															"nodeType": "YulAssignment",
															"src": "15280:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15291:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "15291:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15296:2:19",
																		"nodeType": "YulLiteral",
																		"src": "15296:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15287:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15287:3:19"
																},
																"nativeSrc": "15287:12:19",
																"nodeType": "YulFunctionCall",
																"src": "15287:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15280:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15280:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14939:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15073:3:19",
														"nodeType": "YulTypedName",
														"src": "15073:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15081:3:19",
														"nodeType": "YulTypedName",
														"src": "15081:3:19",
														"type": ""
													}
												],
												"src": "14939:366:19"
											},
											{
												"body": {
													"nativeSrc": "15482:248:19",
													"nodeType": "YulBlock",
													"src": "15482:248:19",
													"statements": [
														{
															"nativeSrc": "15492:26:19",
															"nodeType": "YulAssignment",
															"src": "15492:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15504:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "15504:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15515:2:19",
																		"nodeType": "YulLiteral",
																		"src": "15515:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15500:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15500:3:19"
																},
																"nativeSrc": "15500:18:19",
																"nodeType": "YulFunctionCall",
																"src": "15500:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15492:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "15492:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15539:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "15539:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15550:1:19",
																				"nodeType": "YulLiteral",
																				"src": "15550:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15535:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15535:3:19"
																		},
																		"nativeSrc": "15535:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15535:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15558:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "15558:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15564:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "15564:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15554:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15554:3:19"
																		},
																		"nativeSrc": "15554:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15554:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15528:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "15528:6:19"
																},
																"nativeSrc": "15528:47:19",
																"nodeType": "YulFunctionCall",
																"src": "15528:47:19"
															},
															"nativeSrc": "15528:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "15528:47:19"
														},
														{
															"nativeSrc": "15584:139:19",
															"nodeType": "YulAssignment",
															"src": "15584:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15718:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "15718:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15592:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "15592:124:19"
																},
																"nativeSrc": "15592:131:19",
																"nodeType": "YulFunctionCall",
																"src": "15592:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15584:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "15584:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15311:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15462:9:19",
														"nodeType": "YulTypedName",
														"src": "15462:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15477:4:19",
														"nodeType": "YulTypedName",
														"src": "15477:4:19",
														"type": ""
													}
												],
												"src": "15311:419:19"
											},
											{
												"body": {
													"nativeSrc": "15842:68:19",
													"nodeType": "YulBlock",
													"src": "15842:68:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15864:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "15864:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15872:1:19",
																				"nodeType": "YulLiteral",
																				"src": "15872:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15860:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15860:3:19"
																		},
																		"nativeSrc": "15860:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15860:14:19"
																	},
																	{
																		"hexValue": "4e6f7420746865207061796d656e74207265636569766572",
																		"kind": "string",
																		"nativeSrc": "15876:26:19",
																		"nodeType": "YulLiteral",
																		"src": "15876:26:19",
																		"type": "",
																		"value": "Not the payment receiver"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15853:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "15853:6:19"
																},
																"nativeSrc": "15853:50:19",
																"nodeType": "YulFunctionCall",
																"src": "15853:50:19"
															},
															"nativeSrc": "15853:50:19",
															"nodeType": "YulExpressionStatement",
															"src": "15853:50:19"
														}
													]
												},
												"name": "store_literal_in_memory_cf616f29bbf2da0f655773e6b1629cda188a288c705b27a3713e96ee928d9c47",
												"nativeSrc": "15736:174:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15834:6:19",
														"nodeType": "YulTypedName",
														"src": "15834:6:19",
														"type": ""
													}
												],
												"src": "15736:174:19"
											},
											{
												"body": {
													"nativeSrc": "16062:220:19",
													"nodeType": "YulBlock",
													"src": "16062:220:19",
													"statements": [
														{
															"nativeSrc": "16072:74:19",
															"nodeType": "YulAssignment",
															"src": "16072:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16138:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "16138:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16143:2:19",
																		"nodeType": "YulLiteral",
																		"src": "16143:2:19",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16079:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "16079:58:19"
																},
																"nativeSrc": "16079:67:19",
																"nodeType": "YulFunctionCall",
																"src": "16079:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16072:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16072:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16244:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "16244:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cf616f29bbf2da0f655773e6b1629cda188a288c705b27a3713e96ee928d9c47",
																	"nativeSrc": "16155:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "16155:88:19"
																},
																"nativeSrc": "16155:93:19",
																"nodeType": "YulFunctionCall",
																"src": "16155:93:19"
															},
															"nativeSrc": "16155:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "16155:93:19"
														},
														{
															"nativeSrc": "16257:19:19",
															"nodeType": "YulAssignment",
															"src": "16257:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16268:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "16268:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16273:2:19",
																		"nodeType": "YulLiteral",
																		"src": "16273:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16264:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16264:3:19"
																},
																"nativeSrc": "16264:12:19",
																"nodeType": "YulFunctionCall",
																"src": "16264:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16257:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16257:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cf616f29bbf2da0f655773e6b1629cda188a288c705b27a3713e96ee928d9c47_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15916:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16050:3:19",
														"nodeType": "YulTypedName",
														"src": "16050:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16058:3:19",
														"nodeType": "YulTypedName",
														"src": "16058:3:19",
														"type": ""
													}
												],
												"src": "15916:366:19"
											},
											{
												"body": {
													"nativeSrc": "16459:248:19",
													"nodeType": "YulBlock",
													"src": "16459:248:19",
													"statements": [
														{
															"nativeSrc": "16469:26:19",
															"nodeType": "YulAssignment",
															"src": "16469:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16481:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "16481:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16492:2:19",
																		"nodeType": "YulLiteral",
																		"src": "16492:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16477:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16477:3:19"
																},
																"nativeSrc": "16477:18:19",
																"nodeType": "YulFunctionCall",
																"src": "16477:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16469:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "16469:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16516:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "16516:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16527:1:19",
																				"nodeType": "YulLiteral",
																				"src": "16527:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16512:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16512:3:19"
																		},
																		"nativeSrc": "16512:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16512:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16535:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "16535:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16541:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "16541:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16531:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16531:3:19"
																		},
																		"nativeSrc": "16531:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16531:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16505:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "16505:6:19"
																},
																"nativeSrc": "16505:47:19",
																"nodeType": "YulFunctionCall",
																"src": "16505:47:19"
															},
															"nativeSrc": "16505:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "16505:47:19"
														},
														{
															"nativeSrc": "16561:139:19",
															"nodeType": "YulAssignment",
															"src": "16561:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16695:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "16695:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cf616f29bbf2da0f655773e6b1629cda188a288c705b27a3713e96ee928d9c47_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16569:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "16569:124:19"
																},
																"nativeSrc": "16569:131:19",
																"nodeType": "YulFunctionCall",
																"src": "16569:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16561:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "16561:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cf616f29bbf2da0f655773e6b1629cda188a288c705b27a3713e96ee928d9c47__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16288:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16439:9:19",
														"nodeType": "YulTypedName",
														"src": "16439:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16454:4:19",
														"nodeType": "YulTypedName",
														"src": "16454:4:19",
														"type": ""
													}
												],
												"src": "16288:419:19"
											},
											{
												"body": {
													"nativeSrc": "16819:117:19",
													"nodeType": "YulBlock",
													"src": "16819:117:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16841:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "16841:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16849:1:19",
																				"nodeType": "YulLiteral",
																				"src": "16849:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16837:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16837:3:19"
																		},
																		"nativeSrc": "16837:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16837:14:19"
																	},
																	{
																		"hexValue": "5072696365206d7573742062652067726561746572207468616e206d696e7450",
																		"kind": "string",
																		"nativeSrc": "16853:34:19",
																		"nodeType": "YulLiteral",
																		"src": "16853:34:19",
																		"type": "",
																		"value": "Price must be greater than mintP"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16830:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "16830:6:19"
																},
																"nativeSrc": "16830:58:19",
																"nodeType": "YulFunctionCall",
																"src": "16830:58:19"
															},
															"nativeSrc": "16830:58:19",
															"nodeType": "YulExpressionStatement",
															"src": "16830:58:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16909:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "16909:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16917:2:19",
																				"nodeType": "YulLiteral",
																				"src": "16917:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16905:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16905:3:19"
																		},
																		"nativeSrc": "16905:15:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16905:15:19"
																	},
																	{
																		"hexValue": "72696365",
																		"kind": "string",
																		"nativeSrc": "16922:6:19",
																		"nodeType": "YulLiteral",
																		"src": "16922:6:19",
																		"type": "",
																		"value": "rice"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16898:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "16898:6:19"
																},
																"nativeSrc": "16898:31:19",
																"nodeType": "YulFunctionCall",
																"src": "16898:31:19"
															},
															"nativeSrc": "16898:31:19",
															"nodeType": "YulExpressionStatement",
															"src": "16898:31:19"
														}
													]
												},
												"name": "store_literal_in_memory_9a5e950ca93becddd09d65f9483491477a3ef6c5b9e7978b524dc1807f938867",
												"nativeSrc": "16713:223:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16811:6:19",
														"nodeType": "YulTypedName",
														"src": "16811:6:19",
														"type": ""
													}
												],
												"src": "16713:223:19"
											},
											{
												"body": {
													"nativeSrc": "17088:220:19",
													"nodeType": "YulBlock",
													"src": "17088:220:19",
													"statements": [
														{
															"nativeSrc": "17098:74:19",
															"nodeType": "YulAssignment",
															"src": "17098:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17164:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "17164:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17169:2:19",
																		"nodeType": "YulLiteral",
																		"src": "17169:2:19",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17105:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "17105:58:19"
																},
																"nativeSrc": "17105:67:19",
																"nodeType": "YulFunctionCall",
																"src": "17105:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17098:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17098:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17270:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "17270:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9a5e950ca93becddd09d65f9483491477a3ef6c5b9e7978b524dc1807f938867",
																	"nativeSrc": "17181:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "17181:88:19"
																},
																"nativeSrc": "17181:93:19",
																"nodeType": "YulFunctionCall",
																"src": "17181:93:19"
															},
															"nativeSrc": "17181:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "17181:93:19"
														},
														{
															"nativeSrc": "17283:19:19",
															"nodeType": "YulAssignment",
															"src": "17283:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17294:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "17294:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17299:2:19",
																		"nodeType": "YulLiteral",
																		"src": "17299:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17290:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17290:3:19"
																},
																"nativeSrc": "17290:12:19",
																"nodeType": "YulFunctionCall",
																"src": "17290:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17283:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17283:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9a5e950ca93becddd09d65f9483491477a3ef6c5b9e7978b524dc1807f938867_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16942:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17076:3:19",
														"nodeType": "YulTypedName",
														"src": "17076:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17084:3:19",
														"nodeType": "YulTypedName",
														"src": "17084:3:19",
														"type": ""
													}
												],
												"src": "16942:366:19"
											},
											{
												"body": {
													"nativeSrc": "17485:248:19",
													"nodeType": "YulBlock",
													"src": "17485:248:19",
													"statements": [
														{
															"nativeSrc": "17495:26:19",
															"nodeType": "YulAssignment",
															"src": "17495:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17507:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "17507:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17518:2:19",
																		"nodeType": "YulLiteral",
																		"src": "17518:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17503:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17503:3:19"
																},
																"nativeSrc": "17503:18:19",
																"nodeType": "YulFunctionCall",
																"src": "17503:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17495:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "17495:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17542:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "17542:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17553:1:19",
																				"nodeType": "YulLiteral",
																				"src": "17553:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17538:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "17538:3:19"
																		},
																		"nativeSrc": "17538:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17538:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17561:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "17561:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17567:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "17567:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17557:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "17557:3:19"
																		},
																		"nativeSrc": "17557:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17557:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17531:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "17531:6:19"
																},
																"nativeSrc": "17531:47:19",
																"nodeType": "YulFunctionCall",
																"src": "17531:47:19"
															},
															"nativeSrc": "17531:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "17531:47:19"
														},
														{
															"nativeSrc": "17587:139:19",
															"nodeType": "YulAssignment",
															"src": "17587:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17721:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "17721:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9a5e950ca93becddd09d65f9483491477a3ef6c5b9e7978b524dc1807f938867_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17595:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "17595:124:19"
																},
																"nativeSrc": "17595:131:19",
																"nodeType": "YulFunctionCall",
																"src": "17595:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17587:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "17587:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9a5e950ca93becddd09d65f9483491477a3ef6c5b9e7978b524dc1807f938867__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17314:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17465:9:19",
														"nodeType": "YulTypedName",
														"src": "17465:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17480:4:19",
														"nodeType": "YulTypedName",
														"src": "17480:4:19",
														"type": ""
													}
												],
												"src": "17314:419:19"
											},
											{
												"body": {
													"nativeSrc": "17767:152:19",
													"nodeType": "YulBlock",
													"src": "17767:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17784:1:19",
																		"nodeType": "YulLiteral",
																		"src": "17784:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17787:77:19",
																		"nodeType": "YulLiteral",
																		"src": "17787:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17777:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "17777:6:19"
																},
																"nativeSrc": "17777:88:19",
																"nodeType": "YulFunctionCall",
																"src": "17777:88:19"
															},
															"nativeSrc": "17777:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "17777:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17881:1:19",
																		"nodeType": "YulLiteral",
																		"src": "17881:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17884:4:19",
																		"nodeType": "YulLiteral",
																		"src": "17884:4:19",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17874:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "17874:6:19"
																},
																"nativeSrc": "17874:15:19",
																"nodeType": "YulFunctionCall",
																"src": "17874:15:19"
															},
															"nativeSrc": "17874:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "17874:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17905:1:19",
																		"nodeType": "YulLiteral",
																		"src": "17905:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17908:4:19",
																		"nodeType": "YulLiteral",
																		"src": "17908:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17898:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "17898:6:19"
																},
																"nativeSrc": "17898:15:19",
																"nodeType": "YulFunctionCall",
																"src": "17898:15:19"
															},
															"nativeSrc": "17898:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "17898:15:19"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "17739:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "17739:180:19"
											},
											{
												"body": {
													"nativeSrc": "17968:190:19",
													"nodeType": "YulBlock",
													"src": "17968:190:19",
													"statements": [
														{
															"nativeSrc": "17978:33:19",
															"nodeType": "YulAssignment",
															"src": "17978:33:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18005:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "18005:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17987:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "17987:17:19"
																},
																"nativeSrc": "17987:24:19",
																"nodeType": "YulFunctionCall",
																"src": "17987:24:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17978:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "17978:5:19"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18101:22:19",
																"nodeType": "YulBlock",
																"src": "18101:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18103:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "18103:16:19"
																			},
																			"nativeSrc": "18103:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "18103:18:19"
																		},
																		"nativeSrc": "18103:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "18103:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18026:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "18026:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18033:66:19",
																		"nodeType": "YulLiteral",
																		"src": "18033:66:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "18023:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "18023:2:19"
																},
																"nativeSrc": "18023:77:19",
																"nodeType": "YulFunctionCall",
																"src": "18023:77:19"
															},
															"nativeSrc": "18020:103:19",
															"nodeType": "YulIf",
															"src": "18020:103:19"
														},
														{
															"nativeSrc": "18132:20:19",
															"nodeType": "YulAssignment",
															"src": "18132:20:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18143:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "18143:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18150:1:19",
																		"nodeType": "YulLiteral",
																		"src": "18150:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18139:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18139:3:19"
																},
																"nativeSrc": "18139:13:19",
																"nodeType": "YulFunctionCall",
																"src": "18139:13:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "18132:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18132:3:19"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "17925:233:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17954:5:19",
														"nodeType": "YulTypedName",
														"src": "17954:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17964:3:19",
														"nodeType": "YulTypedName",
														"src": "17964:3:19",
														"type": ""
													}
												],
												"src": "17925:233:19"
											},
											{
												"body": {
													"nativeSrc": "18310:277:19",
													"nodeType": "YulBlock",
													"src": "18310:277:19",
													"statements": [
														{
															"nativeSrc": "18320:26:19",
															"nodeType": "YulAssignment",
															"src": "18320:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18332:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "18332:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18343:2:19",
																		"nodeType": "YulLiteral",
																		"src": "18343:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18328:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18328:3:19"
																},
																"nativeSrc": "18328:18:19",
																"nodeType": "YulFunctionCall",
																"src": "18328:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18320:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "18320:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18367:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "18367:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18378:1:19",
																				"nodeType": "YulLiteral",
																				"src": "18378:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18363:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "18363:3:19"
																		},
																		"nativeSrc": "18363:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18363:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18386:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "18386:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18392:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "18392:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18382:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "18382:3:19"
																		},
																		"nativeSrc": "18382:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18382:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18356:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "18356:6:19"
																},
																"nativeSrc": "18356:47:19",
																"nodeType": "YulFunctionCall",
																"src": "18356:47:19"
															},
															"nativeSrc": "18356:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "18356:47:19"
														},
														{
															"nativeSrc": "18412:86:19",
															"nodeType": "YulAssignment",
															"src": "18412:86:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18484:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "18484:6:19"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "18493:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "18493:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18420:63:19",
																	"nodeType": "YulIdentifier",
																	"src": "18420:63:19"
																},
																"nativeSrc": "18420:78:19",
																"nodeType": "YulFunctionCall",
																"src": "18420:78:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18412:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "18412:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18552:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "18552:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18565:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "18565:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18576:2:19",
																				"nodeType": "YulLiteral",
																				"src": "18576:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18561:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "18561:3:19"
																		},
																		"nativeSrc": "18561:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18561:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18508:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "18508:43:19"
																},
																"nativeSrc": "18508:72:19",
																"nodeType": "YulFunctionCall",
																"src": "18508:72:19"
															},
															"nativeSrc": "18508:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "18508:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "18164:423:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18274:9:19",
														"nodeType": "YulTypedName",
														"src": "18274:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18286:6:19",
														"nodeType": "YulTypedName",
														"src": "18286:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18294:6:19",
														"nodeType": "YulTypedName",
														"src": "18294:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18305:4:19",
														"nodeType": "YulTypedName",
														"src": "18305:4:19",
														"type": ""
													}
												],
												"src": "18164:423:19"
											},
											{
												"body": {
													"nativeSrc": "18707:34:19",
													"nodeType": "YulBlock",
													"src": "18707:34:19",
													"statements": [
														{
															"nativeSrc": "18717:18:19",
															"nodeType": "YulAssignment",
															"src": "18717:18:19",
															"value": {
																"name": "pos",
																"nativeSrc": "18732:3:19",
																"nodeType": "YulIdentifier",
																"src": "18732:3:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "18717:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "18717:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18593:148:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18679:3:19",
														"nodeType": "YulTypedName",
														"src": "18679:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "18684:6:19",
														"nodeType": "YulTypedName",
														"src": "18684:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "18695:11:19",
														"nodeType": "YulTypedName",
														"src": "18695:11:19",
														"type": ""
													}
												],
												"src": "18593:148:19"
											},
											{
												"body": {
													"nativeSrc": "18857:280:19",
													"nodeType": "YulBlock",
													"src": "18857:280:19",
													"statements": [
														{
															"nativeSrc": "18867:53:19",
															"nodeType": "YulVariableDeclaration",
															"src": "18867:53:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18914:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "18914:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "18881:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "18881:32:19"
																},
																"nativeSrc": "18881:39:19",
																"nodeType": "YulFunctionCall",
																"src": "18881:39:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "18871:6:19",
																	"nodeType": "YulTypedName",
																	"src": "18871:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18929:96:19",
															"nodeType": "YulAssignment",
															"src": "18929:96:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19013:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "19013:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19018:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "19018:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18936:76:19",
																	"nodeType": "YulIdentifier",
																	"src": "18936:76:19"
																},
																"nativeSrc": "18936:89:19",
																"nodeType": "YulFunctionCall",
																"src": "18936:89:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18929:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18929:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19073:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "19073:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19080:4:19",
																				"nodeType": "YulLiteral",
																				"src": "19080:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19069:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19069:3:19"
																		},
																		"nativeSrc": "19069:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19069:16:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19087:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "19087:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19092:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "19092:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "19034:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "19034:34:19"
																},
																"nativeSrc": "19034:65:19",
																"nodeType": "YulFunctionCall",
																"src": "19034:65:19"
															},
															"nativeSrc": "19034:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "19034:65:19"
														},
														{
															"nativeSrc": "19108:23:19",
															"nodeType": "YulAssignment",
															"src": "19108:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19119:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "19119:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19124:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "19124:6:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19115:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19115:3:19"
																},
																"nativeSrc": "19115:16:19",
																"nodeType": "YulFunctionCall",
																"src": "19115:16:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19108:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19108:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18747:390:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18838:5:19",
														"nodeType": "YulTypedName",
														"src": "18838:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18845:3:19",
														"nodeType": "YulTypedName",
														"src": "18845:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18853:3:19",
														"nodeType": "YulTypedName",
														"src": "18853:3:19",
														"type": ""
													}
												],
												"src": "18747:390:19"
											},
											{
												"body": {
													"nativeSrc": "19327:251:19",
													"nodeType": "YulBlock",
													"src": "19327:251:19",
													"statements": [
														{
															"nativeSrc": "19338:102:19",
															"nodeType": "YulAssignment",
															"src": "19338:102:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19427:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "19427:6:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19436:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "19436:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19345:81:19",
																	"nodeType": "YulIdentifier",
																	"src": "19345:81:19"
																},
																"nativeSrc": "19345:95:19",
																"nodeType": "YulFunctionCall",
																"src": "19345:95:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19338:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19338:3:19"
																}
															]
														},
														{
															"nativeSrc": "19450:102:19",
															"nodeType": "YulAssignment",
															"src": "19450:102:19",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19539:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "19539:6:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19548:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "19548:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19457:81:19",
																	"nodeType": "YulIdentifier",
																	"src": "19457:81:19"
																},
																"nativeSrc": "19457:95:19",
																"nodeType": "YulFunctionCall",
																"src": "19457:95:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19450:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19450:3:19"
																}
															]
														},
														{
															"nativeSrc": "19562:10:19",
															"nodeType": "YulAssignment",
															"src": "19562:10:19",
															"value": {
																"name": "pos",
																"nativeSrc": "19569:3:19",
																"nodeType": "YulIdentifier",
																"src": "19569:3:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19562:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19562:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "19143:435:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19298:3:19",
														"nodeType": "YulTypedName",
														"src": "19298:3:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19304:6:19",
														"nodeType": "YulTypedName",
														"src": "19304:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19312:6:19",
														"nodeType": "YulTypedName",
														"src": "19312:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19323:3:19",
														"nodeType": "YulTypedName",
														"src": "19323:3:19",
														"type": ""
													}
												],
												"src": "19143:435:19"
											},
											{
												"body": {
													"nativeSrc": "19637:32:19",
													"nodeType": "YulBlock",
													"src": "19637:32:19",
													"statements": [
														{
															"nativeSrc": "19647:16:19",
															"nodeType": "YulAssignment",
															"src": "19647:16:19",
															"value": {
																"name": "value",
																"nativeSrc": "19658:5:19",
																"nodeType": "YulIdentifier",
																"src": "19658:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "19647:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "19647:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "19584:85:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19619:5:19",
														"nodeType": "YulTypedName",
														"src": "19619:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "19629:7:19",
														"nodeType": "YulTypedName",
														"src": "19629:7:19",
														"type": ""
													}
												],
												"src": "19584:85:19"
											},
											{
												"body": {
													"nativeSrc": "19719:57:19",
													"nodeType": "YulBlock",
													"src": "19719:57:19",
													"statements": [
														{
															"nativeSrc": "19729:41:19",
															"nodeType": "YulAssignment",
															"src": "19729:41:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19744:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "19744:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19751:18:19",
																		"nodeType": "YulLiteral",
																		"src": "19751:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "19740:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19740:3:19"
																},
																"nativeSrc": "19740:30:19",
																"nodeType": "YulFunctionCall",
																"src": "19740:30:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "19729:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "19729:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "19675:101:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19701:5:19",
														"nodeType": "YulTypedName",
														"src": "19701:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "19711:7:19",
														"nodeType": "YulTypedName",
														"src": "19711:7:19",
														"type": ""
													}
												],
												"src": "19675:101:19"
											},
											{
												"body": {
													"nativeSrc": "19814:28:19",
													"nodeType": "YulBlock",
													"src": "19814:28:19",
													"statements": [
														{
															"nativeSrc": "19824:12:19",
															"nodeType": "YulAssignment",
															"src": "19824:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "19831:5:19",
																"nodeType": "YulIdentifier",
																"src": "19831:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "19824:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19824:3:19"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "19782:60:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19800:5:19",
														"nodeType": "YulTypedName",
														"src": "19800:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "19810:3:19",
														"nodeType": "YulTypedName",
														"src": "19810:3:19",
														"type": ""
													}
												],
												"src": "19782:60:19"
											},
											{
												"body": {
													"nativeSrc": "19915:89:19",
													"nodeType": "YulBlock",
													"src": "19915:89:19",
													"statements": [
														{
															"nativeSrc": "19925:73:19",
															"nodeType": "YulAssignment",
															"src": "19925:73:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "19990:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "19990:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "19964:25:19",
																					"nodeType": "YulIdentifier",
																					"src": "19964:25:19"
																				},
																				"nativeSrc": "19964:32:19",
																				"nodeType": "YulFunctionCall",
																				"src": "19964:32:19"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "19955:8:19",
																			"nodeType": "YulIdentifier",
																			"src": "19955:8:19"
																		},
																		"nativeSrc": "19955:42:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19955:42:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "19938:16:19",
																	"nodeType": "YulIdentifier",
																	"src": "19938:16:19"
																},
																"nativeSrc": "19938:60:19",
																"nodeType": "YulFunctionCall",
																"src": "19938:60:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "19925:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "19925:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "19848:156:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19895:5:19",
														"nodeType": "YulTypedName",
														"src": "19895:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "19905:9:19",
														"nodeType": "YulTypedName",
														"src": "19905:9:19",
														"type": ""
													}
												],
												"src": "19848:156:19"
											},
											{
												"body": {
													"nativeSrc": "20082:73:19",
													"nodeType": "YulBlock",
													"src": "20082:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20099:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "20099:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20142:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "20142:5:19"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "20104:37:19",
																			"nodeType": "YulIdentifier",
																			"src": "20104:37:19"
																		},
																		"nativeSrc": "20104:44:19",
																		"nodeType": "YulFunctionCall",
																		"src": "20104:44:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20092:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "20092:6:19"
																},
																"nativeSrc": "20092:57:19",
																"nodeType": "YulFunctionCall",
																"src": "20092:57:19"
															},
															"nativeSrc": "20092:57:19",
															"nodeType": "YulExpressionStatement",
															"src": "20092:57:19"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "20010:145:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20070:5:19",
														"nodeType": "YulTypedName",
														"src": "20070:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "20077:3:19",
														"nodeType": "YulTypedName",
														"src": "20077:3:19",
														"type": ""
													}
												],
												"src": "20010:145:19"
											},
											{
												"body": {
													"nativeSrc": "20266:131:19",
													"nodeType": "YulBlock",
													"src": "20266:131:19",
													"statements": [
														{
															"nativeSrc": "20276:26:19",
															"nodeType": "YulAssignment",
															"src": "20276:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20288:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "20288:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20299:2:19",
																		"nodeType": "YulLiteral",
																		"src": "20299:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20284:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "20284:3:19"
																},
																"nativeSrc": "20284:18:19",
																"nodeType": "YulFunctionCall",
																"src": "20284:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20276:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "20276:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20363:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "20363:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20376:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "20376:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20387:1:19",
																				"nodeType": "YulLiteral",
																				"src": "20387:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20372:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "20372:3:19"
																		},
																		"nativeSrc": "20372:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "20372:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "20312:50:19",
																	"nodeType": "YulIdentifier",
																	"src": "20312:50:19"
																},
																"nativeSrc": "20312:78:19",
																"nodeType": "YulFunctionCall",
																"src": "20312:78:19"
															},
															"nativeSrc": "20312:78:19",
															"nodeType": "YulExpressionStatement",
															"src": "20312:78:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "20161:236:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20238:9:19",
														"nodeType": "YulTypedName",
														"src": "20238:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20250:6:19",
														"nodeType": "YulTypedName",
														"src": "20250:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20261:4:19",
														"nodeType": "YulTypedName",
														"src": "20261:4:19",
														"type": ""
													}
												],
												"src": "20161:236:19"
											},
											{
												"body": {
													"nativeSrc": "20509:116:19",
													"nodeType": "YulBlock",
													"src": "20509:116:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20531:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "20531:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20539:1:19",
																				"nodeType": "YulLiteral",
																				"src": "20539:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20527:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "20527:3:19"
																		},
																		"nativeSrc": "20527:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "20527:14:19"
																	},
																	{
																		"hexValue": "6d696e745072696365206d757374206265206120706f736974697665206e756d",
																		"kind": "string",
																		"nativeSrc": "20543:34:19",
																		"nodeType": "YulLiteral",
																		"src": "20543:34:19",
																		"type": "",
																		"value": "mintPrice must be a positive num"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20520:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "20520:6:19"
																},
																"nativeSrc": "20520:58:19",
																"nodeType": "YulFunctionCall",
																"src": "20520:58:19"
															},
															"nativeSrc": "20520:58:19",
															"nodeType": "YulExpressionStatement",
															"src": "20520:58:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20599:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "20599:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20607:2:19",
																				"nodeType": "YulLiteral",
																				"src": "20607:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20595:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "20595:3:19"
																		},
																		"nativeSrc": "20595:15:19",
																		"nodeType": "YulFunctionCall",
																		"src": "20595:15:19"
																	},
																	{
																		"hexValue": "626572",
																		"kind": "string",
																		"nativeSrc": "20612:5:19",
																		"nodeType": "YulLiteral",
																		"src": "20612:5:19",
																		"type": "",
																		"value": "ber"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20588:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "20588:6:19"
																},
																"nativeSrc": "20588:30:19",
																"nodeType": "YulFunctionCall",
																"src": "20588:30:19"
															},
															"nativeSrc": "20588:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "20588:30:19"
														}
													]
												},
												"name": "store_literal_in_memory_286b15b37e2bf53146aa048647a24c582b1912850fe58d31cf21c0384de0c864",
												"nativeSrc": "20403:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20501:6:19",
														"nodeType": "YulTypedName",
														"src": "20501:6:19",
														"type": ""
													}
												],
												"src": "20403:222:19"
											},
											{
												"body": {
													"nativeSrc": "20777:220:19",
													"nodeType": "YulBlock",
													"src": "20777:220:19",
													"statements": [
														{
															"nativeSrc": "20787:74:19",
															"nodeType": "YulAssignment",
															"src": "20787:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20853:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "20853:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20858:2:19",
																		"nodeType": "YulLiteral",
																		"src": "20858:2:19",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20794:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "20794:58:19"
																},
																"nativeSrc": "20794:67:19",
																"nodeType": "YulFunctionCall",
																"src": "20794:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20787:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "20787:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20959:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "20959:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_286b15b37e2bf53146aa048647a24c582b1912850fe58d31cf21c0384de0c864",
																	"nativeSrc": "20870:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "20870:88:19"
																},
																"nativeSrc": "20870:93:19",
																"nodeType": "YulFunctionCall",
																"src": "20870:93:19"
															},
															"nativeSrc": "20870:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "20870:93:19"
														},
														{
															"nativeSrc": "20972:19:19",
															"nodeType": "YulAssignment",
															"src": "20972:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20983:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "20983:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20988:2:19",
																		"nodeType": "YulLiteral",
																		"src": "20988:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20979:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "20979:3:19"
																},
																"nativeSrc": "20979:12:19",
																"nodeType": "YulFunctionCall",
																"src": "20979:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20972:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "20972:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_286b15b37e2bf53146aa048647a24c582b1912850fe58d31cf21c0384de0c864_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20631:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20765:3:19",
														"nodeType": "YulTypedName",
														"src": "20765:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20773:3:19",
														"nodeType": "YulTypedName",
														"src": "20773:3:19",
														"type": ""
													}
												],
												"src": "20631:366:19"
											},
											{
												"body": {
													"nativeSrc": "21174:248:19",
													"nodeType": "YulBlock",
													"src": "21174:248:19",
													"statements": [
														{
															"nativeSrc": "21184:26:19",
															"nodeType": "YulAssignment",
															"src": "21184:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21196:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "21196:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21207:2:19",
																		"nodeType": "YulLiteral",
																		"src": "21207:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21192:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "21192:3:19"
																},
																"nativeSrc": "21192:18:19",
																"nodeType": "YulFunctionCall",
																"src": "21192:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21184:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "21184:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21231:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "21231:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21242:1:19",
																				"nodeType": "YulLiteral",
																				"src": "21242:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21227:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "21227:3:19"
																		},
																		"nativeSrc": "21227:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "21227:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21250:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "21250:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21256:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "21256:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21246:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "21246:3:19"
																		},
																		"nativeSrc": "21246:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "21246:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21220:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "21220:6:19"
																},
																"nativeSrc": "21220:47:19",
																"nodeType": "YulFunctionCall",
																"src": "21220:47:19"
															},
															"nativeSrc": "21220:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "21220:47:19"
														},
														{
															"nativeSrc": "21276:139:19",
															"nodeType": "YulAssignment",
															"src": "21276:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21410:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "21410:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_286b15b37e2bf53146aa048647a24c582b1912850fe58d31cf21c0384de0c864_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21284:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "21284:124:19"
																},
																"nativeSrc": "21284:131:19",
																"nodeType": "YulFunctionCall",
																"src": "21284:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21276:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "21276:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_286b15b37e2bf53146aa048647a24c582b1912850fe58d31cf21c0384de0c864__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21003:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21154:9:19",
														"nodeType": "YulTypedName",
														"src": "21154:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21169:4:19",
														"nodeType": "YulTypedName",
														"src": "21169:4:19",
														"type": ""
													}
												],
												"src": "21003:419:19"
											},
											{
												"body": {
													"nativeSrc": "21534:75:19",
													"nodeType": "YulBlock",
													"src": "21534:75:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21556:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "21556:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21564:1:19",
																				"nodeType": "YulLiteral",
																				"src": "21564:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21552:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "21552:3:19"
																		},
																		"nativeSrc": "21552:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "21552:14:19"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "21568:33:19",
																		"nodeType": "YulLiteral",
																		"src": "21568:33:19",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21545:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "21545:6:19"
																},
																"nativeSrc": "21545:57:19",
																"nodeType": "YulFunctionCall",
																"src": "21545:57:19"
															},
															"nativeSrc": "21545:57:19",
															"nodeType": "YulExpressionStatement",
															"src": "21545:57:19"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "21428:181:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21526:6:19",
														"nodeType": "YulTypedName",
														"src": "21526:6:19",
														"type": ""
													}
												],
												"src": "21428:181:19"
											},
											{
												"body": {
													"nativeSrc": "21761:220:19",
													"nodeType": "YulBlock",
													"src": "21761:220:19",
													"statements": [
														{
															"nativeSrc": "21771:74:19",
															"nodeType": "YulAssignment",
															"src": "21771:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21837:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "21837:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21842:2:19",
																		"nodeType": "YulLiteral",
																		"src": "21842:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21778:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "21778:58:19"
																},
																"nativeSrc": "21778:67:19",
																"nodeType": "YulFunctionCall",
																"src": "21778:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21771:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "21771:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21943:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "21943:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "21854:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "21854:88:19"
																},
																"nativeSrc": "21854:93:19",
																"nodeType": "YulFunctionCall",
																"src": "21854:93:19"
															},
															"nativeSrc": "21854:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "21854:93:19"
														},
														{
															"nativeSrc": "21956:19:19",
															"nodeType": "YulAssignment",
															"src": "21956:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21967:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "21967:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21972:2:19",
																		"nodeType": "YulLiteral",
																		"src": "21972:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21963:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "21963:3:19"
																},
																"nativeSrc": "21963:12:19",
																"nodeType": "YulFunctionCall",
																"src": "21963:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21956:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "21956:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21615:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21749:3:19",
														"nodeType": "YulTypedName",
														"src": "21749:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21757:3:19",
														"nodeType": "YulTypedName",
														"src": "21757:3:19",
														"type": ""
													}
												],
												"src": "21615:366:19"
											},
											{
												"body": {
													"nativeSrc": "22158:248:19",
													"nodeType": "YulBlock",
													"src": "22158:248:19",
													"statements": [
														{
															"nativeSrc": "22168:26:19",
															"nodeType": "YulAssignment",
															"src": "22168:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22180:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "22180:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22191:2:19",
																		"nodeType": "YulLiteral",
																		"src": "22191:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22176:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "22176:3:19"
																},
																"nativeSrc": "22176:18:19",
																"nodeType": "YulFunctionCall",
																"src": "22176:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22168:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "22168:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22215:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "22215:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22226:1:19",
																				"nodeType": "YulLiteral",
																				"src": "22226:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22211:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "22211:3:19"
																		},
																		"nativeSrc": "22211:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "22211:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22234:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "22234:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22240:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "22240:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22230:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "22230:3:19"
																		},
																		"nativeSrc": "22230:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "22230:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22204:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "22204:6:19"
																},
																"nativeSrc": "22204:47:19",
																"nodeType": "YulFunctionCall",
																"src": "22204:47:19"
															},
															"nativeSrc": "22204:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "22204:47:19"
														},
														{
															"nativeSrc": "22260:139:19",
															"nodeType": "YulAssignment",
															"src": "22260:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22394:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "22394:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22268:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "22268:124:19"
																},
																"nativeSrc": "22268:131:19",
																"nodeType": "YulFunctionCall",
																"src": "22268:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22260:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "22260:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21987:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22138:9:19",
														"nodeType": "YulTypedName",
														"src": "22138:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22153:4:19",
														"nodeType": "YulTypedName",
														"src": "22153:4:19",
														"type": ""
													}
												],
												"src": "21987:419:19"
											},
											{
												"body": {
													"nativeSrc": "22466:87:19",
													"nodeType": "YulBlock",
													"src": "22466:87:19",
													"statements": [
														{
															"nativeSrc": "22476:11:19",
															"nodeType": "YulAssignment",
															"src": "22476:11:19",
															"value": {
																"name": "ptr",
																"nativeSrc": "22484:3:19",
																"nodeType": "YulIdentifier",
																"src": "22484:3:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "22476:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "22476:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22504:1:19",
																		"nodeType": "YulLiteral",
																		"src": "22504:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "22507:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "22507:3:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22497:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "22497:6:19"
																},
																"nativeSrc": "22497:14:19",
																"nodeType": "YulFunctionCall",
																"src": "22497:14:19"
															},
															"nativeSrc": "22497:14:19",
															"nodeType": "YulExpressionStatement",
															"src": "22497:14:19"
														},
														{
															"nativeSrc": "22520:26:19",
															"nodeType": "YulAssignment",
															"src": "22520:26:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22538:1:19",
																		"nodeType": "YulLiteral",
																		"src": "22538:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22541:4:19",
																		"nodeType": "YulLiteral",
																		"src": "22541:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "22528:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "22528:9:19"
																},
																"nativeSrc": "22528:18:19",
																"nodeType": "YulFunctionCall",
																"src": "22528:18:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "22520:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "22520:4:19"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "22412:141:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "22453:3:19",
														"nodeType": "YulTypedName",
														"src": "22453:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "22461:4:19",
														"nodeType": "YulTypedName",
														"src": "22461:4:19",
														"type": ""
													}
												],
												"src": "22412:141:19"
											},
											{
												"body": {
													"nativeSrc": "22603:49:19",
													"nodeType": "YulBlock",
													"src": "22603:49:19",
													"statements": [
														{
															"nativeSrc": "22613:33:19",
															"nodeType": "YulAssignment",
															"src": "22613:33:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "22631:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "22631:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22638:2:19",
																				"nodeType": "YulLiteral",
																				"src": "22638:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22627:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "22627:3:19"
																		},
																		"nativeSrc": "22627:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "22627:14:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22643:2:19",
																		"nodeType": "YulLiteral",
																		"src": "22643:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "22623:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "22623:3:19"
																},
																"nativeSrc": "22623:23:19",
																"nodeType": "YulFunctionCall",
																"src": "22623:23:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "22613:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "22613:6:19"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "22559:93:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22586:5:19",
														"nodeType": "YulTypedName",
														"src": "22586:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "22596:6:19",
														"nodeType": "YulTypedName",
														"src": "22596:6:19",
														"type": ""
													}
												],
												"src": "22559:93:19"
											},
											{
												"body": {
													"nativeSrc": "22711:54:19",
													"nodeType": "YulBlock",
													"src": "22711:54:19",
													"statements": [
														{
															"nativeSrc": "22721:37:19",
															"nodeType": "YulAssignment",
															"src": "22721:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "22746:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "22746:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "22752:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "22752:5:19"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "22742:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "22742:3:19"
																},
																"nativeSrc": "22742:16:19",
																"nodeType": "YulFunctionCall",
																"src": "22742:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "22721:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "22721:8:19"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "22658:107:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "22686:4:19",
														"nodeType": "YulTypedName",
														"src": "22686:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "22692:5:19",
														"nodeType": "YulTypedName",
														"src": "22692:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "22702:8:19",
														"nodeType": "YulTypedName",
														"src": "22702:8:19",
														"type": ""
													}
												],
												"src": "22658:107:19"
											},
											{
												"body": {
													"nativeSrc": "22847:317:19",
													"nodeType": "YulBlock",
													"src": "22847:317:19",
													"statements": [
														{
															"nativeSrc": "22857:35:19",
															"nodeType": "YulVariableDeclaration",
															"src": "22857:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "22878:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "22878:10:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22890:1:19",
																		"nodeType": "YulLiteral",
																		"src": "22890:1:19",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "22874:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "22874:3:19"
																},
																"nativeSrc": "22874:18:19",
																"nodeType": "YulFunctionCall",
																"src": "22874:18:19"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "22861:9:19",
																	"nodeType": "YulTypedName",
																	"src": "22861:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22901:109:19",
															"nodeType": "YulVariableDeclaration",
															"src": "22901:109:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "22932:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "22932:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22943:66:19",
																		"nodeType": "YulLiteral",
																		"src": "22943:66:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "22913:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "22913:18:19"
																},
																"nativeSrc": "22913:97:19",
																"nodeType": "YulFunctionCall",
																"src": "22913:97:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "22905:4:19",
																	"nodeType": "YulTypedName",
																	"src": "22905:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23019:51:19",
															"nodeType": "YulAssignment",
															"src": "23019:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "23050:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "23050:9:19"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "23061:8:19",
																		"nodeType": "YulIdentifier",
																		"src": "23061:8:19"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "23031:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "23031:18:19"
																},
																"nativeSrc": "23031:39:19",
																"nodeType": "YulFunctionCall",
																"src": "23031:39:19"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "23019:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "23019:8:19"
																}
															]
														},
														{
															"nativeSrc": "23079:30:19",
															"nodeType": "YulAssignment",
															"src": "23079:30:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23092:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "23092:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "23103:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "23103:4:19"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "23099:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "23099:3:19"
																		},
																		"nativeSrc": "23099:9:19",
																		"nodeType": "YulFunctionCall",
																		"src": "23099:9:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "23088:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "23088:3:19"
																},
																"nativeSrc": "23088:21:19",
																"nodeType": "YulFunctionCall",
																"src": "23088:21:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "23079:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "23079:5:19"
																}
															]
														},
														{
															"nativeSrc": "23118:40:19",
															"nodeType": "YulAssignment",
															"src": "23118:40:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23131:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "23131:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "23142:8:19",
																				"nodeType": "YulIdentifier",
																				"src": "23142:8:19"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "23152:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "23152:4:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "23138:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "23138:3:19"
																		},
																		"nativeSrc": "23138:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "23138:19:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "23128:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "23128:2:19"
																},
																"nativeSrc": "23128:30:19",
																"nodeType": "YulFunctionCall",
																"src": "23128:30:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "23118:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "23118:6:19"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "22771:393:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22808:5:19",
														"nodeType": "YulTypedName",
														"src": "22808:5:19",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "22815:10:19",
														"nodeType": "YulTypedName",
														"src": "22815:10:19",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "22827:8:19",
														"nodeType": "YulTypedName",
														"src": "22827:8:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "22840:6:19",
														"nodeType": "YulTypedName",
														"src": "22840:6:19",
														"type": ""
													}
												],
												"src": "22771:393:19"
											},
											{
												"body": {
													"nativeSrc": "23230:82:19",
													"nodeType": "YulBlock",
													"src": "23230:82:19",
													"statements": [
														{
															"nativeSrc": "23240:66:19",
															"nodeType": "YulAssignment",
															"src": "23240:66:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "23298:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "23298:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "23280:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "23280:17:19"
																				},
																				"nativeSrc": "23280:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "23280:24:19"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "23271:8:19",
																			"nodeType": "YulIdentifier",
																			"src": "23271:8:19"
																		},
																		"nativeSrc": "23271:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "23271:34:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23253:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "23253:17:19"
																},
																"nativeSrc": "23253:53:19",
																"nodeType": "YulFunctionCall",
																"src": "23253:53:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "23240:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "23240:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "23170:142:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23210:5:19",
														"nodeType": "YulTypedName",
														"src": "23210:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "23220:9:19",
														"nodeType": "YulTypedName",
														"src": "23220:9:19",
														"type": ""
													}
												],
												"src": "23170:142:19"
											},
											{
												"body": {
													"nativeSrc": "23365:28:19",
													"nodeType": "YulBlock",
													"src": "23365:28:19",
													"statements": [
														{
															"nativeSrc": "23375:12:19",
															"nodeType": "YulAssignment",
															"src": "23375:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "23382:5:19",
																"nodeType": "YulIdentifier",
																"src": "23382:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "23375:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "23375:3:19"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "23318:75:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23351:5:19",
														"nodeType": "YulTypedName",
														"src": "23351:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "23361:3:19",
														"nodeType": "YulTypedName",
														"src": "23361:3:19",
														"type": ""
													}
												],
												"src": "23318:75:19"
											},
											{
												"body": {
													"nativeSrc": "23475:193:19",
													"nodeType": "YulBlock",
													"src": "23475:193:19",
													"statements": [
														{
															"nativeSrc": "23485:63:19",
															"nodeType": "YulVariableDeclaration",
															"src": "23485:63:19",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "23540:7:19",
																		"nodeType": "YulIdentifier",
																		"src": "23540:7:19"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "23509:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "23509:30:19"
																},
																"nativeSrc": "23509:39:19",
																"nodeType": "YulFunctionCall",
																"src": "23509:39:19"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "23489:16:19",
																	"nodeType": "YulTypedName",
																	"src": "23489:16:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "23564:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "23564:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "23604:4:19",
																						"nodeType": "YulIdentifier",
																						"src": "23604:4:19"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "23598:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "23598:5:19"
																				},
																				"nativeSrc": "23598:11:19",
																				"nodeType": "YulFunctionCall",
																				"src": "23598:11:19"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "23611:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "23611:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "23643:16:19",
																						"nodeType": "YulIdentifier",
																						"src": "23643:16:19"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "23619:23:19",
																					"nodeType": "YulIdentifier",
																					"src": "23619:23:19"
																				},
																				"nativeSrc": "23619:41:19",
																				"nodeType": "YulFunctionCall",
																				"src": "23619:41:19"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "23570:27:19",
																			"nodeType": "YulIdentifier",
																			"src": "23570:27:19"
																		},
																		"nativeSrc": "23570:91:19",
																		"nodeType": "YulFunctionCall",
																		"src": "23570:91:19"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "23557:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "23557:6:19"
																},
																"nativeSrc": "23557:105:19",
																"nodeType": "YulFunctionCall",
																"src": "23557:105:19"
															},
															"nativeSrc": "23557:105:19",
															"nodeType": "YulExpressionStatement",
															"src": "23557:105:19"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "23399:269:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "23452:4:19",
														"nodeType": "YulTypedName",
														"src": "23452:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "23458:6:19",
														"nodeType": "YulTypedName",
														"src": "23458:6:19",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "23466:7:19",
														"nodeType": "YulTypedName",
														"src": "23466:7:19",
														"type": ""
													}
												],
												"src": "23399:269:19"
											},
											{
												"body": {
													"nativeSrc": "23723:24:19",
													"nodeType": "YulBlock",
													"src": "23723:24:19",
													"statements": [
														{
															"nativeSrc": "23733:8:19",
															"nodeType": "YulAssignment",
															"src": "23733:8:19",
															"value": {
																"kind": "number",
																"nativeSrc": "23740:1:19",
																"nodeType": "YulLiteral",
																"src": "23740:1:19",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "23733:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "23733:3:19"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "23674:73:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "23719:3:19",
														"nodeType": "YulTypedName",
														"src": "23719:3:19",
														"type": ""
													}
												],
												"src": "23674:73:19"
											},
											{
												"body": {
													"nativeSrc": "23806:136:19",
													"nodeType": "YulBlock",
													"src": "23806:136:19",
													"statements": [
														{
															"nativeSrc": "23816:46:19",
															"nodeType": "YulVariableDeclaration",
															"src": "23816:46:19",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "23830:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "23830:30:19"
																},
																"nativeSrc": "23830:32:19",
																"nodeType": "YulFunctionCall",
																"src": "23830:32:19"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "23820:6:19",
																	"nodeType": "YulTypedName",
																	"src": "23820:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "23915:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "23915:4:19"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "23921:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "23921:6:19"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "23929:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "23929:6:19"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "23871:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "23871:43:19"
																},
																"nativeSrc": "23871:65:19",
																"nodeType": "YulFunctionCall",
																"src": "23871:65:19"
															},
															"nativeSrc": "23871:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "23871:65:19"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "23753:189:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "23792:4:19",
														"nodeType": "YulTypedName",
														"src": "23792:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "23798:6:19",
														"nodeType": "YulTypedName",
														"src": "23798:6:19",
														"type": ""
													}
												],
												"src": "23753:189:19"
											},
											{
												"body": {
													"nativeSrc": "23998:136:19",
													"nodeType": "YulBlock",
													"src": "23998:136:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "24065:63:19",
																"nodeType": "YulBlock",
																"src": "24065:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "24109:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "24109:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24116:1:19",
																					"nodeType": "YulLiteral",
																					"src": "24116:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "24079:29:19",
																				"nodeType": "YulIdentifier",
																				"src": "24079:29:19"
																			},
																			"nativeSrc": "24079:39:19",
																			"nodeType": "YulFunctionCall",
																			"src": "24079:39:19"
																		},
																		"nativeSrc": "24079:39:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "24079:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "24018:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "24018:5:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "24025:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "24025:3:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "24015:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "24015:2:19"
																},
																"nativeSrc": "24015:14:19",
																"nodeType": "YulFunctionCall",
																"src": "24015:14:19"
															},
															"nativeSrc": "24008:120:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "24030:26:19",
																"nodeType": "YulBlock",
																"src": "24030:26:19",
																"statements": [
																	{
																		"nativeSrc": "24032:22:19",
																		"nodeType": "YulAssignment",
																		"src": "24032:22:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "24045:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "24045:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24052:1:19",
																					"nodeType": "YulLiteral",
																					"src": "24052:1:19",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "24041:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "24041:3:19"
																			},
																			"nativeSrc": "24041:13:19",
																			"nodeType": "YulFunctionCall",
																			"src": "24041:13:19"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "24032:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "24032:5:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "24012:2:19",
																"nodeType": "YulBlock",
																"src": "24012:2:19",
																"statements": []
															},
															"src": "24008:120:19"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "23948:186:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "23986:5:19",
														"nodeType": "YulTypedName",
														"src": "23986:5:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "23993:3:19",
														"nodeType": "YulTypedName",
														"src": "23993:3:19",
														"type": ""
													}
												],
												"src": "23948:186:19"
											},
											{
												"body": {
													"nativeSrc": "24219:464:19",
													"nodeType": "YulBlock",
													"src": "24219:464:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "24245:431:19",
																"nodeType": "YulBlock",
																"src": "24245:431:19",
																"statements": [
																	{
																		"nativeSrc": "24259:54:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "24259:54:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "24307:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "24307:5:19"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "24275:31:19",
																				"nodeType": "YulIdentifier",
																				"src": "24275:31:19"
																			},
																			"nativeSrc": "24275:38:19",
																			"nodeType": "YulFunctionCall",
																			"src": "24275:38:19"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "24263:8:19",
																				"nodeType": "YulTypedName",
																				"src": "24263:8:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "24326:63:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "24326:63:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "24349:8:19",
																					"nodeType": "YulIdentifier",
																					"src": "24349:8:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "24377:10:19",
																							"nodeType": "YulIdentifier",
																							"src": "24377:10:19"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "24359:17:19",
																						"nodeType": "YulIdentifier",
																						"src": "24359:17:19"
																					},
																					"nativeSrc": "24359:29:19",
																					"nodeType": "YulFunctionCall",
																					"src": "24359:29:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "24345:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "24345:3:19"
																			},
																			"nativeSrc": "24345:44:19",
																			"nodeType": "YulFunctionCall",
																			"src": "24345:44:19"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "24330:11:19",
																				"nodeType": "YulTypedName",
																				"src": "24330:11:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "24546:27:19",
																			"nodeType": "YulBlock",
																			"src": "24546:27:19",
																			"statements": [
																				{
																					"nativeSrc": "24548:23:19",
																					"nodeType": "YulAssignment",
																					"src": "24548:23:19",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "24563:8:19",
																						"nodeType": "YulIdentifier",
																						"src": "24563:8:19"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "24548:11:19",
																							"nodeType": "YulIdentifier",
																							"src": "24548:11:19"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "24530:10:19",
																					"nodeType": "YulIdentifier",
																					"src": "24530:10:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24542:2:19",
																					"nodeType": "YulLiteral",
																					"src": "24542:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "24527:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "24527:2:19"
																			},
																			"nativeSrc": "24527:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "24527:18:19"
																		},
																		"nativeSrc": "24524:49:19",
																		"nodeType": "YulIf",
																		"src": "24524:49:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "24615:11:19",
																					"nodeType": "YulIdentifier",
																					"src": "24615:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "24632:8:19",
																							"nodeType": "YulIdentifier",
																							"src": "24632:8:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "24660:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "24660:3:19"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "24642:17:19",
																								"nodeType": "YulIdentifier",
																								"src": "24642:17:19"
																							},
																							"nativeSrc": "24642:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "24642:22:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "24628:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "24628:3:19"
																					},
																					"nativeSrc": "24628:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "24628:37:19"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "24586:28:19",
																				"nodeType": "YulIdentifier",
																				"src": "24586:28:19"
																			},
																			"nativeSrc": "24586:80:19",
																			"nodeType": "YulFunctionCall",
																			"src": "24586:80:19"
																		},
																		"nativeSrc": "24586:80:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "24586:80:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "24236:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "24236:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24241:2:19",
																		"nodeType": "YulLiteral",
																		"src": "24241:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "24233:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "24233:2:19"
																},
																"nativeSrc": "24233:11:19",
																"nodeType": "YulFunctionCall",
																"src": "24233:11:19"
															},
															"nativeSrc": "24230:446:19",
															"nodeType": "YulIf",
															"src": "24230:446:19"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "24140:543:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "24195:5:19",
														"nodeType": "YulTypedName",
														"src": "24195:5:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "24202:3:19",
														"nodeType": "YulTypedName",
														"src": "24202:3:19",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "24207:10:19",
														"nodeType": "YulTypedName",
														"src": "24207:10:19",
														"type": ""
													}
												],
												"src": "24140:543:19"
											},
											{
												"body": {
													"nativeSrc": "24752:54:19",
													"nodeType": "YulBlock",
													"src": "24752:54:19",
													"statements": [
														{
															"nativeSrc": "24762:37:19",
															"nodeType": "YulAssignment",
															"src": "24762:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "24787:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "24787:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "24793:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "24793:5:19"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "24783:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "24783:3:19"
																},
																"nativeSrc": "24783:16:19",
																"nodeType": "YulFunctionCall",
																"src": "24783:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "24762:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "24762:8:19"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "24689:117:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "24727:4:19",
														"nodeType": "YulTypedName",
														"src": "24727:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "24733:5:19",
														"nodeType": "YulTypedName",
														"src": "24733:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "24743:8:19",
														"nodeType": "YulTypedName",
														"src": "24743:8:19",
														"type": ""
													}
												],
												"src": "24689:117:19"
											},
											{
												"body": {
													"nativeSrc": "24863:118:19",
													"nodeType": "YulBlock",
													"src": "24863:118:19",
													"statements": [
														{
															"nativeSrc": "24873:68:19",
															"nodeType": "YulVariableDeclaration",
															"src": "24873:68:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "24922:1:19",
																						"nodeType": "YulLiteral",
																						"src": "24922:1:19",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "24925:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "24925:5:19"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "24918:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "24918:3:19"
																				},
																				"nativeSrc": "24918:13:19",
																				"nodeType": "YulFunctionCall",
																				"src": "24918:13:19"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "24937:1:19",
																						"nodeType": "YulLiteral",
																						"src": "24937:1:19",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "24933:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "24933:3:19"
																				},
																				"nativeSrc": "24933:6:19",
																				"nodeType": "YulFunctionCall",
																				"src": "24933:6:19"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "24889:28:19",
																			"nodeType": "YulIdentifier",
																			"src": "24889:28:19"
																		},
																		"nativeSrc": "24889:51:19",
																		"nodeType": "YulFunctionCall",
																		"src": "24889:51:19"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "24885:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "24885:3:19"
																},
																"nativeSrc": "24885:56:19",
																"nodeType": "YulFunctionCall",
																"src": "24885:56:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "24877:4:19",
																	"nodeType": "YulTypedName",
																	"src": "24877:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24950:25:19",
															"nodeType": "YulAssignment",
															"src": "24950:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "24964:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "24964:4:19"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "24970:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "24970:4:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "24960:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "24960:3:19"
																},
																"nativeSrc": "24960:15:19",
																"nodeType": "YulFunctionCall",
																"src": "24960:15:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "24950:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "24950:6:19"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "24812:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "24840:4:19",
														"nodeType": "YulTypedName",
														"src": "24840:4:19",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "24846:5:19",
														"nodeType": "YulTypedName",
														"src": "24846:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "24856:6:19",
														"nodeType": "YulTypedName",
														"src": "24856:6:19",
														"type": ""
													}
												],
												"src": "24812:169:19"
											},
											{
												"body": {
													"nativeSrc": "25067:214:19",
													"nodeType": "YulBlock",
													"src": "25067:214:19",
													"statements": [
														{
															"nativeSrc": "25200:37:19",
															"nodeType": "YulAssignment",
															"src": "25200:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "25227:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "25227:4:19"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "25233:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "25233:3:19"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "25208:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "25208:18:19"
																},
																"nativeSrc": "25208:29:19",
																"nodeType": "YulFunctionCall",
																"src": "25208:29:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "25200:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "25200:4:19"
																}
															]
														},
														{
															"nativeSrc": "25246:29:19",
															"nodeType": "YulAssignment",
															"src": "25246:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "25257:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "25257:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "25267:1:19",
																				"nodeType": "YulLiteral",
																				"src": "25267:1:19",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "25270:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "25270:3:19"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "25263:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "25263:3:19"
																		},
																		"nativeSrc": "25263:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "25263:11:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "25254:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "25254:2:19"
																},
																"nativeSrc": "25254:21:19",
																"nodeType": "YulFunctionCall",
																"src": "25254:21:19"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "25246:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "25246:4:19"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "24986:295:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "25048:4:19",
														"nodeType": "YulTypedName",
														"src": "25048:4:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "25054:3:19",
														"nodeType": "YulTypedName",
														"src": "25054:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "25062:4:19",
														"nodeType": "YulTypedName",
														"src": "25062:4:19",
														"type": ""
													}
												],
												"src": "24986:295:19"
											},
											{
												"body": {
													"nativeSrc": "25378:1303:19",
													"nodeType": "YulBlock",
													"src": "25378:1303:19",
													"statements": [
														{
															"nativeSrc": "25389:51:19",
															"nodeType": "YulVariableDeclaration",
															"src": "25389:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "25436:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "25436:3:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "25403:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "25403:32:19"
																},
																"nativeSrc": "25403:37:19",
																"nodeType": "YulFunctionCall",
																"src": "25403:37:19"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "25393:6:19",
																	"nodeType": "YulTypedName",
																	"src": "25393:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "25525:22:19",
																"nodeType": "YulBlock",
																"src": "25525:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "25527:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "25527:16:19"
																			},
																			"nativeSrc": "25527:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "25527:18:19"
																		},
																		"nativeSrc": "25527:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "25527:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "25497:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "25497:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25505:18:19",
																		"nodeType": "YulLiteral",
																		"src": "25505:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "25494:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "25494:2:19"
																},
																"nativeSrc": "25494:30:19",
																"nodeType": "YulFunctionCall",
																"src": "25494:30:19"
															},
															"nativeSrc": "25491:56:19",
															"nodeType": "YulIf",
															"src": "25491:56:19"
														},
														{
															"nativeSrc": "25557:52:19",
															"nodeType": "YulVariableDeclaration",
															"src": "25557:52:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "25603:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "25603:4:19"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "25597:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "25597:5:19"
																		},
																		"nativeSrc": "25597:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "25597:11:19"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "25571:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "25571:25:19"
																},
																"nativeSrc": "25571:38:19",
																"nodeType": "YulFunctionCall",
																"src": "25571:38:19"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "25561:6:19",
																	"nodeType": "YulTypedName",
																	"src": "25561:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "25702:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "25702:4:19"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "25708:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "25708:6:19"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "25716:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "25716:6:19"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "25656:45:19",
																	"nodeType": "YulIdentifier",
																	"src": "25656:45:19"
																},
																"nativeSrc": "25656:67:19",
																"nodeType": "YulFunctionCall",
																"src": "25656:67:19"
															},
															"nativeSrc": "25656:67:19",
															"nodeType": "YulExpressionStatement",
															"src": "25656:67:19"
														},
														{
															"nativeSrc": "25733:18:19",
															"nodeType": "YulVariableDeclaration",
															"src": "25733:18:19",
															"value": {
																"kind": "number",
																"nativeSrc": "25750:1:19",
																"nodeType": "YulLiteral",
																"src": "25750:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "25737:9:19",
																	"nodeType": "YulTypedName",
																	"src": "25737:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25761:17:19",
															"nodeType": "YulAssignment",
															"src": "25761:17:19",
															"value": {
																"kind": "number",
																"nativeSrc": "25774:4:19",
																"nodeType": "YulLiteral",
																"src": "25774:4:19",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "25761:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "25761:9:19"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "25825:611:19",
																		"nodeType": "YulBlock",
																		"src": "25825:611:19",
																		"statements": [
																			{
																				"nativeSrc": "25839:37:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25839:37:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "25858:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "25858:6:19"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "25870:4:19",
																									"nodeType": "YulLiteral",
																									"src": "25870:4:19",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "25866:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "25866:3:19"
																							},
																							"nativeSrc": "25866:9:19",
																							"nodeType": "YulFunctionCall",
																							"src": "25866:9:19"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "25854:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "25854:3:19"
																					},
																					"nativeSrc": "25854:22:19",
																					"nodeType": "YulFunctionCall",
																					"src": "25854:22:19"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "25843:7:19",
																						"nodeType": "YulTypedName",
																						"src": "25843:7:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "25890:51:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25890:51:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "25936:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "25936:4:19"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "25904:31:19",
																						"nodeType": "YulIdentifier",
																						"src": "25904:31:19"
																					},
																					"nativeSrc": "25904:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "25904:37:19"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "25894:6:19",
																						"nodeType": "YulTypedName",
																						"src": "25894:6:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "25954:10:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25954:10:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "25963:1:19",
																					"nodeType": "YulLiteral",
																					"src": "25963:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "25958:1:19",
																						"nodeType": "YulTypedName",
																						"src": "25958:1:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "26022:163:19",
																					"nodeType": "YulBlock",
																					"src": "26022:163:19",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "26047:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "26047:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "26065:3:19",
																														"nodeType": "YulIdentifier",
																														"src": "26065:3:19"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "26070:9:19",
																														"nodeType": "YulIdentifier",
																														"src": "26070:9:19"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "26061:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "26061:3:19"
																												},
																												"nativeSrc": "26061:19:19",
																												"nodeType": "YulFunctionCall",
																												"src": "26061:19:19"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "26055:5:19",
																											"nodeType": "YulIdentifier",
																											"src": "26055:5:19"
																										},
																										"nativeSrc": "26055:26:19",
																										"nodeType": "YulFunctionCall",
																										"src": "26055:26:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "26040:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "26040:6:19"
																								},
																								"nativeSrc": "26040:42:19",
																								"nodeType": "YulFunctionCall",
																								"src": "26040:42:19"
																							},
																							"nativeSrc": "26040:42:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "26040:42:19"
																						},
																						{
																							"nativeSrc": "26099:24:19",
																							"nodeType": "YulAssignment",
																							"src": "26099:24:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "26113:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "26113:6:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "26121:1:19",
																										"nodeType": "YulLiteral",
																										"src": "26121:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "26109:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "26109:3:19"
																								},
																								"nativeSrc": "26109:14:19",
																								"nodeType": "YulFunctionCall",
																								"src": "26109:14:19"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "26099:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "26099:6:19"
																								}
																							]
																						},
																						{
																							"nativeSrc": "26140:31:19",
																							"nodeType": "YulAssignment",
																							"src": "26140:31:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "26157:9:19",
																										"nodeType": "YulIdentifier",
																										"src": "26157:9:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "26168:2:19",
																										"nodeType": "YulLiteral",
																										"src": "26168:2:19",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "26153:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "26153:3:19"
																								},
																								"nativeSrc": "26153:18:19",
																								"nodeType": "YulFunctionCall",
																								"src": "26153:18:19"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "26140:9:19",
																									"nodeType": "YulIdentifier",
																									"src": "26140:9:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "25988:1:19",
																							"nodeType": "YulIdentifier",
																							"src": "25988:1:19"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "25991:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "25991:7:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "25985:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "25985:2:19"
																					},
																					"nativeSrc": "25985:14:19",
																					"nodeType": "YulFunctionCall",
																					"src": "25985:14:19"
																				},
																				"nativeSrc": "25977:208:19",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "26000:21:19",
																					"nodeType": "YulBlock",
																					"src": "26000:21:19",
																					"statements": [
																						{
																							"nativeSrc": "26002:17:19",
																							"nodeType": "YulAssignment",
																							"src": "26002:17:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "26011:1:19",
																										"nodeType": "YulIdentifier",
																										"src": "26011:1:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "26014:4:19",
																										"nodeType": "YulLiteral",
																										"src": "26014:4:19",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "26007:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "26007:3:19"
																								},
																								"nativeSrc": "26007:12:19",
																								"nodeType": "YulFunctionCall",
																								"src": "26007:12:19"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "26002:1:19",
																									"nodeType": "YulIdentifier",
																									"src": "26002:1:19"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "25981:3:19",
																					"nodeType": "YulBlock",
																					"src": "25981:3:19",
																					"statements": []
																				},
																				"src": "25977:208:19"
																			},
																			{
																				"body": {
																					"nativeSrc": "26221:156:19",
																					"nodeType": "YulBlock",
																					"src": "26221:156:19",
																					"statements": [
																						{
																							"nativeSrc": "26239:43:19",
																							"nodeType": "YulVariableDeclaration",
																							"src": "26239:43:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "26266:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "26266:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "26271:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "26271:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "26262:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "26262:3:19"
																										},
																										"nativeSrc": "26262:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "26262:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "26256:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "26256:5:19"
																								},
																								"nativeSrc": "26256:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "26256:26:19"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "26243:9:19",
																									"nodeType": "YulTypedName",
																									"src": "26243:9:19",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "26306:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "26306:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "26333:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "26333:9:19"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "26348:6:19",
																														"nodeType": "YulIdentifier",
																														"src": "26348:6:19"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "26356:4:19",
																														"nodeType": "YulLiteral",
																														"src": "26356:4:19",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "26344:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "26344:3:19"
																												},
																												"nativeSrc": "26344:17:19",
																												"nodeType": "YulFunctionCall",
																												"src": "26344:17:19"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "26314:18:19",
																											"nodeType": "YulIdentifier",
																											"src": "26314:18:19"
																										},
																										"nativeSrc": "26314:48:19",
																										"nodeType": "YulFunctionCall",
																										"src": "26314:48:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "26299:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "26299:6:19"
																								},
																								"nativeSrc": "26299:64:19",
																								"nodeType": "YulFunctionCall",
																								"src": "26299:64:19"
																							},
																							"nativeSrc": "26299:64:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "26299:64:19"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "26204:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "26204:7:19"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "26213:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "26213:6:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "26201:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "26201:2:19"
																					},
																					"nativeSrc": "26201:19:19",
																					"nodeType": "YulFunctionCall",
																					"src": "26201:19:19"
																				},
																				"nativeSrc": "26198:179:19",
																				"nodeType": "YulIf",
																				"src": "26198:179:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "26397:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "26397:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "26411:6:19",
																											"nodeType": "YulIdentifier",
																											"src": "26411:6:19"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "26419:1:19",
																											"nodeType": "YulLiteral",
																											"src": "26419:1:19",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "26407:3:19",
																										"nodeType": "YulIdentifier",
																										"src": "26407:3:19"
																									},
																									"nativeSrc": "26407:14:19",
																									"nodeType": "YulFunctionCall",
																									"src": "26407:14:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "26423:1:19",
																									"nodeType": "YulLiteral",
																									"src": "26423:1:19",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "26403:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "26403:3:19"
																							},
																							"nativeSrc": "26403:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "26403:22:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "26390:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "26390:6:19"
																					},
																					"nativeSrc": "26390:36:19",
																					"nodeType": "YulFunctionCall",
																					"src": "26390:36:19"
																				},
																				"nativeSrc": "26390:36:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "26390:36:19"
																			}
																		]
																	},
																	"nativeSrc": "25818:618:19",
																	"nodeType": "YulCase",
																	"src": "25818:618:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "25823:1:19",
																		"nodeType": "YulLiteral",
																		"src": "25823:1:19",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "26453:222:19",
																		"nodeType": "YulBlock",
																		"src": "26453:222:19",
																		"statements": [
																			{
																				"nativeSrc": "26467:14:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "26467:14:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "26480:1:19",
																					"nodeType": "YulLiteral",
																					"src": "26480:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "26471:5:19",
																						"nodeType": "YulTypedName",
																						"src": "26471:5:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "26504:67:19",
																					"nodeType": "YulBlock",
																					"src": "26504:67:19",
																					"statements": [
																						{
																							"nativeSrc": "26522:35:19",
																							"nodeType": "YulAssignment",
																							"src": "26522:35:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "26541:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "26541:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "26546:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "26546:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "26537:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "26537:3:19"
																										},
																										"nativeSrc": "26537:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "26537:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "26531:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "26531:5:19"
																								},
																								"nativeSrc": "26531:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "26531:26:19"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "26522:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "26522:5:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "26497:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "26497:6:19"
																				},
																				"nativeSrc": "26494:77:19",
																				"nodeType": "YulIf",
																				"src": "26494:77:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "26591:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "26591:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "26650:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "26650:5:19"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "26657:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "26657:6:19"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "26597:52:19",
																								"nodeType": "YulIdentifier",
																								"src": "26597:52:19"
																							},
																							"nativeSrc": "26597:67:19",
																							"nodeType": "YulFunctionCall",
																							"src": "26597:67:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "26584:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "26584:6:19"
																					},
																					"nativeSrc": "26584:81:19",
																					"nodeType": "YulFunctionCall",
																					"src": "26584:81:19"
																				},
																				"nativeSrc": "26584:81:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "26584:81:19"
																			}
																		]
																	},
																	"nativeSrc": "26445:230:19",
																	"nodeType": "YulCase",
																	"src": "26445:230:19",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "25798:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "25798:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25806:2:19",
																		"nodeType": "YulLiteral",
																		"src": "25806:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "25795:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "25795:2:19"
																},
																"nativeSrc": "25795:14:19",
																"nodeType": "YulFunctionCall",
																"src": "25795:14:19"
															},
															"nativeSrc": "25788:887:19",
															"nodeType": "YulSwitch",
															"src": "25788:887:19"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "25286:1395:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "25367:4:19",
														"nodeType": "YulTypedName",
														"src": "25367:4:19",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "25373:3:19",
														"nodeType": "YulTypedName",
														"src": "25373:3:19",
														"type": ""
													}
												],
												"src": "25286:1395:19"
											},
											{
												"body": {
													"nativeSrc": "26745:40:19",
													"nodeType": "YulBlock",
													"src": "26745:40:19",
													"statements": [
														{
															"nativeSrc": "26756:22:19",
															"nodeType": "YulAssignment",
															"src": "26756:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "26772:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "26772:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "26766:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "26766:5:19"
																},
																"nativeSrc": "26766:12:19",
																"nodeType": "YulFunctionCall",
																"src": "26766:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "26756:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "26756:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "26687:98:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "26728:5:19",
														"nodeType": "YulTypedName",
														"src": "26728:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "26738:6:19",
														"nodeType": "YulTypedName",
														"src": "26738:6:19",
														"type": ""
													}
												],
												"src": "26687:98:19"
											},
											{
												"body": {
													"nativeSrc": "26886:73:19",
													"nodeType": "YulBlock",
													"src": "26886:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26903:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "26903:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "26908:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "26908:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26896:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "26896:6:19"
																},
																"nativeSrc": "26896:19:19",
																"nodeType": "YulFunctionCall",
																"src": "26896:19:19"
															},
															"nativeSrc": "26896:19:19",
															"nodeType": "YulExpressionStatement",
															"src": "26896:19:19"
														},
														{
															"nativeSrc": "26924:29:19",
															"nodeType": "YulAssignment",
															"src": "26924:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26943:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "26943:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26948:4:19",
																		"nodeType": "YulLiteral",
																		"src": "26948:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26939:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "26939:3:19"
																},
																"nativeSrc": "26939:14:19",
																"nodeType": "YulFunctionCall",
																"src": "26939:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "26924:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "26924:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "26791:168:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26858:3:19",
														"nodeType": "YulTypedName",
														"src": "26858:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "26863:6:19",
														"nodeType": "YulTypedName",
														"src": "26863:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "26874:11:19",
														"nodeType": "YulTypedName",
														"src": "26874:11:19",
														"type": ""
													}
												],
												"src": "26791:168:19"
											},
											{
												"body": {
													"nativeSrc": "27055:283:19",
													"nodeType": "YulBlock",
													"src": "27055:283:19",
													"statements": [
														{
															"nativeSrc": "27065:52:19",
															"nodeType": "YulVariableDeclaration",
															"src": "27065:52:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "27111:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "27111:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "27079:31:19",
																	"nodeType": "YulIdentifier",
																	"src": "27079:31:19"
																},
																"nativeSrc": "27079:38:19",
																"nodeType": "YulFunctionCall",
																"src": "27079:38:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "27069:6:19",
																	"nodeType": "YulTypedName",
																	"src": "27069:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "27126:77:19",
															"nodeType": "YulAssignment",
															"src": "27126:77:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27191:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "27191:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "27196:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "27196:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "27133:57:19",
																	"nodeType": "YulIdentifier",
																	"src": "27133:57:19"
																},
																"nativeSrc": "27133:70:19",
																"nodeType": "YulFunctionCall",
																"src": "27133:70:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27126:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "27126:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "27251:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "27251:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27258:4:19",
																				"nodeType": "YulLiteral",
																				"src": "27258:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27247:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "27247:3:19"
																		},
																		"nativeSrc": "27247:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "27247:16:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "27265:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "27265:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "27270:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "27270:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "27212:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "27212:34:19"
																},
																"nativeSrc": "27212:65:19",
																"nodeType": "YulFunctionCall",
																"src": "27212:65:19"
															},
															"nativeSrc": "27212:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "27212:65:19"
														},
														{
															"nativeSrc": "27286:46:19",
															"nodeType": "YulAssignment",
															"src": "27286:46:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27297:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "27297:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "27324:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "27324:6:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "27302:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "27302:21:19"
																		},
																		"nativeSrc": "27302:29:19",
																		"nodeType": "YulFunctionCall",
																		"src": "27302:29:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27293:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "27293:3:19"
																},
																"nativeSrc": "27293:39:19",
																"nodeType": "YulFunctionCall",
																"src": "27293:39:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27286:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "27286:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "26965:373:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "27036:5:19",
														"nodeType": "YulTypedName",
														"src": "27036:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "27043:3:19",
														"nodeType": "YulTypedName",
														"src": "27043:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "27051:3:19",
														"nodeType": "YulTypedName",
														"src": "27051:3:19",
														"type": ""
													}
												],
												"src": "26965:373:19"
											},
											{
												"body": {
													"nativeSrc": "27544:440:19",
													"nodeType": "YulBlock",
													"src": "27544:440:19",
													"statements": [
														{
															"nativeSrc": "27554:27:19",
															"nodeType": "YulAssignment",
															"src": "27554:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27566:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "27566:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27577:3:19",
																		"nodeType": "YulLiteral",
																		"src": "27577:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27562:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "27562:3:19"
																},
																"nativeSrc": "27562:19:19",
																"nodeType": "YulFunctionCall",
																"src": "27562:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27554:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "27554:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "27635:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "27635:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27648:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "27648:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27659:1:19",
																				"nodeType": "YulLiteral",
																				"src": "27659:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27644:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "27644:3:19"
																		},
																		"nativeSrc": "27644:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "27644:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "27591:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "27591:43:19"
																},
																"nativeSrc": "27591:71:19",
																"nodeType": "YulFunctionCall",
																"src": "27591:71:19"
															},
															"nativeSrc": "27591:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "27591:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "27716:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "27716:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27729:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "27729:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27740:2:19",
																				"nodeType": "YulLiteral",
																				"src": "27740:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27725:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "27725:3:19"
																		},
																		"nativeSrc": "27725:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "27725:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "27672:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "27672:43:19"
																},
																"nativeSrc": "27672:72:19",
																"nodeType": "YulFunctionCall",
																"src": "27672:72:19"
															},
															"nativeSrc": "27672:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "27672:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "27798:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "27798:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27811:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "27811:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27822:2:19",
																				"nodeType": "YulLiteral",
																				"src": "27822:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27807:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "27807:3:19"
																		},
																		"nativeSrc": "27807:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "27807:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "27754:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "27754:43:19"
																},
																"nativeSrc": "27754:72:19",
																"nodeType": "YulFunctionCall",
																"src": "27754:72:19"
															},
															"nativeSrc": "27754:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "27754:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27847:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "27847:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27858:2:19",
																				"nodeType": "YulLiteral",
																				"src": "27858:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27843:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "27843:3:19"
																		},
																		"nativeSrc": "27843:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "27843:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "27867:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "27867:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27873:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "27873:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27863:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "27863:3:19"
																		},
																		"nativeSrc": "27863:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "27863:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27836:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "27836:6:19"
																},
																"nativeSrc": "27836:48:19",
																"nodeType": "YulFunctionCall",
																"src": "27836:48:19"
															},
															"nativeSrc": "27836:48:19",
															"nodeType": "YulExpressionStatement",
															"src": "27836:48:19"
														},
														{
															"nativeSrc": "27893:84:19",
															"nodeType": "YulAssignment",
															"src": "27893:84:19",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "27963:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "27963:6:19"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "27972:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "27972:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "27901:61:19",
																	"nodeType": "YulIdentifier",
																	"src": "27901:61:19"
																},
																"nativeSrc": "27901:76:19",
																"nodeType": "YulFunctionCall",
																"src": "27901:76:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27893:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "27893:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "27344:640:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27492:9:19",
														"nodeType": "YulTypedName",
														"src": "27492:9:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "27504:6:19",
														"nodeType": "YulTypedName",
														"src": "27504:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "27512:6:19",
														"nodeType": "YulTypedName",
														"src": "27512:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "27520:6:19",
														"nodeType": "YulTypedName",
														"src": "27520:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "27528:6:19",
														"nodeType": "YulTypedName",
														"src": "27528:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27539:4:19",
														"nodeType": "YulTypedName",
														"src": "27539:4:19",
														"type": ""
													}
												],
												"src": "27344:640:19"
											},
											{
												"body": {
													"nativeSrc": "28052:79:19",
													"nodeType": "YulBlock",
													"src": "28052:79:19",
													"statements": [
														{
															"nativeSrc": "28062:22:19",
															"nodeType": "YulAssignment",
															"src": "28062:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "28077:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "28077:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "28071:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "28071:5:19"
																},
																"nativeSrc": "28071:13:19",
																"nodeType": "YulFunctionCall",
																"src": "28071:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "28062:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "28062:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "28119:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "28119:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "28093:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "28093:25:19"
																},
																"nativeSrc": "28093:32:19",
																"nodeType": "YulFunctionCall",
																"src": "28093:32:19"
															},
															"nativeSrc": "28093:32:19",
															"nodeType": "YulExpressionStatement",
															"src": "28093:32:19"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "27990:141:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "28030:6:19",
														"nodeType": "YulTypedName",
														"src": "28030:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "28038:3:19",
														"nodeType": "YulTypedName",
														"src": "28038:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "28046:5:19",
														"nodeType": "YulTypedName",
														"src": "28046:5:19",
														"type": ""
													}
												],
												"src": "27990:141:19"
											},
											{
												"body": {
													"nativeSrc": "28213:273:19",
													"nodeType": "YulBlock",
													"src": "28213:273:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "28259:83:19",
																"nodeType": "YulBlock",
																"src": "28259:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "28261:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "28261:77:19"
																			},
																			"nativeSrc": "28261:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "28261:79:19"
																		},
																		"nativeSrc": "28261:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "28261:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "28234:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "28234:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28243:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "28243:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28230:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "28230:3:19"
																		},
																		"nativeSrc": "28230:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "28230:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28255:2:19",
																		"nodeType": "YulLiteral",
																		"src": "28255:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "28226:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "28226:3:19"
																},
																"nativeSrc": "28226:32:19",
																"nodeType": "YulFunctionCall",
																"src": "28226:32:19"
															},
															"nativeSrc": "28223:119:19",
															"nodeType": "YulIf",
															"src": "28223:119:19"
														},
														{
															"nativeSrc": "28352:127:19",
															"nodeType": "YulBlock",
															"src": "28352:127:19",
															"statements": [
																{
																	"nativeSrc": "28367:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "28367:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "28381:1:19",
																		"nodeType": "YulLiteral",
																		"src": "28381:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "28371:6:19",
																			"nodeType": "YulTypedName",
																			"src": "28371:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "28396:73:19",
																	"nodeType": "YulAssignment",
																	"src": "28396:73:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "28441:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "28441:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "28452:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "28452:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "28437:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "28437:3:19"
																				},
																				"nativeSrc": "28437:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "28437:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "28461:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "28461:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "28406:30:19",
																			"nodeType": "YulIdentifier",
																			"src": "28406:30:19"
																		},
																		"nativeSrc": "28406:63:19",
																		"nodeType": "YulFunctionCall",
																		"src": "28406:63:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "28396:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "28396:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "28137:349:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28183:9:19",
														"nodeType": "YulTypedName",
														"src": "28183:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "28194:7:19",
														"nodeType": "YulTypedName",
														"src": "28194:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "28206:6:19",
														"nodeType": "YulTypedName",
														"src": "28206:6:19",
														"type": ""
													}
												],
												"src": "28137:349:19"
											},
											{
												"body": {
													"nativeSrc": "28618:206:19",
													"nodeType": "YulBlock",
													"src": "28618:206:19",
													"statements": [
														{
															"nativeSrc": "28628:26:19",
															"nodeType": "YulAssignment",
															"src": "28628:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28640:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "28640:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28651:2:19",
																		"nodeType": "YulLiteral",
																		"src": "28651:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28636:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "28636:3:19"
																},
																"nativeSrc": "28636:18:19",
																"nodeType": "YulFunctionCall",
																"src": "28636:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28628:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "28628:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28708:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "28708:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28721:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "28721:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28732:1:19",
																				"nodeType": "YulLiteral",
																				"src": "28732:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28717:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "28717:3:19"
																		},
																		"nativeSrc": "28717:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "28717:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "28664:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "28664:43:19"
																},
																"nativeSrc": "28664:71:19",
																"nodeType": "YulFunctionCall",
																"src": "28664:71:19"
															},
															"nativeSrc": "28664:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "28664:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "28789:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "28789:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28802:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "28802:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28813:2:19",
																				"nodeType": "YulLiteral",
																				"src": "28813:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28798:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "28798:3:19"
																		},
																		"nativeSrc": "28798:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "28798:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "28745:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "28745:43:19"
																},
																"nativeSrc": "28745:72:19",
																"nodeType": "YulFunctionCall",
																"src": "28745:72:19"
															},
															"nativeSrc": "28745:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "28745:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "28492:332:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28582:9:19",
														"nodeType": "YulTypedName",
														"src": "28582:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "28594:6:19",
														"nodeType": "YulTypedName",
														"src": "28594:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "28602:6:19",
														"nodeType": "YulTypedName",
														"src": "28602:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28613:4:19",
														"nodeType": "YulTypedName",
														"src": "28613:4:19",
														"type": ""
													}
												],
												"src": "28492:332:19"
											},
											{
												"body": {
													"nativeSrc": "28858:152:19",
													"nodeType": "YulBlock",
													"src": "28858:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "28875:1:19",
																		"nodeType": "YulLiteral",
																		"src": "28875:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28878:77:19",
																		"nodeType": "YulLiteral",
																		"src": "28878:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28868:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "28868:6:19"
																},
																"nativeSrc": "28868:88:19",
																"nodeType": "YulFunctionCall",
																"src": "28868:88:19"
															},
															"nativeSrc": "28868:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "28868:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "28972:1:19",
																		"nodeType": "YulLiteral",
																		"src": "28972:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28975:4:19",
																		"nodeType": "YulLiteral",
																		"src": "28975:4:19",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28965:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "28965:6:19"
																},
																"nativeSrc": "28965:15:19",
																"nodeType": "YulFunctionCall",
																"src": "28965:15:19"
															},
															"nativeSrc": "28965:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "28965:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "28996:1:19",
																		"nodeType": "YulLiteral",
																		"src": "28996:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28999:4:19",
																		"nodeType": "YulLiteral",
																		"src": "28999:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "28989:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "28989:6:19"
																},
																"nativeSrc": "28989:15:19",
																"nodeType": "YulFunctionCall",
																"src": "28989:15:19"
															},
															"nativeSrc": "28989:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "28989:15:19"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "28830:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "28830:180:19"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address_payable(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5(memPtr) {\n\n        mstore(add(memPtr, 0), \"No balance to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cf616f29bbf2da0f655773e6b1629cda188a288c705b27a3713e96ee928d9c47(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not the payment receiver\")\n\n    }\n\n    function abi_encode_t_stringliteral_cf616f29bbf2da0f655773e6b1629cda188a288c705b27a3713e96ee928d9c47_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_cf616f29bbf2da0f655773e6b1629cda188a288c705b27a3713e96ee928d9c47(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cf616f29bbf2da0f655773e6b1629cda188a288c705b27a3713e96ee928d9c47__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cf616f29bbf2da0f655773e6b1629cda188a288c705b27a3713e96ee928d9c47_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9a5e950ca93becddd09d65f9483491477a3ef6c5b9e7978b524dc1807f938867(memPtr) {\n\n        mstore(add(memPtr, 0), \"Price must be greater than mintP\")\n\n        mstore(add(memPtr, 32), \"rice\")\n\n    }\n\n    function abi_encode_t_stringliteral_9a5e950ca93becddd09d65f9483491477a3ef6c5b9e7978b524dc1807f938867_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_9a5e950ca93becddd09d65f9483491477a3ef6c5b9e7978b524dc1807f938867(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9a5e950ca93becddd09d65f9483491477a3ef6c5b9e7978b524dc1807f938867__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9a5e950ca93becddd09d65f9483491477a3ef6c5b9e7978b524dc1807f938867_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_286b15b37e2bf53146aa048647a24c582b1912850fe58d31cf21c0384de0c864(memPtr) {\n\n        mstore(add(memPtr, 0), \"mintPrice must be a positive num\")\n\n        mstore(add(memPtr, 32), \"ber\")\n\n    }\n\n    function abi_encode_t_stringliteral_286b15b37e2bf53146aa048647a24c582b1912850fe58d31cf21c0384de0c864_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_286b15b37e2bf53146aa048647a24c582b1912850fe58d31cf21c0384de0c864(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_286b15b37e2bf53146aa048647a24c582b1912850fe58d31cf21c0384de0c864__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_286b15b37e2bf53146aa048647a24c582b1912850fe58d31cf21c0384de0c864_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061013f575f3560e01c806370a08231116100b5578063b88d4fde1161006e578063b88d4fde14610429578063c87b56dd14610451578063da35a26f1461048d578063e985e9c5146104b5578063f2fde38b146104f1578063f4a0a528146105195761013f565b806370a0823114610331578063715018a61461036d5780638da5cb5b1461038357806395d89b41146103ad578063a22cb465146103d7578063a2682c1d146103ff5761013f565b80633ccfd60b116101075780633ccfd60b1461023557806342842e0e1461024b5780635afa3a72146102735780636352211e146102a357806365ebf99a146102df5780636817c76c146103075761013f565b806301ffc9a71461014357806306fdde031461017f578063081812fc146101a9578063095ea7b3146101e557806323b872dd1461020d575b5f80fd5b34801561014e575f80fd5b5061016960048036038101906101649190612472565b610541565b60405161017691906124b7565b60405180910390f35b34801561018a575f80fd5b506101936105a1565b6040516101a09190612540565b60405180910390f35b3480156101b4575f80fd5b506101cf60048036038101906101ca9190612593565b61063e565b6040516101dc91906125fd565b60405180910390f35b3480156101f0575f80fd5b5061020b60048036038101906102069190612640565b610659565b005b348015610218575f80fd5b50610233600480360381019061022e919061267e565b61066f565b005b348015610240575f80fd5b5061024961076e565b005b348015610256575f80fd5b50610271600480360381019061026c919061267e565b6108ab565b005b61028d600480360381019061028891906127fa565b6108ca565b60405161029a9190612863565b60405180910390f35b3480156102ae575f80fd5b506102c960048036038101906102c49190612593565b610a11565b6040516102d691906125fd565b60405180910390f35b3480156102ea575f80fd5b50610305600480360381019061030091906128b7565b610a22565b005b348015610312575f80fd5b5061031b610a6d565b6040516103289190612863565b60405180910390f35b34801561033c575f80fd5b50610357600480360381019061035291906128e2565b610a73565b6040516103649190612863565b60405180910390f35b348015610378575f80fd5b50610381610b37565b005b34801561038e575f80fd5b50610397610b4a565b6040516103a491906125fd565b60405180910390f35b3480156103b8575f80fd5b506103c1610b7f565b6040516103ce9190612540565b60405180910390f35b3480156103e2575f80fd5b506103fd60048036038101906103f89190612937565b610c1d565b005b34801561040a575f80fd5b50610413610c33565b6040516104209190612984565b60405180910390f35b348015610434575f80fd5b5061044f600480360381019061044a9190612a3b565b610c58565b005b34801561045c575f80fd5b5061047760048036038101906104729190612593565b610c75565b6040516104849190612540565b60405180910390f35b348015610498575f80fd5b506104b360048036038101906104ae9190612abb565b610d8f565b005b3480156104c0575f80fd5b506104db60048036038101906104d69190612af9565b610fdc565b6040516104e891906124b7565b60405180910390f35b3480156104fc575f80fd5b50610517600480360381019061051291906128e2565b611078565b005b348015610524575f80fd5b5061053f600480360381019061053a9190612593565b6110fc565b005b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061059a575061059982611150565b5b9050919050565b60605f6105ac611231565b9050805f0180546105bc90612b64565b80601f01602080910402602001604051908101604052809291908181526020018280546105e890612b64565b80156106335780601f1061060a57610100808354040283529160200191610633565b820191905f5260205f20905b81548152906001019060200180831161061657829003601f168201915b505050505091505090565b5f61064882611258565b50610652826112de565b9050919050565b61066b8282610666611325565b61132c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106df575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016106d691906125fd565b60405180910390fd5b5f6106f283836106ed611325565b61133e565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610768578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161075f93929190612b94565b60405180910390fd5b50505050565b5f4790505f81116107b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ab90612c13565b60405180910390fd5b60335f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610843576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083a90612c7b565b60405180910390fd5b60335f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f193505050501580156108a7573d5f803e3d5ffd5b5050565b6108c583838360405180602001604052805f815250610c58565b505050565b5f6108d361155b565b603454341015610918576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090f90612d09565b60405180910390fd5b60325f81548092919061092a90612d54565b91905055505f603254905061093f33826115a8565b610949818561169b565b60335f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3490811502906040515f60405180830381858888f193505050501580156109ad573d5f803e3d5ffd5b503373ffffffffffffffffffffffffffffffffffffffff16817f463ec2a62c46678a81e23cde640446ca4b512f102bb3309cf5a3e2a4ae83146486866040516109f7929190612d9b565b60405180910390a380915050610a0b611702565b92915050565b5f610a1b82611258565b9050919050565b610a2a61170b565b8060335f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60345481565b5f80610a7d611231565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610aef575f6040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610ae691906125fd565b60405180910390fd5b806003015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b610b3f61170b565b610b485f611792565b565b5f80610b54611863565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60605f610b8a611231565b9050806001018054610b9b90612b64565b80601f0160208091040260200160405190810160405280929190818152602001828054610bc790612b64565b8015610c125780601f10610be957610100808354040283529160200191610c12565b820191905f5260205f20905b815481529060010190602001808311610bf557829003601f168201915b505050505091505090565b610c2f610c28611325565b838361188a565b5050565b60335f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c6384848461066f565b610c6f84848484611a01565b50505050565b60605f610c80611bb3565b9050610c8b83611258565b505f815f015f8581526020019081526020015f208054610caa90612b64565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd690612b64565b8015610d215780601f10610cf857610100808354040283529160200191610d21565b820191905f5260205f20905b815481529060010190602001808311610d0457829003601f168201915b505050505090505f610d31611bda565b90505f815103610d4657819350505050610d8a565b5f82511115610d7b578082604051602001610d62929190612e03565b6040516020818303038152906040529350505050610d8a565b610d8485611bf0565b93505050505b919050565b5f610d98611c56565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015610de05750825b90505f60018367ffffffffffffffff16148015610e1357505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610e21575080155b15610e58576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610ea5576001855f0160086101000a81548160ff0219169083151502179055505b610ead611c7d565b610eb633611c87565b610ebe611c9b565b610f326040518060400160405280600e81526020017f4d6574617165657572546f6b656e0000000000000000000000000000000000008152506040518060400160405280600381526020017f4d51540000000000000000000000000000000000000000000000000000000000815250611cad565b866034819055508560335f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508315610fd3575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610fca9190612e7b565b60405180910390a15b50505050505050565b5f80610fe6611231565b9050806005015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1691505092915050565b61108061170b565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110f0575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016110e791906125fd565b60405180910390fd5b6110f981611792565b50565b61110461170b565b5f8111611146576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113d90612f04565b60405180910390fd5b8060348190555050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061121a57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061122a575061122982611cc3565b5b9050919050565b5f7f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300905090565b5f8061126383611d2c565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112d557826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016112cc9190612863565b60405180910390fd5b80915050919050565b5f806112e8611231565b9050806004015f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b5f33905090565b6113398383836001611d73565b505050565b5f80611348611231565b90505f61135485611d2c565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461139557611394818587611f40565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611422576113d45f865f80611d73565b6001826003015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16146114a3576001826003015f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b85826002015f8781526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a480925050509392505050565b60025f540361159f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159690612f6c565b60405180910390fd5b60025f81905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611618575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161160f91906125fd565b60405180910390fd5b5f61162483835f61133e565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611696575f6040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161168d91906125fd565b60405180910390fd5b505050565b5f6116a4611bb3565b905081815f015f8581526020019081526020015f2090816116c5919061311e565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7836040516116f59190612863565b60405180910390a1505050565b60015f81905550565b611713611325565b73ffffffffffffffffffffffffffffffffffffffff16611731610b4a565b73ffffffffffffffffffffffffffffffffffffffff161461179057611754611325565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161178791906125fd565b60405180910390fd5b565b5f61179b611863565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f611893611231565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361190557826040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016118fc91906125fd565b60405180910390fd5b81816005015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31846040516119f391906124b7565b60405180910390a350505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611bad578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611a44611325565b8685856040518563ffffffff1660e01b8152600401611a66949392919061323f565b6020604051808303815f875af1925050508015611aa157506040513d601f19601f82011682018060405250810190611a9e919061329d565b60015b611b22573d805f8114611acf576040519150601f19603f3d011682016040523d82523d5f602084013e611ad4565b606091505b505f815103611b1a57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611b1191906125fd565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611bab57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611ba291906125fd565b60405180910390fd5b505b50505050565b5f7f0542a41881ee128a365a727b282c86fa859579490b9bb45aab8503648c8e7900905090565b606060405180602001604052805f815250905090565b6060611bfb82611258565b505f611c05611bda565b90505f815111611c235760405180602001604052805f815250611c4e565b80611c2d84612003565b604051602001611c3e929190612e03565b6040516020818303038152906040525b915050919050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611c856120cd565b565b611c8f6120cd565b611c988161210d565b50565b611ca36120cd565b611cab612191565b565b611cb56120cd565b611cbf82826121a2565b5050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80611d36611231565b9050806002015f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b5f611d7c611231565b90508180611db657505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15611ee8575f611dc585611258565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614158015611e2f57508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611e425750611e408185610fdc565b155b15611e8457836040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611e7b91906125fd565b60405180910390fd5b8215611ee657848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b84816004015f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b611f4b8383836121dd565b611ffe575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611fbf57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611fb69190612863565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611ff59291906132c8565b60405180910390fd5b505050565b60605f60016120118461229d565b0190505f8167ffffffffffffffff81111561202f5761202e6126d6565b5b6040519080825280601f01601f1916602001820160405280156120615781602001600182028036833780820191505090505b5090505f82602001820190505b6001156120c2578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816120b7576120b66132ef565b5b0494505f850361206e575b819350505050919050565b6120d56123ee565b61210b576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6121156120cd565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612185575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161217c91906125fd565b60405180910390fd5b61218e81611792565b50565b6121996120cd565b60015f81905550565b6121aa6120cd565b5f6121b3611231565b905082815f0190816121c5919061311e565b50818160010190816121d7919061311e565b50505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561229457508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061225557506122548484610fdc565b5b8061229357508273ffffffffffffffffffffffffffffffffffffffff1661227b836112de565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106122f9577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816122ef576122ee6132ef565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310612336576d04ee2d6d415b85acef8100000000838161232c5761232b6132ef565b5b0492506020810190505b662386f26fc10000831061236557662386f26fc10000838161235b5761235a6132ef565b5b0492506010810190505b6305f5e100831061238e576305f5e1008381612384576123836132ef565b5b0492506008810190505b61271083106123b35761271083816123a9576123a86132ef565b5b0492506004810190505b606483106123d657606483816123cc576123cb6132ef565b5b0492506002810190505b600a83106123e5576001810190505b80915050919050565b5f6123f7611c56565b5f0160089054906101000a900460ff16905090565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6124518161241d565b811461245b575f80fd5b50565b5f8135905061246c81612448565b92915050565b5f6020828403121561248757612486612415565b5b5f6124948482850161245e565b91505092915050565b5f8115159050919050565b6124b18161249d565b82525050565b5f6020820190506124ca5f8301846124a8565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f612512826124d0565b61251c81856124da565b935061252c8185602086016124ea565b612535816124f8565b840191505092915050565b5f6020820190508181035f8301526125588184612508565b905092915050565b5f819050919050565b61257281612560565b811461257c575f80fd5b50565b5f8135905061258d81612569565b92915050565b5f602082840312156125a8576125a7612415565b5b5f6125b58482850161257f565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6125e7826125be565b9050919050565b6125f7816125dd565b82525050565b5f6020820190506126105f8301846125ee565b92915050565b61261f816125dd565b8114612629575f80fd5b50565b5f8135905061263a81612616565b92915050565b5f806040838503121561265657612655612415565b5b5f6126638582860161262c565b92505060206126748582860161257f565b9150509250929050565b5f805f6060848603121561269557612694612415565b5b5f6126a28682870161262c565b93505060206126b38682870161262c565b92505060406126c48682870161257f565b9150509250925092565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61270c826124f8565b810181811067ffffffffffffffff8211171561272b5761272a6126d6565b5b80604052505050565b5f61273d61240c565b90506127498282612703565b919050565b5f67ffffffffffffffff821115612768576127676126d6565b5b612771826124f8565b9050602081019050919050565b828183375f83830152505050565b5f61279e6127998461274e565b612734565b9050828152602081018484840111156127ba576127b96126d2565b5b6127c584828561277e565b509392505050565b5f82601f8301126127e1576127e06126ce565b5b81356127f184826020860161278c565b91505092915050565b5f80604083850312156128105761280f612415565b5b5f83013567ffffffffffffffff81111561282d5761282c612419565b5b612839858286016127cd565b925050602061284a8582860161257f565b9150509250929050565b61285d81612560565b82525050565b5f6020820190506128765f830184612854565b92915050565b5f612886826125be565b9050919050565b6128968161287c565b81146128a0575f80fd5b50565b5f813590506128b18161288d565b92915050565b5f602082840312156128cc576128cb612415565b5b5f6128d9848285016128a3565b91505092915050565b5f602082840312156128f7576128f6612415565b5b5f6129048482850161262c565b91505092915050565b6129168161249d565b8114612920575f80fd5b50565b5f813590506129318161290d565b92915050565b5f806040838503121561294d5761294c612415565b5b5f61295a8582860161262c565b925050602061296b85828601612923565b9150509250929050565b61297e8161287c565b82525050565b5f6020820190506129975f830184612975565b92915050565b5f67ffffffffffffffff8211156129b7576129b66126d6565b5b6129c0826124f8565b9050602081019050919050565b5f6129df6129da8461299d565b612734565b9050828152602081018484840111156129fb576129fa6126d2565b5b612a0684828561277e565b509392505050565b5f82601f830112612a2257612a216126ce565b5b8135612a328482602086016129cd565b91505092915050565b5f805f8060808587031215612a5357612a52612415565b5b5f612a608782880161262c565b9450506020612a718782880161262c565b9350506040612a828782880161257f565b925050606085013567ffffffffffffffff811115612aa357612aa2612419565b5b612aaf87828801612a0e565b91505092959194509250565b5f8060408385031215612ad157612ad0612415565b5b5f612ade8582860161257f565b9250506020612aef858286016128a3565b9150509250929050565b5f8060408385031215612b0f57612b0e612415565b5b5f612b1c8582860161262c565b9250506020612b2d8582860161262c565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612b7b57607f821691505b602082108103612b8e57612b8d612b37565b5b50919050565b5f606082019050612ba75f8301866125ee565b612bb46020830185612854565b612bc160408301846125ee565b949350505050565b7f4e6f2062616c616e636520746f207769746864726177000000000000000000005f82015250565b5f612bfd6016836124da565b9150612c0882612bc9565b602082019050919050565b5f6020820190508181035f830152612c2a81612bf1565b9050919050565b7f4e6f7420746865207061796d656e7420726563656976657200000000000000005f82015250565b5f612c656018836124da565b9150612c7082612c31565b602082019050919050565b5f6020820190508181035f830152612c9281612c59565b9050919050565b7f5072696365206d7573742062652067726561746572207468616e206d696e74505f8201527f7269636500000000000000000000000000000000000000000000000000000000602082015250565b5f612cf36024836124da565b9150612cfe82612c99565b604082019050919050565b5f6020820190508181035f830152612d2081612ce7565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612d5e82612560565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612d9057612d8f612d27565b5b600182019050919050565b5f6040820190508181035f830152612db38185612508565b9050612dc26020830184612854565b9392505050565b5f81905092915050565b5f612ddd826124d0565b612de78185612dc9565b9350612df78185602086016124ea565b80840191505092915050565b5f612e0e8285612dd3565b9150612e1a8284612dd3565b91508190509392505050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f612e65612e60612e5b84612e26565b612e42565b612e2f565b9050919050565b612e7581612e4b565b82525050565b5f602082019050612e8e5f830184612e6c565b92915050565b7f6d696e745072696365206d757374206265206120706f736974697665206e756d5f8201527f6265720000000000000000000000000000000000000000000000000000000000602082015250565b5f612eee6023836124da565b9150612ef982612e94565b604082019050919050565b5f6020820190508181035f830152612f1b81612ee2565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612f56601f836124da565b9150612f6182612f22565b602082019050919050565b5f6020820190508181035f830152612f8381612f4a565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302612fe67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612fab565b612ff08683612fab565b95508019841693508086168417925050509392505050565b5f61302261301d61301884612560565b612e42565b612560565b9050919050565b5f819050919050565b61303b83613008565b61304f61304782613029565b848454612fb7565b825550505050565b5f90565b613063613057565b61306e818484613032565b505050565b5b81811015613091576130865f8261305b565b600181019050613074565b5050565b601f8211156130d6576130a781612f8a565b6130b084612f9c565b810160208510156130bf578190505b6130d36130cb85612f9c565b830182613073565b50505b505050565b5f82821c905092915050565b5f6130f65f19846008026130db565b1980831691505092915050565b5f61310e83836130e7565b9150826002028217905092915050565b613127826124d0565b67ffffffffffffffff8111156131405761313f6126d6565b5b61314a8254612b64565b613155828285613095565b5f60209050601f831160018114613186575f8415613174578287015190505b61317e8582613103565b8655506131e5565b601f19841661319486612f8a565b5f5b828110156131bb57848901518255600182019150602085019450602081019050613196565b868310156131d857848901516131d4601f8916826130e7565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f613211826131ed565b61321b81856131f7565b935061322b8185602086016124ea565b613234816124f8565b840191505092915050565b5f6080820190506132525f8301876125ee565b61325f60208301866125ee565b61326c6040830185612854565b818103606083015261327e8184613207565b905095945050505050565b5f8151905061329781612448565b92915050565b5f602082840312156132b2576132b1612415565b5b5f6132bf84828501613289565b91505092915050565b5f6040820190506132db5f8301856125ee565b6132e86020830184612854565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea2646970667358221220a6087b7a35be61ddd3679cb04a0328e98037783c1963a2582682f481c8400b9064736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB5 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0xDA35A26F EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x4B5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0xF4A0A528 EQ PUSH2 0x519 JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0xA2682C1D EQ PUSH2 0x3FF JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0x107 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x5AFA3A72 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x65EBF99A EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x6817C76C EQ PUSH2 0x307 JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH2 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x2540 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST PUSH2 0x63E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x2640 JUMP JUMPDEST PUSH2 0x659 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x218 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x267E JUMP JUMPDEST PUSH2 0x66F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x240 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x76E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x267E JUMP JUMPDEST PUSH2 0x8AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x27FA JUMP JUMPDEST PUSH2 0x8CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x2863 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST PUSH2 0xA11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x28B7 JUMP JUMPDEST PUSH2 0xA22 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0xA6D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x2863 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x357 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x28E2 JUMP JUMPDEST PUSH2 0xA73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x2863 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x378 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH2 0xB37 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x397 PUSH2 0xB4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C1 PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x2540 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x2937 JUMP JUMPDEST PUSH2 0xC1D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x413 PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x2984 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x434 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x2A3B JUMP JUMPDEST PUSH2 0xC58 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x477 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST PUSH2 0xC75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x2540 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x2ABB JUMP JUMPDEST PUSH2 0xD8F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D6 SWAP2 SWAP1 PUSH2 0x2AF9 JUMP JUMPDEST PUSH2 0xFDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E8 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x517 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x512 SWAP2 SWAP1 PUSH2 0x28E2 JUMP JUMPDEST PUSH2 0x1078 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x524 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x53F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53A SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST PUSH2 0x10FC JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x59A JUMPI POP PUSH2 0x599 DUP3 PUSH2 0x1150 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x5AC PUSH2 0x1231 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0x5BC SWAP1 PUSH2 0x2B64 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5E8 SWAP1 PUSH2 0x2B64 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x633 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x60A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x633 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x616 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x648 DUP3 PUSH2 0x1258 JUMP JUMPDEST POP PUSH2 0x652 DUP3 PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x66B DUP3 DUP3 PUSH2 0x666 PUSH2 0x1325 JUMP JUMPDEST PUSH2 0x132C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6DF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x6F2 DUP4 DUP4 PUSH2 0x6ED PUSH2 0x1325 JUMP JUMPDEST PUSH2 0x133E JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x768 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 GT PUSH2 0x7B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AB SWAP1 PUSH2 0x2C13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x33 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x843 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83A SWAP1 PUSH2 0x2C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x33 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8A7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8C5 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xC58 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8D3 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x34 SLOAD CALLVALUE LT ISZERO PUSH2 0x918 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90F SWAP1 PUSH2 0x2D09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x32 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x92A SWAP1 PUSH2 0x2D54 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH1 0x32 SLOAD SWAP1 POP PUSH2 0x93F CALLER DUP3 PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0x949 DUP2 DUP6 PUSH2 0x169B JUMP JUMPDEST PUSH1 0x33 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9AD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0x463EC2A62C46678A81E23CDE640446CA4B512F102BB3309CF5A3E2A4AE831464 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x9F7 SWAP3 SWAP2 SWAP1 PUSH2 0x2D9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 SWAP2 POP POP PUSH2 0xA0B PUSH2 0x1702 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA1B DUP3 PUSH2 0x1258 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA2A PUSH2 0x170B JUMP JUMPDEST DUP1 PUSH1 0x33 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x34 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA7D PUSH2 0x1231 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAEF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE6 SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3F PUSH2 0x170B JUMP JUMPDEST PUSH2 0xB48 PUSH0 PUSH2 0x1792 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB54 PUSH2 0x1863 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xB8A PUSH2 0x1231 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xB9B SWAP1 PUSH2 0x2B64 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBC7 SWAP1 PUSH2 0x2B64 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC12 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBE9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC12 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBF5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xC2F PUSH2 0xC28 PUSH2 0x1325 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x188A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x33 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xC63 DUP5 DUP5 DUP5 PUSH2 0x66F JUMP JUMPDEST PUSH2 0xC6F DUP5 DUP5 DUP5 DUP5 PUSH2 0x1A01 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xC80 PUSH2 0x1BB3 JUMP JUMPDEST SWAP1 POP PUSH2 0xC8B DUP4 PUSH2 0x1258 JUMP JUMPDEST POP PUSH0 DUP2 PUSH0 ADD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0xCAA SWAP1 PUSH2 0x2B64 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCD6 SWAP1 PUSH2 0x2B64 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD21 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCF8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD21 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD04 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0xD31 PUSH2 0x1BDA JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0xD46 JUMPI DUP2 SWAP4 POP POP POP POP PUSH2 0xD8A JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0xD7B JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD62 SWAP3 SWAP2 SWAP1 PUSH2 0x2E03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 POP POP POP POP PUSH2 0xD8A JUMP JUMPDEST PUSH2 0xD84 DUP6 PUSH2 0x1BF0 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD98 PUSH2 0x1C56 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xDE0 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xE13 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xE21 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xE58 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xEA5 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xEAD PUSH2 0x1C7D JUMP JUMPDEST PUSH2 0xEB6 CALLER PUSH2 0x1C87 JUMP JUMPDEST PUSH2 0xEBE PUSH2 0x1C9B JUMP JUMPDEST PUSH2 0xF32 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D6574617165657572546F6B656E000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D51540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1CAD JUMP JUMPDEST DUP7 PUSH1 0x34 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x33 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xFD3 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xFCA SWAP2 SWAP1 PUSH2 0x2E7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xFE6 PUSH2 0x1231 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1080 PUSH2 0x170B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10F0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E7 SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10F9 DUP2 PUSH2 0x1792 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1104 PUSH2 0x170B JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1146 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113D SWAP1 PUSH2 0x2F04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x121A JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x122A JUMPI POP PUSH2 0x1229 DUP3 PUSH2 0x1CC3 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1263 DUP4 PUSH2 0x1D2C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12D5 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12CC SWAP2 SWAP1 PUSH2 0x2863 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x12E8 PUSH2 0x1231 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1339 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1D73 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1348 PUSH2 0x1231 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1354 DUP6 PUSH2 0x1D2C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1395 JUMPI PUSH2 0x1394 DUP2 DUP6 DUP8 PUSH2 0x1F40 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1422 JUMPI PUSH2 0x13D4 PUSH0 DUP7 PUSH0 DUP1 PUSH2 0x1D73 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14A3 JUMPI PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP6 DUP3 PUSH1 0x2 ADD PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x159F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1596 SWAP1 PUSH2 0x2F6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1618 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x160F SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1624 DUP4 DUP4 PUSH0 PUSH2 0x133E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1696 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168D SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16A4 PUSH2 0x1BB3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x16C5 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x16F5 SWAP2 SWAP1 PUSH2 0x2863 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1713 PUSH2 0x1325 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1731 PUSH2 0xB4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1790 JUMPI PUSH2 0x1754 PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1787 SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x179B PUSH2 0x1863 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1893 PUSH2 0x1231 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1905 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18FC SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x5 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP5 PUSH1 0x40 MLOAD PUSH2 0x19F3 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1BAD JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1A44 PUSH2 0x1325 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A66 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x323F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1AA1 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A9E SWAP2 SWAP1 PUSH2 0x329D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1B22 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1ACF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1AD4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1B1A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B11 SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1BAB JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA2 SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x542A41881EE128A365A727B282C86FA859579490B9BB45AAB8503648C8E7900 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1BFB DUP3 PUSH2 0x1258 JUMP JUMPDEST POP PUSH0 PUSH2 0x1C05 PUSH2 0x1BDA JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x1C23 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1C4E JUMP JUMPDEST DUP1 PUSH2 0x1C2D DUP5 PUSH2 0x2003 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C3E SWAP3 SWAP2 SWAP1 PUSH2 0x2E03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1C85 PUSH2 0x20CD JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1C8F PUSH2 0x20CD JUMP JUMPDEST PUSH2 0x1C98 DUP2 PUSH2 0x210D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1CA3 PUSH2 0x20CD JUMP JUMPDEST PUSH2 0x1CAB PUSH2 0x2191 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1CB5 PUSH2 0x20CD JUMP JUMPDEST PUSH2 0x1CBF DUP3 DUP3 PUSH2 0x21A2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1D36 PUSH2 0x1231 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D7C PUSH2 0x1231 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 PUSH2 0x1DB6 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1EE8 JUMPI PUSH0 PUSH2 0x1DC5 DUP6 PUSH2 0x1258 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1E2F JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1E42 JUMPI POP PUSH2 0x1E40 DUP2 DUP6 PUSH2 0xFDC JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1E84 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E7B SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 ISZERO PUSH2 0x1EE6 JUMPI DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP5 DUP2 PUSH1 0x4 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1F4B DUP4 DUP4 DUP4 PUSH2 0x21DD JUMP JUMPDEST PUSH2 0x1FFE JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FBF JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FB6 SWAP2 SWAP1 PUSH2 0x2863 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FF5 SWAP3 SWAP2 SWAP1 PUSH2 0x32C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x2011 DUP5 PUSH2 0x229D JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x202F JUMPI PUSH2 0x202E PUSH2 0x26D6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2061 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x20C2 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x20B7 JUMPI PUSH2 0x20B6 PUSH2 0x32EF JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x206E JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20D5 PUSH2 0x23EE JUMP JUMPDEST PUSH2 0x210B JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2115 PUSH2 0x20CD JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2185 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x217C SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x218E DUP2 PUSH2 0x1792 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2199 PUSH2 0x20CD JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x21AA PUSH2 0x20CD JUMP JUMPDEST PUSH0 PUSH2 0x21B3 PUSH2 0x1231 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x21C5 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x21D7 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2294 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2255 JUMPI POP PUSH2 0x2254 DUP5 DUP5 PUSH2 0xFDC JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2293 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x227B DUP4 PUSH2 0x12DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x22F9 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x22EF JUMPI PUSH2 0x22EE PUSH2 0x32EF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x2336 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x232C JUMPI PUSH2 0x232B PUSH2 0x32EF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x2365 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x235B JUMPI PUSH2 0x235A PUSH2 0x32EF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x238E JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x2384 JUMPI PUSH2 0x2383 PUSH2 0x32EF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x23B3 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x23A9 JUMPI PUSH2 0x23A8 PUSH2 0x32EF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x23D6 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x23CC JUMPI PUSH2 0x23CB PUSH2 0x32EF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x23E5 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23F7 PUSH2 0x1C56 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2451 DUP2 PUSH2 0x241D JUMP JUMPDEST DUP2 EQ PUSH2 0x245B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x246C DUP2 PUSH2 0x2448 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2487 JUMPI PUSH2 0x2486 PUSH2 0x2415 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2494 DUP5 DUP3 DUP6 ADD PUSH2 0x245E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24B1 DUP2 PUSH2 0x249D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24CA PUSH0 DUP4 ADD DUP5 PUSH2 0x24A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2512 DUP3 PUSH2 0x24D0 JUMP JUMPDEST PUSH2 0x251C DUP2 DUP6 PUSH2 0x24DA JUMP JUMPDEST SWAP4 POP PUSH2 0x252C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x24EA JUMP JUMPDEST PUSH2 0x2535 DUP2 PUSH2 0x24F8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2558 DUP2 DUP5 PUSH2 0x2508 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2572 DUP2 PUSH2 0x2560 JUMP JUMPDEST DUP2 EQ PUSH2 0x257C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x258D DUP2 PUSH2 0x2569 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25A8 JUMPI PUSH2 0x25A7 PUSH2 0x2415 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25B5 DUP5 DUP3 DUP6 ADD PUSH2 0x257F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25E7 DUP3 PUSH2 0x25BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25F7 DUP2 PUSH2 0x25DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2610 PUSH0 DUP4 ADD DUP5 PUSH2 0x25EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x261F DUP2 PUSH2 0x25DD JUMP JUMPDEST DUP2 EQ PUSH2 0x2629 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x263A DUP2 PUSH2 0x2616 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2656 JUMPI PUSH2 0x2655 PUSH2 0x2415 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2663 DUP6 DUP3 DUP7 ADD PUSH2 0x262C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2674 DUP6 DUP3 DUP7 ADD PUSH2 0x257F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2695 JUMPI PUSH2 0x2694 PUSH2 0x2415 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x26A2 DUP7 DUP3 DUP8 ADD PUSH2 0x262C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x26B3 DUP7 DUP3 DUP8 ADD PUSH2 0x262C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x26C4 DUP7 DUP3 DUP8 ADD PUSH2 0x257F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x270C DUP3 PUSH2 0x24F8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x272B JUMPI PUSH2 0x272A PUSH2 0x26D6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x273D PUSH2 0x240C JUMP JUMPDEST SWAP1 POP PUSH2 0x2749 DUP3 DUP3 PUSH2 0x2703 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2768 JUMPI PUSH2 0x2767 PUSH2 0x26D6 JUMP JUMPDEST JUMPDEST PUSH2 0x2771 DUP3 PUSH2 0x24F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x279E PUSH2 0x2799 DUP5 PUSH2 0x274E JUMP JUMPDEST PUSH2 0x2734 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x27BA JUMPI PUSH2 0x27B9 PUSH2 0x26D2 JUMP JUMPDEST JUMPDEST PUSH2 0x27C5 DUP5 DUP3 DUP6 PUSH2 0x277E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x27E1 JUMPI PUSH2 0x27E0 PUSH2 0x26CE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x27F1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x278C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2810 JUMPI PUSH2 0x280F PUSH2 0x2415 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x282D JUMPI PUSH2 0x282C PUSH2 0x2419 JUMP JUMPDEST JUMPDEST PUSH2 0x2839 DUP6 DUP3 DUP7 ADD PUSH2 0x27CD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x284A DUP6 DUP3 DUP7 ADD PUSH2 0x257F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x285D DUP2 PUSH2 0x2560 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2876 PUSH0 DUP4 ADD DUP5 PUSH2 0x2854 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2886 DUP3 PUSH2 0x25BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2896 DUP2 PUSH2 0x287C JUMP JUMPDEST DUP2 EQ PUSH2 0x28A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28B1 DUP2 PUSH2 0x288D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28CC JUMPI PUSH2 0x28CB PUSH2 0x2415 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28D9 DUP5 DUP3 DUP6 ADD PUSH2 0x28A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28F7 JUMPI PUSH2 0x28F6 PUSH2 0x2415 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2904 DUP5 DUP3 DUP6 ADD PUSH2 0x262C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2916 DUP2 PUSH2 0x249D JUMP JUMPDEST DUP2 EQ PUSH2 0x2920 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2931 DUP2 PUSH2 0x290D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x294D JUMPI PUSH2 0x294C PUSH2 0x2415 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x295A DUP6 DUP3 DUP7 ADD PUSH2 0x262C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x296B DUP6 DUP3 DUP7 ADD PUSH2 0x2923 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x297E DUP2 PUSH2 0x287C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2997 PUSH0 DUP4 ADD DUP5 PUSH2 0x2975 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x29B7 JUMPI PUSH2 0x29B6 PUSH2 0x26D6 JUMP JUMPDEST JUMPDEST PUSH2 0x29C0 DUP3 PUSH2 0x24F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x29DF PUSH2 0x29DA DUP5 PUSH2 0x299D JUMP JUMPDEST PUSH2 0x2734 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x29FB JUMPI PUSH2 0x29FA PUSH2 0x26D2 JUMP JUMPDEST JUMPDEST PUSH2 0x2A06 DUP5 DUP3 DUP6 PUSH2 0x277E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2A22 JUMPI PUSH2 0x2A21 PUSH2 0x26CE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A32 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x29CD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2A53 JUMPI PUSH2 0x2A52 PUSH2 0x2415 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A60 DUP8 DUP3 DUP9 ADD PUSH2 0x262C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2A71 DUP8 DUP3 DUP9 ADD PUSH2 0x262C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2A82 DUP8 DUP3 DUP9 ADD PUSH2 0x257F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AA3 JUMPI PUSH2 0x2AA2 PUSH2 0x2419 JUMP JUMPDEST JUMPDEST PUSH2 0x2AAF DUP8 DUP3 DUP9 ADD PUSH2 0x2A0E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AD1 JUMPI PUSH2 0x2AD0 PUSH2 0x2415 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2ADE DUP6 DUP3 DUP7 ADD PUSH2 0x257F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2AEF DUP6 DUP3 DUP7 ADD PUSH2 0x28A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B0F JUMPI PUSH2 0x2B0E PUSH2 0x2415 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B1C DUP6 DUP3 DUP7 ADD PUSH2 0x262C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B2D DUP6 DUP3 DUP7 ADD PUSH2 0x262C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2B7B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2B8E JUMPI PUSH2 0x2B8D PUSH2 0x2B37 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2BA7 PUSH0 DUP4 ADD DUP7 PUSH2 0x25EE JUMP JUMPDEST PUSH2 0x2BB4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2854 JUMP JUMPDEST PUSH2 0x2BC1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x25EE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F2062616C616E636520746F20776974686472617700000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BFD PUSH1 0x16 DUP4 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2C08 DUP3 PUSH2 0x2BC9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C2A DUP2 PUSH2 0x2BF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420746865207061796D656E742072656365697665720000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C65 PUSH1 0x18 DUP4 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2C70 DUP3 PUSH2 0x2C31 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C92 DUP2 PUSH2 0x2C59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072696365206D7573742062652067726561746572207468616E206D696E7450 PUSH0 DUP3 ADD MSTORE PUSH32 0x7269636500000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CF3 PUSH1 0x24 DUP4 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2CFE DUP3 PUSH2 0x2C99 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D20 DUP2 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2D5E DUP3 PUSH2 0x2560 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2D90 JUMPI PUSH2 0x2D8F PUSH2 0x2D27 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2DB3 DUP2 DUP6 PUSH2 0x2508 JUMP JUMPDEST SWAP1 POP PUSH2 0x2DC2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2854 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2DDD DUP3 PUSH2 0x24D0 JUMP JUMPDEST PUSH2 0x2DE7 DUP2 DUP6 PUSH2 0x2DC9 JUMP JUMPDEST SWAP4 POP PUSH2 0x2DF7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x24EA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2E0E DUP3 DUP6 PUSH2 0x2DD3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E1A DUP3 DUP5 PUSH2 0x2DD3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2E65 PUSH2 0x2E60 PUSH2 0x2E5B DUP5 PUSH2 0x2E26 JUMP JUMPDEST PUSH2 0x2E42 JUMP JUMPDEST PUSH2 0x2E2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E75 DUP2 PUSH2 0x2E4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E8E PUSH0 DUP4 ADD DUP5 PUSH2 0x2E6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6D696E745072696365206D757374206265206120706F736974697665206E756D PUSH0 DUP3 ADD MSTORE PUSH32 0x6265720000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2EEE PUSH1 0x23 DUP4 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2EF9 DUP3 PUSH2 0x2E94 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F1B DUP2 PUSH2 0x2EE2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F56 PUSH1 0x1F DUP4 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2F61 DUP3 PUSH2 0x2F22 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F83 DUP2 PUSH2 0x2F4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2FE6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2FAB JUMP JUMPDEST PUSH2 0x2FF0 DUP7 DUP4 PUSH2 0x2FAB JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3022 PUSH2 0x301D PUSH2 0x3018 DUP5 PUSH2 0x2560 JUMP JUMPDEST PUSH2 0x2E42 JUMP JUMPDEST PUSH2 0x2560 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x303B DUP4 PUSH2 0x3008 JUMP JUMPDEST PUSH2 0x304F PUSH2 0x3047 DUP3 PUSH2 0x3029 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2FB7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x3063 PUSH2 0x3057 JUMP JUMPDEST PUSH2 0x306E DUP2 DUP5 DUP5 PUSH2 0x3032 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3091 JUMPI PUSH2 0x3086 PUSH0 DUP3 PUSH2 0x305B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3074 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x30D6 JUMPI PUSH2 0x30A7 DUP2 PUSH2 0x2F8A JUMP JUMPDEST PUSH2 0x30B0 DUP5 PUSH2 0x2F9C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x30BF JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x30D3 PUSH2 0x30CB DUP6 PUSH2 0x2F9C JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3073 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x30F6 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x30DB JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x310E DUP4 DUP4 PUSH2 0x30E7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3127 DUP3 PUSH2 0x24D0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3140 JUMPI PUSH2 0x313F PUSH2 0x26D6 JUMP JUMPDEST JUMPDEST PUSH2 0x314A DUP3 SLOAD PUSH2 0x2B64 JUMP JUMPDEST PUSH2 0x3155 DUP3 DUP3 DUP6 PUSH2 0x3095 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3186 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x3174 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x317E DUP6 DUP3 PUSH2 0x3103 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x31E5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3194 DUP7 PUSH2 0x2F8A JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x31BB JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3196 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x31D8 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x31D4 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x30E7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3211 DUP3 PUSH2 0x31ED JUMP JUMPDEST PUSH2 0x321B DUP2 DUP6 PUSH2 0x31F7 JUMP JUMPDEST SWAP4 POP PUSH2 0x322B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x24EA JUMP JUMPDEST PUSH2 0x3234 DUP2 PUSH2 0x24F8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3252 PUSH0 DUP4 ADD DUP8 PUSH2 0x25EE JUMP JUMPDEST PUSH2 0x325F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x25EE JUMP JUMPDEST PUSH2 0x326C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2854 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x327E DUP2 DUP5 PUSH2 0x3207 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3297 DUP2 PUSH2 0x2448 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32B2 JUMPI PUSH2 0x32B1 PUSH2 0x2415 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x32BF DUP5 DUP3 DUP6 ADD PUSH2 0x3289 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x32DB PUSH0 DUP4 ADD DUP6 PUSH2 0x25EE JUMP JUMPDEST PUSH2 0x32E8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2854 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 ADDMOD PUSH28 0x7A35BE61DDD3679CB04A0328E98037783C1963A2582682F481C8400B SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "398:1879:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1843:218:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3546:146:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4792:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4618:113;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5495:578;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2000:275:18;;;;;;;;;;;;;:::i;:::-;;6139:132:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1386:552:18;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3366:118:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1096:120:18;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;604:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3044:265:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;;;;;;;;;;;:::i;:::-;;2441:144;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3756:150:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5013:144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;556:42:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6337:208:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2127:670:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;744:346:18;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5223:210:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3405:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1222:158:18;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1843:218:4;1956:4;943:10;936:18;;1979:35;;;:11;:35;;;;:75;;;;2018:36;2042:11;2018:23;:36::i;:::-;1979:75;1972:82;;1843:218;;;:::o;3546:146:3:-;3591:13;3616:23;3642:19;:17;:19::i;:::-;3616:45;;3678:1;:7;;3671:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3546:146;:::o;4792:154::-;4859:7;4878:22;4892:7;4878:13;:22::i;:::-;;4918:21;4931:7;4918:12;:21::i;:::-;4911:28;;4792:154;;;:::o;4618:113::-;4689:35;4698:2;4702:7;4711:12;:10;:12::i;:::-;4689:8;:35::i;:::-;4618:113;;:::o;5495:578::-;5603:1;5589:16;;:2;:16;;;5585:87;;5658:1;5628:33;;;;;;;;;;;:::i;:::-;;;;;;;;5585:87;5890:21;5914:34;5922:2;5926:7;5935:12;:10;:12::i;:::-;5914:7;:34::i;:::-;5890:58;;5979:4;5962:21;;:13;:21;;;5958:109;;6027:4;6033:7;6042:13;6006:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;5958:109;5575:498;5495:578;;;:::o;2000:275:18:-;2037:15;2055:21;2037:39;;2104:1;2094:7;:11;2086:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;2173:19;;;;;;;;;;;2150:42;;2158:10;2150:42;;;2142:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;2231:19;;;;;;;;;;;:28;;:37;2260:7;2231:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2027:248;2000:275::o;6139:132:3:-;6225:39;6242:4;6248:2;6252:7;6225:39;;;;;;;;;;;;:16;:39::i;:::-;6139:132;;;:::o;1386:552:18:-;1479:7;2526:21:2;:19;:21::i;:::-;1519:9:18::1;;1506;:22;;1498:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1580:9;;:11;;;;;;;;;:::i;:::-;;;;;;1601:18;1622:9;;1601:30;;1641:29;1647:10;1659;1641:5;:29::i;:::-;1680:34;1693:10;1705:8;1680:12;:34::i;:::-;1796:19;;;;;;;;;;;:28;;:39;1825:9;1796:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1876:10;1851:53;;1864:10;1851:53;1888:8;1898:5;1851:53;;;;;;;:::i;:::-;;;;;;;;1921:10;1914:17;;;2568:20:2::0;:18;:20::i;:::-;1386:552:18;;;;:::o;3366:118:3:-;3429:7;3455:22;3469:7;3455:13;:22::i;:::-;3448:29;;3366:118;;;:::o;1096:120:18:-;2334:13:0;:11;:13::i;:::-;1200:9:18::1;1178:19;;:31;;;;;;;;;;;;;;;;;;1096:120:::0;:::o;604:24::-;;;;:::o;3044:265:3:-;3107:7;3126:23;3152:19;:17;:19::i;:::-;3126:45;;3202:1;3185:19;;:5;:19;;;3181:87;;3254:1;3227:30;;;;;;;;;;;:::i;:::-;;;;;;;;3181:87;3284:1;:11;;:18;3296:5;3284:18;;;;;;;;;;;;;;;;3277:25;;;3044:265;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;2441:144::-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;3756:150:3:-;3803:13;3828:23;3854:19;:17;:19::i;:::-;3828:45;;3890:1;:9;;3883:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3756:150;:::o;5013:144::-;5098:52;5117:12;:10;:12::i;:::-;5131:8;5141;5098:18;:52::i;:::-;5013:144;;:::o;556:42:18:-;;;;;;;;;;;;;:::o;6337:208:3:-;6450:31;6463:4;6469:2;6473:7;6450:12;:31::i;:::-;6491:47;6514:4;6520:2;6524:7;6533:4;6491:22;:47::i;:::-;6337:208;;;;:::o;2127:670:4:-;2200:13;2225:33;2261:29;:27;:29::i;:::-;2225:65;;2300:22;2314:7;2300:13;:22::i;:::-;;2333:23;2359:1;:12;;:21;2372:7;2359:21;;;;;;;;;;;2333:47;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2390:18;2411:10;:8;:10::i;:::-;2390:31;;2516:1;2500:4;2494:18;:23;2490:70;;2540:9;2533:16;;;;;;;2490:70;2685:1;2665:9;2659:23;:27;2655:95;;;2723:4;2729:9;2709:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2702:37;;;;;;;2655:95;2767:23;2782:7;2767:14;:23::i;:::-;2760:30;;;;;2127:670;;;;:::o;744:346:18:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;851:25:18::1;:23;:25::i;:::-;886:26;901:10;886:14;:26::i;:::-;922:24;:22;:24::i;:::-;957:38;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;::::0;:13:::1;:38::i;:::-;1017:10;1005:9;:22;;;;1059:20;1037:19;;:42;;;;;;;;;;;;;;;;;;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;744:346:18;;:::o;5223:210:3:-;5311:4;5327:23;5353:19;:17;:19::i;:::-;5327:45;;5389:1;:20;;:27;5410:5;5389:27;;;;;;;;;;;;;;;:37;5417:8;5389:37;;;;;;;;;;;;;;;;;;;;;;;;;5382:44;;;5223:210;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;1222:158:18:-;2334:13:0;:11;:13::i;:::-;1304:1:18::1;1295:6;:10;1287:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;1367:6;1355:9;:18;;;;1222:158:::0;:::o;2674:311:3:-;2787:4;2837:25;2822:40;;;:11;:40;;;;:104;;;;2893:33;2878:48;;;:11;:48;;;;2822:104;:156;;;;2942:36;2966:11;2942:23;:36::i;:::-;2822:156;2803:175;;2674:311;;;:::o;1958:156::-;2009:23;2077:21;2067:31;;1958:156;:::o;17836:241::-;17899:7;17918:13;17934:17;17943:7;17934:8;:17::i;:::-;17918:33;;17982:1;17965:19;;:5;:19;;;17961:88;;18030:7;18007:31;;;;;;;;;;;:::i;:::-;;;;;;;;17961:88;18065:5;18058:12;;;17836:241;;;:::o;7347:184::-;7417:7;7436:23;7462:19;:17;:19::i;:::-;7436:45;;7498:1;:17;;:26;7516:7;7498:26;;;;;;;;;;;;;;;;;;;;;7491:33;;;7347:184;;;:::o;887:96:5:-;940:7;966:10;959:17;;887:96;:::o;16002:120:3:-;16082:33;16091:2;16095:7;16104:4;16110;16082:8;:33::i;:::-;16002:120;;;:::o;10361:856::-;10447:7;10466:23;10492:19;:17;:19::i;:::-;10466:45;;10521:12;10536:17;10545:7;10536:8;:17::i;:::-;10521:32;;10629:1;10613:18;;:4;:18;;;10609:86;;10647:37;10664:4;10670;10676:7;10647:16;:37::i;:::-;10609:86;10755:1;10739:18;;:4;:18;;;10735:258;;10855:48;10872:1;10876:7;10893:1;10897:5;10855:8;:48::i;:::-;10967:1;10946;:11;;:17;10958:4;10946:17;;;;;;;;;;;;;;;;:22;;;;;;;;;;;10735:258;11021:1;11007:16;;:2;:16;;;11003:109;;11086:1;11067;:11;;:15;11079:2;11067:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;11003:109;11143:2;11122:1;:9;;:18;11132:7;11122:18;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;11180:7;11176:2;11161:27;;11170:4;11161:27;;;;;;;;;;;;11206:4;11199:11;;;;10361:856;;;;;:::o;2601:287:2:-;1851:1;2733:7;;:19;2725:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1851:1;2863:7;:18;;;;2601:287::o;11539:327:3:-;11620:1;11606:16;;:2;:16;;;11602:87;;11675:1;11645:33;;;;;;;;;;;:::i;:::-;;;;;;;;11602:87;11698:21;11722:32;11730:2;11734:7;11751:1;11722:7;:32::i;:::-;11698:56;;11793:1;11768:27;;:13;:27;;;11764:96;;11846:1;11818:31;;;;;;;;;;;:::i;:::-;;;;;;;;11764:96;11592:274;11539:327;;:::o;2916:244:4:-;3007:33;3043:29;:27;:29::i;:::-;3007:65;;3106:9;3082:1;:12;;:21;3095:7;3082:21;;;;;;;;;;;:33;;;;;;:::i;:::-;;3130:23;3145:7;3130:23;;;;;;:::i;:::-;;;;;;;;2997:163;2916:244;;:::o;2894:209:2:-;1808:1;3074:7;:22;;;;2894:209::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;3774:248::-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;17232:369:3:-;17335:23;17361:19;:17;:19::i;:::-;17335:45;;17414:1;17394:22;;:8;:22;;;17390:91;;17461:8;17439:31;;;;;;;;;;;:::i;:::-;;;;;;;;17390:91;17530:8;17490:1;:20;;:27;17511:5;17490:27;;;;;;;;;;;;;;;:37;17518:8;17490:37;;;;;;;;;;;;;;;;:48;;;;;;;;;;;;;;;;;;17575:8;17553:41;;17568:5;17553:41;;;17585:8;17553:41;;;;;;:::i;:::-;;;;;;;;17325:276;17232:369;;;:::o;18616:782::-;18749:1;18732:2;:14;;;:18;18728:664;;;18786:2;18770:36;;;18807:12;:10;:12::i;:::-;18821:4;18827:7;18836:4;18770:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;18766:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19096:1;19079:6;:13;:18;19075:293;;19150:2;19128:25;;;;;;;;;;;:::i;:::-;;;;;;;;19075:293;19320:6;19314:13;19305:6;19301:2;19297:15;19290:38;18766:616;18898:41;;;18888:51;;;:6;:51;;;;18884:130;;18992:2;18970:25;;;;;;;;;;;:::i;:::-;;;;;;;;18884:130;18842:186;18728:664;18616:782;;;;:::o;1434:186:4:-;1495:33;1573:31;1563:41;;1434:186;:::o;4469:92:3:-;4520:13;4545:9;;;;;;;;;;;;;;4469:92;:::o;3972:255::-;4036:13;4061:22;4075:7;4061:13;:22::i;:::-;;4094:21;4118:10;:8;:10::i;:::-;4094:34;;4169:1;4151:7;4145:21;:25;:75;;;;;;;;;;;;;;;;;4187:7;4196:18;:7;:16;:18::i;:::-;4173:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4145:75;4138:82;;;3972:255;;;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;1626:68:4:-;6931:20:1;:18;:20::i;:::-;1626:68:4:o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;1889:111:2:-;6931:20:1;:18;:20::i;:::-;1959:34:2::1;:32;:34::i;:::-;1889:111::o:0;2233:149:3:-;6931:20:1;:18;:20::i;:::-;2336:39:3::1;2360:5;2367:7;2336:23;:39::i;:::-;2233:149:::0;;:::o;1034:146:6:-;1110:4;1148:25;1133:40;;;:11;:40;;;;1126:47;;1034:146;;;:::o;7059:172:3:-;7125:7;7144:23;7170:19;:17;:19::i;:::-;7144:45;;7206:1;:9;;:18;7216:7;7206:18;;;;;;;;;;;;;;;;;;;;;7199:25;;;7059:172;;;:::o;16304:719::-;16408:23;16434:19;:17;:19::i;:::-;16408:45;;16519:9;:31;;;;16548:1;16532:18;;:4;:18;;;;16519:31;16515:460;;;16566:13;16582:22;16596:7;16582:13;:22::i;:::-;16566:38;;16748:1;16732:18;;:4;:18;;;;:35;;;;;16763:4;16754:13;;:5;:13;;;;16732:35;:69;;;;;16772:29;16789:5;16796:4;16772:16;:29::i;:::-;16771:30;16732:69;16728:142;;;16850:4;16828:27;;;;;;;;;;;:::i;:::-;;;;;;;;16728:142;16888:9;16884:81;;;16942:7;16938:2;16922:28;;16931:5;16922:28;;;;;;;;;;;;16884:81;16552:423;16515:460;17014:2;16985:1;:17;;:26;17003:7;16985:26;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;16398:625;16304:719;;;;:::o;8548:368::-;8660:38;8674:5;8681:7;8690;8660:13;:38::i;:::-;8655:255;;8735:1;8718:19;;:5;:19;;;8714:186;;8787:7;8764:31;;;;;;;;;;;:::i;:::-;;;;;;;;8714:186;8868:7;8877;8841:44;;;;;;;;;;;;:::i;:::-;;;;;;;;8655:255;8548:368;;;:::o;637:698:14:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;2006:109:2:-;6931:20:1;:18;:20::i;:::-;1808:1:2::1;2086:7;:22;;;;2006:109::o:0;2388:219:3:-;6931:20:1;:18;:20::i;:::-;2501:23:3::1;2527:19;:17;:19::i;:::-;2501:45;;2566:5;2556:1;:7;;:15;;;;;;:::i;:::-;;2593:7;2581:1;:9;;:19;;;;;;:::i;:::-;;2491:116;2388:219:::0;;:::o;7842:272::-;7945:4;7999:1;7980:21;;:7;:21;;;;:127;;;;;8027:7;8018:16;;:5;:16;;;:52;;;;8038:32;8055:5;8062:7;8038:16;:32::i;:::-;8018:52;:88;;;;8099:7;8074:32;;:21;8087:7;8074:12;:21::i;:::-;:32;;;8018:88;7980:127;7961:146;;7842:272;;;;;:::o;12214:916:16:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;7:75:19:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:77::-;2790:7;2819:5;2808:16;;2753:77;;;:::o;2836:122::-;2909:24;2927:5;2909:24;:::i;:::-;2902:5;2899:35;2889:63;;2948:1;2945;2938:12;2889:63;2836:122;:::o;2964:139::-;3010:5;3048:6;3035:20;3026:29;;3064:33;3091:5;3064:33;:::i;:::-;2964:139;;;;:::o;3109:329::-;3168:6;3217:2;3205:9;3196:7;3192:23;3188:32;3185:119;;;3223:79;;:::i;:::-;3185:119;3343:1;3368:53;3413:7;3404:6;3393:9;3389:22;3368:53;:::i;:::-;3358:63;;3314:117;3109:329;;;;:::o;3444:126::-;3481:7;3521:42;3514:5;3510:54;3499:65;;3444:126;;;:::o;3576:96::-;3613:7;3642:24;3660:5;3642:24;:::i;:::-;3631:35;;3576:96;;;:::o;3678:118::-;3765:24;3783:5;3765:24;:::i;:::-;3760:3;3753:37;3678:118;;:::o;3802:222::-;3895:4;3933:2;3922:9;3918:18;3910:26;;3946:71;4014:1;4003:9;3999:17;3990:6;3946:71;:::i;:::-;3802:222;;;;:::o;4030:122::-;4103:24;4121:5;4103:24;:::i;:::-;4096:5;4093:35;4083:63;;4142:1;4139;4132:12;4083:63;4030:122;:::o;4158:139::-;4204:5;4242:6;4229:20;4220:29;;4258:33;4285:5;4258:33;:::i;:::-;4158:139;;;;:::o;4303:474::-;4371:6;4379;4428:2;4416:9;4407:7;4403:23;4399:32;4396:119;;;4434:79;;:::i;:::-;4396:119;4554:1;4579:53;4624:7;4615:6;4604:9;4600:22;4579:53;:::i;:::-;4569:63;;4525:117;4681:2;4707:53;4752:7;4743:6;4732:9;4728:22;4707:53;:::i;:::-;4697:63;;4652:118;4303:474;;;;;:::o;4783:619::-;4860:6;4868;4876;4925:2;4913:9;4904:7;4900:23;4896:32;4893:119;;;4931:79;;:::i;:::-;4893:119;5051:1;5076:53;5121:7;5112:6;5101:9;5097:22;5076:53;:::i;:::-;5066:63;;5022:117;5178:2;5204:53;5249:7;5240:6;5229:9;5225:22;5204:53;:::i;:::-;5194:63;;5149:118;5306:2;5332:53;5377:7;5368:6;5357:9;5353:22;5332:53;:::i;:::-;5322:63;;5277:118;4783:619;;;;;:::o;5408:117::-;5517:1;5514;5507:12;5531:117;5640:1;5637;5630:12;5654:180;5702:77;5699:1;5692:88;5799:4;5796:1;5789:15;5823:4;5820:1;5813:15;5840:281;5923:27;5945:4;5923:27;:::i;:::-;5915:6;5911:40;6053:6;6041:10;6038:22;6017:18;6005:10;6002:34;5999:62;5996:88;;;6064:18;;:::i;:::-;5996:88;6104:10;6100:2;6093:22;5883:238;5840:281;;:::o;6127:129::-;6161:6;6188:20;;:::i;:::-;6178:30;;6217:33;6245:4;6237:6;6217:33;:::i;:::-;6127:129;;;:::o;6262:308::-;6324:4;6414:18;6406:6;6403:30;6400:56;;;6436:18;;:::i;:::-;6400:56;6474:29;6496:6;6474:29;:::i;:::-;6466:37;;6558:4;6552;6548:15;6540:23;;6262:308;;;:::o;6576:148::-;6674:6;6669:3;6664;6651:30;6715:1;6706:6;6701:3;6697:16;6690:27;6576:148;;;:::o;6730:425::-;6808:5;6833:66;6849:49;6891:6;6849:49;:::i;:::-;6833:66;:::i;:::-;6824:75;;6922:6;6915:5;6908:21;6960:4;6953:5;6949:16;6998:3;6989:6;6984:3;6980:16;6977:25;6974:112;;;7005:79;;:::i;:::-;6974:112;7095:54;7142:6;7137:3;7132;7095:54;:::i;:::-;6814:341;6730:425;;;;;:::o;7175:340::-;7231:5;7280:3;7273:4;7265:6;7261:17;7257:27;7247:122;;7288:79;;:::i;:::-;7247:122;7405:6;7392:20;7430:79;7505:3;7497:6;7490:4;7482:6;7478:17;7430:79;:::i;:::-;7421:88;;7237:278;7175:340;;;;:::o;7521:654::-;7599:6;7607;7656:2;7644:9;7635:7;7631:23;7627:32;7624:119;;;7662:79;;:::i;:::-;7624:119;7810:1;7799:9;7795:17;7782:31;7840:18;7832:6;7829:30;7826:117;;;7862:79;;:::i;:::-;7826:117;7967:63;8022:7;8013:6;8002:9;7998:22;7967:63;:::i;:::-;7957:73;;7753:287;8079:2;8105:53;8150:7;8141:6;8130:9;8126:22;8105:53;:::i;:::-;8095:63;;8050:118;7521:654;;;;;:::o;8181:118::-;8268:24;8286:5;8268:24;:::i;:::-;8263:3;8256:37;8181:118;;:::o;8305:222::-;8398:4;8436:2;8425:9;8421:18;8413:26;;8449:71;8517:1;8506:9;8502:17;8493:6;8449:71;:::i;:::-;8305:222;;;;:::o;8533:104::-;8578:7;8607:24;8625:5;8607:24;:::i;:::-;8596:35;;8533:104;;;:::o;8643:138::-;8724:32;8750:5;8724:32;:::i;:::-;8717:5;8714:43;8704:71;;8771:1;8768;8761:12;8704:71;8643:138;:::o;8787:155::-;8841:5;8879:6;8866:20;8857:29;;8895:41;8930:5;8895:41;:::i;:::-;8787:155;;;;:::o;8948:345::-;9015:6;9064:2;9052:9;9043:7;9039:23;9035:32;9032:119;;;9070:79;;:::i;:::-;9032:119;9190:1;9215:61;9268:7;9259:6;9248:9;9244:22;9215:61;:::i;:::-;9205:71;;9161:125;8948:345;;;;:::o;9299:329::-;9358:6;9407:2;9395:9;9386:7;9382:23;9378:32;9375:119;;;9413:79;;:::i;:::-;9375:119;9533:1;9558:53;9603:7;9594:6;9583:9;9579:22;9558:53;:::i;:::-;9548:63;;9504:117;9299:329;;;;:::o;9634:116::-;9704:21;9719:5;9704:21;:::i;:::-;9697:5;9694:32;9684:60;;9740:1;9737;9730:12;9684:60;9634:116;:::o;9756:133::-;9799:5;9837:6;9824:20;9815:29;;9853:30;9877:5;9853:30;:::i;:::-;9756:133;;;;:::o;9895:468::-;9960:6;9968;10017:2;10005:9;9996:7;9992:23;9988:32;9985:119;;;10023:79;;:::i;:::-;9985:119;10143:1;10168:53;10213:7;10204:6;10193:9;10189:22;10168:53;:::i;:::-;10158:63;;10114:117;10270:2;10296:50;10338:7;10329:6;10318:9;10314:22;10296:50;:::i;:::-;10286:60;;10241:115;9895:468;;;;;:::o;10369:142::-;10472:32;10498:5;10472:32;:::i;:::-;10467:3;10460:45;10369:142;;:::o;10517:254::-;10626:4;10664:2;10653:9;10649:18;10641:26;;10677:87;10761:1;10750:9;10746:17;10737:6;10677:87;:::i;:::-;10517:254;;;;:::o;10777:307::-;10838:4;10928:18;10920:6;10917:30;10914:56;;;10950:18;;:::i;:::-;10914:56;10988:29;11010:6;10988:29;:::i;:::-;10980:37;;11072:4;11066;11062:15;11054:23;;10777:307;;;:::o;11090:423::-;11167:5;11192:65;11208:48;11249:6;11208:48;:::i;:::-;11192:65;:::i;:::-;11183:74;;11280:6;11273:5;11266:21;11318:4;11311:5;11307:16;11356:3;11347:6;11342:3;11338:16;11335:25;11332:112;;;11363:79;;:::i;:::-;11332:112;11453:54;11500:6;11495:3;11490;11453:54;:::i;:::-;11173:340;11090:423;;;;;:::o;11532:338::-;11587:5;11636:3;11629:4;11621:6;11617:17;11613:27;11603:122;;11644:79;;:::i;:::-;11603:122;11761:6;11748:20;11786:78;11860:3;11852:6;11845:4;11837:6;11833:17;11786:78;:::i;:::-;11777:87;;11593:277;11532:338;;;;:::o;11876:943::-;11971:6;11979;11987;11995;12044:3;12032:9;12023:7;12019:23;12015:33;12012:120;;;12051:79;;:::i;:::-;12012:120;12171:1;12196:53;12241:7;12232:6;12221:9;12217:22;12196:53;:::i;:::-;12186:63;;12142:117;12298:2;12324:53;12369:7;12360:6;12349:9;12345:22;12324:53;:::i;:::-;12314:63;;12269:118;12426:2;12452:53;12497:7;12488:6;12477:9;12473:22;12452:53;:::i;:::-;12442:63;;12397:118;12582:2;12571:9;12567:18;12554:32;12613:18;12605:6;12602:30;12599:117;;;12635:79;;:::i;:::-;12599:117;12740:62;12794:7;12785:6;12774:9;12770:22;12740:62;:::i;:::-;12730:72;;12525:287;11876:943;;;;;;;:::o;12825:490::-;12901:6;12909;12958:2;12946:9;12937:7;12933:23;12929:32;12926:119;;;12964:79;;:::i;:::-;12926:119;13084:1;13109:53;13154:7;13145:6;13134:9;13130:22;13109:53;:::i;:::-;13099:63;;13055:117;13211:2;13237:61;13290:7;13281:6;13270:9;13266:22;13237:61;:::i;:::-;13227:71;;13182:126;12825:490;;;;;:::o;13321:474::-;13389:6;13397;13446:2;13434:9;13425:7;13421:23;13417:32;13414:119;;;13452:79;;:::i;:::-;13414:119;13572:1;13597:53;13642:7;13633:6;13622:9;13618:22;13597:53;:::i;:::-;13587:63;;13543:117;13699:2;13725:53;13770:7;13761:6;13750:9;13746:22;13725:53;:::i;:::-;13715:63;;13670:118;13321:474;;;;;:::o;13801:180::-;13849:77;13846:1;13839:88;13946:4;13943:1;13936:15;13970:4;13967:1;13960:15;13987:320;14031:6;14068:1;14062:4;14058:12;14048:22;;14115:1;14109:4;14105:12;14136:18;14126:81;;14192:4;14184:6;14180:17;14170:27;;14126:81;14254:2;14246:6;14243:14;14223:18;14220:38;14217:84;;14273:18;;:::i;:::-;14217:84;14038:269;13987:320;;;:::o;14313:442::-;14462:4;14500:2;14489:9;14485:18;14477:26;;14513:71;14581:1;14570:9;14566:17;14557:6;14513:71;:::i;:::-;14594:72;14662:2;14651:9;14647:18;14638:6;14594:72;:::i;:::-;14676;14744:2;14733:9;14729:18;14720:6;14676:72;:::i;:::-;14313:442;;;;;;:::o;14761:172::-;14901:24;14897:1;14889:6;14885:14;14878:48;14761:172;:::o;14939:366::-;15081:3;15102:67;15166:2;15161:3;15102:67;:::i;:::-;15095:74;;15178:93;15267:3;15178:93;:::i;:::-;15296:2;15291:3;15287:12;15280:19;;14939:366;;;:::o;15311:419::-;15477:4;15515:2;15504:9;15500:18;15492:26;;15564:9;15558:4;15554:20;15550:1;15539:9;15535:17;15528:47;15592:131;15718:4;15592:131;:::i;:::-;15584:139;;15311:419;;;:::o;15736:174::-;15876:26;15872:1;15864:6;15860:14;15853:50;15736:174;:::o;15916:366::-;16058:3;16079:67;16143:2;16138:3;16079:67;:::i;:::-;16072:74;;16155:93;16244:3;16155:93;:::i;:::-;16273:2;16268:3;16264:12;16257:19;;15916:366;;;:::o;16288:419::-;16454:4;16492:2;16481:9;16477:18;16469:26;;16541:9;16535:4;16531:20;16527:1;16516:9;16512:17;16505:47;16569:131;16695:4;16569:131;:::i;:::-;16561:139;;16288:419;;;:::o;16713:223::-;16853:34;16849:1;16841:6;16837:14;16830:58;16922:6;16917:2;16909:6;16905:15;16898:31;16713:223;:::o;16942:366::-;17084:3;17105:67;17169:2;17164:3;17105:67;:::i;:::-;17098:74;;17181:93;17270:3;17181:93;:::i;:::-;17299:2;17294:3;17290:12;17283:19;;16942:366;;;:::o;17314:419::-;17480:4;17518:2;17507:9;17503:18;17495:26;;17567:9;17561:4;17557:20;17553:1;17542:9;17538:17;17531:47;17595:131;17721:4;17595:131;:::i;:::-;17587:139;;17314:419;;;:::o;17739:180::-;17787:77;17784:1;17777:88;17884:4;17881:1;17874:15;17908:4;17905:1;17898:15;17925:233;17964:3;17987:24;18005:5;17987:24;:::i;:::-;17978:33;;18033:66;18026:5;18023:77;18020:103;;18103:18;;:::i;:::-;18020:103;18150:1;18143:5;18139:13;18132:20;;17925:233;;;:::o;18164:423::-;18305:4;18343:2;18332:9;18328:18;18320:26;;18392:9;18386:4;18382:20;18378:1;18367:9;18363:17;18356:47;18420:78;18493:4;18484:6;18420:78;:::i;:::-;18412:86;;18508:72;18576:2;18565:9;18561:18;18552:6;18508:72;:::i;:::-;18164:423;;;;;:::o;18593:148::-;18695:11;18732:3;18717:18;;18593:148;;;;:::o;18747:390::-;18853:3;18881:39;18914:5;18881:39;:::i;:::-;18936:89;19018:6;19013:3;18936:89;:::i;:::-;18929:96;;19034:65;19092:6;19087:3;19080:4;19073:5;19069:16;19034:65;:::i;:::-;19124:6;19119:3;19115:16;19108:23;;18857:280;18747:390;;;;:::o;19143:435::-;19323:3;19345:95;19436:3;19427:6;19345:95;:::i;:::-;19338:102;;19457:95;19548:3;19539:6;19457:95;:::i;:::-;19450:102;;19569:3;19562:10;;19143:435;;;;;:::o;19584:85::-;19629:7;19658:5;19647:16;;19584:85;;;:::o;19675:101::-;19711:7;19751:18;19744:5;19740:30;19729:41;;19675:101;;;:::o;19782:60::-;19810:3;19831:5;19824:12;;19782:60;;;:::o;19848:156::-;19905:9;19938:60;19955:42;19964:32;19990:5;19964:32;:::i;:::-;19955:42;:::i;:::-;19938:60;:::i;:::-;19925:73;;19848:156;;;:::o;20010:145::-;20104:44;20142:5;20104:44;:::i;:::-;20099:3;20092:57;20010:145;;:::o;20161:236::-;20261:4;20299:2;20288:9;20284:18;20276:26;;20312:78;20387:1;20376:9;20372:17;20363:6;20312:78;:::i;:::-;20161:236;;;;:::o;20403:222::-;20543:34;20539:1;20531:6;20527:14;20520:58;20612:5;20607:2;20599:6;20595:15;20588:30;20403:222;:::o;20631:366::-;20773:3;20794:67;20858:2;20853:3;20794:67;:::i;:::-;20787:74;;20870:93;20959:3;20870:93;:::i;:::-;20988:2;20983:3;20979:12;20972:19;;20631:366;;;:::o;21003:419::-;21169:4;21207:2;21196:9;21192:18;21184:26;;21256:9;21250:4;21246:20;21242:1;21231:9;21227:17;21220:47;21284:131;21410:4;21284:131;:::i;:::-;21276:139;;21003:419;;;:::o;21428:181::-;21568:33;21564:1;21556:6;21552:14;21545:57;21428:181;:::o;21615:366::-;21757:3;21778:67;21842:2;21837:3;21778:67;:::i;:::-;21771:74;;21854:93;21943:3;21854:93;:::i;:::-;21972:2;21967:3;21963:12;21956:19;;21615:366;;;:::o;21987:419::-;22153:4;22191:2;22180:9;22176:18;22168:26;;22240:9;22234:4;22230:20;22226:1;22215:9;22211:17;22204:47;22268:131;22394:4;22268:131;:::i;:::-;22260:139;;21987:419;;;:::o;22412:141::-;22461:4;22484:3;22476:11;;22507:3;22504:1;22497:14;22541:4;22538:1;22528:18;22520:26;;22412:141;;;:::o;22559:93::-;22596:6;22643:2;22638;22631:5;22627:14;22623:23;22613:33;;22559:93;;;:::o;22658:107::-;22702:8;22752:5;22746:4;22742:16;22721:37;;22658:107;;;;:::o;22771:393::-;22840:6;22890:1;22878:10;22874:18;22913:97;22943:66;22932:9;22913:97;:::i;:::-;23031:39;23061:8;23050:9;23031:39;:::i;:::-;23019:51;;23103:4;23099:9;23092:5;23088:21;23079:30;;23152:4;23142:8;23138:19;23131:5;23128:30;23118:40;;22847:317;;22771:393;;;;;:::o;23170:142::-;23220:9;23253:53;23271:34;23280:24;23298:5;23280:24;:::i;:::-;23271:34;:::i;:::-;23253:53;:::i;:::-;23240:66;;23170:142;;;:::o;23318:75::-;23361:3;23382:5;23375:12;;23318:75;;;:::o;23399:269::-;23509:39;23540:7;23509:39;:::i;:::-;23570:91;23619:41;23643:16;23619:41;:::i;:::-;23611:6;23604:4;23598:11;23570:91;:::i;:::-;23564:4;23557:105;23475:193;23399:269;;;:::o;23674:73::-;23719:3;23674:73;:::o;23753:189::-;23830:32;;:::i;:::-;23871:65;23929:6;23921;23915:4;23871:65;:::i;:::-;23806:136;23753:189;;:::o;23948:186::-;24008:120;24025:3;24018:5;24015:14;24008:120;;;24079:39;24116:1;24109:5;24079:39;:::i;:::-;24052:1;24045:5;24041:13;24032:22;;24008:120;;;23948:186;;:::o;24140:543::-;24241:2;24236:3;24233:11;24230:446;;;24275:38;24307:5;24275:38;:::i;:::-;24359:29;24377:10;24359:29;:::i;:::-;24349:8;24345:44;24542:2;24530:10;24527:18;24524:49;;;24563:8;24548:23;;24524:49;24586:80;24642:22;24660:3;24642:22;:::i;:::-;24632:8;24628:37;24615:11;24586:80;:::i;:::-;24245:431;;24230:446;24140:543;;;:::o;24689:117::-;24743:8;24793:5;24787:4;24783:16;24762:37;;24689:117;;;;:::o;24812:169::-;24856:6;24889:51;24937:1;24933:6;24925:5;24922:1;24918:13;24889:51;:::i;:::-;24885:56;24970:4;24964;24960:15;24950:25;;24863:118;24812:169;;;;:::o;24986:295::-;25062:4;25208:29;25233:3;25227:4;25208:29;:::i;:::-;25200:37;;25270:3;25267:1;25263:11;25257:4;25254:21;25246:29;;24986:295;;;;:::o;25286:1395::-;25403:37;25436:3;25403:37;:::i;:::-;25505:18;25497:6;25494:30;25491:56;;;25527:18;;:::i;:::-;25491:56;25571:38;25603:4;25597:11;25571:38;:::i;:::-;25656:67;25716:6;25708;25702:4;25656:67;:::i;:::-;25750:1;25774:4;25761:17;;25806:2;25798:6;25795:14;25823:1;25818:618;;;;26480:1;26497:6;26494:77;;;26546:9;26541:3;26537:19;26531:26;26522:35;;26494:77;26597:67;26657:6;26650:5;26597:67;:::i;:::-;26591:4;26584:81;26453:222;25788:887;;25818:618;25870:4;25866:9;25858:6;25854:22;25904:37;25936:4;25904:37;:::i;:::-;25963:1;25977:208;25991:7;25988:1;25985:14;25977:208;;;26070:9;26065:3;26061:19;26055:26;26047:6;26040:42;26121:1;26113:6;26109:14;26099:24;;26168:2;26157:9;26153:18;26140:31;;26014:4;26011:1;26007:12;26002:17;;25977:208;;;26213:6;26204:7;26201:19;26198:179;;;26271:9;26266:3;26262:19;26256:26;26314:48;26356:4;26348:6;26344:17;26333:9;26314:48;:::i;:::-;26306:6;26299:64;26221:156;26198:179;26423:1;26419;26411:6;26407:14;26403:22;26397:4;26390:36;25825:611;;;25788:887;;25378:1303;;;25286:1395;;:::o;26687:98::-;26738:6;26772:5;26766:12;26756:22;;26687:98;;;:::o;26791:168::-;26874:11;26908:6;26903:3;26896:19;26948:4;26943:3;26939:14;26924:29;;26791:168;;;;:::o;26965:373::-;27051:3;27079:38;27111:5;27079:38;:::i;:::-;27133:70;27196:6;27191:3;27133:70;:::i;:::-;27126:77;;27212:65;27270:6;27265:3;27258:4;27251:5;27247:16;27212:65;:::i;:::-;27302:29;27324:6;27302:29;:::i;:::-;27297:3;27293:39;27286:46;;27055:283;26965:373;;;;:::o;27344:640::-;27539:4;27577:3;27566:9;27562:19;27554:27;;27591:71;27659:1;27648:9;27644:17;27635:6;27591:71;:::i;:::-;27672:72;27740:2;27729:9;27725:18;27716:6;27672:72;:::i;:::-;27754;27822:2;27811:9;27807:18;27798:6;27754:72;:::i;:::-;27873:9;27867:4;27863:20;27858:2;27847:9;27843:18;27836:48;27901:76;27972:4;27963:6;27901:76;:::i;:::-;27893:84;;27344:640;;;;;;;:::o;27990:141::-;28046:5;28077:6;28071:13;28062:22;;28093:32;28119:5;28093:32;:::i;:::-;27990:141;;;;:::o;28137:349::-;28206:6;28255:2;28243:9;28234:7;28230:23;28226:32;28223:119;;;28261:79;;:::i;:::-;28223:119;28381:1;28406:63;28461:7;28452:6;28441:9;28437:22;28406:63;:::i;:::-;28396:73;;28352:127;28137:349;;;;:::o;28492:332::-;28613:4;28651:2;28640:9;28636:18;28628:26;;28664:71;28732:1;28721:9;28717:17;28708:6;28664:71;:::i;:::-;28745:72;28813:2;28802:9;28798:18;28789:6;28745:72;:::i;:::-;28492:332;;;;;:::o;28830:180::-;28878:77;28875:1;28868:88;28975:4;28972:1;28965:15;28999:4;28996:1;28989:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2627600",
								"executionCost": "2844",
								"totalCost": "2630444"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"initialize(uint256,address)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mintNFT(string,uint256)": "infinite",
								"mintPaymentReceiver()": "2641",
								"mintPrice()": "2558",
								"name()": "infinite",
								"owner()": "2634",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"setMintPrice(uint256)": "infinite",
								"setPaymentReceiver(address)": "infinite",
								"supportsInterface(bytes4)": "881",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 398,
									"end": 2277,
									"name": "PUSH",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 398,
									"end": 2277,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 398,
									"end": 2277,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 398,
									"end": 2277,
									"name": "CALLVALUE",
									"source": 18
								},
								{
									"begin": 398,
									"end": 2277,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 398,
									"end": 2277,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 398,
									"end": 2277,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 2277,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 398,
									"end": 2277,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 2277,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 398,
									"end": 2277,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 398,
									"end": 2277,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 2277,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 398,
									"end": 2277,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 398,
									"end": 2277,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 2277,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 398,
									"end": 2277,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 2277,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 2277,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 398,
									"end": 2277,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 2277,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a6087b7a35be61ddd3679cb04a0328e98037783c1963a2582682f481c8400b9064736f6c63430008190033",
									".code": [
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "70A08231"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "B88D4FDE"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "B88D4FDE"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "C87B56DD"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "DA35A26F"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "E985E9C5"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "F2FDE38B"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "23"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "F4A0A528"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "tag",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "70A08231"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "715018A6"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "8DA5CB5B"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "95D89B41"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "16"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "A22CB465"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "17"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "A2682C1D"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "tag",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "3CCFD60B"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "3CCFD60B"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "42842E0E"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "5AFA3A72"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "6352211E"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "65EBF99A"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "6817C76C"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "tag",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "1FFC9A7"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "6FDDE03"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "81812FC"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "95EA7B3"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "23B872DD"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "tag",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 398,
											"end": 2277,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1843,
											"end": 2061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1843,
											"end": 2061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1843,
											"end": 2061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3546,
											"end": 3692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3546,
											"end": 3692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 4792,
											"end": 4946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4792,
											"end": 4946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4792,
											"end": 4946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 4618,
											"end": 4731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 4618,
											"end": 4731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 5495,
											"end": 6073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 5495,
											"end": 6073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2275,
											"name": "tag",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 2000,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2000,
											"end": 2275,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 2000,
											"end": 2275,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2000,
											"end": 2275,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2000,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "57"
										},
										{
											"begin": 2000,
											"end": 2275,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2000,
											"end": 2275,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2275,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2000,
											"end": 2275,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2000,
											"end": 2275,
											"name": "tag",
											"source": 18,
											"value": "57"
										},
										{
											"begin": 2000,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2000,
											"end": 2275,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2000,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "58"
										},
										{
											"begin": 2000,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "59"
										},
										{
											"begin": 2000,
											"end": 2275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2000,
											"end": 2275,
											"name": "tag",
											"source": 18,
											"value": "58"
										},
										{
											"begin": 2000,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2000,
											"end": 2275,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 6139,
											"end": 6271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 6139,
											"end": 6271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "tag",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "65"
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "66"
										},
										{
											"begin": 1386,
											"end": 1938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "tag",
											"source": 18,
											"value": "65"
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "67"
										},
										{
											"begin": 1386,
											"end": 1938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "tag",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "68"
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 1386,
											"end": 1938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "tag",
											"source": 18,
											"value": "68"
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3366,
											"end": 3484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3366,
											"end": 3484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3366,
											"end": 3484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "tag",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "75"
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "tag",
											"source": 18,
											"value": "75"
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "76"
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "77"
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 1096,
											"end": 1216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "tag",
											"source": 18,
											"value": "77"
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "79"
										},
										{
											"begin": 1096,
											"end": 1216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "tag",
											"source": 18,
											"value": "76"
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 604,
											"end": 628,
											"name": "tag",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 604,
											"end": 628,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 604,
											"end": 628,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 604,
											"end": 628,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 604,
											"end": 628,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 604,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 604,
											"end": 628,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 604,
											"end": 628,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 628,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 604,
											"end": 628,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 604,
											"end": 628,
											"name": "tag",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 604,
											"end": 628,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 604,
											"end": 628,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 604,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "81"
										},
										{
											"begin": 604,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "82"
										},
										{
											"begin": 604,
											"end": 628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 604,
											"end": 628,
											"name": "tag",
											"source": 18,
											"value": "81"
										},
										{
											"begin": 604,
											"end": 628,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 604,
											"end": 628,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 628,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 604,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "83"
										},
										{
											"begin": 604,
											"end": 628,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 604,
											"end": 628,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 604,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 604,
											"end": 628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 604,
											"end": 628,
											"name": "tag",
											"source": 18,
											"value": "83"
										},
										{
											"begin": 604,
											"end": 628,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 604,
											"end": 628,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 628,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 604,
											"end": 628,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 604,
											"end": 628,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 604,
											"end": 628,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 604,
											"end": 628,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 604,
											"end": 628,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3044,
											"end": 3309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3044,
											"end": 3309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3044,
											"end": 3309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3756,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3756,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 5013,
											"end": 5157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 5013,
											"end": 5157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 556,
											"end": 598,
											"name": "tag",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 556,
											"end": 598,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "106"
										},
										{
											"begin": 556,
											"end": 598,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 598,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "tag",
											"source": 18,
											"value": "106"
										},
										{
											"begin": 556,
											"end": 598,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "107"
										},
										{
											"begin": 556,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "108"
										},
										{
											"begin": 556,
											"end": 598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "tag",
											"source": 18,
											"value": "107"
										},
										{
											"begin": 556,
											"end": 598,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 556,
											"end": 598,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "109"
										},
										{
											"begin": 556,
											"end": 598,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "110"
										},
										{
											"begin": 556,
											"end": 598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "tag",
											"source": 18,
											"value": "109"
										},
										{
											"begin": 556,
											"end": 598,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 556,
											"end": 598,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 6337,
											"end": 6545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 6337,
											"end": 6545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2127,
											"end": 2797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2127,
											"end": 2797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2127,
											"end": 2797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "tag",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "121"
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "tag",
											"source": 18,
											"value": "121"
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "122"
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "123"
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "124"
										},
										{
											"begin": 744,
											"end": 1090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "tag",
											"source": 18,
											"value": "123"
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "125"
										},
										{
											"begin": 744,
											"end": 1090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "tag",
											"source": 18,
											"value": "122"
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 5223,
											"end": 5433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5223,
											"end": 5433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 5223,
											"end": 5433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "tag",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "136"
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "tag",
											"source": 18,
											"value": "136"
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "137"
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "138"
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "43"
										},
										{
											"begin": 1222,
											"end": 1380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "tag",
											"source": 18,
											"value": "138"
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "139"
										},
										{
											"begin": 1222,
											"end": 1380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "tag",
											"source": 18,
											"value": "137"
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1960,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 943,
											"end": 953,
											"name": "PUSH",
											"source": 4,
											"value": "49064906"
										},
										{
											"begin": 936,
											"end": 954,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 936,
											"end": 954,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 2014,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1979,
											"end": 2014,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 2014,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 2014,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1979,
											"end": 2014,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 2014,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 2014,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 2054,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1979,
											"end": 2054,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 2054,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2018,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2042,
											"end": 2053,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2018,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2018,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2018,
											"end": 2054,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2018,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 2054,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1979,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2054,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2054,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3591,
											"end": 3604,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3616,
											"end": 3639,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 3642,
											"end": 3659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3642,
											"end": 3661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3642,
											"end": 3661,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 3642,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3661,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3661,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3678,
											"end": 3679,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3678,
											"end": 3685,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3678,
											"end": 3685,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3671,
											"end": 3685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3671,
											"end": 3685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4878,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 4892,
											"end": 4899,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4878,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 4878,
											"end": 4900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4878,
											"end": 4900,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 4878,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4878,
											"end": 4900,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4918,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 4931,
											"end": 4938,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4918,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 4918,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4918,
											"end": 4939,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 4918,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4911,
											"end": 4939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4911,
											"end": 4939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 4698,
											"end": 4700,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4702,
											"end": 4709,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4711,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 4711,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4711,
											"end": 4723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4711,
											"end": 4723,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 4711,
											"end": 4723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4689,
											"end": 4724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4724,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 4689,
											"end": 4724,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4731,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5603,
											"end": 5604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5589,
											"end": 5605,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5589,
											"end": 5605,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5591,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5605,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5589,
											"end": 5605,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5605,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5585,
											"end": 5672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 5585,
											"end": 5672,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5659,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5628,
											"end": 5661,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5628,
											"end": 5661,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5628,
											"end": 5661,
											"name": "PUSH",
											"source": 3,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5628,
											"end": 5661,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5628,
											"end": 5661,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5628,
											"end": 5661,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5628,
											"end": 5661,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5628,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 5628,
											"end": 5661,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5628,
											"end": 5661,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5628,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 5628,
											"end": 5661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5628,
											"end": 5661,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 5628,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5628,
											"end": 5661,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5628,
											"end": 5661,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5628,
											"end": 5661,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5628,
											"end": 5661,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5628,
											"end": 5661,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5628,
											"end": 5661,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5628,
											"end": 5661,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5585,
											"end": 5672,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 5585,
											"end": 5672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5890,
											"end": 5911,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5914,
											"end": 5948,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 5922,
											"end": 5924,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5926,
											"end": 5933,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5935,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 5935,
											"end": 5945,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5935,
											"end": 5947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5935,
											"end": 5947,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 5935,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5914,
											"end": 5921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 5914,
											"end": 5948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5914,
											"end": 5948,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 5914,
											"end": 5948,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5890,
											"end": 5948,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5890,
											"end": 5948,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 5983,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5962,
											"end": 5983,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5962,
											"end": 5983,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5962,
											"end": 5975,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5962,
											"end": 5983,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5962,
											"end": 5983,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5962,
											"end": 5983,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5958,
											"end": 6067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 5958,
											"end": 6067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6027,
											"end": 6031,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6033,
											"end": 6040,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6042,
											"end": 6055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6006,
											"end": 6056,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6006,
											"end": 6056,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6006,
											"end": 6056,
											"name": "PUSH",
											"source": 3,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6006,
											"end": 6056,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6006,
											"end": 6056,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6006,
											"end": 6056,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6006,
											"end": 6056,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6006,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 6006,
											"end": 6056,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6006,
											"end": 6056,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6006,
											"end": 6056,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6006,
											"end": 6056,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6006,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 6006,
											"end": 6056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6006,
											"end": 6056,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 6006,
											"end": 6056,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6006,
											"end": 6056,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6006,
											"end": 6056,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6006,
											"end": 6056,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6006,
											"end": 6056,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6006,
											"end": 6056,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6006,
											"end": 6056,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6006,
											"end": 6056,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5958,
											"end": 6067,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 5958,
											"end": 6067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5575,
											"end": 6073,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 6073,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 6073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2275,
											"name": "tag",
											"source": 18,
											"value": "59"
										},
										{
											"begin": 2000,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2037,
											"end": 2052,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2076,
											"name": "SELFBALANCE",
											"source": 18
										},
										{
											"begin": 2037,
											"end": 2076,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2037,
											"end": 2076,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2104,
											"end": 2105,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2094,
											"end": 2101,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2094,
											"end": 2105,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2086,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "173"
										},
										{
											"begin": 2086,
											"end": 2132,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2086,
											"end": 2132,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2132,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2086,
											"end": 2132,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2086,
											"end": 2132,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2086,
											"end": 2132,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2086,
											"end": 2132,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2086,
											"end": 2132,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2086,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "174"
										},
										{
											"begin": 2086,
											"end": 2132,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2086,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "175"
										},
										{
											"begin": 2086,
											"end": 2132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2086,
											"end": 2132,
											"name": "tag",
											"source": 18,
											"value": "174"
										},
										{
											"begin": 2086,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2086,
											"end": 2132,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2132,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2086,
											"end": 2132,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2086,
											"end": 2132,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2086,
											"end": 2132,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2086,
											"end": 2132,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2086,
											"end": 2132,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2086,
											"end": 2132,
											"name": "tag",
											"source": 18,
											"value": "173"
										},
										{
											"begin": 2086,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2173,
											"end": 2192,
											"name": "PUSH",
											"source": 18,
											"value": "33"
										},
										{
											"begin": 2173,
											"end": 2192,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2173,
											"end": 2192,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2173,
											"end": 2192,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2173,
											"end": 2192,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2173,
											"end": 2192,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 2173,
											"end": 2192,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 2173,
											"end": 2192,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2173,
											"end": 2192,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 2173,
											"end": 2192,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2173,
											"end": 2192,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2150,
											"end": 2192,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2192,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2168,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 2150,
											"end": 2192,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2192,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2150,
											"end": 2192,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 2142,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "176"
										},
										{
											"begin": 2142,
											"end": 2221,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2142,
											"end": 2221,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2221,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2142,
											"end": 2221,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2142,
											"end": 2221,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2142,
											"end": 2221,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2142,
											"end": 2221,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2142,
											"end": 2221,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2142,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "177"
										},
										{
											"begin": 2142,
											"end": 2221,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2142,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "178"
										},
										{
											"begin": 2142,
											"end": 2221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2142,
											"end": 2221,
											"name": "tag",
											"source": 18,
											"value": "177"
										},
										{
											"begin": 2142,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2142,
											"end": 2221,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2221,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2142,
											"end": 2221,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2142,
											"end": 2221,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2142,
											"end": 2221,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2142,
											"end": 2221,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2142,
											"end": 2221,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2142,
											"end": 2221,
											"name": "tag",
											"source": 18,
											"value": "176"
										},
										{
											"begin": 2142,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2250,
											"name": "PUSH",
											"source": 18,
											"value": "33"
										},
										{
											"begin": 2231,
											"end": 2250,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2231,
											"end": 2250,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2250,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2250,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2250,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 2231,
											"end": 2250,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2250,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2250,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2250,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2231,
											"end": 2250,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2259,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2231,
											"end": 2259,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "PUSH",
											"source": 18,
											"value": "8FC"
										},
										{
											"begin": 2260,
											"end": 2267,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "180"
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "tag",
											"source": 18,
											"value": "180"
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2231,
											"end": 2268,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2027,
											"end": 2275,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2000,
											"end": 2275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 6242,
											"end": 6246,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6248,
											"end": 6250,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6252,
											"end": 6259,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6264,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6264,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6264,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6264,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6225,
											"end": 6264,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6264,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6264,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6264,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6264,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6225,
											"end": 6264,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6264,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6264,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 6225,
											"end": 6264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6264,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 6225,
											"end": 6264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6271,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "tag",
											"source": 18,
											"value": "67"
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1479,
											"end": 1486,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 2526,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2526,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "34"
										},
										{
											"begin": 1519,
											"end": 1528,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1506,
											"end": 1515,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 1506,
											"end": 1528,
											"modifierDepth": 1,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1506,
											"end": 1528,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1498,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "187"
										},
										{
											"begin": 1498,
											"end": 1569,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1498,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1498,
											"end": 1569,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1498,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1498,
											"end": 1569,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1498,
											"end": 1569,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1498,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1498,
											"end": 1569,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1498,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "188"
										},
										{
											"begin": 1498,
											"end": 1569,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1498,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "189"
										},
										{
											"begin": 1498,
											"end": 1569,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1498,
											"end": 1569,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "188"
										},
										{
											"begin": 1498,
											"end": 1569,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1498,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1498,
											"end": 1569,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1498,
											"end": 1569,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1498,
											"end": 1569,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1498,
											"end": 1569,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1498,
											"end": 1569,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1498,
											"end": 1569,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1498,
											"end": 1569,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "187"
										},
										{
											"begin": 1498,
											"end": 1569,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1580,
											"end": 1589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 1580,
											"end": 1589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1580,
											"end": 1591,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1580,
											"end": 1591,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1580,
											"end": 1591,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1580,
											"end": 1591,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1580,
											"end": 1591,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1580,
											"end": 1591,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1580,
											"end": 1591,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "190"
										},
										{
											"begin": 1580,
											"end": 1591,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1580,
											"end": 1591,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "191"
										},
										{
											"begin": 1580,
											"end": 1591,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1580,
											"end": 1591,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "190"
										},
										{
											"begin": 1580,
											"end": 1591,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1580,
											"end": 1591,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1580,
											"end": 1591,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1580,
											"end": 1591,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1580,
											"end": 1591,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1580,
											"end": 1591,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1601,
											"end": 1619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1622,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 1622,
											"end": 1631,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1601,
											"end": 1631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1601,
											"end": 1631,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1641,
											"end": 1670,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "192"
										},
										{
											"begin": 1647,
											"end": 1657,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 1659,
											"end": 1669,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1641,
											"end": 1646,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "193"
										},
										{
											"begin": 1641,
											"end": 1670,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1641,
											"end": 1670,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "192"
										},
										{
											"begin": 1641,
											"end": 1670,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1680,
											"end": 1714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "194"
										},
										{
											"begin": 1693,
											"end": 1703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1705,
											"end": 1713,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1680,
											"end": 1692,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "195"
										},
										{
											"begin": 1680,
											"end": 1714,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1680,
											"end": 1714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "194"
										},
										{
											"begin": 1680,
											"end": 1714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "33"
										},
										{
											"begin": 1796,
											"end": 1815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1815,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1815,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1815,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1796,
											"end": 1815,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1815,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1815,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1815,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1824,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "8FC"
										},
										{
											"begin": 1825,
											"end": 1834,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "197"
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1835,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "197"
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1835,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1876,
											"end": 1886,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 1851,
											"end": 1904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1851,
											"end": 1904,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1864,
											"end": 1874,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1851,
											"end": 1904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "463EC2A62C46678A81E23CDE640446CA4B512F102BB3309CF5A3E2A4AE831464"
										},
										{
											"begin": 1888,
											"end": 1896,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1898,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1851,
											"end": 1904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1904,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1851,
											"end": 1904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "198"
										},
										{
											"begin": 1851,
											"end": 1904,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1851,
											"end": 1904,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1851,
											"end": 1904,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1851,
											"end": 1904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "199"
										},
										{
											"begin": 1851,
											"end": 1904,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1851,
											"end": 1904,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "198"
										},
										{
											"begin": 1851,
											"end": 1904,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1851,
											"end": 1904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1904,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1851,
											"end": 1904,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1851,
											"end": 1904,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1851,
											"end": 1904,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1851,
											"end": 1904,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1851,
											"end": 1904,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 18
										},
										{
											"begin": 1921,
											"end": 1931,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1914,
											"end": 1931,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1914,
											"end": 1931,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1914,
											"end": 1931,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 2568,
											"end": 2588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1938,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1386,
											"end": 1938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3429,
											"end": 3436,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3455,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 3469,
											"end": 3476,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3455,
											"end": 3477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3477,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 3455,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3448,
											"end": 3477,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3448,
											"end": 3477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "tag",
											"source": 18,
											"value": "79"
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1209,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1178,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "33"
										},
										{
											"begin": 1178,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1178,
											"end": 1209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1178,
											"end": 1209,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1178,
											"end": 1209,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1178,
											"end": 1209,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1178,
											"end": 1209,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1178,
											"end": 1209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1178,
											"end": 1209,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1178,
											"end": 1209,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1178,
											"end": 1209,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1178,
											"end": 1209,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1178,
											"end": 1209,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1178,
											"end": 1209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1178,
											"end": 1209,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1178,
											"end": 1209,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1178,
											"end": 1209,
											"modifierDepth": 1,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 1178,
											"end": 1209,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1178,
											"end": 1209,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1178,
											"end": 1209,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1096,
											"end": 1216,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1096,
											"end": 1216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 604,
											"end": 628,
											"name": "tag",
											"source": 18,
											"value": "82"
										},
										{
											"begin": 604,
											"end": 628,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 604,
											"end": 628,
											"name": "PUSH",
											"source": 18,
											"value": "34"
										},
										{
											"begin": 604,
											"end": 628,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 604,
											"end": 628,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 604,
											"end": 628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3107,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3126,
											"end": 3149,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 3152,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3152,
											"end": 3171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3171,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 3152,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3126,
											"end": 3171,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3126,
											"end": 3171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3202,
											"end": 3203,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3185,
											"end": 3204,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3185,
											"end": 3204,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3190,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3204,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3185,
											"end": 3204,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3204,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 3181,
											"end": 3268,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3254,
											"end": 3255,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3257,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3227,
											"end": 3257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3227,
											"end": 3257,
											"name": "PUSH",
											"source": 3,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3227,
											"end": 3257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3227,
											"end": 3257,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3227,
											"end": 3257,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3227,
											"end": 3257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3227,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 3227,
											"end": 3257,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3227,
											"end": 3257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3227,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3227,
											"end": 3257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3227,
											"end": 3257,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 3227,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3227,
											"end": 3257,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3227,
											"end": 3257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3227,
											"end": 3257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3227,
											"end": 3257,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3227,
											"end": 3257,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3227,
											"end": 3257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3227,
											"end": 3257,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3268,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 3181,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3284,
											"end": 3285,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3284,
											"end": 3295,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3284,
											"end": 3295,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3284,
											"end": 3302,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3301,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3284,
											"end": 3302,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3284,
											"end": 3302,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3284,
											"end": 3302,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3284,
											"end": 3302,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3284,
											"end": 3302,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3284,
											"end": 3302,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3284,
											"end": 3302,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3284,
											"end": 3302,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3284,
											"end": 3302,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3284,
											"end": 3302,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3284,
											"end": 3302,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3284,
											"end": 3302,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3284,
											"end": 3302,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3284,
											"end": 3302,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3284,
											"end": 3302,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3284,
											"end": 3302,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3277,
											"end": 3302,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3277,
											"end": 3302,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3277,
											"end": 3302,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3816,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3854,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 3854,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3854,
											"end": 3873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3854,
											"end": 3873,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 3854,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3828,
											"end": 3873,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3828,
											"end": 3873,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3890,
											"end": 3891,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3890,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3890,
											"end": 3899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3883,
											"end": 3899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3883,
											"end": 3899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3906,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 5117,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 5117,
											"end": 5127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5117,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5117,
											"end": 5129,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 5117,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5139,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5141,
											"end": 5149,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 5098,
											"end": 5150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5150,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 5098,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5157,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 556,
											"end": 598,
											"name": "tag",
											"source": 18,
											"value": "108"
										},
										{
											"begin": 556,
											"end": 598,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "PUSH",
											"source": 18,
											"value": "33"
										},
										{
											"begin": 556,
											"end": 598,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 598,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 556,
											"end": 598,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 556,
											"end": 598,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 556,
											"end": 598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6450,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 6463,
											"end": 6467,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6469,
											"end": 6471,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6473,
											"end": 6480,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6450,
											"end": 6462,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 6450,
											"end": 6481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6450,
											"end": 6481,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 6450,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6491,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 6514,
											"end": 6518,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6520,
											"end": 6522,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6524,
											"end": 6531,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6533,
											"end": 6537,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6491,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 6491,
											"end": 6538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6491,
											"end": 6538,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 6491,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2213,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2225,
											"end": 2258,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 2261,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 2261,
											"end": 2290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2290,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 2261,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2290,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2290,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2300,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 2314,
											"end": 2321,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2300,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2300,
											"end": 2322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2300,
											"end": 2322,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 2300,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2300,
											"end": 2322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2356,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2360,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2371,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2372,
											"end": 2379,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2333,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2333,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 2411,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 2411,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2411,
											"end": 2421,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 2411,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2421,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2421,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2504,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2512,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2517,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 2490,
											"end": 2560,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 2549,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2533,
											"end": 2549,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2533,
											"end": 2549,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2533,
											"end": 2549,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2533,
											"end": 2549,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2533,
											"end": 2549,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2533,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 2533,
											"end": 2549,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2560,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 2490,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2685,
											"end": 2686,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2665,
											"end": 2674,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2659,
											"end": 2682,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2659,
											"end": 2686,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2750,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 2655,
											"end": 2750,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2723,
											"end": 2727,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2729,
											"end": 2738,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2739,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2709,
											"end": 2739,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2739,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2709,
											"end": 2739,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 2709,
											"end": 2739,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2739,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2739,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 2709,
											"end": 2739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2739,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 2709,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2739,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2709,
											"end": 2739,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2739,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2709,
											"end": 2739,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2739,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2739,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2739,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2739,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2739,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2739,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2739,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2709,
											"end": 2739,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2739,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2739,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2739,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2739,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2739,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 2702,
											"end": 2739,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2750,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 2655,
											"end": 2750,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2767,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 2782,
											"end": 2789,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2767,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 2767,
											"end": 2790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2767,
											"end": 2790,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 2767,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "tag",
											"source": 18,
											"value": "125"
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 851,
											"end": 876,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "261"
										},
										{
											"begin": 851,
											"end": 874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "262"
										},
										{
											"begin": 851,
											"end": 876,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 851,
											"end": 876,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "261"
										},
										{
											"begin": 851,
											"end": 876,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 886,
											"end": 912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "263"
										},
										{
											"begin": 901,
											"end": 911,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 886,
											"end": 900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "264"
										},
										{
											"begin": 886,
											"end": 912,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 886,
											"end": 912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "263"
										},
										{
											"begin": 886,
											"end": 912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 922,
											"end": 946,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "265"
										},
										{
											"begin": 922,
											"end": 944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "266"
										},
										{
											"begin": 922,
											"end": 946,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 922,
											"end": 946,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "265"
										},
										{
											"begin": 922,
											"end": 946,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "267"
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "E"
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4D6574617165657572546F6B656E000000000000000000000000000000000000"
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 957,
											"end": 995,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4D51540000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 957,
											"end": 995,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 957,
											"end": 970,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "268"
										},
										{
											"begin": 957,
											"end": 995,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "267"
										},
										{
											"begin": 957,
											"end": 995,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1017,
											"end": 1027,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1005,
											"end": 1014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "34"
										},
										{
											"begin": 1005,
											"end": 1027,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1005,
											"end": 1027,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1005,
											"end": 1027,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1005,
											"end": 1027,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1059,
											"end": 1079,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1037,
											"end": 1056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "33"
										},
										{
											"begin": 1037,
											"end": 1056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1037,
											"end": 1079,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1037,
											"end": 1079,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1037,
											"end": 1079,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1037,
											"end": 1079,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1037,
											"end": 1079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1037,
											"end": 1079,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1037,
											"end": 1079,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1037,
											"end": 1079,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1037,
											"end": 1079,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1037,
											"end": 1079,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1037,
											"end": 1079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1037,
											"end": 1079,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1037,
											"end": 1079,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1037,
											"end": 1079,
											"modifierDepth": 1,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 1037,
											"end": 1079,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1037,
											"end": 1079,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1037,
											"end": 1079,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 744,
											"end": 1090,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 744,
											"end": 1090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5311,
											"end": 5315,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5350,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5353,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 5353,
											"end": 5370,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 5353,
											"end": 5372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5353,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 5353,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5327,
											"end": 5372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5327,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5390,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5416,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5410,
											"end": 5415,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5416,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5389,
											"end": 5416,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5416,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5389,
											"end": 5416,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5416,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5416,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5416,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5389,
											"end": 5416,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5416,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5416,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5416,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5416,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5389,
											"end": 5416,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5416,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5416,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5417,
											"end": 5425,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 5389,
											"end": 5426,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5382,
											"end": 5426,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5382,
											"end": 5426,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5382,
											"end": 5426,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "tag",
											"source": 18,
											"value": "139"
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1304,
											"end": 1305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1295,
											"end": 1301,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1295,
											"end": 1305,
											"modifierDepth": 1,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 1287,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "283"
										},
										{
											"begin": 1287,
											"end": 1345,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1287,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1345,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1287,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1287,
											"end": 1345,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1287,
											"end": 1345,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1287,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1287,
											"end": 1345,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1287,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "284"
										},
										{
											"begin": 1287,
											"end": 1345,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1287,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "285"
										},
										{
											"begin": 1287,
											"end": 1345,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1287,
											"end": 1345,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "284"
										},
										{
											"begin": 1287,
											"end": 1345,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1287,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1345,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1287,
											"end": 1345,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1287,
											"end": 1345,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1287,
											"end": 1345,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1287,
											"end": 1345,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1287,
											"end": 1345,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1287,
											"end": 1345,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "283"
										},
										{
											"begin": 1287,
											"end": 1345,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1367,
											"end": 1373,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1355,
											"end": 1364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "34"
										},
										{
											"begin": 1355,
											"end": 1373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1355,
											"end": 1373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1355,
											"end": 1373,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1355,
											"end": 1373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1222,
											"end": 1380,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1222,
											"end": 1380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2674,
											"end": 2985,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2674,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2787,
											"end": 2791,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2837,
											"end": 2862,
											"name": "PUSH",
											"source": 3,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2822,
											"end": 2862,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2822,
											"end": 2862,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2822,
											"end": 2862,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2822,
											"end": 2833,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2822,
											"end": 2862,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2822,
											"end": 2862,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2822,
											"end": 2862,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2822,
											"end": 2862,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2893,
											"end": 2926,
											"name": "PUSH",
											"source": 3,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2878,
											"end": 2926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2878,
											"end": 2926,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2889,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2878,
											"end": 2926,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2926,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 2822,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2822,
											"end": 2978,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2822,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 2822,
											"end": 2978,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2822,
											"end": 2978,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2942,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 2966,
											"end": 2977,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2942,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 2942,
											"end": 2978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2942,
											"end": 2978,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 2942,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2822,
											"end": 2978,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 2822,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2978,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2978,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2674,
											"end": 2985,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2674,
											"end": 2985,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2674,
											"end": 2985,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2674,
											"end": 2985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1958,
											"end": 2114,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1958,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2032,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2077,
											"end": 2098,
											"name": "PUSH",
											"source": 3,
											"value": "80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079300"
										},
										{
											"begin": 2067,
											"end": 2098,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2067,
											"end": 2098,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1958,
											"end": 2114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1958,
											"end": 2114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17836,
											"end": 18077,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 17836,
											"end": 18077,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17899,
											"end": 17906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17918,
											"end": 17931,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17934,
											"end": 17951,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 17943,
											"end": 17950,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17934,
											"end": 17942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 17934,
											"end": 17951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17934,
											"end": 17951,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 17934,
											"end": 17951,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17918,
											"end": 17951,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17918,
											"end": 17951,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17982,
											"end": 17983,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17965,
											"end": 17984,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17965,
											"end": 17984,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17965,
											"end": 17970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17965,
											"end": 17984,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17965,
											"end": 17984,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17965,
											"end": 17984,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17961,
											"end": 18049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 17961,
											"end": 18049,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18030,
											"end": 18037,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18007,
											"end": 18038,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18007,
											"end": 18038,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 18007,
											"end": 18038,
											"name": "PUSH",
											"source": 3,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18007,
											"end": 18038,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18007,
											"end": 18038,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 18007,
											"end": 18038,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 18007,
											"end": 18038,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18007,
											"end": 18038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 18007,
											"end": 18038,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18007,
											"end": 18038,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18007,
											"end": 18038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 18007,
											"end": 18038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18007,
											"end": 18038,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 18007,
											"end": 18038,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18007,
											"end": 18038,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18007,
											"end": 18038,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 18007,
											"end": 18038,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18007,
											"end": 18038,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18007,
											"end": 18038,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 18007,
											"end": 18038,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18007,
											"end": 18038,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17961,
											"end": 18049,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 17961,
											"end": 18049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18065,
											"end": 18070,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18058,
											"end": 18070,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18058,
											"end": 18070,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18058,
											"end": 18070,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17836,
											"end": 18077,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17836,
											"end": 18077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17836,
											"end": 18077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17836,
											"end": 18077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7347,
											"end": 7531,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 7347,
											"end": 7531,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7417,
											"end": 7424,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7436,
											"end": 7459,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 7462,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 7462,
											"end": 7481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7481,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 7462,
											"end": 7481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7436,
											"end": 7481,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7436,
											"end": 7481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7499,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7515,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7498,
											"end": 7515,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7516,
											"end": 7523,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7491,
											"end": 7524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7491,
											"end": 7524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7491,
											"end": 7524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7347,
											"end": 7531,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7347,
											"end": 7531,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7347,
											"end": 7531,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7347,
											"end": 7531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16002,
											"end": 16122,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 16002,
											"end": 16122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16082,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 16091,
											"end": 16093,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 16095,
											"end": 16102,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 16104,
											"end": 16108,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 16110,
											"end": 16114,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 16082,
											"end": 16090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 16082,
											"end": 16115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16082,
											"end": 16115,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 16082,
											"end": 16115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16002,
											"end": 16122,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16002,
											"end": 16122,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16002,
											"end": 16122,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16002,
											"end": 16122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10361,
											"end": 11217,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 10361,
											"end": 11217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10447,
											"end": 10454,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10466,
											"end": 10489,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10492,
											"end": 10511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 10492,
											"end": 10509,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 10492,
											"end": 10511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10492,
											"end": 10511,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 10492,
											"end": 10511,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10466,
											"end": 10511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10466,
											"end": 10511,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10521,
											"end": 10533,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 10545,
											"end": 10552,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10536,
											"end": 10544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 10536,
											"end": 10553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10521,
											"end": 10553,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10521,
											"end": 10553,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10629,
											"end": 10630,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10613,
											"end": 10631,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10613,
											"end": 10631,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10613,
											"end": 10617,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10613,
											"end": 10631,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10613,
											"end": 10631,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10613,
											"end": 10631,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10609,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 10609,
											"end": 10695,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10647,
											"end": 10684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 10664,
											"end": 10668,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10670,
											"end": 10674,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10676,
											"end": 10683,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 10647,
											"end": 10663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 10647,
											"end": 10684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10647,
											"end": 10684,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 10647,
											"end": 10684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10609,
											"end": 10695,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 10609,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10755,
											"end": 10756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10739,
											"end": 10757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10739,
											"end": 10757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10739,
											"end": 10743,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10739,
											"end": 10757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10739,
											"end": 10757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10739,
											"end": 10757,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10735,
											"end": 10993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 10735,
											"end": 10993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10855,
											"end": 10903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 10872,
											"end": 10873,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10876,
											"end": 10883,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10893,
											"end": 10894,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10897,
											"end": 10902,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10855,
											"end": 10863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 10855,
											"end": 10903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10855,
											"end": 10903,
											"name": "tag",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 10855,
											"end": 10903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10967,
											"end": 10968,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10946,
											"end": 10947,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10946,
											"end": 10957,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 10946,
											"end": 10957,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10946,
											"end": 10963,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10958,
											"end": 10962,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10946,
											"end": 10963,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10946,
											"end": 10963,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10946,
											"end": 10963,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10946,
											"end": 10963,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10946,
											"end": 10963,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10946,
											"end": 10963,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10946,
											"end": 10963,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10946,
											"end": 10963,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10946,
											"end": 10963,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10946,
											"end": 10963,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10946,
											"end": 10963,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10946,
											"end": 10963,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10946,
											"end": 10963,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10946,
											"end": 10963,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10946,
											"end": 10963,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10946,
											"end": 10963,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10946,
											"end": 10968,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10946,
											"end": 10968,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10946,
											"end": 10968,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10946,
											"end": 10968,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10946,
											"end": 10968,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10946,
											"end": 10968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10946,
											"end": 10968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10946,
											"end": 10968,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10946,
											"end": 10968,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10946,
											"end": 10968,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10946,
											"end": 10968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10735,
											"end": 10993,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 10735,
											"end": 10993,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11021,
											"end": 11022,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11007,
											"end": 11023,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11007,
											"end": 11023,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11007,
											"end": 11009,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 11007,
											"end": 11023,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11007,
											"end": 11023,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11007,
											"end": 11023,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 11003,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 11003,
											"end": 11112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11086,
											"end": 11087,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11067,
											"end": 11068,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11067,
											"end": 11078,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 11067,
											"end": 11078,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11067,
											"end": 11082,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11079,
											"end": 11081,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 11067,
											"end": 11082,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11067,
											"end": 11082,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11067,
											"end": 11082,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11067,
											"end": 11082,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11067,
											"end": 11082,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11067,
											"end": 11082,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11067,
											"end": 11082,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11067,
											"end": 11082,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11067,
											"end": 11082,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11067,
											"end": 11082,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11067,
											"end": 11082,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11067,
											"end": 11082,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11067,
											"end": 11082,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11067,
											"end": 11082,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11067,
											"end": 11082,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11067,
											"end": 11082,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11067,
											"end": 11087,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11067,
											"end": 11087,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11067,
											"end": 11087,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 11067,
											"end": 11087,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11067,
											"end": 11087,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11067,
											"end": 11087,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11067,
											"end": 11087,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11067,
											"end": 11087,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11067,
											"end": 11087,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11067,
											"end": 11087,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11067,
											"end": 11087,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11003,
											"end": 11112,
											"name": "tag",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 11003,
											"end": 11112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11143,
											"end": 11145,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11123,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11131,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 11122,
											"end": 11131,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11140,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11132,
											"end": 11139,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11140,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11140,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11140,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11122,
											"end": 11140,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11140,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11140,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11140,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11140,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11122,
											"end": 11140,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11140,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11122,
											"end": 11140,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11140,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11122,
											"end": 11145,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 11122,
											"end": 11145,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11145,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11145,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11122,
											"end": 11145,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11145,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11145,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11145,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11145,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11122,
											"end": 11145,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11145,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11145,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11145,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11180,
											"end": 11187,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11176,
											"end": 11178,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 11161,
											"end": 11188,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11161,
											"end": 11188,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11170,
											"end": 11174,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11161,
											"end": 11188,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11161,
											"end": 11188,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11161,
											"end": 11188,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 11161,
											"end": 11188,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11161,
											"end": 11188,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11161,
											"end": 11188,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11161,
											"end": 11188,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11161,
											"end": 11188,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11161,
											"end": 11188,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11161,
											"end": 11188,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11161,
											"end": 11188,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11161,
											"end": 11188,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 11206,
											"end": 11210,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11199,
											"end": 11210,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11199,
											"end": 11210,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11199,
											"end": 11210,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11199,
											"end": 11210,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10361,
											"end": 11217,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10361,
											"end": 11217,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10361,
											"end": 11217,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10361,
											"end": 11217,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10361,
											"end": 11217,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10361,
											"end": 11217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2601,
											"end": 2888,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2601,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1852,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2733,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2733,
											"end": 2740,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2752,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 2725,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1852,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2863,
											"end": 2870,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2601,
											"end": 2888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11539,
											"end": 11866,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 11539,
											"end": 11866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11620,
											"end": 11621,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11606,
											"end": 11622,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11606,
											"end": 11622,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11606,
											"end": 11608,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11606,
											"end": 11622,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11606,
											"end": 11622,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11606,
											"end": 11622,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11602,
											"end": 11689,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 11602,
											"end": 11689,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11675,
											"end": 11676,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11645,
											"end": 11678,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11645,
											"end": 11678,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11645,
											"end": 11678,
											"name": "PUSH",
											"source": 3,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11645,
											"end": 11678,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11645,
											"end": 11678,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11645,
											"end": 11678,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11645,
											"end": 11678,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11645,
											"end": 11678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 11645,
											"end": 11678,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11645,
											"end": 11678,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11645,
											"end": 11678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 11645,
											"end": 11678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11645,
											"end": 11678,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 11645,
											"end": 11678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11645,
											"end": 11678,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11645,
											"end": 11678,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11645,
											"end": 11678,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11645,
											"end": 11678,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11645,
											"end": 11678,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11645,
											"end": 11678,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11645,
											"end": 11678,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11602,
											"end": 11689,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 11602,
											"end": 11689,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11698,
											"end": 11719,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11722,
											"end": 11754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 11730,
											"end": 11732,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11734,
											"end": 11741,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11751,
											"end": 11752,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11722,
											"end": 11729,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 11722,
											"end": 11754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11722,
											"end": 11754,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 11722,
											"end": 11754,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11698,
											"end": 11754,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11698,
											"end": 11754,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11793,
											"end": 11794,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11768,
											"end": 11795,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11768,
											"end": 11795,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11768,
											"end": 11781,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11768,
											"end": 11795,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11768,
											"end": 11795,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11768,
											"end": 11795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 11764,
											"end": 11860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 11764,
											"end": 11860,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11846,
											"end": 11847,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11818,
											"end": 11849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11818,
											"end": 11849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11818,
											"end": 11849,
											"name": "PUSH",
											"source": 3,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11818,
											"end": 11849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11818,
											"end": 11849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11818,
											"end": 11849,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11818,
											"end": 11849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11818,
											"end": 11849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 11818,
											"end": 11849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11818,
											"end": 11849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11818,
											"end": 11849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 11818,
											"end": 11849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11818,
											"end": 11849,
											"name": "tag",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 11818,
											"end": 11849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11818,
											"end": 11849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11818,
											"end": 11849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11818,
											"end": 11849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11818,
											"end": 11849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11818,
											"end": 11849,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11818,
											"end": 11849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11818,
											"end": 11849,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11764,
											"end": 11860,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 11764,
											"end": 11860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11592,
											"end": 11866,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11539,
											"end": 11866,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11539,
											"end": 11866,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11539,
											"end": 11866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2916,
											"end": 3160,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 2916,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3040,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3043,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 3043,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 3043,
											"end": 3072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3043,
											"end": 3072,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 3043,
											"end": 3072,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3072,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3072,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 3115,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3083,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3094,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3094,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3102,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3115,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3115,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 3082,
											"end": 3115,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3115,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 3082,
											"end": 3115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3115,
											"name": "tag",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 3082,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3153,
											"name": "PUSH",
											"source": 4,
											"value": "F8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7"
										},
										{
											"begin": 3145,
											"end": 3152,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3153,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3130,
											"end": 3153,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 3130,
											"end": 3153,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3153,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3130,
											"end": 3153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3153,
											"name": "tag",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 3130,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3153,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3130,
											"end": 3153,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3153,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3153,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3153,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3153,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3153,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2997,
											"end": 3160,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2916,
											"end": 3160,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2916,
											"end": 3160,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2916,
											"end": 3160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2894,
											"end": 3103,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 2894,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3074,
											"end": 3081,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2894,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17232,
											"end": 17601,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 17232,
											"end": 17601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17335,
											"end": 17358,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17361,
											"end": 17380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 17361,
											"end": 17378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 17361,
											"end": 17380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17361,
											"end": 17380,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 17361,
											"end": 17380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17335,
											"end": 17380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17335,
											"end": 17380,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17414,
											"end": 17415,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17394,
											"end": 17416,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17394,
											"end": 17416,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17394,
											"end": 17402,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17394,
											"end": 17416,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17394,
											"end": 17416,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17394,
											"end": 17416,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17390,
											"end": 17481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 17390,
											"end": 17481,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17469,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17439,
											"end": 17470,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17439,
											"end": 17470,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17439,
											"end": 17470,
											"name": "PUSH",
											"source": 3,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17439,
											"end": 17470,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17439,
											"end": 17470,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17439,
											"end": 17470,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17439,
											"end": 17470,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17439,
											"end": 17470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 17439,
											"end": 17470,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17439,
											"end": 17470,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17439,
											"end": 17470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 17439,
											"end": 17470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17439,
											"end": 17470,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 17439,
											"end": 17470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17439,
											"end": 17470,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17439,
											"end": 17470,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17439,
											"end": 17470,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17439,
											"end": 17470,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17439,
											"end": 17470,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17439,
											"end": 17470,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17439,
											"end": 17470,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17390,
											"end": 17481,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 17390,
											"end": 17481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17530,
											"end": 17538,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17491,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17510,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 17490,
											"end": 17510,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17517,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17511,
											"end": 17516,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17517,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17490,
											"end": 17517,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17517,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17490,
											"end": 17517,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17517,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17517,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17490,
											"end": 17517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17517,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17517,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17490,
											"end": 17517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17517,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17490,
											"end": 17517,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17527,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17518,
											"end": 17526,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17527,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17490,
											"end": 17527,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17527,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17490,
											"end": 17527,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17527,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17527,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17527,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17490,
											"end": 17527,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17527,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17527,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17527,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17527,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17490,
											"end": 17527,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17527,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17490,
											"end": 17527,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17527,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17490,
											"end": 17538,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 17490,
											"end": 17538,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17538,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17538,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17538,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17538,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 17490,
											"end": 17538,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17538,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17538,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17538,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17538,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17538,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17538,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17538,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17538,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17538,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17538,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17575,
											"end": 17583,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17553,
											"end": 17594,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17553,
											"end": 17594,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17568,
											"end": 17573,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17553,
											"end": 17594,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17553,
											"end": 17594,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17553,
											"end": 17594,
											"name": "PUSH",
											"source": 3,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 17585,
											"end": 17593,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17553,
											"end": 17594,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17553,
											"end": 17594,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17553,
											"end": 17594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 17553,
											"end": 17594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17553,
											"end": 17594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17553,
											"end": 17594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 17553,
											"end": 17594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17553,
											"end": 17594,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 17553,
											"end": 17594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17553,
											"end": 17594,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17553,
											"end": 17594,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17553,
											"end": 17594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17553,
											"end": 17594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17553,
											"end": 17594,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17553,
											"end": 17594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17553,
											"end": 17594,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 17325,
											"end": 17601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17232,
											"end": 17601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17232,
											"end": 17601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17232,
											"end": 17601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17232,
											"end": 17601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18616,
											"end": 19398,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 18616,
											"end": 19398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18749,
											"end": 18750,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18732,
											"end": 18734,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 18732,
											"end": 18746,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18732,
											"end": 18746,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18732,
											"end": 18746,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 18732,
											"end": 18750,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 18728,
											"end": 19392,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 18728,
											"end": 19392,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 18728,
											"end": 19392,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18786,
											"end": 18788,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18806,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18770,
											"end": 18806,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18806,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 18807,
											"end": 18819,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 18807,
											"end": 18817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 18807,
											"end": 18819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18807,
											"end": 18819,
											"name": "tag",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 18807,
											"end": 18819,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18821,
											"end": 18825,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 18827,
											"end": 18834,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 18836,
											"end": 18840,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 18770,
											"end": 18841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "tag",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 18770,
											"end": 18841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "tag",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "tag",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 18770,
											"end": 18841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "tag",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "tag",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19096,
											"end": 19097,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19079,
											"end": 19085,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19079,
											"end": 19092,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 19079,
											"end": 19097,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 19075,
											"end": 19368,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 19075,
											"end": 19368,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 19150,
											"end": 19152,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19128,
											"end": 19153,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 19128,
											"end": 19153,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 19128,
											"end": 19153,
											"name": "PUSH",
											"source": 3,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19128,
											"end": 19153,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19128,
											"end": 19153,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19128,
											"end": 19153,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 19128,
											"end": 19153,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19128,
											"end": 19153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 19128,
											"end": 19153,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 19128,
											"end": 19153,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19128,
											"end": 19153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 19128,
											"end": 19153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 19128,
											"end": 19153,
											"name": "tag",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 19128,
											"end": 19153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19128,
											"end": 19153,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 19128,
											"end": 19153,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 19128,
											"end": 19153,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 19128,
											"end": 19153,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 19128,
											"end": 19153,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 19128,
											"end": 19153,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19128,
											"end": 19153,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 19075,
											"end": 19368,
											"name": "tag",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 19075,
											"end": 19368,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19320,
											"end": 19326,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 19314,
											"end": 19327,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 19305,
											"end": 19311,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19301,
											"end": 19303,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 19297,
											"end": 19312,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19290,
											"end": 19328,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "tag",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 18766,
											"end": 19382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18898,
											"end": 18939,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 18898,
											"end": 18939,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 18898,
											"end": 18939,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 18888,
											"end": 18939,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18888,
											"end": 18939,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 18888,
											"end": 18939,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18888,
											"end": 18894,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18888,
											"end": 18939,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18888,
											"end": 18939,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 18888,
											"end": 18939,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18888,
											"end": 18939,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 18884,
											"end": 19014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 18884,
											"end": 19014,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18992,
											"end": 18994,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 18970,
											"end": 18995,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18970,
											"end": 18995,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 18970,
											"end": 18995,
											"name": "PUSH",
											"source": 3,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18970,
											"end": 18995,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18970,
											"end": 18995,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 18970,
											"end": 18995,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 18970,
											"end": 18995,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18970,
											"end": 18995,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 18970,
											"end": 18995,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18970,
											"end": 18995,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18970,
											"end": 18995,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 18970,
											"end": 18995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18970,
											"end": 18995,
											"name": "tag",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 18970,
											"end": 18995,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18970,
											"end": 18995,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18970,
											"end": 18995,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 18970,
											"end": 18995,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18970,
											"end": 18995,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18970,
											"end": 18995,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 18970,
											"end": 18995,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18970,
											"end": 18995,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 18884,
											"end": 19014,
											"name": "tag",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 18884,
											"end": 19014,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18842,
											"end": 19028,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18728,
											"end": 19392,
											"name": "tag",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 18728,
											"end": 19392,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18616,
											"end": 19398,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18616,
											"end": 19398,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18616,
											"end": 19398,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18616,
											"end": 19398,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18616,
											"end": 19398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1620,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 1434,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1495,
											"end": 1528,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1604,
											"name": "PUSH",
											"source": 4,
											"value": "542A41881EE128A365A727B282C86FA859579490B9BB45AAB8503648C8E7900"
										},
										{
											"begin": 1563,
											"end": 1604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1563,
											"end": 1604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1620,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4561,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 4469,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4520,
											"end": 4533,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4545,
											"end": 4554,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4545,
											"end": 4554,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4554,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4554,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4545,
											"end": 4554,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4554,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4545,
											"end": 4554,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4554,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4554,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4545,
											"end": 4554,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4554,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4469,
											"end": 4561,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4469,
											"end": 4561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3972,
											"end": 4227,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 3972,
											"end": 4227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4036,
											"end": 4049,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4061,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 4075,
											"end": 4082,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4061,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 4061,
											"end": 4083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4061,
											"end": 4083,
											"name": "tag",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 4061,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4061,
											"end": 4083,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4094,
											"end": 4115,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4118,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 4118,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 4118,
											"end": 4128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4118,
											"end": 4128,
											"name": "tag",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 4118,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4094,
											"end": 4128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4094,
											"end": 4128,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4169,
											"end": 4170,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4151,
											"end": 4158,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 4166,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 4170,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "tag",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4187,
											"end": 4194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 4196,
											"end": 4203,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4196,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 4196,
											"end": 4214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "tag",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4215,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4173,
											"end": 4215,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4215,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4173,
											"end": 4215,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 4173,
											"end": 4215,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4215,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4215,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 4173,
											"end": 4215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4215,
											"name": "tag",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 4173,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4215,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4173,
											"end": 4215,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4215,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4173,
											"end": 4215,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4215,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4215,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4215,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4215,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4215,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4215,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4215,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4173,
											"end": 4215,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "tag",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4138,
											"end": 4220,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4138,
											"end": 4220,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4138,
											"end": 4220,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3972,
											"end": 4227,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3972,
											"end": 4227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3972,
											"end": 4227,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3972,
											"end": 4227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1626,
											"end": 1694,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 1626,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1626,
											"end": 1694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2000,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 1889,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "385"
										},
										{
											"begin": 1959,
											"end": 1991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "386"
										},
										{
											"begin": 1959,
											"end": 1993,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 1993,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "385"
										},
										{
											"begin": 1959,
											"end": 1993,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2382,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 2233,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 2360,
											"end": 2365,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2374,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2359,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 2336,
											"end": 2375,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2375,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 2336,
											"end": 2375,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1034,
											"end": 1180,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 1034,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1114,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1148,
											"end": 1173,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1144,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1126,
											"end": 1173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1126,
											"end": 1173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1180,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1180,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1180,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7231,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 7059,
											"end": 7231,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7125,
											"end": 7132,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7144,
											"end": 7167,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7189,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 7170,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 7170,
											"end": 7189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7189,
											"name": "tag",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 7170,
											"end": 7189,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7144,
											"end": 7189,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7144,
											"end": 7189,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7206,
											"end": 7207,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7206,
											"end": 7215,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7206,
											"end": 7215,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7216,
											"end": 7223,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7199,
											"end": 7224,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7199,
											"end": 7224,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7199,
											"end": 7224,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7059,
											"end": 7231,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7059,
											"end": 7231,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7059,
											"end": 7231,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7059,
											"end": 7231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16304,
											"end": 17023,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 16304,
											"end": 17023,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16408,
											"end": 16431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16434,
											"end": 16453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 16434,
											"end": 16451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 16434,
											"end": 16453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16434,
											"end": 16453,
											"name": "tag",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 16434,
											"end": 16453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16408,
											"end": 16453,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16408,
											"end": 16453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16519,
											"end": 16528,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16519,
											"end": 16550,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16519,
											"end": 16550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 16519,
											"end": 16550,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16519,
											"end": 16550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16548,
											"end": 16549,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16532,
											"end": 16550,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16532,
											"end": 16550,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16532,
											"end": 16536,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 16532,
											"end": 16550,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16532,
											"end": 16550,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16532,
											"end": 16550,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16532,
											"end": 16550,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 16519,
											"end": 16550,
											"name": "tag",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 16519,
											"end": 16550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16515,
											"end": 16975,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 16515,
											"end": 16975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 16515,
											"end": 16975,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16566,
											"end": 16579,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16582,
											"end": 16604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 16596,
											"end": 16603,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 16582,
											"end": 16595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 16582,
											"end": 16604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16582,
											"end": 16604,
											"name": "tag",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 16582,
											"end": 16604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16566,
											"end": 16604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16566,
											"end": 16604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16748,
											"end": 16749,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16732,
											"end": 16750,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16732,
											"end": 16750,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16732,
											"end": 16736,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 16732,
											"end": 16750,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16732,
											"end": 16750,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16732,
											"end": 16750,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16732,
											"end": 16750,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 16732,
											"end": 16767,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16732,
											"end": 16767,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 16732,
											"end": 16767,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 16732,
											"end": 16767,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16732,
											"end": 16767,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16763,
											"end": 16767,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 16754,
											"end": 16767,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16754,
											"end": 16767,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16754,
											"end": 16759,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16754,
											"end": 16767,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16754,
											"end": 16767,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16754,
											"end": 16767,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16754,
											"end": 16767,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 16732,
											"end": 16767,
											"name": "tag",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 16732,
											"end": 16767,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16732,
											"end": 16801,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16732,
											"end": 16801,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 16732,
											"end": 16801,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 16732,
											"end": 16801,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16732,
											"end": 16801,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16772,
											"end": 16801,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 16789,
											"end": 16794,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16796,
											"end": 16800,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 16772,
											"end": 16788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 16772,
											"end": 16801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16772,
											"end": 16801,
											"name": "tag",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 16772,
											"end": 16801,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16771,
											"end": 16801,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 16732,
											"end": 16801,
											"name": "tag",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 16732,
											"end": 16801,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16728,
											"end": 16870,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 16728,
											"end": 16870,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 16728,
											"end": 16870,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16850,
											"end": 16854,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 16828,
											"end": 16855,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16828,
											"end": 16855,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16828,
											"end": 16855,
											"name": "PUSH",
											"source": 3,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16828,
											"end": 16855,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16828,
											"end": 16855,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16828,
											"end": 16855,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16828,
											"end": 16855,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16828,
											"end": 16855,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 16828,
											"end": 16855,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16828,
											"end": 16855,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16828,
											"end": 16855,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 16828,
											"end": 16855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16828,
											"end": 16855,
											"name": "tag",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 16828,
											"end": 16855,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16828,
											"end": 16855,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16828,
											"end": 16855,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16828,
											"end": 16855,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16828,
											"end": 16855,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16828,
											"end": 16855,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16828,
											"end": 16855,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16828,
											"end": 16855,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 16728,
											"end": 16870,
											"name": "tag",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 16728,
											"end": 16870,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16888,
											"end": 16897,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16884,
											"end": 16965,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 16884,
											"end": 16965,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 16884,
											"end": 16965,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16942,
											"end": 16949,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 16938,
											"end": 16940,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 16922,
											"end": 16950,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16922,
											"end": 16950,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16931,
											"end": 16936,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16922,
											"end": 16950,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16922,
											"end": 16950,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16922,
											"end": 16950,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 16922,
											"end": 16950,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16922,
											"end": 16950,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16922,
											"end": 16950,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16922,
											"end": 16950,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16922,
											"end": 16950,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16922,
											"end": 16950,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16922,
											"end": 16950,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16922,
											"end": 16950,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16922,
											"end": 16950,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 16884,
											"end": 16965,
											"name": "tag",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 16884,
											"end": 16965,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16552,
											"end": 16975,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16515,
											"end": 16975,
											"name": "tag",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 16515,
											"end": 16975,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17014,
											"end": 17016,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 16985,
											"end": 16986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16985,
											"end": 17002,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16985,
											"end": 17002,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16985,
											"end": 17011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17003,
											"end": 17010,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 16985,
											"end": 17011,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16985,
											"end": 17011,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16985,
											"end": 17011,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 16985,
											"end": 17011,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16985,
											"end": 17011,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16985,
											"end": 17011,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16985,
											"end": 17011,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16985,
											"end": 17011,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 16985,
											"end": 17011,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16985,
											"end": 17011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16985,
											"end": 17011,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 16985,
											"end": 17011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16985,
											"end": 17016,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 16985,
											"end": 17016,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 16985,
											"end": 17016,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16985,
											"end": 17016,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 16985,
											"end": 17016,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16985,
											"end": 17016,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16985,
											"end": 17016,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 16985,
											"end": 17016,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 16985,
											"end": 17016,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16985,
											"end": 17016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16985,
											"end": 17016,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 16985,
											"end": 17016,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16985,
											"end": 17016,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16985,
											"end": 17016,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 16985,
											"end": 17016,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 16985,
											"end": 17016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16985,
											"end": 17016,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 16985,
											"end": 17016,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16398,
											"end": 17023,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16304,
											"end": 17023,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16304,
											"end": 17023,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16304,
											"end": 17023,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16304,
											"end": 17023,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16304,
											"end": 17023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8548,
											"end": 8916,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 8548,
											"end": 8916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8660,
											"end": 8698,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 8674,
											"end": 8679,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8681,
											"end": 8688,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8690,
											"end": 8697,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8660,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 8660,
											"end": 8698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8660,
											"end": 8698,
											"name": "tag",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 8660,
											"end": 8698,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8655,
											"end": 8910,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 8655,
											"end": 8910,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8735,
											"end": 8736,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8718,
											"end": 8737,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8718,
											"end": 8737,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8718,
											"end": 8723,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8718,
											"end": 8737,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8718,
											"end": 8737,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8718,
											"end": 8737,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8714,
											"end": 8900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 8714,
											"end": 8900,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8787,
											"end": 8794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8764,
											"end": 8795,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8764,
											"end": 8795,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8764,
											"end": 8795,
											"name": "PUSH",
											"source": 3,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8764,
											"end": 8795,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8764,
											"end": 8795,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8764,
											"end": 8795,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8764,
											"end": 8795,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8764,
											"end": 8795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 8764,
											"end": 8795,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8764,
											"end": 8795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8764,
											"end": 8795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 8764,
											"end": 8795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8764,
											"end": 8795,
											"name": "tag",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 8764,
											"end": 8795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8764,
											"end": 8795,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8764,
											"end": 8795,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8764,
											"end": 8795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8764,
											"end": 8795,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8764,
											"end": 8795,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8764,
											"end": 8795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8764,
											"end": 8795,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8714,
											"end": 8900,
											"name": "tag",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 8714,
											"end": 8900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8868,
											"end": 8875,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8877,
											"end": 8884,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8841,
											"end": 8885,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8841,
											"end": 8885,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8841,
											"end": 8885,
											"name": "PUSH",
											"source": 3,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8841,
											"end": 8885,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8841,
											"end": 8885,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8841,
											"end": 8885,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8841,
											"end": 8885,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8841,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 8841,
											"end": 8885,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8841,
											"end": 8885,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8841,
											"end": 8885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8841,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 8841,
											"end": 8885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8841,
											"end": 8885,
											"name": "tag",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 8841,
											"end": 8885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8841,
											"end": 8885,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8841,
											"end": 8885,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8841,
											"end": 8885,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8841,
											"end": 8885,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8841,
											"end": 8885,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8841,
											"end": 8885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8841,
											"end": 8885,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8655,
											"end": 8910,
											"name": "tag",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 8655,
											"end": 8910,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8548,
											"end": 8916,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8548,
											"end": 8916,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8548,
											"end": 8916,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8548,
											"end": 8916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 14,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 14
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 14
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 14
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 7151,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2115,
											"name": "tag",
											"source": 2,
											"value": "386"
										},
										{
											"begin": 2006,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2086,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2388,
											"end": 2607,
											"name": "tag",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 2388,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2527,
											"end": 2546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "444"
										},
										{
											"begin": 2527,
											"end": 2544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2527,
											"end": 2546,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2527,
											"end": 2546,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "444"
										},
										{
											"begin": 2527,
											"end": 2546,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2501,
											"end": 2546,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2501,
											"end": 2546,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2566,
											"end": 2571,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2557,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2556,
											"end": 2563,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2571,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "445"
										},
										{
											"begin": 2556,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 2556,
											"end": 2571,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "445"
										},
										{
											"begin": 2556,
											"end": 2571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2571,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2593,
											"end": 2600,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2581,
											"end": 2590,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2600,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2600,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "446"
										},
										{
											"begin": 2581,
											"end": 2600,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2600,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 2581,
											"end": 2600,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2600,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "446"
										},
										{
											"begin": 2581,
											"end": 2600,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2600,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2388,
											"end": 2607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2388,
											"end": 2607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2388,
											"end": 2607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7842,
											"end": 8114,
											"name": "tag",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 7842,
											"end": 8114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7945,
											"end": 7949,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7999,
											"end": 8000,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7980,
											"end": 8001,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7980,
											"end": 8001,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7980,
											"end": 7987,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7980,
											"end": 8001,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7980,
											"end": 8001,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7980,
											"end": 8001,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7980,
											"end": 8001,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7980,
											"end": 8107,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7980,
											"end": 8107,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7980,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "448"
										},
										{
											"begin": 7980,
											"end": 8107,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7980,
											"end": 8107,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8027,
											"end": 8034,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8018,
											"end": 8034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8018,
											"end": 8034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8018,
											"end": 8023,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8018,
											"end": 8034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8018,
											"end": 8034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8018,
											"end": 8034,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 8018,
											"end": 8070,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8018,
											"end": 8070,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "449"
										},
										{
											"begin": 8018,
											"end": 8070,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8018,
											"end": 8070,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8070,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "450"
										},
										{
											"begin": 8055,
											"end": 8060,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8062,
											"end": 8069,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 8038,
											"end": 8070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8070,
											"name": "tag",
											"source": 3,
											"value": "450"
										},
										{
											"begin": 8038,
											"end": 8070,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8018,
											"end": 8070,
											"name": "tag",
											"source": 3,
											"value": "449"
										},
										{
											"begin": 8018,
											"end": 8070,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8018,
											"end": 8106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8018,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "451"
										},
										{
											"begin": 8018,
											"end": 8106,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8018,
											"end": 8106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8099,
											"end": 8106,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8074,
											"end": 8106,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8074,
											"end": 8106,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8074,
											"end": 8095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "452"
										},
										{
											"begin": 8087,
											"end": 8094,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8074,
											"end": 8086,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 8074,
											"end": 8095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8074,
											"end": 8095,
											"name": "tag",
											"source": 3,
											"value": "452"
										},
										{
											"begin": 8074,
											"end": 8095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8074,
											"end": 8106,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8074,
											"end": 8106,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8074,
											"end": 8106,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 8018,
											"end": 8106,
											"name": "tag",
											"source": 3,
											"value": "451"
										},
										{
											"begin": 8018,
											"end": 8106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7980,
											"end": 8107,
											"name": "tag",
											"source": 3,
											"value": "448"
										},
										{
											"begin": 7980,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7961,
											"end": 8107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7961,
											"end": 8107,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7842,
											"end": 8114,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7842,
											"end": 8114,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7842,
											"end": 8114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7842,
											"end": 8114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7842,
											"end": 8114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7842,
											"end": 8114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 16,
											"value": "417"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 16,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "454"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 16,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "455"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 16,
											"value": "455"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 16,
											"value": "454"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 16,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 16,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "459"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 16,
											"value": "459"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 16,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 16,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 16,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "463"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 16,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "465"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 16,
											"value": "465"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 16,
											"value": "463"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 16,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 16,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "469"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 16,
											"value": "469"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 8560,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 8560,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 19,
											"value": "475"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 19,
											"value": "477"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 19,
											"value": "478"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 19,
											"value": "479"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "557"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "478"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 19,
											"value": "557"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "558"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 19,
											"value": "558"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 19,
											"value": "480"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "560"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "479"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 19,
											"value": "560"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 19,
											"value": "31"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "562"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "563"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 19,
											"value": "563"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 19,
											"value": "562"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "564"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "480"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 19,
											"value": "564"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 19,
											"value": "481"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 19,
											"value": "482"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "567"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "481"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 19,
											"value": "567"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 19,
											"value": "34"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "569"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "482"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 19,
											"value": "569"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 19,
											"value": "483"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 19,
											"value": "484"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 19,
											"value": "485"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 19
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 19,
											"value": "486"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 19,
											"value": "487"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "575"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "483"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 19,
											"value": "575"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "576"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "484"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 19,
											"value": "576"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "577"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "485"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 19,
											"value": "577"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "578"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "486"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 19,
											"value": "578"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 19,
											"value": "39"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "580"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "487"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 19,
											"value": "580"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "tag",
											"source": 19,
											"value": "488"
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2753,
											"end": 2830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "tag",
											"source": 19,
											"value": "489"
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "583"
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "488"
										},
										{
											"begin": 2909,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "tag",
											"source": 19,
											"value": "583"
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2902,
											"end": 2907,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "584"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2938,
											"end": 2950,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "tag",
											"source": 19,
											"value": "584"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2836,
											"end": 2958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "tag",
											"source": 19,
											"value": "490"
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3010,
											"end": 3015,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3035,
											"end": 3055,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "586"
										},
										{
											"begin": 3091,
											"end": 3096,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "489"
										},
										{
											"begin": 3064,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "tag",
											"source": 19,
											"value": "586"
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "tag",
											"source": 19,
											"value": "43"
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3219,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3192,
											"end": 3215,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 3188,
											"end": 3220,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "588"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "589"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 3223,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "tag",
											"source": 19,
											"value": "589"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "tag",
											"source": 19,
											"value": "588"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "590"
										},
										{
											"begin": 3413,
											"end": 3420,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "490"
										},
										{
											"begin": 3368,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "tag",
											"source": 19,
											"value": "590"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3314,
											"end": 3431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3109,
											"end": 3438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "tag",
											"source": 19,
											"value": "491"
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3563,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3519,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3444,
											"end": 3570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "tag",
											"source": 19,
											"value": "492"
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3613,
											"end": 3620,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "593"
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "491"
										},
										{
											"begin": 3642,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "tag",
											"source": 19,
											"value": "593"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3576,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "tag",
											"source": 19,
											"value": "493"
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "595"
										},
										{
											"begin": 3783,
											"end": 3788,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "492"
										},
										{
											"begin": 3765,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "tag",
											"source": 19,
											"value": "595"
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3753,
											"end": 3790,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3678,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "tag",
											"source": 19,
											"value": "46"
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3895,
											"end": 3899,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "597"
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4012,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "493"
										},
										{
											"begin": 3946,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "tag",
											"source": 19,
											"value": "597"
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3802,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "tag",
											"source": 19,
											"value": "494"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "599"
										},
										{
											"begin": 4121,
											"end": 4126,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "492"
										},
										{
											"begin": 4103,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "tag",
											"source": 19,
											"value": "599"
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4096,
											"end": 4101,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4093,
											"end": 4128,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "600"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4132,
											"end": 4144,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "tag",
											"source": 19,
											"value": "600"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4030,
											"end": 4152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "tag",
											"source": 19,
											"value": "495"
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4229,
											"end": 4249,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "602"
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "494"
										},
										{
											"begin": 4258,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "tag",
											"source": 19,
											"value": "602"
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 4297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "tag",
											"source": 19,
											"value": "50"
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4385,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4416,
											"end": 4425,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4407,
											"end": 4414,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4403,
											"end": 4426,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 4399,
											"end": 4431,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "604"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "605"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 4434,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "tag",
											"source": 19,
											"value": "605"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "tag",
											"source": 19,
											"value": "604"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "606"
										},
										{
											"begin": 4624,
											"end": 4631,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "495"
										},
										{
											"begin": 4579,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "tag",
											"source": 19,
											"value": "606"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4525,
											"end": 4642,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "607"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4728,
											"end": 4750,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "490"
										},
										{
											"begin": 4707,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "tag",
											"source": 19,
											"value": "607"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4652,
											"end": 4770,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "tag",
											"source": 19,
											"value": "55"
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4904,
											"end": 4911,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4900,
											"end": 4923,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 4896,
											"end": 4928,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "609"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "610"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 4931,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "tag",
											"source": 19,
											"value": "610"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "tag",
											"source": 19,
											"value": "609"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "611"
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5097,
											"end": 5119,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "495"
										},
										{
											"begin": 5076,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "tag",
											"source": 19,
											"value": "611"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5022,
											"end": 5139,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "612"
										},
										{
											"begin": 5249,
											"end": 5256,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5225,
											"end": 5247,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "495"
										},
										{
											"begin": 5204,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "tag",
											"source": 19,
											"value": "612"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5149,
											"end": 5267,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5306,
											"end": 5308,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "613"
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5353,
											"end": 5375,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "490"
										},
										{
											"begin": 5332,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "tag",
											"source": 19,
											"value": "613"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5277,
											"end": 5395,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5408,
											"end": 5525,
											"name": "tag",
											"source": 19,
											"value": "496"
										},
										{
											"begin": 5408,
											"end": 5525,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5517,
											"end": 5518,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5515,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5507,
											"end": 5519,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5531,
											"end": 5648,
											"name": "tag",
											"source": 19,
											"value": "497"
										},
										{
											"begin": 5531,
											"end": 5648,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5640,
											"end": 5641,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5637,
											"end": 5638,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5630,
											"end": 5642,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5654,
											"end": 5834,
											"name": "tag",
											"source": 19,
											"value": "420"
										},
										{
											"begin": 5654,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5702,
											"end": 5779,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5699,
											"end": 5700,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5780,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5799,
											"end": 5803,
											"name": "PUSH",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 5796,
											"end": 5797,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 5789,
											"end": 5804,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5823,
											"end": 5827,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 5820,
											"end": 5821,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5813,
											"end": 5828,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5840,
											"end": 6121,
											"name": "tag",
											"source": 19,
											"value": "498"
										},
										{
											"begin": 5840,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "618"
										},
										{
											"begin": 5945,
											"end": 5949,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "486"
										},
										{
											"begin": 5923,
											"end": 5950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "tag",
											"source": 19,
											"value": "618"
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5915,
											"end": 5921,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5911,
											"end": 5951,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6053,
											"end": 6059,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6041,
											"end": 6051,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6038,
											"end": 6060,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 6017,
											"end": 6035,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6005,
											"end": 6015,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6002,
											"end": 6036,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 5999,
											"end": 6061,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "619"
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "620"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "420"
										},
										{
											"begin": 6064,
											"end": 6082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "tag",
											"source": 19,
											"value": "620"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "tag",
											"source": 19,
											"value": "619"
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6104,
											"end": 6114,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6100,
											"end": 6102,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6093,
											"end": 6115,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5883,
											"end": 6121,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5840,
											"end": 6121,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5840,
											"end": 6121,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5840,
											"end": 6121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "tag",
											"source": 19,
											"value": "499"
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6161,
											"end": 6167,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "622"
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "475"
										},
										{
											"begin": 6188,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "tag",
											"source": 19,
											"value": "622"
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6178,
											"end": 6208,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6178,
											"end": 6208,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6217,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "623"
										},
										{
											"begin": 6245,
											"end": 6249,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6237,
											"end": 6243,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6217,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "498"
										},
										{
											"begin": 6217,
											"end": 6250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6217,
											"end": 6250,
											"name": "tag",
											"source": 19,
											"value": "623"
										},
										{
											"begin": 6217,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6127,
											"end": 6256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "tag",
											"source": 19,
											"value": "500"
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6324,
											"end": 6328,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6414,
											"end": 6432,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6406,
											"end": 6412,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "625"
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6436,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "626"
										},
										{
											"begin": 6436,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "420"
										},
										{
											"begin": 6436,
											"end": 6454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6436,
											"end": 6454,
											"name": "tag",
											"source": 19,
											"value": "626"
										},
										{
											"begin": 6436,
											"end": 6454,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "tag",
											"source": 19,
											"value": "625"
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6474,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "627"
										},
										{
											"begin": 6496,
											"end": 6502,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6474,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "486"
										},
										{
											"begin": 6474,
											"end": 6503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6474,
											"end": 6503,
											"name": "tag",
											"source": 19,
											"value": "627"
										},
										{
											"begin": 6474,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6466,
											"end": 6503,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6466,
											"end": 6503,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6558,
											"end": 6562,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6556,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6548,
											"end": 6563,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6540,
											"end": 6563,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6540,
											"end": 6563,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6262,
											"end": 6570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "tag",
											"source": 19,
											"value": "501"
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6674,
											"end": 6680,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6669,
											"end": 6672,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6664,
											"end": 6667,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6651,
											"end": 6681,
											"name": "CALLDATACOPY",
											"source": 19
										},
										{
											"begin": 6715,
											"end": 6716,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6706,
											"end": 6712,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6701,
											"end": 6704,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6697,
											"end": 6713,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6690,
											"end": 6717,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6576,
											"end": 6724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "tag",
											"source": 19,
											"value": "502"
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6808,
											"end": 6813,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6833,
											"end": 6899,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "630"
										},
										{
											"begin": 6849,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "631"
										},
										{
											"begin": 6891,
											"end": 6897,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6849,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "500"
										},
										{
											"begin": 6849,
											"end": 6898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6849,
											"end": 6898,
											"name": "tag",
											"source": 19,
											"value": "631"
										},
										{
											"begin": 6849,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6833,
											"end": 6899,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "499"
										},
										{
											"begin": 6833,
											"end": 6899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6833,
											"end": 6899,
											"name": "tag",
											"source": 19,
											"value": "630"
										},
										{
											"begin": 6833,
											"end": 6899,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6824,
											"end": 6899,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6824,
											"end": 6899,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6922,
											"end": 6928,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6915,
											"end": 6920,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6908,
											"end": 6929,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6960,
											"end": 6964,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6953,
											"end": 6958,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6949,
											"end": 6965,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6998,
											"end": 7001,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6989,
											"end": 6995,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6984,
											"end": 6987,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6980,
											"end": 6996,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6977,
											"end": 7002,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "632"
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "633"
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "497"
										},
										{
											"begin": 7005,
											"end": 7084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "tag",
											"source": 19,
											"value": "633"
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "tag",
											"source": 19,
											"value": "632"
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7095,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "634"
										},
										{
											"begin": 7142,
											"end": 7148,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7137,
											"end": 7140,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7132,
											"end": 7135,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7095,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "501"
										},
										{
											"begin": 7095,
											"end": 7149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7095,
											"end": 7149,
											"name": "tag",
											"source": 19,
											"value": "634"
										},
										{
											"begin": 7095,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6814,
											"end": 7155,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 7155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "tag",
											"source": 19,
											"value": "503"
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7231,
											"end": 7236,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7280,
											"end": 7283,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7273,
											"end": 7277,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 7265,
											"end": 7271,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7261,
											"end": 7278,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7257,
											"end": 7284,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 7247,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "636"
										},
										{
											"begin": 7247,
											"end": 7369,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "637"
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "496"
										},
										{
											"begin": 7288,
											"end": 7367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "tag",
											"source": 19,
											"value": "637"
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7247,
											"end": 7369,
											"name": "tag",
											"source": 19,
											"value": "636"
										},
										{
											"begin": 7247,
											"end": 7369,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7405,
											"end": 7411,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7392,
											"end": 7412,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 7430,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "638"
										},
										{
											"begin": 7505,
											"end": 7508,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7490,
											"end": 7494,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7430,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "502"
										},
										{
											"begin": 7430,
											"end": 7509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7430,
											"end": 7509,
											"name": "tag",
											"source": 19,
											"value": "638"
										},
										{
											"begin": 7430,
											"end": 7509,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7421,
											"end": 7509,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7421,
											"end": 7509,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7237,
											"end": 7515,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7175,
											"end": 7515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "tag",
											"source": 19,
											"value": "66"
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7599,
											"end": 7605,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7607,
											"end": 7613,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7656,
											"end": 7658,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 7644,
											"end": 7653,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7635,
											"end": 7642,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7631,
											"end": 7654,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 7627,
											"end": 7659,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 7624,
											"end": 7743,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7624,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "640"
										},
										{
											"begin": 7624,
											"end": 7743,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7662,
											"end": 7741,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "641"
										},
										{
											"begin": 7662,
											"end": 7741,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 7662,
											"end": 7741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7662,
											"end": 7741,
											"name": "tag",
											"source": 19,
											"value": "641"
										},
										{
											"begin": 7662,
											"end": 7741,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7624,
											"end": 7743,
											"name": "tag",
											"source": 19,
											"value": "640"
										},
										{
											"begin": 7624,
											"end": 7743,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7799,
											"end": 7808,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7795,
											"end": 7812,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7782,
											"end": 7813,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 7840,
											"end": 7858,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7832,
											"end": 7838,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7829,
											"end": 7859,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 7826,
											"end": 7943,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7826,
											"end": 7943,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "642"
										},
										{
											"begin": 7826,
											"end": 7943,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7862,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "643"
										},
										{
											"begin": 7862,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "477"
										},
										{
											"begin": 7862,
											"end": 7941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7862,
											"end": 7941,
											"name": "tag",
											"source": 19,
											"value": "643"
										},
										{
											"begin": 7862,
											"end": 7941,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7826,
											"end": 7943,
											"name": "tag",
											"source": 19,
											"value": "642"
										},
										{
											"begin": 7826,
											"end": 7943,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7967,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "644"
										},
										{
											"begin": 8022,
											"end": 8029,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8013,
											"end": 8019,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8002,
											"end": 8011,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 7998,
											"end": 8020,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7967,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "503"
										},
										{
											"begin": 7967,
											"end": 8030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7967,
											"end": 8030,
											"name": "tag",
											"source": 19,
											"value": "644"
										},
										{
											"begin": 7967,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7957,
											"end": 8030,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7957,
											"end": 8030,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7753,
											"end": 8040,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8079,
											"end": 8081,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8105,
											"end": 8158,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "645"
										},
										{
											"begin": 8150,
											"end": 8157,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8141,
											"end": 8147,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8130,
											"end": 8139,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 8126,
											"end": 8148,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8105,
											"end": 8158,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "490"
										},
										{
											"begin": 8105,
											"end": 8158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8105,
											"end": 8158,
											"name": "tag",
											"source": 19,
											"value": "645"
										},
										{
											"begin": 8105,
											"end": 8158,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8095,
											"end": 8158,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8095,
											"end": 8158,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8050,
											"end": 8168,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8175,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 8175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8181,
											"end": 8299,
											"name": "tag",
											"source": 19,
											"value": "504"
										},
										{
											"begin": 8181,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8268,
											"end": 8292,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "647"
										},
										{
											"begin": 8286,
											"end": 8291,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8268,
											"end": 8292,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "488"
										},
										{
											"begin": 8268,
											"end": 8292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8268,
											"end": 8292,
											"name": "tag",
											"source": 19,
											"value": "647"
										},
										{
											"begin": 8268,
											"end": 8292,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8263,
											"end": 8266,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8256,
											"end": 8293,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8181,
											"end": 8299,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8181,
											"end": 8299,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8181,
											"end": 8299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8305,
											"end": 8527,
											"name": "tag",
											"source": 19,
											"value": "69"
										},
										{
											"begin": 8305,
											"end": 8527,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8398,
											"end": 8402,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8436,
											"end": 8438,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8425,
											"end": 8434,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8421,
											"end": 8439,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8413,
											"end": 8439,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8413,
											"end": 8439,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8449,
											"end": 8520,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "649"
										},
										{
											"begin": 8517,
											"end": 8518,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8506,
											"end": 8515,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8502,
											"end": 8519,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8493,
											"end": 8499,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8449,
											"end": 8520,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "504"
										},
										{
											"begin": 8449,
											"end": 8520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8449,
											"end": 8520,
											"name": "tag",
											"source": 19,
											"value": "649"
										},
										{
											"begin": 8449,
											"end": 8520,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8305,
											"end": 8527,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8305,
											"end": 8527,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8305,
											"end": 8527,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8305,
											"end": 8527,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8305,
											"end": 8527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8533,
											"end": 8637,
											"name": "tag",
											"source": 19,
											"value": "505"
										},
										{
											"begin": 8533,
											"end": 8637,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8578,
											"end": 8585,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8607,
											"end": 8631,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "651"
										},
										{
											"begin": 8625,
											"end": 8630,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8607,
											"end": 8631,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "491"
										},
										{
											"begin": 8607,
											"end": 8631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8607,
											"end": 8631,
											"name": "tag",
											"source": 19,
											"value": "651"
										},
										{
											"begin": 8607,
											"end": 8631,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8596,
											"end": 8631,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8596,
											"end": 8631,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8533,
											"end": 8637,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8533,
											"end": 8637,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8533,
											"end": 8637,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8533,
											"end": 8637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8643,
											"end": 8781,
											"name": "tag",
											"source": 19,
											"value": "506"
										},
										{
											"begin": 8643,
											"end": 8781,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8724,
											"end": 8756,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "653"
										},
										{
											"begin": 8750,
											"end": 8755,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8724,
											"end": 8756,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "505"
										},
										{
											"begin": 8724,
											"end": 8756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8724,
											"end": 8756,
											"name": "tag",
											"source": 19,
											"value": "653"
										},
										{
											"begin": 8724,
											"end": 8756,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8717,
											"end": 8722,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8714,
											"end": 8757,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 8704,
											"end": 8775,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "654"
										},
										{
											"begin": 8704,
											"end": 8775,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8771,
											"end": 8772,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8768,
											"end": 8769,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8761,
											"end": 8773,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 8704,
											"end": 8775,
											"name": "tag",
											"source": 19,
											"value": "654"
										},
										{
											"begin": 8704,
											"end": 8775,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8643,
											"end": 8781,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8643,
											"end": 8781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8787,
											"end": 8942,
											"name": "tag",
											"source": 19,
											"value": "507"
										},
										{
											"begin": 8787,
											"end": 8942,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8841,
											"end": 8846,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8879,
											"end": 8885,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8866,
											"end": 8886,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 8857,
											"end": 8886,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8857,
											"end": 8886,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8895,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "656"
										},
										{
											"begin": 8930,
											"end": 8935,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8895,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "506"
										},
										{
											"begin": 8895,
											"end": 8936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8895,
											"end": 8936,
											"name": "tag",
											"source": 19,
											"value": "656"
										},
										{
											"begin": 8895,
											"end": 8936,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8787,
											"end": 8942,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8787,
											"end": 8942,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8787,
											"end": 8942,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8787,
											"end": 8942,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8787,
											"end": 8942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8948,
											"end": 9293,
											"name": "tag",
											"source": 19,
											"value": "78"
										},
										{
											"begin": 8948,
											"end": 9293,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9015,
											"end": 9021,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9064,
											"end": 9066,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9052,
											"end": 9061,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9043,
											"end": 9050,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9039,
											"end": 9062,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 9035,
											"end": 9067,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 9032,
											"end": 9151,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9032,
											"end": 9151,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "658"
										},
										{
											"begin": 9032,
											"end": 9151,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9070,
											"end": 9149,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "659"
										},
										{
											"begin": 9070,
											"end": 9149,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 9070,
											"end": 9149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9070,
											"end": 9149,
											"name": "tag",
											"source": 19,
											"value": "659"
										},
										{
											"begin": 9070,
											"end": 9149,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9032,
											"end": 9151,
											"name": "tag",
											"source": 19,
											"value": "658"
										},
										{
											"begin": 9032,
											"end": 9151,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9190,
											"end": 9191,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9215,
											"end": 9276,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "660"
										},
										{
											"begin": 9268,
											"end": 9275,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9259,
											"end": 9265,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9248,
											"end": 9257,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9244,
											"end": 9266,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9215,
											"end": 9276,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "507"
										},
										{
											"begin": 9215,
											"end": 9276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9215,
											"end": 9276,
											"name": "tag",
											"source": 19,
											"value": "660"
										},
										{
											"begin": 9215,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9205,
											"end": 9276,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9205,
											"end": 9276,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9161,
											"end": 9286,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8948,
											"end": 9293,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8948,
											"end": 9293,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8948,
											"end": 9293,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8948,
											"end": 9293,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8948,
											"end": 9293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9299,
											"end": 9628,
											"name": "tag",
											"source": 19,
											"value": "87"
										},
										{
											"begin": 9299,
											"end": 9628,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9358,
											"end": 9364,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9407,
											"end": 9409,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9395,
											"end": 9404,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9386,
											"end": 9393,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9382,
											"end": 9405,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 9378,
											"end": 9410,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 9375,
											"end": 9494,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9375,
											"end": 9494,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "662"
										},
										{
											"begin": 9375,
											"end": 9494,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9413,
											"end": 9492,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "663"
										},
										{
											"begin": 9413,
											"end": 9492,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 9413,
											"end": 9492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9413,
											"end": 9492,
											"name": "tag",
											"source": 19,
											"value": "663"
										},
										{
											"begin": 9413,
											"end": 9492,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9375,
											"end": 9494,
											"name": "tag",
											"source": 19,
											"value": "662"
										},
										{
											"begin": 9375,
											"end": 9494,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9533,
											"end": 9534,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9558,
											"end": 9611,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "664"
										},
										{
											"begin": 9603,
											"end": 9610,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9594,
											"end": 9600,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9583,
											"end": 9592,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9579,
											"end": 9601,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9558,
											"end": 9611,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "495"
										},
										{
											"begin": 9558,
											"end": 9611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9558,
											"end": 9611,
											"name": "tag",
											"source": 19,
											"value": "664"
										},
										{
											"begin": 9558,
											"end": 9611,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9548,
											"end": 9611,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9548,
											"end": 9611,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9504,
											"end": 9621,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9299,
											"end": 9628,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9299,
											"end": 9628,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9299,
											"end": 9628,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9299,
											"end": 9628,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9299,
											"end": 9628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9634,
											"end": 9750,
											"name": "tag",
											"source": 19,
											"value": "508"
										},
										{
											"begin": 9634,
											"end": 9750,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9704,
											"end": 9725,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "666"
										},
										{
											"begin": 9719,
											"end": 9724,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9704,
											"end": 9725,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "481"
										},
										{
											"begin": 9704,
											"end": 9725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9704,
											"end": 9725,
											"name": "tag",
											"source": 19,
											"value": "666"
										},
										{
											"begin": 9704,
											"end": 9725,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9697,
											"end": 9702,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9694,
											"end": 9726,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 9684,
											"end": 9744,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "667"
										},
										{
											"begin": 9684,
											"end": 9744,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9740,
											"end": 9741,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9737,
											"end": 9738,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9730,
											"end": 9742,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 9684,
											"end": 9744,
											"name": "tag",
											"source": 19,
											"value": "667"
										},
										{
											"begin": 9684,
											"end": 9744,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9634,
											"end": 9750,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9634,
											"end": 9750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9756,
											"end": 9889,
											"name": "tag",
											"source": 19,
											"value": "509"
										},
										{
											"begin": 9756,
											"end": 9889,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9799,
											"end": 9804,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9837,
											"end": 9843,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9824,
											"end": 9844,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 9815,
											"end": 9844,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9815,
											"end": 9844,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9853,
											"end": 9883,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "669"
										},
										{
											"begin": 9877,
											"end": 9882,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9853,
											"end": 9883,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "508"
										},
										{
											"begin": 9853,
											"end": 9883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9853,
											"end": 9883,
											"name": "tag",
											"source": 19,
											"value": "669"
										},
										{
											"begin": 9853,
											"end": 9883,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9756,
											"end": 9889,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9756,
											"end": 9889,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9756,
											"end": 9889,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9756,
											"end": 9889,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9756,
											"end": 9889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9895,
											"end": 10363,
											"name": "tag",
											"source": 19,
											"value": "104"
										},
										{
											"begin": 9895,
											"end": 10363,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9968,
											"end": 9974,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 10017,
											"end": 10019,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 10005,
											"end": 10014,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9996,
											"end": 10003,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9992,
											"end": 10015,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 9988,
											"end": 10020,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 9985,
											"end": 10104,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9985,
											"end": 10104,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "671"
										},
										{
											"begin": 9985,
											"end": 10104,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10023,
											"end": 10102,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "672"
										},
										{
											"begin": 10023,
											"end": 10102,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 10023,
											"end": 10102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10023,
											"end": 10102,
											"name": "tag",
											"source": 19,
											"value": "672"
										},
										{
											"begin": 10023,
											"end": 10102,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9985,
											"end": 10104,
											"name": "tag",
											"source": 19,
											"value": "671"
										},
										{
											"begin": 9985,
											"end": 10104,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10143,
											"end": 10144,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10168,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "673"
										},
										{
											"begin": 10213,
											"end": 10220,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10204,
											"end": 10210,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10193,
											"end": 10202,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 10189,
											"end": 10211,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10168,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "495"
										},
										{
											"begin": 10168,
											"end": 10221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10168,
											"end": 10221,
											"name": "tag",
											"source": 19,
											"value": "673"
										},
										{
											"begin": 10168,
											"end": 10221,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10158,
											"end": 10221,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 10158,
											"end": 10221,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10114,
											"end": 10231,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10270,
											"end": 10272,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10296,
											"end": 10346,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "674"
										},
										{
											"begin": 10338,
											"end": 10345,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10329,
											"end": 10335,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10318,
											"end": 10327,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 10314,
											"end": 10336,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10296,
											"end": 10346,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "509"
										},
										{
											"begin": 10296,
											"end": 10346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10296,
											"end": 10346,
											"name": "tag",
											"source": 19,
											"value": "674"
										},
										{
											"begin": 10296,
											"end": 10346,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10286,
											"end": 10346,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10286,
											"end": 10346,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10241,
											"end": 10356,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9895,
											"end": 10363,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9895,
											"end": 10363,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9895,
											"end": 10363,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9895,
											"end": 10363,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9895,
											"end": 10363,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9895,
											"end": 10363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10369,
											"end": 10511,
											"name": "tag",
											"source": 19,
											"value": "510"
										},
										{
											"begin": 10369,
											"end": 10511,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10472,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "676"
										},
										{
											"begin": 10498,
											"end": 10503,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10472,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "505"
										},
										{
											"begin": 10472,
											"end": 10504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10472,
											"end": 10504,
											"name": "tag",
											"source": 19,
											"value": "676"
										},
										{
											"begin": 10472,
											"end": 10504,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10467,
											"end": 10470,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10460,
											"end": 10505,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10369,
											"end": 10511,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10369,
											"end": 10511,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10369,
											"end": 10511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10517,
											"end": 10771,
											"name": "tag",
											"source": 19,
											"value": "110"
										},
										{
											"begin": 10517,
											"end": 10771,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10626,
											"end": 10630,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10664,
											"end": 10666,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10653,
											"end": 10662,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10649,
											"end": 10667,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10641,
											"end": 10667,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10641,
											"end": 10667,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10677,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "678"
										},
										{
											"begin": 10761,
											"end": 10762,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10750,
											"end": 10759,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10746,
											"end": 10763,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10737,
											"end": 10743,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10677,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "510"
										},
										{
											"begin": 10677,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10677,
											"end": 10764,
											"name": "tag",
											"source": 19,
											"value": "678"
										},
										{
											"begin": 10677,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10517,
											"end": 10771,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 10517,
											"end": 10771,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10517,
											"end": 10771,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10517,
											"end": 10771,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10517,
											"end": 10771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10777,
											"end": 11084,
											"name": "tag",
											"source": 19,
											"value": "511"
										},
										{
											"begin": 10777,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10838,
											"end": 10842,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10928,
											"end": 10946,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10920,
											"end": 10926,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10917,
											"end": 10947,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 10914,
											"end": 10970,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 10914,
											"end": 10970,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "680"
										},
										{
											"begin": 10914,
											"end": 10970,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10950,
											"end": 10968,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "681"
										},
										{
											"begin": 10950,
											"end": 10968,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "420"
										},
										{
											"begin": 10950,
											"end": 10968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10950,
											"end": 10968,
											"name": "tag",
											"source": 19,
											"value": "681"
										},
										{
											"begin": 10950,
											"end": 10968,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10914,
											"end": 10970,
											"name": "tag",
											"source": 19,
											"value": "680"
										},
										{
											"begin": 10914,
											"end": 10970,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10988,
											"end": 11017,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "682"
										},
										{
											"begin": 11010,
											"end": 11016,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10988,
											"end": 11017,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "486"
										},
										{
											"begin": 10988,
											"end": 11017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10988,
											"end": 11017,
											"name": "tag",
											"source": 19,
											"value": "682"
										},
										{
											"begin": 10988,
											"end": 11017,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10980,
											"end": 11017,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10980,
											"end": 11017,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11072,
											"end": 11076,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11066,
											"end": 11070,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11062,
											"end": 11077,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11054,
											"end": 11077,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11054,
											"end": 11077,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10777,
											"end": 11084,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10777,
											"end": 11084,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10777,
											"end": 11084,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10777,
											"end": 11084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11090,
											"end": 11513,
											"name": "tag",
											"source": 19,
											"value": "512"
										},
										{
											"begin": 11090,
											"end": 11513,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11167,
											"end": 11172,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11192,
											"end": 11257,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "684"
										},
										{
											"begin": 11208,
											"end": 11256,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "685"
										},
										{
											"begin": 11249,
											"end": 11255,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 11208,
											"end": 11256,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "511"
										},
										{
											"begin": 11208,
											"end": 11256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11208,
											"end": 11256,
											"name": "tag",
											"source": 19,
											"value": "685"
										},
										{
											"begin": 11208,
											"end": 11256,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11192,
											"end": 11257,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "499"
										},
										{
											"begin": 11192,
											"end": 11257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11192,
											"end": 11257,
											"name": "tag",
											"source": 19,
											"value": "684"
										},
										{
											"begin": 11192,
											"end": 11257,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11183,
											"end": 11257,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11183,
											"end": 11257,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11280,
											"end": 11286,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11273,
											"end": 11278,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11266,
											"end": 11287,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11318,
											"end": 11322,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11311,
											"end": 11316,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11307,
											"end": 11323,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11356,
											"end": 11359,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 11347,
											"end": 11353,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 11342,
											"end": 11345,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 11338,
											"end": 11354,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11335,
											"end": 11360,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 11332,
											"end": 11444,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 11332,
											"end": 11444,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "686"
										},
										{
											"begin": 11332,
											"end": 11444,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 11363,
											"end": 11442,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "687"
										},
										{
											"begin": 11363,
											"end": 11442,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "497"
										},
										{
											"begin": 11363,
											"end": 11442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11363,
											"end": 11442,
											"name": "tag",
											"source": 19,
											"value": "687"
										},
										{
											"begin": 11363,
											"end": 11442,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11332,
											"end": 11444,
											"name": "tag",
											"source": 19,
											"value": "686"
										},
										{
											"begin": 11332,
											"end": 11444,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11453,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "688"
										},
										{
											"begin": 11500,
											"end": 11506,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 11495,
											"end": 11498,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11490,
											"end": 11493,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 11453,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "501"
										},
										{
											"begin": 11453,
											"end": 11507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11453,
											"end": 11507,
											"name": "tag",
											"source": 19,
											"value": "688"
										},
										{
											"begin": 11453,
											"end": 11507,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11173,
											"end": 11513,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11090,
											"end": 11513,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 11090,
											"end": 11513,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11090,
											"end": 11513,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11090,
											"end": 11513,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11090,
											"end": 11513,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11090,
											"end": 11513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11532,
											"end": 11870,
											"name": "tag",
											"source": 19,
											"value": "513"
										},
										{
											"begin": 11532,
											"end": 11870,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11587,
											"end": 11592,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11636,
											"end": 11639,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11629,
											"end": 11633,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 11621,
											"end": 11627,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11617,
											"end": 11634,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11613,
											"end": 11640,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 11603,
											"end": 11725,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "690"
										},
										{
											"begin": 11603,
											"end": 11725,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 11644,
											"end": 11723,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "691"
										},
										{
											"begin": 11644,
											"end": 11723,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "496"
										},
										{
											"begin": 11644,
											"end": 11723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11644,
											"end": 11723,
											"name": "tag",
											"source": 19,
											"value": "691"
										},
										{
											"begin": 11644,
											"end": 11723,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11603,
											"end": 11725,
											"name": "tag",
											"source": 19,
											"value": "690"
										},
										{
											"begin": 11603,
											"end": 11725,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11761,
											"end": 11767,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11748,
											"end": 11768,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 11786,
											"end": 11864,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "692"
										},
										{
											"begin": 11860,
											"end": 11863,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 11852,
											"end": 11858,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11845,
											"end": 11849,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11837,
											"end": 11843,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 11833,
											"end": 11850,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11786,
											"end": 11864,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "512"
										},
										{
											"begin": 11786,
											"end": 11864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11786,
											"end": 11864,
											"name": "tag",
											"source": 19,
											"value": "692"
										},
										{
											"begin": 11786,
											"end": 11864,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11777,
											"end": 11864,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11777,
											"end": 11864,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11593,
											"end": 11870,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11532,
											"end": 11870,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11532,
											"end": 11870,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11532,
											"end": 11870,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11532,
											"end": 11870,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11532,
											"end": 11870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11876,
											"end": 12819,
											"name": "tag",
											"source": 19,
											"value": "114"
										},
										{
											"begin": 11876,
											"end": 12819,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11971,
											"end": 11977,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11979,
											"end": 11985,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 11987,
											"end": 11993,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11995,
											"end": 12001,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 12044,
											"end": 12047,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 12032,
											"end": 12041,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12023,
											"end": 12030,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 12019,
											"end": 12042,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 12015,
											"end": 12048,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 12012,
											"end": 12132,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 12012,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "694"
										},
										{
											"begin": 12012,
											"end": 12132,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 12051,
											"end": 12130,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "695"
										},
										{
											"begin": 12051,
											"end": 12130,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 12051,
											"end": 12130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12051,
											"end": 12130,
											"name": "tag",
											"source": 19,
											"value": "695"
										},
										{
											"begin": 12051,
											"end": 12130,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12012,
											"end": 12132,
											"name": "tag",
											"source": 19,
											"value": "694"
										},
										{
											"begin": 12012,
											"end": 12132,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12171,
											"end": 12172,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12196,
											"end": 12249,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "696"
										},
										{
											"begin": 12241,
											"end": 12248,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 12232,
											"end": 12238,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12221,
											"end": 12230,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 12217,
											"end": 12239,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12196,
											"end": 12249,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "495"
										},
										{
											"begin": 12196,
											"end": 12249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12196,
											"end": 12249,
											"name": "tag",
											"source": 19,
											"value": "696"
										},
										{
											"begin": 12196,
											"end": 12249,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12186,
											"end": 12249,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 12186,
											"end": 12249,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12142,
											"end": 12259,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12298,
											"end": 12300,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12324,
											"end": 12377,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "697"
										},
										{
											"begin": 12369,
											"end": 12376,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 12360,
											"end": 12366,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12349,
											"end": 12358,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 12345,
											"end": 12367,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12324,
											"end": 12377,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "495"
										},
										{
											"begin": 12324,
											"end": 12377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12324,
											"end": 12377,
											"name": "tag",
											"source": 19,
											"value": "697"
										},
										{
											"begin": 12324,
											"end": 12377,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12314,
											"end": 12377,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 12314,
											"end": 12377,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12269,
											"end": 12387,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12426,
											"end": 12428,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 12452,
											"end": 12505,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "698"
										},
										{
											"begin": 12497,
											"end": 12504,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 12488,
											"end": 12494,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12477,
											"end": 12486,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 12473,
											"end": 12495,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12452,
											"end": 12505,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "490"
										},
										{
											"begin": 12452,
											"end": 12505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12452,
											"end": 12505,
											"name": "tag",
											"source": 19,
											"value": "698"
										},
										{
											"begin": 12452,
											"end": 12505,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12442,
											"end": 12505,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 12442,
											"end": 12505,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12397,
											"end": 12515,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12582,
											"end": 12584,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 12571,
											"end": 12580,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12567,
											"end": 12585,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12554,
											"end": 12586,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 12613,
											"end": 12631,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12605,
											"end": 12611,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 12602,
											"end": 12632,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 12599,
											"end": 12716,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 12599,
											"end": 12716,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "699"
										},
										{
											"begin": 12599,
											"end": 12716,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 12635,
											"end": 12714,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "700"
										},
										{
											"begin": 12635,
											"end": 12714,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "477"
										},
										{
											"begin": 12635,
											"end": 12714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12635,
											"end": 12714,
											"name": "tag",
											"source": 19,
											"value": "700"
										},
										{
											"begin": 12635,
											"end": 12714,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12599,
											"end": 12716,
											"name": "tag",
											"source": 19,
											"value": "699"
										},
										{
											"begin": 12599,
											"end": 12716,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12740,
											"end": 12802,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "701"
										},
										{
											"begin": 12794,
											"end": 12801,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 12785,
											"end": 12791,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12774,
											"end": 12783,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 12770,
											"end": 12792,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12740,
											"end": 12802,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "513"
										},
										{
											"begin": 12740,
											"end": 12802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12740,
											"end": 12802,
											"name": "tag",
											"source": 19,
											"value": "701"
										},
										{
											"begin": 12740,
											"end": 12802,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12730,
											"end": 12802,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12730,
											"end": 12802,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12525,
											"end": 12812,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11876,
											"end": 12819,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11876,
											"end": 12819,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 11876,
											"end": 12819,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11876,
											"end": 12819,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 11876,
											"end": 12819,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11876,
											"end": 12819,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11876,
											"end": 12819,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11876,
											"end": 12819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12825,
											"end": 13315,
											"name": "tag",
											"source": 19,
											"value": "124"
										},
										{
											"begin": 12825,
											"end": 13315,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12901,
											"end": 12907,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12909,
											"end": 12915,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 12958,
											"end": 12960,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 12946,
											"end": 12955,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 12937,
											"end": 12944,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12933,
											"end": 12956,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 12926,
											"end": 13045,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 12926,
											"end": 13045,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "703"
										},
										{
											"begin": 12926,
											"end": 13045,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 12964,
											"end": 13043,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "704"
										},
										{
											"begin": 12964,
											"end": 13043,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 12964,
											"end": 13043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12964,
											"end": 13043,
											"name": "tag",
											"source": 19,
											"value": "704"
										},
										{
											"begin": 12964,
											"end": 13043,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12926,
											"end": 13045,
											"name": "tag",
											"source": 19,
											"value": "703"
										},
										{
											"begin": 12926,
											"end": 13045,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13084,
											"end": 13085,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13109,
											"end": 13162,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "705"
										},
										{
											"begin": 13154,
											"end": 13161,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 13145,
											"end": 13151,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13134,
											"end": 13143,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 13130,
											"end": 13152,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13109,
											"end": 13162,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "490"
										},
										{
											"begin": 13109,
											"end": 13162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13109,
											"end": 13162,
											"name": "tag",
											"source": 19,
											"value": "705"
										},
										{
											"begin": 13109,
											"end": 13162,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13099,
											"end": 13162,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 13099,
											"end": 13162,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13055,
											"end": 13172,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13211,
											"end": 13213,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13237,
											"end": 13298,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "706"
										},
										{
											"begin": 13290,
											"end": 13297,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 13281,
											"end": 13287,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13270,
											"end": 13279,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 13266,
											"end": 13288,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13237,
											"end": 13298,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "507"
										},
										{
											"begin": 13237,
											"end": 13298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13237,
											"end": 13298,
											"name": "tag",
											"source": 19,
											"value": "706"
										},
										{
											"begin": 13237,
											"end": 13298,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13227,
											"end": 13298,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13227,
											"end": 13298,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13182,
											"end": 13308,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12825,
											"end": 13315,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 12825,
											"end": 13315,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12825,
											"end": 13315,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 12825,
											"end": 13315,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12825,
											"end": 13315,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12825,
											"end": 13315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13321,
											"end": 13795,
											"name": "tag",
											"source": 19,
											"value": "129"
										},
										{
											"begin": 13321,
											"end": 13795,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13389,
											"end": 13395,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13397,
											"end": 13403,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 13446,
											"end": 13448,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 13434,
											"end": 13443,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13425,
											"end": 13432,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 13421,
											"end": 13444,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 13417,
											"end": 13449,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 13414,
											"end": 13533,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 13414,
											"end": 13533,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "708"
										},
										{
											"begin": 13414,
											"end": 13533,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 13452,
											"end": 13531,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "709"
										},
										{
											"begin": 13452,
											"end": 13531,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 13452,
											"end": 13531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13452,
											"end": 13531,
											"name": "tag",
											"source": 19,
											"value": "709"
										},
										{
											"begin": 13452,
											"end": 13531,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13414,
											"end": 13533,
											"name": "tag",
											"source": 19,
											"value": "708"
										},
										{
											"begin": 13414,
											"end": 13533,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13572,
											"end": 13573,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13597,
											"end": 13650,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "710"
										},
										{
											"begin": 13642,
											"end": 13649,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 13633,
											"end": 13639,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13622,
											"end": 13631,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 13618,
											"end": 13640,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13597,
											"end": 13650,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "495"
										},
										{
											"begin": 13597,
											"end": 13650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13597,
											"end": 13650,
											"name": "tag",
											"source": 19,
											"value": "710"
										},
										{
											"begin": 13597,
											"end": 13650,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13587,
											"end": 13650,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 13587,
											"end": 13650,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13543,
											"end": 13660,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13699,
											"end": 13701,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13725,
											"end": 13778,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "711"
										},
										{
											"begin": 13770,
											"end": 13777,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 13761,
											"end": 13767,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13750,
											"end": 13759,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 13746,
											"end": 13768,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13725,
											"end": 13778,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "495"
										},
										{
											"begin": 13725,
											"end": 13778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13725,
											"end": 13778,
											"name": "tag",
											"source": 19,
											"value": "711"
										},
										{
											"begin": 13725,
											"end": 13778,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13715,
											"end": 13778,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13715,
											"end": 13778,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13670,
											"end": 13788,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13321,
											"end": 13795,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 13321,
											"end": 13795,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13321,
											"end": 13795,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 13321,
											"end": 13795,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13321,
											"end": 13795,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13321,
											"end": 13795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13801,
											"end": 13981,
											"name": "tag",
											"source": 19,
											"value": "514"
										},
										{
											"begin": 13801,
											"end": 13981,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13849,
											"end": 13926,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13846,
											"end": 13847,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13839,
											"end": 13927,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13946,
											"end": 13950,
											"name": "PUSH",
											"source": 19,
											"value": "22"
										},
										{
											"begin": 13943,
											"end": 13944,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 13936,
											"end": 13951,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13970,
											"end": 13974,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 13967,
											"end": 13968,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13960,
											"end": 13975,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 13987,
											"end": 14307,
											"name": "tag",
											"source": 19,
											"value": "148"
										},
										{
											"begin": 13987,
											"end": 14307,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14031,
											"end": 14037,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14068,
											"end": 14069,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 14062,
											"end": 14066,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14058,
											"end": 14070,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 14048,
											"end": 14070,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14048,
											"end": 14070,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14115,
											"end": 14116,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 14109,
											"end": 14113,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14105,
											"end": 14117,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 14136,
											"end": 14154,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 14126,
											"end": 14207,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "714"
										},
										{
											"begin": 14126,
											"end": 14207,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 14192,
											"end": 14196,
											"name": "PUSH",
											"source": 19,
											"value": "7F"
										},
										{
											"begin": 14184,
											"end": 14190,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14180,
											"end": 14197,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 14170,
											"end": 14197,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14170,
											"end": 14197,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14126,
											"end": 14207,
											"name": "tag",
											"source": 19,
											"value": "714"
										},
										{
											"begin": 14126,
											"end": 14207,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14254,
											"end": 14256,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 14246,
											"end": 14252,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14243,
											"end": 14257,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 14223,
											"end": 14241,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14220,
											"end": 14258,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 14217,
											"end": 14301,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "715"
										},
										{
											"begin": 14217,
											"end": 14301,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 14273,
											"end": 14291,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "716"
										},
										{
											"begin": 14273,
											"end": 14291,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "514"
										},
										{
											"begin": 14273,
											"end": 14291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14273,
											"end": 14291,
											"name": "tag",
											"source": 19,
											"value": "716"
										},
										{
											"begin": 14273,
											"end": 14291,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14217,
											"end": 14301,
											"name": "tag",
											"source": 19,
											"value": "715"
										},
										{
											"begin": 14217,
											"end": 14301,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14038,
											"end": 14307,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13987,
											"end": 14307,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13987,
											"end": 14307,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13987,
											"end": 14307,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13987,
											"end": 14307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14313,
											"end": 14755,
											"name": "tag",
											"source": 19,
											"value": "171"
										},
										{
											"begin": 14313,
											"end": 14755,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14462,
											"end": 14466,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14500,
											"end": 14502,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 14489,
											"end": 14498,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14485,
											"end": 14503,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14477,
											"end": 14503,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14477,
											"end": 14503,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14513,
											"end": 14584,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "718"
										},
										{
											"begin": 14581,
											"end": 14582,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14570,
											"end": 14579,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14566,
											"end": 14583,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14557,
											"end": 14563,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 14513,
											"end": 14584,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "493"
										},
										{
											"begin": 14513,
											"end": 14584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14513,
											"end": 14584,
											"name": "tag",
											"source": 19,
											"value": "718"
										},
										{
											"begin": 14513,
											"end": 14584,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14594,
											"end": 14666,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "719"
										},
										{
											"begin": 14662,
											"end": 14664,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 14651,
											"end": 14660,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14647,
											"end": 14665,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14638,
											"end": 14644,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 14594,
											"end": 14666,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "504"
										},
										{
											"begin": 14594,
											"end": 14666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14594,
											"end": 14666,
											"name": "tag",
											"source": 19,
											"value": "719"
										},
										{
											"begin": 14594,
											"end": 14666,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14676,
											"end": 14748,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "720"
										},
										{
											"begin": 14744,
											"end": 14746,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 14733,
											"end": 14742,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14729,
											"end": 14747,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14720,
											"end": 14726,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 14676,
											"end": 14748,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "493"
										},
										{
											"begin": 14676,
											"end": 14748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14676,
											"end": 14748,
											"name": "tag",
											"source": 19,
											"value": "720"
										},
										{
											"begin": 14676,
											"end": 14748,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14313,
											"end": 14755,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 14313,
											"end": 14755,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 14313,
											"end": 14755,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14313,
											"end": 14755,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14313,
											"end": 14755,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14313,
											"end": 14755,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14313,
											"end": 14755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14761,
											"end": 14933,
											"name": "tag",
											"source": 19,
											"value": "515"
										},
										{
											"begin": 14761,
											"end": 14933,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14901,
											"end": 14925,
											"name": "PUSH",
											"source": 19,
											"value": "4E6F2062616C616E636520746F20776974686472617700000000000000000000"
										},
										{
											"begin": 14897,
											"end": 14898,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14889,
											"end": 14895,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14885,
											"end": 14899,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14878,
											"end": 14926,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14761,
											"end": 14933,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14761,
											"end": 14933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14939,
											"end": 15305,
											"name": "tag",
											"source": 19,
											"value": "516"
										},
										{
											"begin": 14939,
											"end": 15305,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15081,
											"end": 15084,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15102,
											"end": 15169,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "723"
										},
										{
											"begin": 15166,
											"end": 15168,
											"name": "PUSH",
											"source": 19,
											"value": "16"
										},
										{
											"begin": 15161,
											"end": 15164,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15102,
											"end": 15169,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "484"
										},
										{
											"begin": 15102,
											"end": 15169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15102,
											"end": 15169,
											"name": "tag",
											"source": 19,
											"value": "723"
										},
										{
											"begin": 15102,
											"end": 15169,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15095,
											"end": 15169,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15095,
											"end": 15169,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15178,
											"end": 15271,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "724"
										},
										{
											"begin": 15267,
											"end": 15270,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15178,
											"end": 15271,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "515"
										},
										{
											"begin": 15178,
											"end": 15271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15178,
											"end": 15271,
											"name": "tag",
											"source": 19,
											"value": "724"
										},
										{
											"begin": 15178,
											"end": 15271,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15296,
											"end": 15298,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15291,
											"end": 15294,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15287,
											"end": 15299,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15280,
											"end": 15299,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15280,
											"end": 15299,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14939,
											"end": 15305,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14939,
											"end": 15305,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14939,
											"end": 15305,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14939,
											"end": 15305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15311,
											"end": 15730,
											"name": "tag",
											"source": 19,
											"value": "175"
										},
										{
											"begin": 15311,
											"end": 15730,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15477,
											"end": 15481,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15515,
											"end": 15517,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15504,
											"end": 15513,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15500,
											"end": 15518,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15492,
											"end": 15518,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15492,
											"end": 15518,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15564,
											"end": 15573,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15558,
											"end": 15562,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15554,
											"end": 15574,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 15550,
											"end": 15551,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15539,
											"end": 15548,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15535,
											"end": 15552,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15528,
											"end": 15575,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15592,
											"end": 15723,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "726"
										},
										{
											"begin": 15718,
											"end": 15722,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15592,
											"end": 15723,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "516"
										},
										{
											"begin": 15592,
											"end": 15723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15592,
											"end": 15723,
											"name": "tag",
											"source": 19,
											"value": "726"
										},
										{
											"begin": 15592,
											"end": 15723,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15584,
											"end": 15723,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15584,
											"end": 15723,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15311,
											"end": 15730,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15311,
											"end": 15730,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15311,
											"end": 15730,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15311,
											"end": 15730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15736,
											"end": 15910,
											"name": "tag",
											"source": 19,
											"value": "517"
										},
										{
											"begin": 15736,
											"end": 15910,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15876,
											"end": 15902,
											"name": "PUSH",
											"source": 19,
											"value": "4E6F7420746865207061796D656E742072656365697665720000000000000000"
										},
										{
											"begin": 15872,
											"end": 15873,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15864,
											"end": 15870,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15860,
											"end": 15874,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15853,
											"end": 15903,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15736,
											"end": 15910,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15736,
											"end": 15910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15916,
											"end": 16282,
											"name": "tag",
											"source": 19,
											"value": "518"
										},
										{
											"begin": 15916,
											"end": 16282,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16058,
											"end": 16061,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16079,
											"end": 16146,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "729"
										},
										{
											"begin": 16143,
											"end": 16145,
											"name": "PUSH",
											"source": 19,
											"value": "18"
										},
										{
											"begin": 16138,
											"end": 16141,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16079,
											"end": 16146,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "484"
										},
										{
											"begin": 16079,
											"end": 16146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16079,
											"end": 16146,
											"name": "tag",
											"source": 19,
											"value": "729"
										},
										{
											"begin": 16079,
											"end": 16146,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16072,
											"end": 16146,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16072,
											"end": 16146,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16155,
											"end": 16248,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "730"
										},
										{
											"begin": 16244,
											"end": 16247,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16155,
											"end": 16248,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "517"
										},
										{
											"begin": 16155,
											"end": 16248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16155,
											"end": 16248,
											"name": "tag",
											"source": 19,
											"value": "730"
										},
										{
											"begin": 16155,
											"end": 16248,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16273,
											"end": 16275,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16268,
											"end": 16271,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16264,
											"end": 16276,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16257,
											"end": 16276,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16257,
											"end": 16276,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15916,
											"end": 16282,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15916,
											"end": 16282,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15916,
											"end": 16282,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15916,
											"end": 16282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16288,
											"end": 16707,
											"name": "tag",
											"source": 19,
											"value": "178"
										},
										{
											"begin": 16288,
											"end": 16707,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16454,
											"end": 16458,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16492,
											"end": 16494,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16481,
											"end": 16490,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16477,
											"end": 16495,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16469,
											"end": 16495,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16469,
											"end": 16495,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16541,
											"end": 16550,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16535,
											"end": 16539,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16531,
											"end": 16551,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 16527,
											"end": 16528,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16516,
											"end": 16525,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16512,
											"end": 16529,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16505,
											"end": 16552,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16569,
											"end": 16700,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "732"
										},
										{
											"begin": 16695,
											"end": 16699,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16569,
											"end": 16700,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "518"
										},
										{
											"begin": 16569,
											"end": 16700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16569,
											"end": 16700,
											"name": "tag",
											"source": 19,
											"value": "732"
										},
										{
											"begin": 16569,
											"end": 16700,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16561,
											"end": 16700,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16561,
											"end": 16700,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16288,
											"end": 16707,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16288,
											"end": 16707,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16288,
											"end": 16707,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16288,
											"end": 16707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16713,
											"end": 16936,
											"name": "tag",
											"source": 19,
											"value": "519"
										},
										{
											"begin": 16713,
											"end": 16936,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16853,
											"end": 16887,
											"name": "PUSH",
											"source": 19,
											"value": "5072696365206D7573742062652067726561746572207468616E206D696E7450"
										},
										{
											"begin": 16849,
											"end": 16850,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16841,
											"end": 16847,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16837,
											"end": 16851,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16830,
											"end": 16888,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16922,
											"end": 16928,
											"name": "PUSH",
											"source": 19,
											"value": "7269636500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16917,
											"end": 16919,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16909,
											"end": 16915,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16905,
											"end": 16920,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16898,
											"end": 16929,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16713,
											"end": 16936,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16713,
											"end": 16936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16942,
											"end": 17308,
											"name": "tag",
											"source": 19,
											"value": "520"
										},
										{
											"begin": 16942,
											"end": 17308,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17084,
											"end": 17087,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17105,
											"end": 17172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "735"
										},
										{
											"begin": 17169,
											"end": 17171,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 17164,
											"end": 17167,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 17105,
											"end": 17172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "484"
										},
										{
											"begin": 17105,
											"end": 17172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17105,
											"end": 17172,
											"name": "tag",
											"source": 19,
											"value": "735"
										},
										{
											"begin": 17105,
											"end": 17172,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17098,
											"end": 17172,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17098,
											"end": 17172,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17181,
											"end": 17274,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "736"
										},
										{
											"begin": 17270,
											"end": 17273,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17181,
											"end": 17274,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "519"
										},
										{
											"begin": 17181,
											"end": 17274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17181,
											"end": 17274,
											"name": "tag",
											"source": 19,
											"value": "736"
										},
										{
											"begin": 17181,
											"end": 17274,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17299,
											"end": 17301,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 17294,
											"end": 17297,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17290,
											"end": 17302,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17283,
											"end": 17302,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17283,
											"end": 17302,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16942,
											"end": 17308,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16942,
											"end": 17308,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16942,
											"end": 17308,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16942,
											"end": 17308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17314,
											"end": 17733,
											"name": "tag",
											"source": 19,
											"value": "189"
										},
										{
											"begin": 17314,
											"end": 17733,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17480,
											"end": 17484,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17518,
											"end": 17520,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 17507,
											"end": 17516,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17503,
											"end": 17521,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17495,
											"end": 17521,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17495,
											"end": 17521,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17567,
											"end": 17576,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17561,
											"end": 17565,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17557,
											"end": 17577,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 17553,
											"end": 17554,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17542,
											"end": 17551,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 17538,
											"end": 17555,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17531,
											"end": 17578,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17595,
											"end": 17726,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "738"
										},
										{
											"begin": 17721,
											"end": 17725,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17595,
											"end": 17726,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "520"
										},
										{
											"begin": 17595,
											"end": 17726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17595,
											"end": 17726,
											"name": "tag",
											"source": 19,
											"value": "738"
										},
										{
											"begin": 17595,
											"end": 17726,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17587,
											"end": 17726,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17587,
											"end": 17726,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17314,
											"end": 17733,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17314,
											"end": 17733,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17314,
											"end": 17733,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17314,
											"end": 17733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17739,
											"end": 17919,
											"name": "tag",
											"source": 19,
											"value": "521"
										},
										{
											"begin": 17739,
											"end": 17919,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17787,
											"end": 17864,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17784,
											"end": 17785,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17777,
											"end": 17865,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17884,
											"end": 17888,
											"name": "PUSH",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 17881,
											"end": 17882,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 17874,
											"end": 17889,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17908,
											"end": 17912,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 17905,
											"end": 17906,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17898,
											"end": 17913,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 17925,
											"end": 18158,
											"name": "tag",
											"source": 19,
											"value": "191"
										},
										{
											"begin": 17925,
											"end": 18158,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17964,
											"end": 17967,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17987,
											"end": 18011,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "741"
										},
										{
											"begin": 18005,
											"end": 18010,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17987,
											"end": 18011,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "488"
										},
										{
											"begin": 17987,
											"end": 18011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17987,
											"end": 18011,
											"name": "tag",
											"source": 19,
											"value": "741"
										},
										{
											"begin": 17987,
											"end": 18011,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17978,
											"end": 18011,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17978,
											"end": 18011,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18033,
											"end": 18099,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18026,
											"end": 18031,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18023,
											"end": 18100,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 18020,
											"end": 18123,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "742"
										},
										{
											"begin": 18020,
											"end": 18123,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 18103,
											"end": 18121,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "743"
										},
										{
											"begin": 18103,
											"end": 18121,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "521"
										},
										{
											"begin": 18103,
											"end": 18121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18103,
											"end": 18121,
											"name": "tag",
											"source": 19,
											"value": "743"
										},
										{
											"begin": 18103,
											"end": 18121,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18020,
											"end": 18123,
											"name": "tag",
											"source": 19,
											"value": "742"
										},
										{
											"begin": 18020,
											"end": 18123,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18150,
											"end": 18151,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 18143,
											"end": 18148,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18139,
											"end": 18152,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18132,
											"end": 18152,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18132,
											"end": 18152,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17925,
											"end": 18158,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17925,
											"end": 18158,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17925,
											"end": 18158,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17925,
											"end": 18158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18164,
											"end": 18587,
											"name": "tag",
											"source": 19,
											"value": "199"
										},
										{
											"begin": 18164,
											"end": 18587,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18305,
											"end": 18309,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18343,
											"end": 18345,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 18332,
											"end": 18341,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18328,
											"end": 18346,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18320,
											"end": 18346,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18320,
											"end": 18346,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18392,
											"end": 18401,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18386,
											"end": 18390,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18382,
											"end": 18402,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 18378,
											"end": 18379,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18367,
											"end": 18376,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18363,
											"end": 18380,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18356,
											"end": 18403,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18420,
											"end": 18498,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "745"
										},
										{
											"begin": 18493,
											"end": 18497,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18484,
											"end": 18490,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 18420,
											"end": 18498,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "487"
										},
										{
											"begin": 18420,
											"end": 18498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18420,
											"end": 18498,
											"name": "tag",
											"source": 19,
											"value": "745"
										},
										{
											"begin": 18420,
											"end": 18498,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18412,
											"end": 18498,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18412,
											"end": 18498,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18508,
											"end": 18580,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "746"
										},
										{
											"begin": 18576,
											"end": 18578,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18565,
											"end": 18574,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18561,
											"end": 18579,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18552,
											"end": 18558,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 18508,
											"end": 18580,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "504"
										},
										{
											"begin": 18508,
											"end": 18580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18508,
											"end": 18580,
											"name": "tag",
											"source": 19,
											"value": "746"
										},
										{
											"begin": 18508,
											"end": 18580,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18164,
											"end": 18587,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 18164,
											"end": 18587,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 18164,
											"end": 18587,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18164,
											"end": 18587,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18164,
											"end": 18587,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18164,
											"end": 18587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18593,
											"end": 18741,
											"name": "tag",
											"source": 19,
											"value": "522"
										},
										{
											"begin": 18593,
											"end": 18741,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18695,
											"end": 18706,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18732,
											"end": 18735,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18717,
											"end": 18735,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18717,
											"end": 18735,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18593,
											"end": 18741,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 18593,
											"end": 18741,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18593,
											"end": 18741,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18593,
											"end": 18741,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18593,
											"end": 18741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18747,
											"end": 19137,
											"name": "tag",
											"source": 19,
											"value": "523"
										},
										{
											"begin": 18747,
											"end": 19137,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18853,
											"end": 18856,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18881,
											"end": 18920,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "749"
										},
										{
											"begin": 18914,
											"end": 18919,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18881,
											"end": 18920,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "483"
										},
										{
											"begin": 18881,
											"end": 18920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18881,
											"end": 18920,
											"name": "tag",
											"source": 19,
											"value": "749"
										},
										{
											"begin": 18881,
											"end": 18920,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18936,
											"end": 19025,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "750"
										},
										{
											"begin": 19018,
											"end": 19024,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19013,
											"end": 19016,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 18936,
											"end": 19025,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "522"
										},
										{
											"begin": 18936,
											"end": 19025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18936,
											"end": 19025,
											"name": "tag",
											"source": 19,
											"value": "750"
										},
										{
											"begin": 18936,
											"end": 19025,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18929,
											"end": 19025,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 18929,
											"end": 19025,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19034,
											"end": 19099,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "751"
										},
										{
											"begin": 19092,
											"end": 19098,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19087,
											"end": 19090,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 19080,
											"end": 19084,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 19073,
											"end": 19078,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 19069,
											"end": 19085,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19034,
											"end": 19099,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "485"
										},
										{
											"begin": 19034,
											"end": 19099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19034,
											"end": 19099,
											"name": "tag",
											"source": 19,
											"value": "751"
										},
										{
											"begin": 19034,
											"end": 19099,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19124,
											"end": 19130,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 19119,
											"end": 19122,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 19115,
											"end": 19131,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19108,
											"end": 19131,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19108,
											"end": 19131,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18857,
											"end": 19137,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18747,
											"end": 19137,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 18747,
											"end": 19137,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18747,
											"end": 19137,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18747,
											"end": 19137,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18747,
											"end": 19137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19143,
											"end": 19578,
											"name": "tag",
											"source": 19,
											"value": "249"
										},
										{
											"begin": 19143,
											"end": 19578,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19323,
											"end": 19326,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19345,
											"end": 19440,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "753"
										},
										{
											"begin": 19436,
											"end": 19439,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19427,
											"end": 19433,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 19345,
											"end": 19440,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "523"
										},
										{
											"begin": 19345,
											"end": 19440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19345,
											"end": 19440,
											"name": "tag",
											"source": 19,
											"value": "753"
										},
										{
											"begin": 19345,
											"end": 19440,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19338,
											"end": 19440,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19338,
											"end": 19440,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19457,
											"end": 19552,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "754"
										},
										{
											"begin": 19548,
											"end": 19551,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19539,
											"end": 19545,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 19457,
											"end": 19552,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "523"
										},
										{
											"begin": 19457,
											"end": 19552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19457,
											"end": 19552,
											"name": "tag",
											"source": 19,
											"value": "754"
										},
										{
											"begin": 19457,
											"end": 19552,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19450,
											"end": 19552,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19450,
											"end": 19552,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19569,
											"end": 19572,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19562,
											"end": 19572,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19562,
											"end": 19572,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19143,
											"end": 19578,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 19143,
											"end": 19578,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 19143,
											"end": 19578,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19143,
											"end": 19578,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19143,
											"end": 19578,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19143,
											"end": 19578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19584,
											"end": 19669,
											"name": "tag",
											"source": 19,
											"value": "524"
										},
										{
											"begin": 19584,
											"end": 19669,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19629,
											"end": 19636,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19658,
											"end": 19663,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19647,
											"end": 19663,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19647,
											"end": 19663,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19584,
											"end": 19669,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19584,
											"end": 19669,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19584,
											"end": 19669,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19584,
											"end": 19669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19675,
											"end": 19776,
											"name": "tag",
											"source": 19,
											"value": "525"
										},
										{
											"begin": 19675,
											"end": 19776,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19711,
											"end": 19718,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19751,
											"end": 19769,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19744,
											"end": 19749,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19740,
											"end": 19770,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 19729,
											"end": 19770,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19729,
											"end": 19770,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19675,
											"end": 19776,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19675,
											"end": 19776,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19675,
											"end": 19776,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19675,
											"end": 19776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19782,
											"end": 19842,
											"name": "tag",
											"source": 19,
											"value": "526"
										},
										{
											"begin": 19782,
											"end": 19842,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19810,
											"end": 19813,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19831,
											"end": 19836,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19824,
											"end": 19836,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19824,
											"end": 19836,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19782,
											"end": 19842,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19782,
											"end": 19842,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19782,
											"end": 19842,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19782,
											"end": 19842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19848,
											"end": 20004,
											"name": "tag",
											"source": 19,
											"value": "527"
										},
										{
											"begin": 19848,
											"end": 20004,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19905,
											"end": 19914,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19938,
											"end": 19998,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "759"
										},
										{
											"begin": 19955,
											"end": 19997,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "760"
										},
										{
											"begin": 19964,
											"end": 19996,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "761"
										},
										{
											"begin": 19990,
											"end": 19995,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 19964,
											"end": 19996,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "524"
										},
										{
											"begin": 19964,
											"end": 19996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19964,
											"end": 19996,
											"name": "tag",
											"source": 19,
											"value": "761"
										},
										{
											"begin": 19964,
											"end": 19996,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19955,
											"end": 19997,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "526"
										},
										{
											"begin": 19955,
											"end": 19997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19955,
											"end": 19997,
											"name": "tag",
											"source": 19,
											"value": "760"
										},
										{
											"begin": 19955,
											"end": 19997,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19938,
											"end": 19998,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "525"
										},
										{
											"begin": 19938,
											"end": 19998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19938,
											"end": 19998,
											"name": "tag",
											"source": 19,
											"value": "759"
										},
										{
											"begin": 19938,
											"end": 19998,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19925,
											"end": 19998,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19925,
											"end": 19998,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19848,
											"end": 20004,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19848,
											"end": 20004,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19848,
											"end": 20004,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19848,
											"end": 20004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20010,
											"end": 20155,
											"name": "tag",
											"source": 19,
											"value": "528"
										},
										{
											"begin": 20010,
											"end": 20155,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20104,
											"end": 20148,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "763"
										},
										{
											"begin": 20142,
											"end": 20147,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 20104,
											"end": 20148,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "527"
										},
										{
											"begin": 20104,
											"end": 20148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20104,
											"end": 20148,
											"name": "tag",
											"source": 19,
											"value": "763"
										},
										{
											"begin": 20104,
											"end": 20148,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20099,
											"end": 20102,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20092,
											"end": 20149,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20010,
											"end": 20155,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20010,
											"end": 20155,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20010,
											"end": 20155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20161,
											"end": 20397,
											"name": "tag",
											"source": 19,
											"value": "271"
										},
										{
											"begin": 20161,
											"end": 20397,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20261,
											"end": 20265,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20299,
											"end": 20301,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 20288,
											"end": 20297,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20284,
											"end": 20302,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20276,
											"end": 20302,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20276,
											"end": 20302,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20312,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "765"
										},
										{
											"begin": 20387,
											"end": 20388,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20376,
											"end": 20385,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 20372,
											"end": 20389,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20363,
											"end": 20369,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 20312,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "528"
										},
										{
											"begin": 20312,
											"end": 20390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20312,
											"end": 20390,
											"name": "tag",
											"source": 19,
											"value": "765"
										},
										{
											"begin": 20312,
											"end": 20390,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20161,
											"end": 20397,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 20161,
											"end": 20397,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20161,
											"end": 20397,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20161,
											"end": 20397,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20161,
											"end": 20397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20403,
											"end": 20625,
											"name": "tag",
											"source": 19,
											"value": "529"
										},
										{
											"begin": 20403,
											"end": 20625,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20543,
											"end": 20577,
											"name": "PUSH",
											"source": 19,
											"value": "6D696E745072696365206D757374206265206120706F736974697665206E756D"
										},
										{
											"begin": 20539,
											"end": 20540,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20531,
											"end": 20537,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20527,
											"end": 20541,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20520,
											"end": 20578,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20612,
											"end": 20617,
											"name": "PUSH",
											"source": 19,
											"value": "6265720000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20607,
											"end": 20609,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 20599,
											"end": 20605,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20595,
											"end": 20610,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20588,
											"end": 20618,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20403,
											"end": 20625,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20403,
											"end": 20625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20631,
											"end": 20997,
											"name": "tag",
											"source": 19,
											"value": "530"
										},
										{
											"begin": 20631,
											"end": 20997,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20773,
											"end": 20776,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20794,
											"end": 20861,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "768"
										},
										{
											"begin": 20858,
											"end": 20860,
											"name": "PUSH",
											"source": 19,
											"value": "23"
										},
										{
											"begin": 20853,
											"end": 20856,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 20794,
											"end": 20861,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "484"
										},
										{
											"begin": 20794,
											"end": 20861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20794,
											"end": 20861,
											"name": "tag",
											"source": 19,
											"value": "768"
										},
										{
											"begin": 20794,
											"end": 20861,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20787,
											"end": 20861,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20787,
											"end": 20861,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20870,
											"end": 20963,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "769"
										},
										{
											"begin": 20959,
											"end": 20962,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20870,
											"end": 20963,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "529"
										},
										{
											"begin": 20870,
											"end": 20963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20870,
											"end": 20963,
											"name": "tag",
											"source": 19,
											"value": "769"
										},
										{
											"begin": 20870,
											"end": 20963,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20988,
											"end": 20990,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 20983,
											"end": 20986,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20979,
											"end": 20991,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20972,
											"end": 20991,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20972,
											"end": 20991,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20631,
											"end": 20997,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20631,
											"end": 20997,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20631,
											"end": 20997,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20631,
											"end": 20997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21003,
											"end": 21422,
											"name": "tag",
											"source": 19,
											"value": "285"
										},
										{
											"begin": 21003,
											"end": 21422,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21169,
											"end": 21173,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21207,
											"end": 21209,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 21196,
											"end": 21205,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21192,
											"end": 21210,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21184,
											"end": 21210,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21184,
											"end": 21210,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21256,
											"end": 21265,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21250,
											"end": 21254,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21246,
											"end": 21266,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 21242,
											"end": 21243,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21231,
											"end": 21240,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 21227,
											"end": 21244,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21220,
											"end": 21267,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 21284,
											"end": 21415,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "771"
										},
										{
											"begin": 21410,
											"end": 21414,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21284,
											"end": 21415,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "530"
										},
										{
											"begin": 21284,
											"end": 21415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21284,
											"end": 21415,
											"name": "tag",
											"source": 19,
											"value": "771"
										},
										{
											"begin": 21284,
											"end": 21415,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21276,
											"end": 21415,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21276,
											"end": 21415,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21003,
											"end": 21422,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 21003,
											"end": 21422,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21003,
											"end": 21422,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21003,
											"end": 21422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21428,
											"end": 21609,
											"name": "tag",
											"source": 19,
											"value": "531"
										},
										{
											"begin": 21428,
											"end": 21609,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21568,
											"end": 21601,
											"name": "PUSH",
											"source": 19,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 21564,
											"end": 21565,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21556,
											"end": 21562,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21552,
											"end": 21566,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21545,
											"end": 21602,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 21428,
											"end": 21609,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21428,
											"end": 21609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21615,
											"end": 21981,
											"name": "tag",
											"source": 19,
											"value": "532"
										},
										{
											"begin": 21615,
											"end": 21981,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21757,
											"end": 21760,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21778,
											"end": 21845,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "774"
										},
										{
											"begin": 21842,
											"end": 21844,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 21837,
											"end": 21840,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 21778,
											"end": 21845,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "484"
										},
										{
											"begin": 21778,
											"end": 21845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21778,
											"end": 21845,
											"name": "tag",
											"source": 19,
											"value": "774"
										},
										{
											"begin": 21778,
											"end": 21845,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21771,
											"end": 21845,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 21771,
											"end": 21845,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21854,
											"end": 21947,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "775"
										},
										{
											"begin": 21943,
											"end": 21946,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21854,
											"end": 21947,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "531"
										},
										{
											"begin": 21854,
											"end": 21947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21854,
											"end": 21947,
											"name": "tag",
											"source": 19,
											"value": "775"
										},
										{
											"begin": 21854,
											"end": 21947,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21972,
											"end": 21974,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 21967,
											"end": 21970,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21963,
											"end": 21975,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21956,
											"end": 21975,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21956,
											"end": 21975,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21615,
											"end": 21981,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 21615,
											"end": 21981,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21615,
											"end": 21981,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21615,
											"end": 21981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21987,
											"end": 22406,
											"name": "tag",
											"source": 19,
											"value": "315"
										},
										{
											"begin": 21987,
											"end": 22406,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22153,
											"end": 22157,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22191,
											"end": 22193,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 22180,
											"end": 22189,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22176,
											"end": 22194,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22168,
											"end": 22194,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22168,
											"end": 22194,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22240,
											"end": 22249,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 22234,
											"end": 22238,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 22230,
											"end": 22250,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 22226,
											"end": 22227,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22215,
											"end": 22224,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 22211,
											"end": 22228,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22204,
											"end": 22251,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 22268,
											"end": 22399,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "777"
										},
										{
											"begin": 22394,
											"end": 22398,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 22268,
											"end": 22399,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "532"
										},
										{
											"begin": 22268,
											"end": 22399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22268,
											"end": 22399,
											"name": "tag",
											"source": 19,
											"value": "777"
										},
										{
											"begin": 22268,
											"end": 22399,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22260,
											"end": 22399,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22260,
											"end": 22399,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21987,
											"end": 22406,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 21987,
											"end": 22406,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21987,
											"end": 22406,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21987,
											"end": 22406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22412,
											"end": 22553,
											"name": "tag",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 22412,
											"end": 22553,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22461,
											"end": 22465,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22484,
											"end": 22487,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 22476,
											"end": 22487,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22476,
											"end": 22487,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22507,
											"end": 22510,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 22504,
											"end": 22505,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22497,
											"end": 22511,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 22541,
											"end": 22545,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 22538,
											"end": 22539,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22528,
											"end": 22546,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 22520,
											"end": 22546,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22520,
											"end": 22546,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22412,
											"end": 22553,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 22412,
											"end": 22553,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22412,
											"end": 22553,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22412,
											"end": 22553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22559,
											"end": 22652,
											"name": "tag",
											"source": 19,
											"value": "534"
										},
										{
											"begin": 22559,
											"end": 22652,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22596,
											"end": 22602,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22643,
											"end": 22645,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 22638,
											"end": 22640,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 22631,
											"end": 22636,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 22627,
											"end": 22641,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22623,
											"end": 22646,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 22613,
											"end": 22646,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22613,
											"end": 22646,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22559,
											"end": 22652,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 22559,
											"end": 22652,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22559,
											"end": 22652,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22559,
											"end": 22652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22658,
											"end": 22765,
											"name": "tag",
											"source": 19,
											"value": "535"
										},
										{
											"begin": 22658,
											"end": 22765,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22702,
											"end": 22710,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22752,
											"end": 22757,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22746,
											"end": 22750,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22742,
											"end": 22758,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 22721,
											"end": 22758,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22721,
											"end": 22758,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22658,
											"end": 22765,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 22658,
											"end": 22765,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 22658,
											"end": 22765,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22658,
											"end": 22765,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22658,
											"end": 22765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22771,
											"end": 23164,
											"name": "tag",
											"source": 19,
											"value": "536"
										},
										{
											"begin": 22771,
											"end": 23164,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22840,
											"end": 22846,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22890,
											"end": 22891,
											"name": "PUSH",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 22878,
											"end": 22888,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 22874,
											"end": 22892,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 22913,
											"end": 23010,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "782"
										},
										{
											"begin": 22943,
											"end": 23009,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22932,
											"end": 22941,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22913,
											"end": 23010,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "535"
										},
										{
											"begin": 22913,
											"end": 23010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22913,
											"end": 23010,
											"name": "tag",
											"source": 19,
											"value": "782"
										},
										{
											"begin": 22913,
											"end": 23010,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23031,
											"end": 23070,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "783"
										},
										{
											"begin": 23061,
											"end": 23069,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 23050,
											"end": 23059,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 23031,
											"end": 23070,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "535"
										},
										{
											"begin": 23031,
											"end": 23070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23031,
											"end": 23070,
											"name": "tag",
											"source": 19,
											"value": "783"
										},
										{
											"begin": 23031,
											"end": 23070,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23019,
											"end": 23070,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 23019,
											"end": 23070,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23103,
											"end": 23107,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 23099,
											"end": 23108,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 23092,
											"end": 23097,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 23088,
											"end": 23109,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 23079,
											"end": 23109,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 23079,
											"end": 23109,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23152,
											"end": 23156,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 23142,
											"end": 23150,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 23138,
											"end": 23157,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 23131,
											"end": 23136,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 23128,
											"end": 23158,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 23118,
											"end": 23158,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 23118,
											"end": 23158,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22847,
											"end": 23164,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22847,
											"end": 23164,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22771,
											"end": 23164,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 22771,
											"end": 23164,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 22771,
											"end": 23164,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22771,
											"end": 23164,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22771,
											"end": 23164,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22771,
											"end": 23164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23170,
											"end": 23312,
											"name": "tag",
											"source": 19,
											"value": "537"
										},
										{
											"begin": 23170,
											"end": 23312,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23220,
											"end": 23229,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23253,
											"end": 23306,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "785"
										},
										{
											"begin": 23271,
											"end": 23305,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "786"
										},
										{
											"begin": 23280,
											"end": 23304,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "787"
										},
										{
											"begin": 23298,
											"end": 23303,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 23280,
											"end": 23304,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "488"
										},
										{
											"begin": 23280,
											"end": 23304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23280,
											"end": 23304,
											"name": "tag",
											"source": 19,
											"value": "787"
										},
										{
											"begin": 23280,
											"end": 23304,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23271,
											"end": 23305,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "526"
										},
										{
											"begin": 23271,
											"end": 23305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23271,
											"end": 23305,
											"name": "tag",
											"source": 19,
											"value": "786"
										},
										{
											"begin": 23271,
											"end": 23305,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23253,
											"end": 23306,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "488"
										},
										{
											"begin": 23253,
											"end": 23306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23253,
											"end": 23306,
											"name": "tag",
											"source": 19,
											"value": "785"
										},
										{
											"begin": 23253,
											"end": 23306,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23240,
											"end": 23306,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23240,
											"end": 23306,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23170,
											"end": 23312,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 23170,
											"end": 23312,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23170,
											"end": 23312,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23170,
											"end": 23312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23318,
											"end": 23393,
											"name": "tag",
											"source": 19,
											"value": "538"
										},
										{
											"begin": 23318,
											"end": 23393,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23361,
											"end": 23364,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23382,
											"end": 23387,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23375,
											"end": 23387,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23375,
											"end": 23387,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23318,
											"end": 23393,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 23318,
											"end": 23393,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23318,
											"end": 23393,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23318,
											"end": 23393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23399,
											"end": 23668,
											"name": "tag",
											"source": 19,
											"value": "539"
										},
										{
											"begin": 23399,
											"end": 23668,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "790"
										},
										{
											"begin": 23540,
											"end": 23547,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "537"
										},
										{
											"begin": 23509,
											"end": 23548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "tag",
											"source": 19,
											"value": "790"
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23570,
											"end": 23661,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "791"
										},
										{
											"begin": 23619,
											"end": 23660,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "792"
										},
										{
											"begin": 23643,
											"end": 23659,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23619,
											"end": 23660,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "538"
										},
										{
											"begin": 23619,
											"end": 23660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23619,
											"end": 23660,
											"name": "tag",
											"source": 19,
											"value": "792"
										},
										{
											"begin": 23619,
											"end": 23660,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23611,
											"end": 23617,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 23604,
											"end": 23608,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 23598,
											"end": 23609,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 23570,
											"end": 23661,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "536"
										},
										{
											"begin": 23570,
											"end": 23661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23570,
											"end": 23661,
											"name": "tag",
											"source": 19,
											"value": "791"
										},
										{
											"begin": 23570,
											"end": 23661,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23564,
											"end": 23568,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23557,
											"end": 23662,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 23475,
											"end": 23668,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23399,
											"end": 23668,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23399,
											"end": 23668,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23399,
											"end": 23668,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23399,
											"end": 23668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23674,
											"end": 23747,
											"name": "tag",
											"source": 19,
											"value": "540"
										},
										{
											"begin": 23674,
											"end": 23747,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23719,
											"end": 23722,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23674,
											"end": 23747,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23674,
											"end": 23747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23753,
											"end": 23942,
											"name": "tag",
											"source": 19,
											"value": "541"
										},
										{
											"begin": 23753,
											"end": 23942,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23830,
											"end": 23862,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "795"
										},
										{
											"begin": 23830,
											"end": 23862,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "540"
										},
										{
											"begin": 23830,
											"end": 23862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23830,
											"end": 23862,
											"name": "tag",
											"source": 19,
											"value": "795"
										},
										{
											"begin": 23830,
											"end": 23862,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23871,
											"end": 23936,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "796"
										},
										{
											"begin": 23929,
											"end": 23935,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23921,
											"end": 23927,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 23915,
											"end": 23919,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 23871,
											"end": 23936,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "539"
										},
										{
											"begin": 23871,
											"end": 23936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23871,
											"end": 23936,
											"name": "tag",
											"source": 19,
											"value": "796"
										},
										{
											"begin": 23871,
											"end": 23936,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23806,
											"end": 23942,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23753,
											"end": 23942,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23753,
											"end": 23942,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23753,
											"end": 23942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23948,
											"end": 24134,
											"name": "tag",
											"source": 19,
											"value": "542"
										},
										{
											"begin": 23948,
											"end": 24134,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24008,
											"end": 24128,
											"name": "tag",
											"source": 19,
											"value": "798"
										},
										{
											"begin": 24008,
											"end": 24128,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24025,
											"end": 24028,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24018,
											"end": 24023,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24015,
											"end": 24029,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 24008,
											"end": 24128,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 24008,
											"end": 24128,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "800"
										},
										{
											"begin": 24008,
											"end": 24128,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 24079,
											"end": 24118,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "801"
										},
										{
											"begin": 24116,
											"end": 24117,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24109,
											"end": 24114,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24079,
											"end": 24118,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "541"
										},
										{
											"begin": 24079,
											"end": 24118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24079,
											"end": 24118,
											"name": "tag",
											"source": 19,
											"value": "801"
										},
										{
											"begin": 24079,
											"end": 24118,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24052,
											"end": 24053,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 24045,
											"end": 24050,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24041,
											"end": 24054,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24032,
											"end": 24054,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24032,
											"end": 24054,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24008,
											"end": 24128,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "798"
										},
										{
											"begin": 24008,
											"end": 24128,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24008,
											"end": 24128,
											"name": "tag",
											"source": 19,
											"value": "800"
										},
										{
											"begin": 24008,
											"end": 24128,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23948,
											"end": 24134,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23948,
											"end": 24134,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23948,
											"end": 24134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24140,
											"end": 24683,
											"name": "tag",
											"source": 19,
											"value": "543"
										},
										{
											"begin": 24140,
											"end": 24683,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24241,
											"end": 24243,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 24236,
											"end": 24239,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24233,
											"end": 24244,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 24230,
											"end": 24676,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 24230,
											"end": 24676,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "803"
										},
										{
											"begin": 24230,
											"end": 24676,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 24275,
											"end": 24313,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "804"
										},
										{
											"begin": 24307,
											"end": 24312,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24275,
											"end": 24313,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 24275,
											"end": 24313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24275,
											"end": 24313,
											"name": "tag",
											"source": 19,
											"value": "804"
										},
										{
											"begin": 24275,
											"end": 24313,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24359,
											"end": 24388,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "805"
										},
										{
											"begin": 24377,
											"end": 24387,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 24359,
											"end": 24388,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "534"
										},
										{
											"begin": 24359,
											"end": 24388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24359,
											"end": 24388,
											"name": "tag",
											"source": 19,
											"value": "805"
										},
										{
											"begin": 24359,
											"end": 24388,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24349,
											"end": 24357,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24345,
											"end": 24389,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24542,
											"end": 24544,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 24530,
											"end": 24540,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 24527,
											"end": 24545,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 24524,
											"end": 24573,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 24524,
											"end": 24573,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "806"
										},
										{
											"begin": 24524,
											"end": 24573,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 24563,
											"end": 24571,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24548,
											"end": 24571,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24548,
											"end": 24571,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24524,
											"end": 24573,
											"name": "tag",
											"source": 19,
											"value": "806"
										},
										{
											"begin": 24524,
											"end": 24573,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24586,
											"end": 24666,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "807"
										},
										{
											"begin": 24642,
											"end": 24664,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "808"
										},
										{
											"begin": 24660,
											"end": 24663,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 24642,
											"end": 24664,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "534"
										},
										{
											"begin": 24642,
											"end": 24664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24642,
											"end": 24664,
											"name": "tag",
											"source": 19,
											"value": "808"
										},
										{
											"begin": 24642,
											"end": 24664,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24632,
											"end": 24640,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 24628,
											"end": 24665,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24615,
											"end": 24626,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24586,
											"end": 24666,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "542"
										},
										{
											"begin": 24586,
											"end": 24666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24586,
											"end": 24666,
											"name": "tag",
											"source": 19,
											"value": "807"
										},
										{
											"begin": 24586,
											"end": 24666,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24245,
											"end": 24676,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24245,
											"end": 24676,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24230,
											"end": 24676,
											"name": "tag",
											"source": 19,
											"value": "803"
										},
										{
											"begin": 24230,
											"end": 24676,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24140,
											"end": 24683,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24140,
											"end": 24683,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24140,
											"end": 24683,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24140,
											"end": 24683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24689,
											"end": 24806,
											"name": "tag",
											"source": 19,
											"value": "544"
										},
										{
											"begin": 24689,
											"end": 24806,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24743,
											"end": 24751,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24793,
											"end": 24798,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24787,
											"end": 24791,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24783,
											"end": 24799,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 24762,
											"end": 24799,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24762,
											"end": 24799,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24689,
											"end": 24806,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 24689,
											"end": 24806,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 24689,
											"end": 24806,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24689,
											"end": 24806,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24689,
											"end": 24806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24812,
											"end": 24981,
											"name": "tag",
											"source": 19,
											"value": "545"
										},
										{
											"begin": 24812,
											"end": 24981,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24856,
											"end": 24862,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24889,
											"end": 24940,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "811"
										},
										{
											"begin": 24937,
											"end": 24938,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24933,
											"end": 24939,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 24925,
											"end": 24930,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 24922,
											"end": 24923,
											"name": "PUSH",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 24918,
											"end": 24931,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 24889,
											"end": 24940,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "544"
										},
										{
											"begin": 24889,
											"end": 24940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24889,
											"end": 24940,
											"name": "tag",
											"source": 19,
											"value": "811"
										},
										{
											"begin": 24889,
											"end": 24940,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24885,
											"end": 24941,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 24970,
											"end": 24974,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 24964,
											"end": 24968,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 24960,
											"end": 24975,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 24950,
											"end": 24975,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 24950,
											"end": 24975,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24863,
											"end": 24981,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24812,
											"end": 24981,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 24812,
											"end": 24981,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 24812,
											"end": 24981,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24812,
											"end": 24981,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24812,
											"end": 24981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24986,
											"end": 25281,
											"name": "tag",
											"source": 19,
											"value": "546"
										},
										{
											"begin": 24986,
											"end": 25281,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25062,
											"end": 25066,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 25208,
											"end": 25237,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "813"
										},
										{
											"begin": 25233,
											"end": 25236,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 25227,
											"end": 25231,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 25208,
											"end": 25237,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "545"
										},
										{
											"begin": 25208,
											"end": 25237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25208,
											"end": 25237,
											"name": "tag",
											"source": 19,
											"value": "813"
										},
										{
											"begin": 25208,
											"end": 25237,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25200,
											"end": 25237,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 25200,
											"end": 25237,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25270,
											"end": 25273,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25267,
											"end": 25268,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 25263,
											"end": 25274,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 25257,
											"end": 25261,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25254,
											"end": 25275,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 25246,
											"end": 25275,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 25246,
											"end": 25275,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24986,
											"end": 25281,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 24986,
											"end": 25281,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 24986,
											"end": 25281,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24986,
											"end": 25281,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24986,
											"end": 25281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25286,
											"end": 26681,
											"name": "tag",
											"source": 19,
											"value": "325"
										},
										{
											"begin": 25286,
											"end": 26681,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25403,
											"end": 25440,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "815"
										},
										{
											"begin": 25436,
											"end": 25439,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25403,
											"end": 25440,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "483"
										},
										{
											"begin": 25403,
											"end": 25440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25403,
											"end": 25440,
											"name": "tag",
											"source": 19,
											"value": "815"
										},
										{
											"begin": 25403,
											"end": 25440,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25505,
											"end": 25523,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25497,
											"end": 25503,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25494,
											"end": 25524,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 25491,
											"end": 25547,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 25491,
											"end": 25547,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "816"
										},
										{
											"begin": 25491,
											"end": 25547,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 25527,
											"end": 25545,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "817"
										},
										{
											"begin": 25527,
											"end": 25545,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "420"
										},
										{
											"begin": 25527,
											"end": 25545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25527,
											"end": 25545,
											"name": "tag",
											"source": 19,
											"value": "817"
										},
										{
											"begin": 25527,
											"end": 25545,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25491,
											"end": 25547,
											"name": "tag",
											"source": 19,
											"value": "816"
										},
										{
											"begin": 25491,
											"end": 25547,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25571,
											"end": 25609,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "818"
										},
										{
											"begin": 25603,
											"end": 25607,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25597,
											"end": 25608,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 25571,
											"end": 25609,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "148"
										},
										{
											"begin": 25571,
											"end": 25609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25571,
											"end": 25609,
											"name": "tag",
											"source": 19,
											"value": "818"
										},
										{
											"begin": 25571,
											"end": 25609,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25656,
											"end": 25723,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "819"
										},
										{
											"begin": 25716,
											"end": 25722,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25708,
											"end": 25714,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25702,
											"end": 25706,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 25656,
											"end": 25723,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "543"
										},
										{
											"begin": 25656,
											"end": 25723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25656,
											"end": 25723,
											"name": "tag",
											"source": 19,
											"value": "819"
										},
										{
											"begin": 25656,
											"end": 25723,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25750,
											"end": 25751,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 25774,
											"end": 25778,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 25761,
											"end": 25778,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 25761,
											"end": 25778,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25806,
											"end": 25808,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 25798,
											"end": 25804,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 25795,
											"end": 25809,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 25823,
											"end": 25824,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 25818,
											"end": 26436,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25818,
											"end": 26436,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 25818,
											"end": 26436,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "821"
										},
										{
											"begin": 25818,
											"end": 26436,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 26480,
											"end": 26481,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 26497,
											"end": 26503,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 26494,
											"end": 26571,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 26494,
											"end": 26571,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "822"
										},
										{
											"begin": 26494,
											"end": 26571,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 26546,
											"end": 26555,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26541,
											"end": 26544,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 26537,
											"end": 26556,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26531,
											"end": 26557,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 26522,
											"end": 26557,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 26522,
											"end": 26557,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26494,
											"end": 26571,
											"name": "tag",
											"source": 19,
											"value": "822"
										},
										{
											"begin": 26494,
											"end": 26571,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26597,
											"end": 26664,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "823"
										},
										{
											"begin": 26657,
											"end": 26663,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 26650,
											"end": 26655,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26597,
											"end": 26664,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "546"
										},
										{
											"begin": 26597,
											"end": 26664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26597,
											"end": 26664,
											"name": "tag",
											"source": 19,
											"value": "823"
										},
										{
											"begin": 26597,
											"end": 26664,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26591,
											"end": 26595,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 26584,
											"end": 26665,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 26453,
											"end": 26675,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25788,
											"end": 26675,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "820"
										},
										{
											"begin": 25788,
											"end": 26675,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25818,
											"end": 26436,
											"name": "tag",
											"source": 19,
											"value": "821"
										},
										{
											"begin": 25818,
											"end": 26436,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25870,
											"end": 25874,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 25866,
											"end": 25875,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 25858,
											"end": 25864,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 25854,
											"end": 25876,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 25904,
											"end": 25941,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "824"
										},
										{
											"begin": 25936,
											"end": 25940,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 25904,
											"end": 25941,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 25904,
											"end": 25941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25904,
											"end": 25941,
											"name": "tag",
											"source": 19,
											"value": "824"
										},
										{
											"begin": 25904,
											"end": 25941,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25963,
											"end": 25964,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 25977,
											"end": 26185,
											"name": "tag",
											"source": 19,
											"value": "825"
										},
										{
											"begin": 25977,
											"end": 26185,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25991,
											"end": 25998,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25988,
											"end": 25989,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25985,
											"end": 25999,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 25977,
											"end": 26185,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 25977,
											"end": 26185,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "827"
										},
										{
											"begin": 25977,
											"end": 26185,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 26070,
											"end": 26079,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 26065,
											"end": 26068,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 26061,
											"end": 26080,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26055,
											"end": 26081,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 26047,
											"end": 26053,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26040,
											"end": 26082,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 26121,
											"end": 26122,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 26113,
											"end": 26119,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26109,
											"end": 26123,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26099,
											"end": 26123,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 26099,
											"end": 26123,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26168,
											"end": 26170,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 26157,
											"end": 26166,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 26153,
											"end": 26171,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26140,
											"end": 26171,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 26140,
											"end": 26171,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26014,
											"end": 26018,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 26011,
											"end": 26012,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 26007,
											"end": 26019,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26002,
											"end": 26019,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 26002,
											"end": 26019,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25977,
											"end": 26185,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "825"
										},
										{
											"begin": 25977,
											"end": 26185,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25977,
											"end": 26185,
											"name": "tag",
											"source": 19,
											"value": "827"
										},
										{
											"begin": 25977,
											"end": 26185,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26213,
											"end": 26219,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 26204,
											"end": 26211,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 26201,
											"end": 26220,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 26198,
											"end": 26377,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 26198,
											"end": 26377,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "828"
										},
										{
											"begin": 26198,
											"end": 26377,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 26271,
											"end": 26280,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 26266,
											"end": 26269,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 26262,
											"end": 26281,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26256,
											"end": 26282,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 26314,
											"end": 26362,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "829"
										},
										{
											"begin": 26356,
											"end": 26360,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 26348,
											"end": 26354,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 26344,
											"end": 26361,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 26333,
											"end": 26342,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26314,
											"end": 26362,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "545"
										},
										{
											"begin": 26314,
											"end": 26362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26314,
											"end": 26362,
											"name": "tag",
											"source": 19,
											"value": "829"
										},
										{
											"begin": 26314,
											"end": 26362,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26306,
											"end": 26312,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 26299,
											"end": 26363,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 26221,
											"end": 26377,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26198,
											"end": 26377,
											"name": "tag",
											"source": 19,
											"value": "828"
										},
										{
											"begin": 26198,
											"end": 26377,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26423,
											"end": 26424,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 26419,
											"end": 26420,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 26411,
											"end": 26417,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 26407,
											"end": 26421,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 26403,
											"end": 26425,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26397,
											"end": 26401,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 26390,
											"end": 26426,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 25825,
											"end": 26436,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25825,
											"end": 26436,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25825,
											"end": 26436,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25788,
											"end": 26675,
											"name": "tag",
											"source": 19,
											"value": "820"
										},
										{
											"begin": 25788,
											"end": 26675,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25788,
											"end": 26675,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25378,
											"end": 26681,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25378,
											"end": 26681,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25378,
											"end": 26681,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25286,
											"end": 26681,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25286,
											"end": 26681,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25286,
											"end": 26681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26687,
											"end": 26785,
											"name": "tag",
											"source": 19,
											"value": "547"
										},
										{
											"begin": 26687,
											"end": 26785,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26738,
											"end": 26744,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 26772,
											"end": 26777,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 26766,
											"end": 26778,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 26756,
											"end": 26778,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 26756,
											"end": 26778,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26687,
											"end": 26785,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 26687,
											"end": 26785,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 26687,
											"end": 26785,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26687,
											"end": 26785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26791,
											"end": 26959,
											"name": "tag",
											"source": 19,
											"value": "548"
										},
										{
											"begin": 26791,
											"end": 26959,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26874,
											"end": 26885,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 26908,
											"end": 26914,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26903,
											"end": 26906,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26896,
											"end": 26915,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 26948,
											"end": 26952,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 26943,
											"end": 26946,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26939,
											"end": 26953,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26924,
											"end": 26953,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 26924,
											"end": 26953,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26791,
											"end": 26959,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 26791,
											"end": 26959,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 26791,
											"end": 26959,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26791,
											"end": 26959,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26791,
											"end": 26959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26965,
											"end": 27338,
											"name": "tag",
											"source": 19,
											"value": "549"
										},
										{
											"begin": 26965,
											"end": 27338,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27051,
											"end": 27054,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 27079,
											"end": 27117,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "833"
										},
										{
											"begin": 27111,
											"end": 27116,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 27079,
											"end": 27117,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "547"
										},
										{
											"begin": 27079,
											"end": 27117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 27079,
											"end": 27117,
											"name": "tag",
											"source": 19,
											"value": "833"
										},
										{
											"begin": 27079,
											"end": 27117,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27133,
											"end": 27203,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "834"
										},
										{
											"begin": 27196,
											"end": 27202,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 27191,
											"end": 27194,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 27133,
											"end": 27203,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "548"
										},
										{
											"begin": 27133,
											"end": 27203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 27133,
											"end": 27203,
											"name": "tag",
											"source": 19,
											"value": "834"
										},
										{
											"begin": 27133,
											"end": 27203,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27126,
											"end": 27203,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 27126,
											"end": 27203,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 27212,
											"end": 27277,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "835"
										},
										{
											"begin": 27270,
											"end": 27276,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 27265,
											"end": 27268,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 27258,
											"end": 27262,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 27251,
											"end": 27256,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 27247,
											"end": 27263,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 27212,
											"end": 27277,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "485"
										},
										{
											"begin": 27212,
											"end": 27277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 27212,
											"end": 27277,
											"name": "tag",
											"source": 19,
											"value": "835"
										},
										{
											"begin": 27212,
											"end": 27277,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27302,
											"end": 27331,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "836"
										},
										{
											"begin": 27324,
											"end": 27330,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 27302,
											"end": 27331,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "486"
										},
										{
											"begin": 27302,
											"end": 27331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 27302,
											"end": 27331,
											"name": "tag",
											"source": 19,
											"value": "836"
										},
										{
											"begin": 27302,
											"end": 27331,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27297,
											"end": 27300,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 27293,
											"end": 27332,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 27286,
											"end": 27332,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 27286,
											"end": 27332,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 27055,
											"end": 27338,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26965,
											"end": 27338,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 26965,
											"end": 27338,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 26965,
											"end": 27338,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26965,
											"end": 27338,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26965,
											"end": 27338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 27344,
											"end": 27984,
											"name": "tag",
											"source": 19,
											"value": "346"
										},
										{
											"begin": 27344,
											"end": 27984,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27539,
											"end": 27543,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 27577,
											"end": 27580,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 27566,
											"end": 27575,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 27562,
											"end": 27581,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 27554,
											"end": 27581,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 27554,
											"end": 27581,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 27591,
											"end": 27662,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "838"
										},
										{
											"begin": 27659,
											"end": 27660,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 27648,
											"end": 27657,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 27644,
											"end": 27661,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 27635,
											"end": 27641,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 27591,
											"end": 27662,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "493"
										},
										{
											"begin": 27591,
											"end": 27662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 27591,
											"end": 27662,
											"name": "tag",
											"source": 19,
											"value": "838"
										},
										{
											"begin": 27591,
											"end": 27662,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27672,
											"end": 27744,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "839"
										},
										{
											"begin": 27740,
											"end": 27742,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 27729,
											"end": 27738,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 27725,
											"end": 27743,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 27716,
											"end": 27722,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 27672,
											"end": 27744,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "493"
										},
										{
											"begin": 27672,
											"end": 27744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 27672,
											"end": 27744,
											"name": "tag",
											"source": 19,
											"value": "839"
										},
										{
											"begin": 27672,
											"end": 27744,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27754,
											"end": 27826,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "840"
										},
										{
											"begin": 27822,
											"end": 27824,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 27811,
											"end": 27820,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 27807,
											"end": 27825,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 27798,
											"end": 27804,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 27754,
											"end": 27826,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "504"
										},
										{
											"begin": 27754,
											"end": 27826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 27754,
											"end": 27826,
											"name": "tag",
											"source": 19,
											"value": "840"
										},
										{
											"begin": 27754,
											"end": 27826,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27873,
											"end": 27882,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 27867,
											"end": 27871,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 27863,
											"end": 27883,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 27858,
											"end": 27860,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 27847,
											"end": 27856,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 27843,
											"end": 27861,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 27836,
											"end": 27884,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 27901,
											"end": 27977,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "841"
										},
										{
											"begin": 27972,
											"end": 27976,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 27963,
											"end": 27969,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 27901,
											"end": 27977,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "549"
										},
										{
											"begin": 27901,
											"end": 27977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 27901,
											"end": 27977,
											"name": "tag",
											"source": 19,
											"value": "841"
										},
										{
											"begin": 27901,
											"end": 27977,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27893,
											"end": 27977,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 27893,
											"end": 27977,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 27344,
											"end": 27984,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 27344,
											"end": 27984,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 27344,
											"end": 27984,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 27344,
											"end": 27984,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 27344,
											"end": 27984,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 27344,
											"end": 27984,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 27344,
											"end": 27984,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 27344,
											"end": 27984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 27990,
											"end": 28131,
											"name": "tag",
											"source": 19,
											"value": "550"
										},
										{
											"begin": 27990,
											"end": 28131,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 28046,
											"end": 28051,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 28077,
											"end": 28083,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 28071,
											"end": 28084,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 28062,
											"end": 28084,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 28062,
											"end": 28084,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 28093,
											"end": 28125,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "843"
										},
										{
											"begin": 28119,
											"end": 28124,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 28093,
											"end": 28125,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "479"
										},
										{
											"begin": 28093,
											"end": 28125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 28093,
											"end": 28125,
											"name": "tag",
											"source": 19,
											"value": "843"
										},
										{
											"begin": 28093,
											"end": 28125,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27990,
											"end": 28131,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 27990,
											"end": 28131,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 27990,
											"end": 28131,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 27990,
											"end": 28131,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 27990,
											"end": 28131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 28137,
											"end": 28486,
											"name": "tag",
											"source": 19,
											"value": "349"
										},
										{
											"begin": 28137,
											"end": 28486,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 28206,
											"end": 28212,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 28255,
											"end": 28257,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 28243,
											"end": 28252,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 28234,
											"end": 28241,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 28230,
											"end": 28253,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 28226,
											"end": 28258,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 28223,
											"end": 28342,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 28223,
											"end": 28342,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "845"
										},
										{
											"begin": 28223,
											"end": 28342,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 28261,
											"end": 28340,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "846"
										},
										{
											"begin": 28261,
											"end": 28340,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 28261,
											"end": 28340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 28261,
											"end": 28340,
											"name": "tag",
											"source": 19,
											"value": "846"
										},
										{
											"begin": 28261,
											"end": 28340,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 28223,
											"end": 28342,
											"name": "tag",
											"source": 19,
											"value": "845"
										},
										{
											"begin": 28223,
											"end": 28342,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 28381,
											"end": 28382,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 28406,
											"end": 28469,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "847"
										},
										{
											"begin": 28461,
											"end": 28468,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 28452,
											"end": 28458,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 28441,
											"end": 28450,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 28437,
											"end": 28459,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 28406,
											"end": 28469,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "550"
										},
										{
											"begin": 28406,
											"end": 28469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 28406,
											"end": 28469,
											"name": "tag",
											"source": 19,
											"value": "847"
										},
										{
											"begin": 28406,
											"end": 28469,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 28396,
											"end": 28469,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 28396,
											"end": 28469,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 28352,
											"end": 28479,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 28137,
											"end": 28486,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 28137,
											"end": 28486,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 28137,
											"end": 28486,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 28137,
											"end": 28486,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 28137,
											"end": 28486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 28492,
											"end": 28824,
											"name": "tag",
											"source": 19,
											"value": "414"
										},
										{
											"begin": 28492,
											"end": 28824,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 28613,
											"end": 28617,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 28651,
											"end": 28653,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 28640,
											"end": 28649,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 28636,
											"end": 28654,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 28628,
											"end": 28654,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 28628,
											"end": 28654,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 28664,
											"end": 28735,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "849"
										},
										{
											"begin": 28732,
											"end": 28733,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 28721,
											"end": 28730,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 28717,
											"end": 28734,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 28708,
											"end": 28714,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 28664,
											"end": 28735,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "493"
										},
										{
											"begin": 28664,
											"end": 28735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 28664,
											"end": 28735,
											"name": "tag",
											"source": 19,
											"value": "849"
										},
										{
											"begin": 28664,
											"end": 28735,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 28745,
											"end": 28817,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "850"
										},
										{
											"begin": 28813,
											"end": 28815,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 28802,
											"end": 28811,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 28798,
											"end": 28816,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 28789,
											"end": 28795,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 28745,
											"end": 28817,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "504"
										},
										{
											"begin": 28745,
											"end": 28817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 28745,
											"end": 28817,
											"name": "tag",
											"source": 19,
											"value": "850"
										},
										{
											"begin": 28745,
											"end": 28817,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 28492,
											"end": 28824,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 28492,
											"end": 28824,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 28492,
											"end": 28824,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 28492,
											"end": 28824,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 28492,
											"end": 28824,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 28492,
											"end": 28824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 28830,
											"end": 29010,
											"name": "tag",
											"source": 19,
											"value": "426"
										},
										{
											"begin": 28830,
											"end": 29010,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 28878,
											"end": 28955,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28875,
											"end": 28876,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 28868,
											"end": 28956,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 28975,
											"end": 28979,
											"name": "PUSH",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 28972,
											"end": 28973,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 28965,
											"end": 28980,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 28999,
											"end": 29003,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 28996,
											"end": 28997,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 28989,
											"end": 29004,
											"name": "REVERT",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MQT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"initialize(uint256,address)": "da35a26f",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mintNFT(string,uint256)": "5afa3a72",
							"mintPaymentReceiver()": "a2682c1d",
							"mintPrice()": "6817c76c",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setMintPrice(uint256)": "f4a0a528",
							"setPaymentReceiver(address)": "65ebf99a",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_mintPrice\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_mintPaymentReceiver\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"mintNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintPaymentReceiver\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setMintPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"setPaymentReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MQT.sol\":\"MQTOpenCollection\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f\",\"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0x48efca78ce4e1a9f74d3ca8539bb53d04b116e507c10cd9e0df6105b8a6ae420\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d9f5e03898857a187d99bd0766daf725abe87f454db82ac6286544d8cb4532f\",\"dweb:/ipfs/QmXFNXaNuxvGCLNL9xAFbvEgRmXDuxw4Ukf9tddiAHDq59\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":{\"keccak256\":\"0x7e68925d3373bd2baa7ac36839c464b2e77b67764201c4e0196d62699ee220b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0896e7ff605a131ca982da1175d798c19588852dc74329f5c3675ac76cb80ff\",\"dweb:/ipfs/QmdePp3XmXaKz4A9qqj6enFuqERWvJoN4uRmFzu2cwLPX8\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/MQT.sol\":{\"keccak256\":\"0x47440b5e8fbeb7dd55093c7e634c1c0e2a02ee6700f6a4c755aba581828b6be8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b36e901c7cb2b1e26271f25734385df7f0fcd2ad384abe4a13efbe38b119b980\",\"dweb:/ipfs/QmQdMSQujGhLrWUqAVHkWULfACokYadB9sZ34TCsQ9bdU6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 463,
								"contract": "contracts/MQT.sol:MQTOpenCollection",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 532,
								"contract": "contracts/MQT.sol:MQTOpenCollection",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 3695,
								"contract": "contracts/MQT.sol:MQTOpenCollection",
								"label": "_tokenIds",
								"offset": 0,
								"slot": "50",
								"type": "t_uint256"
							},
							{
								"astId": 3697,
								"contract": "contracts/MQT.sol:MQTOpenCollection",
								"label": "mintPaymentReceiver",
								"offset": 0,
								"slot": "51",
								"type": "t_address_payable"
							},
							{
								"astId": 3699,
								"contract": "contracts/MQT.sol:MQTOpenCollection",
								"label": "mintPrice",
								"offset": 0,
								"slot": "52",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1881
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 1882,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1881,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1881,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								1881,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1863,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1863,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						],
						"ReentrancyGuardUpgradeable": [
							533
						]
					},
					"id": 534,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 534,
							"sourceUnit": 449,
							"src": "136:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "144:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 454,
										"name": "Initializable",
										"nameLocations": [
											"1000:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1000:13:2"
									},
									"id": 455,
									"nodeType": "InheritanceSpecifier",
									"src": "1000:13:2"
								}
							],
							"canonicalName": "ReentrancyGuardUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 453,
								"nodeType": "StructuredDocumentation",
								"src": "201:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 533,
							"linearizedBaseContracts": [
								533,
								448
							],
							"name": "ReentrancyGuardUpgradeable",
							"nameLocation": "970:26:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 458,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1793:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1768:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 456,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1768:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 457,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1808:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 461,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1840:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1815:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 459,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1815:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 460,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1851:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 463,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1875:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1859:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 462,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1859:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "1949:51:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 468,
														"name": "__ReentrancyGuard_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "1959:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1959:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "1959:34:2"
											}
										]
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 466,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 465,
												"name": "onlyInitializing",
												"nameLocations": [
													"1932:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1932:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1932:16:2"
										}
									],
									"name": "__ReentrancyGuard_init",
									"nameLocation": "1898:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1920:2:2"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1949:0:2"
									},
									"scope": 533,
									"src": "1889:111:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "2076:39:2",
										"statements": [
											{
												"expression": {
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 477,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "2086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 478,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "2096:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2086:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "2086:22:2"
											}
										]
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 475,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 474,
												"name": "onlyInitializing",
												"nameLocations": [
													"2059:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2059:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2059:16:2"
										}
									],
									"name": "__ReentrancyGuard_init_unchained",
									"nameLocation": "2015:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2047:2:2"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2076:0:2"
									},
									"scope": 533,
									"src": "2006:109:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "2516:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 485,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "2526:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2526:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "2526:21:2"
											},
											{
												"id": 488,
												"nodeType": "PlaceholderStatement",
												"src": "2557:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 489,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "2568:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2568:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "2568:20:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "2121:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 493,
									"name": "nonReentrant",
									"nameLocation": "2501:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2513:2:2"
									},
									"src": "2492:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "2640:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 497,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 463,
																"src": "2733:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 498,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "2744:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2733:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2754:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 496,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2725:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2725:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "2725:63:2"
											},
											{
												"expression": {
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 503,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "2863:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 504,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "2873:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2863:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "2863:18:2"
											}
										]
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2610:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2629:2:2"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:0:2"
									},
									"scope": 533,
									"src": "2601:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "2932:171:2",
										"statements": [
											{
												"expression": {
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 511,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "3074:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 512,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "3084:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3074:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "3074:22:2"
											}
										]
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2903:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2921:2:2"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2932:0:2"
									},
									"scope": 533,
									"src": "2894:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "3346:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 522,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "3363:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 523,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "3374:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3363:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 521,
												"id": 525,
												"nodeType": "Return",
												"src": "3356:26:2"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "3109:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3291:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3314:2:2"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "3340:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 519,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3340:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:6:2"
									},
									"scope": 533,
									"src": "3282:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "3395:254:2",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 532,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3674:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "3654:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 529,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3654:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 531,
										"length": {
											"hexValue": "3439",
											"id": 530,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3662:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3654:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 534,
							"src": "952:2730:2",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "112:3571:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1881
						],
						"ERC165Upgradeable": [
							1921
						],
						"ERC721Upgradeable": [
							1665
						],
						"IERC165": [
							2520
						],
						"IERC721": [
							2207
						],
						"IERC721Errors": [
							2043
						],
						"IERC721Metadata": [
							2253
						],
						"IERC721Receiver": [
							2225
						],
						"Initializable": [
							448
						],
						"Strings": [
							2508
						]
					},
					"id": 1666,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 535,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 537,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1666,
							"sourceUnit": 2208,
							"src": "133:73:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 536,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2207,
										"src": "141:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 539,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1666,
							"sourceUnit": 2226,
							"src": "207:89:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 538,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2225,
										"src": "215:15:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"id": 541,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1666,
							"sourceUnit": 2254,
							"src": "297:100:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 540,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2253,
										"src": "305:15:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 543,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1666,
							"sourceUnit": 1882,
							"src": "398:70:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 542,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1881,
										"src": "406:18:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 545,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1666,
							"sourceUnit": 2509,
							"src": "469:66:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 544,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2508,
										"src": "477:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 547,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1666,
							"sourceUnit": 2521,
							"src": "536:80:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 546,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2520,
										"src": "544:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
							"file": "../../utils/introspection/ERC165Upgradeable.sol",
							"id": 549,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1666,
							"sourceUnit": 1922,
							"src": "617:82:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 548,
										"name": "ERC165Upgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1921,
										"src": "625:17:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"id": 551,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1666,
							"sourceUnit": 2091,
							"src": "700:84:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 550,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2043,
										"src": "708:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 553,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1666,
							"sourceUnit": 449,
							"src": "785:66:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 552,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "793:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 555,
										"name": "Initializable",
										"nameLocations": [
											"1139:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1139:13:3"
									},
									"id": 556,
									"nodeType": "InheritanceSpecifier",
									"src": "1139:13:3"
								},
								{
									"baseName": {
										"id": 557,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"1154:18:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1881,
										"src": "1154:18:3"
									},
									"id": 558,
									"nodeType": "InheritanceSpecifier",
									"src": "1154:18:3"
								},
								{
									"baseName": {
										"id": 559,
										"name": "ERC165Upgradeable",
										"nameLocations": [
											"1174:17:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1921,
										"src": "1174:17:3"
									},
									"id": 560,
									"nodeType": "InheritanceSpecifier",
									"src": "1174:17:3"
								},
								{
									"baseName": {
										"id": 561,
										"name": "IERC721",
										"nameLocations": [
											"1193:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2207,
										"src": "1193:7:3"
									},
									"id": 562,
									"nodeType": "InheritanceSpecifier",
									"src": "1193:7:3"
								},
								{
									"baseName": {
										"id": 563,
										"name": "IERC721Metadata",
										"nameLocations": [
											"1202:15:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2253,
										"src": "1202:15:3"
									},
									"id": 564,
									"nodeType": "InheritanceSpecifier",
									"src": "1202:15:3"
								},
								{
									"baseName": {
										"id": 565,
										"name": "IERC721Errors",
										"nameLocations": [
											"1219:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2043,
										"src": "1219:13:3"
									},
									"id": 566,
									"nodeType": "InheritanceSpecifier",
									"src": "1219:13:3"
								}
							],
							"canonicalName": "ERC721Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 554,
								"nodeType": "StructuredDocumentation",
								"src": "853:246:3",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1665,
							"linearizedBaseContracts": [
								1665,
								2043,
								2253,
								2207,
								1921,
								2520,
								1881,
								448
							],
							"name": "ERC721Upgradeable",
							"nameLocation": "1118:17:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 569,
									"libraryName": {
										"id": 567,
										"name": "Strings",
										"nameLocations": [
											"1245:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2508,
										"src": "1245:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "1239:26:3",
									"typeName": {
										"id": 568,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1257:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "ERC721Upgradeable.ERC721Storage",
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "1271:64:3",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ERC721"
									},
									"id": 593,
									"members": [
										{
											"constant": false,
											"id": 572,
											"mutability": "mutable",
											"name": "_name",
											"nameLocation": "1400:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 593,
											"src": "1393:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 571,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1393:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 574,
											"mutability": "mutable",
											"name": "_symbol",
											"nameLocation": "1447:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 593,
											"src": "1440:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 573,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1440:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 578,
											"mutability": "mutable",
											"name": "_owners",
											"nameLocation": "1501:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 593,
											"src": "1465:43:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
												"typeString": "mapping(uint256 => address)"
											},
											"typeName": {
												"id": 577,
												"keyName": "tokenId",
												"keyNameLocation": "1481:7:3",
												"keyType": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1473:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "1465:35:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
													"typeString": "mapping(uint256 => address)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1492:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 582,
											"mutability": "mutable",
											"name": "_balances",
											"nameLocation": "1553:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 593,
											"src": "1519:43:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 581,
												"keyName": "owner",
												"keyNameLocation": "1535:5:3",
												"keyType": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1519:33:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 586,
											"mutability": "mutable",
											"name": "_tokenApprovals",
											"nameLocation": "1609:15:3",
											"nodeType": "VariableDeclaration",
											"scope": 593,
											"src": "1573:51:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
												"typeString": "mapping(uint256 => address)"
											},
											"typeName": {
												"id": 585,
												"keyName": "tokenId",
												"keyNameLocation": "1589:7:3",
												"keyType": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "1573:35:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
													"typeString": "mapping(uint256 => address)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1600:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 592,
											"mutability": "mutable",
											"name": "_operatorApprovals",
											"nameLocation": "1695:18:3",
											"nodeType": "VariableDeclaration",
											"scope": 593,
											"src": "1635:78:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
												"typeString": "mapping(address => mapping(address => bool))"
											},
											"typeName": {
												"id": 591,
												"keyName": "owner",
												"keyNameLocation": "1651:5:3",
												"keyType": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1643:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1635:59:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
													"typeString": "mapping(address => mapping(address => bool))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 590,
													"keyName": "operator",
													"keyNameLocation": "1676:8:3",
													"keyType": {
														"id": 588,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1668:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "1660:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
														"typeString": "mapping(address => bool)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 589,
														"name": "bool",
														"nodeType": "ElementaryTypeName",
														"src": "1688:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC721Storage",
									"nameLocation": "1347:13:3",
									"nodeType": "StructDefinition",
									"scope": 1665,
									"src": "1340:380:3",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 596,
									"mutability": "constant",
									"name": "ERC721StorageLocation",
									"nameLocation": "1861:21:3",
									"nodeType": "VariableDeclaration",
									"scope": 1665,
									"src": "1836:115:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 594,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1836:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307838306262326236333863633230626334643061363064363639343066336162346130306331643762333133343937636138326662306234616230303739333030",
										"id": 595,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1885:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_58226744478722834339948329933988999792353370511964151963072532422914231210752_by_1",
											"typeString": "int_const 5822...(69 digits omitted)...0752"
										},
										"value": "0x80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "2034:80:3",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2053:55:3",
													"nodeType": "YulBlock",
													"src": "2053:55:3",
													"statements": [
														{
															"nativeSrc": "2067:31:3",
															"nodeType": "YulAssignment",
															"src": "2067:31:3",
															"value": {
																"name": "ERC721StorageLocation",
																"nativeSrc": "2077:21:3",
																"nodeType": "YulIdentifier",
																"src": "2077:21:3"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2067:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2067:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 600,
														"isOffset": false,
														"isSlot": true,
														"src": "2067:6:3",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 596,
														"isOffset": false,
														"isSlot": false,
														"src": "2077:21:3",
														"valueSize": 1
													}
												],
												"id": 602,
												"nodeType": "InlineAssembly",
												"src": "2044:64:3"
											}
										]
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getERC721Storage",
									"nameLocation": "1967:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1984:2:3"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2031:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "2009:23:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
													"typeString": "struct ERC721Upgradeable.ERC721Storage"
												},
												"typeName": {
													"id": 599,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 598,
														"name": "ERC721Storage",
														"nameLocations": [
															"2009:13:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 593,
														"src": "2009:13:3"
													},
													"referencedDeclaration": 593,
													"src": "2009:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
														"typeString": "struct ERC721Upgradeable.ERC721Storage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:25:3"
									},
									"scope": 1665,
									"src": "1958:156:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "2326:56:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 615,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "2360:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 616,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "2367:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 614,
														"name": "__ERC721_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "2336:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2336:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "2336:39:3"
											}
										]
									},
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "2120:108:3",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 620,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 612,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 611,
												"name": "onlyInitializing",
												"nameLocations": [
													"2309:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2309:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2309:16:3"
										}
									],
									"name": "__ERC721_init",
									"nameLocation": "2242:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2270:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "2256:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 606,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2256:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2291:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "2277:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 608,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2277:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2255:44:3"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2326:0:3"
									},
									"scope": 1665,
									"src": "2233:149:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "2491:116:3",
										"statements": [
											{
												"assignments": [
													631
												],
												"declarations": [
													{
														"constant": false,
														"id": 631,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2523:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 647,
														"src": "2501:23:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
															"typeString": "struct ERC721Upgradeable.ERC721Storage"
														},
														"typeName": {
															"id": 630,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 629,
																"name": "ERC721Storage",
																"nameLocations": [
																	"2501:13:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 593,
																"src": "2501:13:3"
															},
															"referencedDeclaration": 593,
															"src": "2501:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
																"typeString": "struct ERC721Upgradeable.ERC721Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 634,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 632,
														"name": "_getERC721Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 604,
														"src": "2527:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$593_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2527:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
														"typeString": "struct ERC721Upgradeable.ERC721Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2501:45:3"
											},
											{
												"expression": {
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 635,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "2556:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
																"typeString": "struct ERC721Upgradeable.ERC721Storage storage pointer"
															}
														},
														"id": 637,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2558:5:3",
														"memberName": "_name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 572,
														"src": "2556:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 638,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "2566:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2556:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "2556:15:3"
											},
											{
												"expression": {
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 641,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "2581:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
																"typeString": "struct ERC721Upgradeable.ERC721Storage storage pointer"
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2583:7:3",
														"memberName": "_symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 574,
														"src": "2581:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 644,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "2593:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2581:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "2581:19:3"
											}
										]
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 627,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 626,
												"name": "onlyInitializing",
												"nameLocations": [
													"2474:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2474:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2474:16:3"
										}
									],
									"name": "__ERC721_init_unchained",
									"nameLocation": "2397:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2435:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "2421:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 621,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2421:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2456:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "2442:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 623,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2442:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2420:44:3"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2491:0:3"
									},
									"scope": 1665,
									"src": "2388:219:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1920,
										2519
									],
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "2793:192:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 671,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 659,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 651,
																"src": "2822:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 661,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2207,
																			"src": "2842:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$2207_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$2207_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 660,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2837:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2837:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$2207",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2851:11:3",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "2837:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "2822:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 665,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 651,
																"src": "2878:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 667,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2253,
																			"src": "2898:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$2253_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$2253_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 666,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2893:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2893:21:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$2253",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2915:11:3",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "2893:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "2878:48:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2822:104:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 674,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 651,
																"src": "2966:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 672,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2942:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721Upgradeable_$1665_$",
																	"typeString": "type(contract super ERC721Upgradeable)"
																}
															},
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2948:17:3",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1920,
															"src": "2942:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2942:36:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2822:156:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 658,
												"id": 677,
												"nodeType": "Return",
												"src": "2803:175:3"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "2613:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2683:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 655,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 653,
												"name": "ERC165Upgradeable",
												"nameLocations": [
													"2750:17:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1921,
												"src": "2750:17:3"
											},
											{
												"id": 654,
												"name": "IERC165",
												"nameLocations": [
													"2769:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2520,
												"src": "2769:7:3"
											}
										],
										"src": "2741:36:3"
									},
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2708:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "2701:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 650,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2701:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:20:3"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "2787:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 656,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2787:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2786:6:3"
									},
									"scope": 1665,
									"src": "2674:311:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2132
									],
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "3116:193:3",
										"statements": [
											{
												"assignments": [
													689
												],
												"declarations": [
													{
														"constant": false,
														"id": 689,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3148:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 713,
														"src": "3126:23:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
															"typeString": "struct ERC721Upgradeable.ERC721Storage"
														},
														"typeName": {
															"id": 688,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 687,
																"name": "ERC721Storage",
																"nameLocations": [
																	"3126:13:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 593,
																"src": "3126:13:3"
															},
															"referencedDeclaration": 593,
															"src": "3126:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
																"typeString": "struct ERC721Upgradeable.ERC721Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 692,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 690,
														"name": "_getERC721Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 604,
														"src": "3152:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$593_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3152:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
														"typeString": "struct ERC721Upgradeable.ERC721Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3126:45:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 693,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "3185:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3202:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3194:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 694,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3194:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 697,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3194:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3185:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 707,
												"nodeType": "IfStatement",
												"src": "3181:87:3",
												"trueBody": {
													"id": 706,
													"nodeType": "Block",
													"src": "3206:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 702,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3254:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3246:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 700,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3246:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3246:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 699,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2001,
																	"src": "3227:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3227:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 705,
															"nodeType": "RevertStatement",
															"src": "3220:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 708,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "3284:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
																"typeString": "struct ERC721Upgradeable.ERC721Storage storage pointer"
															}
														},
														"id": 709,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3286:9:3",
														"memberName": "_balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 582,
														"src": "3284:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 711,
													"indexExpression": {
														"id": 710,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "3296:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3284:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 686,
												"id": 712,
												"nodeType": "Return",
												"src": "3277:25:3"
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "2991:48:3",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3053:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3071:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "3063:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3062:15:3"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "3107:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3107:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3106:9:3"
									},
									"scope": 1665,
									"src": "3044:265:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2140
									],
									"body": {
										"id": 726,
										"nodeType": "Block",
										"src": "3438:46:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 723,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "3469:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 722,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "3455:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3455:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 721,
												"id": 725,
												"nodeType": "Return",
												"src": "3448:29:3"
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "3315:46:3",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "3375:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3391:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "3383:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3383:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3382:17:3"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "3429:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3429:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3428:9:3"
									},
									"scope": 1665,
									"src": "3366:118:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2238
									],
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "3606:86:3",
										"statements": [
											{
												"assignments": [
													735
												],
												"declarations": [
													{
														"constant": false,
														"id": 735,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3638:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 742,
														"src": "3616:23:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
															"typeString": "struct ERC721Upgradeable.ERC721Storage"
														},
														"typeName": {
															"id": 734,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 733,
																"name": "ERC721Storage",
																"nameLocations": [
																	"3616:13:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 593,
																"src": "3616:13:3"
															},
															"referencedDeclaration": 593,
															"src": "3616:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
																"typeString": "struct ERC721Upgradeable.ERC721Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 736,
														"name": "_getERC721Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 604,
														"src": "3642:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$593_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3642:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
														"typeString": "struct ERC721Upgradeable.ERC721Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3616:45:3"
											},
											{
												"expression": {
													"expression": {
														"id": 739,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "3678:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
															"typeString": "struct ERC721Upgradeable.ERC721Storage storage pointer"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3680:5:3",
													"memberName": "_name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 572,
													"src": "3678:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 732,
												"id": 741,
												"nodeType": "Return",
												"src": "3671:14:3"
											}
										]
									},
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "3490:51:3",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3555:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3559:2:3"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "3591:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 730,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3591:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:15:3"
									},
									"scope": 1665,
									"src": "3546:146:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2244
									],
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "3818:88:3",
										"statements": [
											{
												"assignments": [
													751
												],
												"declarations": [
													{
														"constant": false,
														"id": 751,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3850:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 758,
														"src": "3828:23:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
															"typeString": "struct ERC721Upgradeable.ERC721Storage"
														},
														"typeName": {
															"id": 750,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 749,
																"name": "ERC721Storage",
																"nameLocations": [
																	"3828:13:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 593,
																"src": "3828:13:3"
															},
															"referencedDeclaration": 593,
															"src": "3828:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
																"typeString": "struct ERC721Upgradeable.ERC721Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 754,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 752,
														"name": "_getERC721Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 604,
														"src": "3854:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$593_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3854:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
														"typeString": "struct ERC721Upgradeable.ERC721Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3828:45:3"
											},
											{
												"expression": {
													"expression": {
														"id": 755,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "3890:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
															"typeString": "struct ERC721Upgradeable.ERC721Storage storage pointer"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3892:7:3",
													"memberName": "_symbol",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 574,
													"src": "3890:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 748,
												"id": 757,
												"nodeType": "Return",
												"src": "3883:16:3"
											}
										]
									},
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "3698:53:3",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3765:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3771:2:3"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "3803:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 746,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3803:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3802:15:3"
									},
									"scope": 1665,
									"src": "3756:150:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2252
									],
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "4051:176:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 768,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "4075:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 767,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "4061:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4061:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "4061:22:3"
											},
											{
												"assignments": [
													772
												],
												"declarations": [
													{
														"constant": false,
														"id": 772,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "4108:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 794,
														"src": "4094:21:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 771,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "4094:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 775,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 773,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "4118:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4118:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4094:34:3"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 778,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 772,
																		"src": "4151:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4145:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 776,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "4145:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4145:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4160:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4145:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4169:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4145:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4218:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4145:75:3",
													"trueExpression": {
														"arguments": [
															{
																"id": 786,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "4187:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 787,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "4196:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4204:8:3",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2321,
																	"src": "4196:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4196:18:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4173:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 783,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "4173:6:3",
																	"typeDescriptions": {}
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4180:6:3",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "4173:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4173:42:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 766,
												"id": 793,
												"nodeType": "Return",
												"src": "4138:82:3"
											}
										]
									},
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "3912:55:3",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "3981:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3998:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "3990:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3990:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3989:17:3"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "4036:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 764,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4036:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4035:15:3"
									},
									"scope": 1665,
									"src": "3972:255:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "4535:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4552:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 800,
												"id": 802,
												"nodeType": "Return",
												"src": "4545:9:3"
											}
										]
									},
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "4233:231:3",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "4478:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4486:2:3"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "4520:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 798,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4520:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4519:15:3"
									},
									"scope": 1665,
									"src": "4469:92:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2180
									],
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "4679:52:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 813,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "4698:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 814,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "4702:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 815,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1863,
																"src": "4711:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4711:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 812,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1452,
															1526
														],
														"referencedDeclaration": 1452,
														"src": "4689:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4689:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "4689:35:3"
											}
										]
									},
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "4567:46:3",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4627:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4643:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "4635:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4655:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "4647:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4647:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4634:29:3"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4679:0:3"
									},
									"scope": 1665,
									"src": "4618:113:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2196
									],
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "4868:78:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 829,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "4892:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 828,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "4878:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 831,
												"nodeType": "ExpressionStatement",
												"src": "4878:22:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 833,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "4931:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 832,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "4918:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4918:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 827,
												"id": 835,
												"nodeType": "Return",
												"src": "4911:28:3"
											}
										]
									},
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "4737:50:3",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4801:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4821:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "4813:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:17:3"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "4859:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4859:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4858:9:3"
									},
									"scope": 1665,
									"src": "4792:154:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2188
									],
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "5088:69:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 846,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1863,
																"src": "5117:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5117:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "5131:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 849,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "5141:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 845,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1571,
														"src": "5098:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "5098:52:3"
											}
										]
									},
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "4952:56:3",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "5022:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5048:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "5040:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5040:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "5063:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "5058:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5058:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5039:33:3"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:3"
									},
									"scope": 1665,
									"src": "5013:144:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2206
									],
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "5317:116:3",
										"statements": [
											{
												"assignments": [
													865
												],
												"declarations": [
													{
														"constant": false,
														"id": 865,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "5349:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 876,
														"src": "5327:23:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
															"typeString": "struct ERC721Upgradeable.ERC721Storage"
														},
														"typeName": {
															"id": 864,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 863,
																"name": "ERC721Storage",
																"nameLocations": [
																	"5327:13:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 593,
																"src": "5327:13:3"
															},
															"referencedDeclaration": 593,
															"src": "5327:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
																"typeString": "struct ERC721Upgradeable.ERC721Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 868,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 866,
														"name": "_getERC721Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 604,
														"src": "5353:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$593_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5353:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
														"typeString": "struct ERC721Upgradeable.ERC721Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5327:45:3"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"id": 869,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 865,
																"src": "5389:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
																	"typeString": "struct ERC721Upgradeable.ERC721Storage storage pointer"
																}
															},
															"id": 870,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5391:18:3",
															"memberName": "_operatorApprovals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 592,
															"src": "5389:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 872,
														"indexExpression": {
															"id": 871,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "5410:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5389:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 874,
													"indexExpression": {
														"id": 873,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "5417:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5389:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 862,
												"id": 875,
												"nodeType": "Return",
												"src": "5382:44:3"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "5163:55:3",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "5232:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5257:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "5249:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5249:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5272:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "5264:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5264:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5248:33:3"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "5311:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 860,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5311:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5310:6:3"
									},
									"scope": 1665,
									"src": "5223:210:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2172
									],
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "5575:498:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 887,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "5589:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5603:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5595:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 888,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5595:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 891,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5595:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5589:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 901,
												"nodeType": "IfStatement",
												"src": "5585:87:3",
												"trueBody": {
													"id": 900,
													"nodeType": "Block",
													"src": "5607:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 896,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5658:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5650:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 894,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5650:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5650:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 893,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2025,
																	"src": "5628:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5628:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 899,
															"nodeType": "RevertStatement",
															"src": "5621:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													903
												],
												"declarations": [
													{
														"constant": false,
														"id": 903,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "5898:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 922,
														"src": "5890:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 902,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5890:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 910,
												"initialValue": {
													"arguments": [
														{
															"id": 905,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "5922:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 906,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "5926:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 907,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1863,
																"src": "5935:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5935:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 904,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "5914:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5914:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5890:58:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 911,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "5962:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 912,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "5979:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5962:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 921,
												"nodeType": "IfStatement",
												"src": "5958:109:3",
												"trueBody": {
													"id": 920,
													"nodeType": "Block",
													"src": "5985:82:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 915,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 880,
																		"src": "6027:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 916,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 884,
																		"src": "6033:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 917,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 903,
																		"src": "6042:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 914,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2015,
																	"src": "6006:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6006:50:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 919,
															"nodeType": "RevertStatement",
															"src": "5999:57:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "5439:51:3",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5504:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5525:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "5517:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5517:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5539:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "5531:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5531:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5551:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "5543:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5543:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5516:43:3"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5575:0:3"
									},
									"scope": 1665,
									"src": "5495:578:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2162
									],
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "6215:56:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 934,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "6242:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 935,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "6248:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 936,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "6252:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6261:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 933,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															941,
															967
														],
														"referencedDeclaration": 967,
														"src": "6225:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6225:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "6225:39:3"
											}
										]
									},
									"documentation": {
										"id": 924,
										"nodeType": "StructuredDocumentation",
										"src": "6079:55:3",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "6148:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6173:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "6165:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6165:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6187:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "6179:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6179:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6199:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "6191:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6191:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6164:43:3"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6215:0:3"
									},
									"scope": 1665,
									"src": "6139:132:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2152
									],
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "6440:105:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 954,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "6463:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 955,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "6469:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 956,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "6473:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 953,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "6450:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6450:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "6450:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 960,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "6514:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 961,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "6520:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 962,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "6524:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 963,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "6533:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 959,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "6491:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6491:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "6491:47:3"
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "6277:55:3",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "6346:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6371:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "6363:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6363:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6385:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "6377:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6377:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6397:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "6389:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6389:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6419:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "6406:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 949,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6406:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6362:62:3"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6440:0:3"
									},
									"scope": 1665,
									"src": "6337:208:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "7134:97:3",
										"statements": [
											{
												"assignments": [
													977
												],
												"declarations": [
													{
														"constant": false,
														"id": 977,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7166:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 986,
														"src": "7144:23:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
															"typeString": "struct ERC721Upgradeable.ERC721Storage"
														},
														"typeName": {
															"id": 976,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 975,
																"name": "ERC721Storage",
																"nameLocations": [
																	"7144:13:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 593,
																"src": "7144:13:3"
															},
															"referencedDeclaration": 593,
															"src": "7144:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
																"typeString": "struct ERC721Upgradeable.ERC721Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 980,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 978,
														"name": "_getERC721Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 604,
														"src": "7170:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$593_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7170:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
														"typeString": "struct ERC721Upgradeable.ERC721Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7144:45:3"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 981,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "7206:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
																"typeString": "struct ERC721Upgradeable.ERC721Storage storage pointer"
															}
														},
														"id": 982,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7208:7:3",
														"memberName": "_owners",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 578,
														"src": "7206:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 984,
													"indexExpression": {
														"id": 983,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "7216:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7206:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 974,
												"id": 985,
												"nodeType": "Return",
												"src": "7199:25:3"
											}
										]
									},
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "6551:503:3",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "7068:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7085:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "7077:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7077:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7076:17:3"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "7125:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7125:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7124:9:3"
									},
									"scope": 1665,
									"src": "7059:172:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "7426:105:3",
										"statements": [
											{
												"assignments": [
													997
												],
												"declarations": [
													{
														"constant": false,
														"id": 997,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7458:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 1006,
														"src": "7436:23:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
															"typeString": "struct ERC721Upgradeable.ERC721Storage"
														},
														"typeName": {
															"id": 996,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 995,
																"name": "ERC721Storage",
																"nameLocations": [
																	"7436:13:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 593,
																"src": "7436:13:3"
															},
															"referencedDeclaration": 593,
															"src": "7436:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
																"typeString": "struct ERC721Upgradeable.ERC721Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1000,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 998,
														"name": "_getERC721Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 604,
														"src": "7462:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$593_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7462:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
														"typeString": "struct ERC721Upgradeable.ERC721Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7436:45:3"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 1001,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "7498:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
																"typeString": "struct ERC721Upgradeable.ERC721Storage storage pointer"
															}
														},
														"id": 1002,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7500:15:3",
														"memberName": "_tokenApprovals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 586,
														"src": "7498:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1004,
													"indexExpression": {
														"id": 1003,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "7516:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7498:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 994,
												"id": 1005,
												"nodeType": "Return",
												"src": "7491:33:3"
											}
										]
									},
									"documentation": {
										"id": 988,
										"nodeType": "StructuredDocumentation",
										"src": "7237:105:3",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "7356:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7377:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "7369:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7369:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7368:17:3"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "7417:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7417:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7416:9:3"
									},
									"scope": 1665,
									"src": "7347:184:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "7951:163:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1019,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "7980:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7999:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7991:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1020,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7991:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7991:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "7980:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1025,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1010,
																			"src": "8018:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1026,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1012,
																			"src": "8027:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "8018:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1029,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1010,
																				"src": "8055:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1030,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1012,
																				"src": "8062:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1028,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 877,
																			"src": "8038:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8038:32:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "8018:52:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1034,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1014,
																				"src": "8087:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1033,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1007,
																			"src": "8074:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 1035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8074:21:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1036,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "8099:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "8074:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "8018:88:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1039,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8017:90:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7980:127:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1018,
												"id": 1041,
												"nodeType": "Return",
												"src": "7961:146:3"
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "7537:300:3",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "7851:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7873:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "7865:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7865:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7888:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "7880:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7880:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7905:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "7897:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7897:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7864:49:3"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "7945:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1016,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7945:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7944:6:3"
									},
									"scope": 1665,
									"src": "7842:272:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "8645:271:3",
										"statements": [
											{
												"condition": {
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8659:39:3",
													"subExpression": {
														"arguments": [
															{
																"id": 1054,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1046,
																"src": "8674:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1055,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1048,
																"src": "8681:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1056,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "8690:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1053,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "8660:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 1057,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8660:38:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1078,
												"nodeType": "IfStatement",
												"src": "8655:255:3",
												"trueBody": {
													"id": 1077,
													"nodeType": "Block",
													"src": "8700:210:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1059,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1046,
																	"src": "8718:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1062,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8735:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8727:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1060,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8727:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8727:10:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "8718:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1075,
																"nodeType": "Block",
																"src": "8816:84:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1071,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1048,
																					"src": "8868:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1072,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1050,
																					"src": "8877:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1070,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2032,
																				"src": "8841:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 1073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8841:44:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1074,
																		"nodeType": "RevertStatement",
																		"src": "8834:51:3"
																	}
																]
															},
															"id": 1076,
															"nodeType": "IfStatement",
															"src": "8714:186:3",
															"trueBody": {
																"id": 1069,
																"nodeType": "Block",
																"src": "8739:71:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1066,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1050,
																					"src": "8787:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1065,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2006,
																				"src": "8764:22:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 1067,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8764:31:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1068,
																		"nodeType": "RevertStatement",
																		"src": "8757:38:3"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1044,
										"nodeType": "StructuredDocumentation",
										"src": "8120:423:3",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "8557:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8582:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "8574:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8574:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8597:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "8589:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8589:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8614:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "8606:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8606:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8573:49:3"
									},
									"returnParameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8645:0:3"
									},
									"scope": 1665,
									"src": "8548:368:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "9633:135:3",
										"statements": [
											{
												"assignments": [
													1090
												],
												"declarations": [
													{
														"constant": false,
														"id": 1090,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "9665:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 1103,
														"src": "9643:23:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
															"typeString": "struct ERC721Upgradeable.ERC721Storage"
														},
														"typeName": {
															"id": 1089,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1088,
																"name": "ERC721Storage",
																"nameLocations": [
																	"9643:13:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 593,
																"src": "9643:13:3"
															},
															"referencedDeclaration": 593,
															"src": "9643:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
																"typeString": "struct ERC721Upgradeable.ERC721Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1093,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1091,
														"name": "_getERC721Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 604,
														"src": "9669:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$593_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9669:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
														"typeString": "struct ERC721Upgradeable.ERC721Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9643:45:3"
											},
											{
												"id": 1102,
												"nodeType": "UncheckedBlock",
												"src": "9698:64:3",
												"statements": [
													{
														"expression": {
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"expression": {
																		"id": 1094,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1090,
																		"src": "9722:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
																			"typeString": "struct ERC721Upgradeable.ERC721Storage storage pointer"
																		}
																	},
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9724:9:3",
																	"memberName": "_balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 582,
																	"src": "9722:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1098,
																"indexExpression": {
																	"id": 1096,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "9734:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9722:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1099,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "9746:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "9722:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1101,
														"nodeType": "ExpressionStatement",
														"src": "9722:29:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "8922:631:3",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "9567:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9592:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "9584:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9584:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9609:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "9601:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1084,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "9601:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9583:32:3"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9633:0:3"
									},
									"scope": 1665,
									"src": "9558:210:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "10456:761:3",
										"statements": [
											{
												"assignments": [
													1118
												],
												"declarations": [
													{
														"constant": false,
														"id": 1118,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "10488:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 1205,
														"src": "10466:23:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
															"typeString": "struct ERC721Upgradeable.ERC721Storage"
														},
														"typeName": {
															"id": 1117,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1116,
																"name": "ERC721Storage",
																"nameLocations": [
																	"10466:13:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 593,
																"src": "10466:13:3"
															},
															"referencedDeclaration": 593,
															"src": "10466:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
																"typeString": "struct ERC721Upgradeable.ERC721Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1121,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1119,
														"name": "_getERC721Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 604,
														"src": "10492:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$593_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10492:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
														"typeString": "struct ERC721Upgradeable.ERC721Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10466:45:3"
											},
											{
												"assignments": [
													1123
												],
												"declarations": [
													{
														"constant": false,
														"id": 1123,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "10529:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 1205,
														"src": "10521:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1122,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10521:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1127,
												"initialValue": {
													"arguments": [
														{
															"id": 1125,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "10545:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1124,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "10536:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10536:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10521:32:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1128,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1111,
														"src": "10613:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10629:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10621:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1129,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10621:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10621:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10613:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1141,
												"nodeType": "IfStatement",
												"src": "10609:86:3",
												"trueBody": {
													"id": 1140,
													"nodeType": "Block",
													"src": "10633:62:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1135,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1123,
																		"src": "10664:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1136,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1111,
																		"src": "10670:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1137,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1109,
																		"src": "10676:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1134,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "10647:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10647:37:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1139,
															"nodeType": "ExpressionStatement",
															"src": "10647:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1142,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "10739:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10755:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10747:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1143,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10747:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10747:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10739:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1171,
												"nodeType": "IfStatement",
												"src": "10735:258:3",
												"trueBody": {
													"id": 1170,
													"nodeType": "Block",
													"src": "10759:234:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1151,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10872:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10864:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1149,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10864:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10864:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1153,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1109,
																		"src": "10876:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1156,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10893:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10885:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1154,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10885:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10885:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10897:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1148,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1452,
																		1526
																	],
																	"referencedDeclaration": 1526,
																	"src": "10855:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10855:48:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1160,
															"nodeType": "ExpressionStatement",
															"src": "10855:48:3"
														},
														{
															"id": 1169,
															"nodeType": "UncheckedBlock",
															"src": "10918:65:3",
															"statements": [
																{
																	"expression": {
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1161,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1118,
																					"src": "10946:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
																						"typeString": "struct ERC721Upgradeable.ERC721Storage storage pointer"
																					}
																				},
																				"id": 1164,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10948:9:3",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 582,
																				"src": "10946:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1165,
																			"indexExpression": {
																				"id": 1163,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1123,
																				"src": "10958:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "10946:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10967:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10946:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1168,
																	"nodeType": "ExpressionStatement",
																	"src": "10946:22:3"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1172,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "11007:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11021:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11013:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1173,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11013:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11013:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11007:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1188,
												"nodeType": "IfStatement",
												"src": "11003:109:3",
												"trueBody": {
													"id": 1187,
													"nodeType": "Block",
													"src": "11025:87:3",
													"statements": [
														{
															"id": 1186,
															"nodeType": "UncheckedBlock",
															"src": "11039:63:3",
															"statements": [
																{
																	"expression": {
																		"id": 1184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1178,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1118,
																					"src": "11067:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
																						"typeString": "struct ERC721Upgradeable.ERC721Storage storage pointer"
																					}
																				},
																				"id": 1181,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "11069:9:3",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 582,
																				"src": "11067:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1182,
																			"indexExpression": {
																				"id": 1180,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1107,
																				"src": "11079:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "11067:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11086:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11067:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1185,
																	"nodeType": "ExpressionStatement",
																	"src": "11067:20:3"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 1189,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1118,
																"src": "11122:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
																	"typeString": "struct ERC721Upgradeable.ERC721Storage storage pointer"
																}
															},
															"id": 1192,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11124:7:3",
															"memberName": "_owners",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 578,
															"src": "11122:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1193,
														"indexExpression": {
															"id": 1191,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "11132:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11122:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1194,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "11143:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11122:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1196,
												"nodeType": "ExpressionStatement",
												"src": "11122:23:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1198,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "11170:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1199,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "11176:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1200,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "11180:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1197,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2106,
														"src": "11161:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11161:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1202,
												"nodeType": "EmitStatement",
												"src": "11156:32:3"
											},
											{
												"expression": {
													"id": 1203,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1123,
													"src": "11206:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1115,
												"id": 1204,
												"nodeType": "Return",
												"src": "11199:11:3"
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "9774:582:3",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 1206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "10370:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10386:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "10378:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10378:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10398:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "10390:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10390:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "10415:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "10407:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10407:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10377:43:3"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "10447:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10447:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10446:9:3"
									},
									"scope": 1665,
									"src": "10361:856:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1255,
										"nodeType": "Block",
										"src": "11592:274:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1214,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "11606:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11620:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11612:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1215,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11612:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1218,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11612:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11606:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1228,
												"nodeType": "IfStatement",
												"src": "11602:87:3",
												"trueBody": {
													"id": 1227,
													"nodeType": "Block",
													"src": "11624:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1223,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11675:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11667:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1221,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11667:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11667:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1220,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2025,
																	"src": "11645:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11645:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1226,
															"nodeType": "RevertStatement",
															"src": "11638:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													1230
												],
												"declarations": [
													{
														"constant": false,
														"id": 1230,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11706:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1255,
														"src": "11698:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1229,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11698:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1239,
												"initialValue": {
													"arguments": [
														{
															"id": 1232,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "11730:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1233,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "11734:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11751:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11743:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1234,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11743:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11743:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1231,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "11722:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11722:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11698:56:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1240,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1230,
														"src": "11768:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11793:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11785:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1241,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11785:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11785:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11768:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1254,
												"nodeType": "IfStatement",
												"src": "11764:96:3",
												"trueBody": {
													"id": 1253,
													"nodeType": "Block",
													"src": "11797:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1249,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11846:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11838:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1247,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11838:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11838:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1246,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2020,
																	"src": "11818:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11818:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1252,
															"nodeType": "RevertStatement",
															"src": "11811:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1207,
										"nodeType": "StructuredDocumentation",
										"src": "11223:311:3",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 1256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "11548:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11562:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "11554:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11554:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11574:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "11566:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11566:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11553:29:3"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11592:0:3"
									},
									"scope": 1665,
									"src": "11539:327:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "12274:43:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1265,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "12294:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1266,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "12298:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12307:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1264,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1271,
															1297
														],
														"referencedDeclaration": 1297,
														"src": "12284:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12284:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1269,
												"nodeType": "ExpressionStatement",
												"src": "12284:26:3"
											}
										]
									},
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "11872:340:3",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "12226:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12244:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "12236:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12236:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12256:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "12248:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12248:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12235:29:3"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12274:0:3"
									},
									"scope": 1665,
									"src": "12217:100:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "12622:98:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1282,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "12638:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1283,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "12642:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1281,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "12632:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12632:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1285,
												"nodeType": "ExpressionStatement",
												"src": "12632:18:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12691:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12683:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1287,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12683:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12683:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1291,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "12695:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1292,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "12699:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1293,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "12708:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1286,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "12660:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12660:53:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "12660:53:3"
											}
										]
									},
									"documentation": {
										"id": 1272,
										"nodeType": "StructuredDocumentation",
										"src": "12323:210:3",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "12547:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12565:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "12557:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12557:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12577:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "12569:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12569:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12599:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "12586:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1277,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12586:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12556:48:3"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12622:0:3"
									},
									"scope": 1665,
									"src": "12538:182:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1329,
										"nodeType": "Block",
										"src": "13087:186:3",
										"statements": [
											{
												"assignments": [
													1304
												],
												"declarations": [
													{
														"constant": false,
														"id": 1304,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "13105:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1329,
														"src": "13097:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1303,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13097:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1316,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13137:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13129:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1306,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13129:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13129:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1310,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "13141:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13158:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13150:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1311,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13150:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13150:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1305,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "13121:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13121:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13097:64:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1317,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1304,
														"src": "13175:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13200:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13192:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1318,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13192:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1321,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13192:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13175:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1328,
												"nodeType": "IfStatement",
												"src": "13171:96:3",
												"trueBody": {
													"id": 1327,
													"nodeType": "Block",
													"src": "13204:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1324,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1300,
																		"src": "13248:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1323,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2006,
																	"src": "13225:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13225:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1326,
															"nodeType": "RevertStatement",
															"src": "13218:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "12726:315:3",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "13055:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13069:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "13061:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13061:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13060:17:3"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13087:0:3"
									},
									"scope": 1665,
									"src": "13046:227:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1389,
										"nodeType": "Block",
										"src": "13668:389:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1340,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "13682:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13696:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13688:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1341,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13688:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1344,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13688:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13682:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1354,
												"nodeType": "IfStatement",
												"src": "13678:87:3",
												"trueBody": {
													"id": 1353,
													"nodeType": "Block",
													"src": "13700:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1349,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13751:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13743:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1347,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13743:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13743:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1346,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2025,
																	"src": "13721:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13721:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1352,
															"nodeType": "RevertStatement",
															"src": "13714:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													1356
												],
												"declarations": [
													{
														"constant": false,
														"id": 1356,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "13782:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1389,
														"src": "13774:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1355,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13774:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1365,
												"initialValue": {
													"arguments": [
														{
															"id": 1358,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "13806:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1359,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "13810:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13827:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13819:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1360,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13819:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13819:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1357,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "13798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13798:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13774:56:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1366,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1356,
														"src": "13844:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13869:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13861:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1367,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13861:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1370,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13861:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13844:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1377,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "13946:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1378,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "13963:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "13946:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1387,
													"nodeType": "IfStatement",
													"src": "13942:109:3",
													"trueBody": {
														"id": 1386,
														"nodeType": "Block",
														"src": "13969:82:3",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1381,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1333,
																			"src": "14011:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1382,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1337,
																			"src": "14017:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1383,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1356,
																			"src": "14026:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1380,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2015,
																		"src": "13990:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13990:50:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1385,
																"nodeType": "RevertStatement",
																"src": "13983:57:3"
															}
														]
													}
												},
												"id": 1388,
												"nodeType": "IfStatement",
												"src": "13840:211:3",
												"trueBody": {
													"id": 1376,
													"nodeType": "Block",
													"src": "13873:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1373,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1337,
																		"src": "13917:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1372,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2006,
																	"src": "13894:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13894:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1375,
															"nodeType": "RevertStatement",
															"src": "13887:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1331,
										"nodeType": "StructuredDocumentation",
										"src": "13279:313:3",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "13606:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13624:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "13616:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13616:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13638:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "13630:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13630:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13650:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "13642:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13642:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13615:43:3"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13668:0:3"
									},
									"scope": 1665,
									"src": "13597:460:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1407,
										"nodeType": "Block",
										"src": "15065:53:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1401,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "15089:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "15095:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1403,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "15099:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15108:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1400,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1408,
															1434
														],
														"referencedDeclaration": 1434,
														"src": "15075:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15075:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1406,
												"nodeType": "ExpressionStatement",
												"src": "15075:36:3"
											}
										]
									},
									"documentation": {
										"id": 1391,
										"nodeType": "StructuredDocumentation",
										"src": "14063:922:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "14999:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15021:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "15013:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15013:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15035:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "15027:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15027:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15047:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "15039:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15012:43:3"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15065:0:3"
									},
									"scope": 1665,
									"src": "14990:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1433,
										"nodeType": "Block",
										"src": "15457:102:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1421,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "15477:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1422,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "15483:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1423,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "15487:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1420,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "15467:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15467:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1425,
												"nodeType": "ExpressionStatement",
												"src": "15467:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1427,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "15528:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1428,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "15534:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1429,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "15538:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1430,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "15547:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1426,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "15505:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15505:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1432,
												"nodeType": "ExpressionStatement",
												"src": "15505:47:3"
											}
										]
									},
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "15124:226:3",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "15364:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15386:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "15378:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15378:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15400:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "15392:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15392:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15412:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "15404:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15404:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15434:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "15421:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1416,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15421:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15377:62:3"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15457:0:3"
									},
									"scope": 1665,
									"src": "15355:204:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "16072:50:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1445,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "16091:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1446,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "16095:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1447,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "16104:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16110:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1444,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1452,
															1526
														],
														"referencedDeclaration": 1526,
														"src": "16082:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16082:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1450,
												"nodeType": "ExpressionStatement",
												"src": "16082:33:3"
											}
										]
									},
									"documentation": {
										"id": 1435,
										"nodeType": "StructuredDocumentation",
										"src": "15565:432:3",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "16011:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16028:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "16020:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16020:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16040:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "16032:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "16057:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "16049:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16049:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16019:43:3"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16072:0:3"
									},
									"scope": 1665,
									"src": "16002:120:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1525,
										"nodeType": "Block",
										"src": "16398:625:3",
										"statements": [
											{
												"assignments": [
													1466
												],
												"declarations": [
													{
														"constant": false,
														"id": 1466,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "16430:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 1525,
														"src": "16408:23:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
															"typeString": "struct ERC721Upgradeable.ERC721Storage"
														},
														"typeName": {
															"id": 1465,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1464,
																"name": "ERC721Storage",
																"nameLocations": [
																	"16408:13:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 593,
																"src": "16408:13:3"
															},
															"referencedDeclaration": 593,
															"src": "16408:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
																"typeString": "struct ERC721Upgradeable.ERC721Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1469,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1467,
														"name": "_getERC721Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 604,
														"src": "16434:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$593_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"
														}
													},
													"id": 1468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16434:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
														"typeString": "struct ERC721Upgradeable.ERC721Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16408:45:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1470,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1461,
														"src": "16519:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1471,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "16532:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16548:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16540:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1472,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "16540:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16540:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "16532:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16519:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1516,
												"nodeType": "IfStatement",
												"src": "16515:460:3",
												"trueBody": {
													"id": 1515,
													"nodeType": "Block",
													"src": "16552:423:3",
													"statements": [
														{
															"assignments": [
																1479
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1479,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "16574:5:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1515,
																	"src": "16566:13:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1478,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16566:7:3",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1483,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1481,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1457,
																		"src": "16596:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1480,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1600,
																	"src": "16582:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16582:22:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16566:38:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1484,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1459,
																			"src": "16732:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1487,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "16748:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1486,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "16740:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1485,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "16740:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16740:10:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "16732:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1490,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1479,
																			"src": "16754:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1491,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1459,
																			"src": "16763:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "16754:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "16732:35:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "16771:30:3",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1495,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1479,
																				"src": "16789:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1496,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1459,
																				"src": "16796:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1494,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 877,
																			"src": "16772:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16772:29:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "16732:69:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1505,
															"nodeType": "IfStatement",
															"src": "16728:142:3",
															"trueBody": {
																"id": 1504,
																"nodeType": "Block",
																"src": "16803:67:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1501,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1459,
																					"src": "16850:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1500,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2037,
																				"src": "16828:21:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16828:27:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1503,
																		"nodeType": "RevertStatement",
																		"src": "16821:34:3"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1506,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1461,
																"src": "16888:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1514,
															"nodeType": "IfStatement",
															"src": "16884:81:3",
															"trueBody": {
																"id": 1513,
																"nodeType": "Block",
																"src": "16899:66:3",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1508,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1479,
																					"src": "16931:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1509,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1455,
																					"src": "16938:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1510,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1457,
																					"src": "16942:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1507,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2115,
																				"src": "16922:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16922:28:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1512,
																		"nodeType": "EmitStatement",
																		"src": "16917:33:3"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 1517,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1466,
																"src": "16985:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
																	"typeString": "struct ERC721Upgradeable.ERC721Storage storage pointer"
																}
															},
															"id": 1520,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16987:15:3",
															"memberName": "_tokenApprovals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 586,
															"src": "16985:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1521,
														"indexExpression": {
															"id": 1519,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "17003:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16985:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1522,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "17014:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16985:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1524,
												"nodeType": "ExpressionStatement",
												"src": "16985:31:3"
											}
										]
									},
									"documentation": {
										"id": 1453,
										"nodeType": "StructuredDocumentation",
										"src": "16128:171:3",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "16313:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16330:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "16322:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16322:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16342:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "16334:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16334:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "16359:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "16351:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16351:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "16370:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "16365:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1460,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16365:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16321:59:3"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16398:0:3"
									},
									"scope": 1665,
									"src": "16304:719:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1570,
										"nodeType": "Block",
										"src": "17325:276:3",
										"statements": [
											{
												"assignments": [
													1538
												],
												"declarations": [
													{
														"constant": false,
														"id": 1538,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "17357:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 1570,
														"src": "17335:23:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
															"typeString": "struct ERC721Upgradeable.ERC721Storage"
														},
														"typeName": {
															"id": 1537,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1536,
																"name": "ERC721Storage",
																"nameLocations": [
																	"17335:13:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 593,
																"src": "17335:13:3"
															},
															"referencedDeclaration": 593,
															"src": "17335:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
																"typeString": "struct ERC721Upgradeable.ERC721Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1541,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1539,
														"name": "_getERC721Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 604,
														"src": "17361:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$593_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"
														}
													},
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17361:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
														"typeString": "struct ERC721Upgradeable.ERC721Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17335:45:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1542,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1531,
														"src": "17394:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17414:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17406:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1543,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17406:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1546,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17406:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17394:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1553,
												"nodeType": "IfStatement",
												"src": "17390:91:3",
												"trueBody": {
													"id": 1552,
													"nodeType": "Block",
													"src": "17418:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1549,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1531,
																		"src": "17461:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1548,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2042,
																	"src": "17439:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17439:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1551,
															"nodeType": "RevertStatement",
															"src": "17432:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 1554,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1538,
																	"src": "17490:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ERC721Storage_$593_storage_ptr",
																		"typeString": "struct ERC721Upgradeable.ERC721Storage storage pointer"
																	}
																},
																"id": 1558,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17492:18:3",
																"memberName": "_operatorApprovals",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 592,
																"src": "17490:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1559,
															"indexExpression": {
																"id": 1556,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1529,
																"src": "17511:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17490:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1560,
														"indexExpression": {
															"id": 1557,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "17518:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17490:37:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1561,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "17530:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17490:48:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1563,
												"nodeType": "ExpressionStatement",
												"src": "17490:48:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1565,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "17568:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1566,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "17575:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1567,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "17585:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1564,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2124,
														"src": "17553:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17553:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1569,
												"nodeType": "EmitStatement",
												"src": "17548:46:3"
											}
										]
									},
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "17029:198:3",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "17241:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17268:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "17260:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17260:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17283:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "17275:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17275:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "17298:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "17293:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1532,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17293:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17259:48:3"
									},
									"returnParameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17325:0:3"
									},
									"scope": 1665,
									"src": "17232:369:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1599,
										"nodeType": "Block",
										"src": "17908:169:3",
										"statements": [
											{
												"assignments": [
													1580
												],
												"declarations": [
													{
														"constant": false,
														"id": 1580,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "17926:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1599,
														"src": "17918:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1579,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "17918:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1584,
												"initialValue": {
													"arguments": [
														{
															"id": 1582,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "17943:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1581,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "17934:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17934:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17918:33:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1585,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "17965:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17982:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17974:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1586,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17974:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17974:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17965:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1596,
												"nodeType": "IfStatement",
												"src": "17961:88:3",
												"trueBody": {
													"id": 1595,
													"nodeType": "Block",
													"src": "17986:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1592,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1574,
																		"src": "18030:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1591,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2006,
																	"src": "18007:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18007:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1594,
															"nodeType": "RevertStatement",
															"src": "18000:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1597,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1580,
													"src": "18065:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1578,
												"id": 1598,
												"nodeType": "Return",
												"src": "18058:12:3"
											}
										]
									},
									"documentation": {
										"id": 1572,
										"nodeType": "StructuredDocumentation",
										"src": "17607:224:3",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "17845:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17867:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "17859:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17859:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17858:17:3"
									},
									"returnParameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "17899:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17899:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17898:9:3"
									},
									"scope": 1665,
									"src": "17836:241:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1663,
										"nodeType": "Block",
										"src": "18718:680:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1612,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1605,
																"src": "18732:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18735:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "18732:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18740:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "18732:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18749:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "18732:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1662,
												"nodeType": "IfStatement",
												"src": "18728:664:3",
												"trueBody": {
													"id": 1661,
													"nodeType": "Block",
													"src": "18752:640:3",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1641,
																		"nodeType": "Block",
																		"src": "18866:162:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1634,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1630,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1628,
																						"src": "18888:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1631,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2225,
																								"src": "18898:15:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$2225_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1632,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "18914:16:3",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2224,
																							"src": "18898:32:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1633,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "18931:8:3",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "18898:41:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "18888:51:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1640,
																				"nodeType": "IfStatement",
																				"src": "18884:130:3",
																				"trueBody": {
																					"id": 1639,
																					"nodeType": "Block",
																					"src": "18941:73:3",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1636,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1605,
																										"src": "18992:2:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1635,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2025,
																									"src": "18970:21:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1637,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "18970:25:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1638,
																							"nodeType": "RevertStatement",
																							"src": "18963:32:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1642,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1629,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1628,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "18858:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1642,
																				"src": "18851:13:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1627,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "18851:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "18850:15:3"
																	},
																	"src": "18842:186:3"
																},
																{
																	"block": {
																		"id": 1658,
																		"nodeType": "Block",
																		"src": "19057:325:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1649,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1646,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1644,
																							"src": "19079:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1647,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "19086:6:3",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "19079:13:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1648,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "19096:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "19079:18:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1656,
																					"nodeType": "Block",
																					"src": "19178:190:3",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "19264:86:3",
																								"nodeType": "YulBlock",
																								"src": "19264:86:3",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "19301:2:3",
																															"nodeType": "YulLiteral",
																															"src": "19301:2:3",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "19305:6:3",
																															"nodeType": "YulIdentifier",
																															"src": "19305:6:3"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "19297:3:3",
																														"nodeType": "YulIdentifier",
																														"src": "19297:3:3"
																													},
																													"nativeSrc": "19297:15:3",
																													"nodeType": "YulFunctionCall",
																													"src": "19297:15:3"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "19320:6:3",
																															"nodeType": "YulIdentifier",
																															"src": "19320:6:3"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "19314:5:3",
																														"nodeType": "YulIdentifier",
																														"src": "19314:5:3"
																													},
																													"nativeSrc": "19314:13:3",
																													"nodeType": "YulFunctionCall",
																													"src": "19314:13:3"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "19290:6:3",
																												"nodeType": "YulIdentifier",
																												"src": "19290:6:3"
																											},
																											"nativeSrc": "19290:38:3",
																											"nodeType": "YulFunctionCall",
																											"src": "19290:38:3"
																										},
																										"nativeSrc": "19290:38:3",
																										"nodeType": "YulExpressionStatement",
																										"src": "19290:38:3"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1644,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "19305:6:3",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1644,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "19320:6:3",
																									"valueSize": 1
																								}
																							],
																							"id": 1655,
																							"nodeType": "InlineAssembly",
																							"src": "19255:95:3"
																						}
																					]
																				},
																				"id": 1657,
																				"nodeType": "IfStatement",
																				"src": "19075:293:3",
																				"trueBody": {
																					"id": 1654,
																					"nodeType": "Block",
																					"src": "19099:73:3",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1651,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1605,
																										"src": "19150:2:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1650,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2025,
																									"src": "19128:21:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1652,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "19128:25:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1653,
																							"nodeType": "RevertStatement",
																							"src": "19121:32:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1659,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1645,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1644,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "19049:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1659,
																				"src": "19036:19:3",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1643,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "19036:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "19035:21:3"
																	},
																	"src": "19029:353:3"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1621,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1863,
																			"src": "18807:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18807:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1623,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1603,
																		"src": "18821:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1624,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1607,
																		"src": "18827:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1625,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1609,
																		"src": "18836:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1618,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1605,
																				"src": "18786:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1617,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2225,
																			"src": "18770:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$2225_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18770:19:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$2225",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "18790:16:3",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2224,
																	"src": "18770:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18770:71:3",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1660,
															"nodeType": "TryStatement",
															"src": "18766:616:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1601,
										"nodeType": "StructuredDocumentation",
										"src": "18083:528:3",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "18625:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "18656:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "18648:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18648:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18670:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "18662:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18662:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18682:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "18674:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18674:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "18704:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "18691:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1608,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18691:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18647:62:3"
									},
									"returnParameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18718:0:3"
									},
									"scope": 1665,
									"src": "18616:782:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1666,
							"src": "1100:18300:3",
							"usedErrors": [
								211,
								214,
								2001,
								2006,
								2015,
								2020,
								2025,
								2032,
								2037,
								2042
							],
							"usedEvents": [
								219,
								2106,
								2115,
								2124
							]
						}
					],
					"src": "107:19294:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol",
					"exportedSymbols": {
						"ERC721URIStorageUpgradeable": [
							1835
						],
						"ERC721Upgradeable": [
							1665
						],
						"IERC165": [
							2520
						],
						"IERC4906": [
							1949
						],
						"Initializable": [
							448
						],
						"Strings": [
							2508
						]
					},
					"id": 1836,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1667,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
							"file": "../ERC721Upgradeable.sol",
							"id": 1669,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1836,
							"sourceUnit": 1666,
							"src": "154:59:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1668,
										"name": "ERC721Upgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1665,
										"src": "162:17:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 1671,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1836,
							"sourceUnit": 2509,
							"src": "214:66:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1670,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2508,
										"src": "222:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC4906.sol",
							"id": 1673,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1836,
							"sourceUnit": 1950,
							"src": "281:73:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1672,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1949,
										"src": "289:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 1675,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1836,
							"sourceUnit": 2521,
							"src": "355:80:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1674,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2520,
										"src": "363:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../../proxy/utils/Initializable.sol",
							"id": 1677,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1836,
							"sourceUnit": 449,
							"src": "436:69:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1676,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "444:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1679,
										"name": "Initializable",
										"nameLocations": [
											"626:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "626:13:4"
									},
									"id": 1680,
									"nodeType": "InheritanceSpecifier",
									"src": "626:13:4"
								},
								{
									"baseName": {
										"id": 1681,
										"name": "IERC4906",
										"nameLocations": [
											"641:8:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1949,
										"src": "641:8:4"
									},
									"id": 1682,
									"nodeType": "InheritanceSpecifier",
									"src": "641:8:4"
								},
								{
									"baseName": {
										"id": 1683,
										"name": "ERC721Upgradeable",
										"nameLocations": [
											"651:17:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1665,
										"src": "651:17:4"
									},
									"id": 1684,
									"nodeType": "InheritanceSpecifier",
									"src": "651:17:4"
								}
							],
							"canonicalName": "ERC721URIStorageUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1678,
								"nodeType": "StructuredDocumentation",
								"src": "507:69:4",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1835,
							"linearizedBaseContracts": [
								1835,
								1665,
								2043,
								2253,
								1949,
								2207,
								1921,
								2520,
								1881,
								448
							],
							"name": "ERC721URIStorageUpgradeable",
							"nameLocation": "595:27:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1687,
									"libraryName": {
										"id": 1685,
										"name": "Strings",
										"nameLocations": [
											"681:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2508,
										"src": "681:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "675:26:4",
									"typeName": {
										"id": 1686,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "693:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1693,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "913:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 1835,
									"src": "889:65:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1688,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "889:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1691,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "943:10:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1690,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "936:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1689,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "936:6:4",
												"typeDescriptions": {}
											}
										},
										"id": 1692,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "936:18:4",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
									"documentation": {
										"id": 1694,
										"nodeType": "StructuredDocumentation",
										"src": "961:74:4",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ERC721URIStorage"
									},
									"id": 1699,
									"members": [
										{
											"constant": false,
											"id": 1698,
											"mutability": "mutable",
											"name": "_tokenURIs",
											"nameLocation": "1159:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 1699,
											"src": "1124:45:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
												"typeString": "mapping(uint256 => string)"
											},
											"typeName": {
												"id": 1697,
												"keyName": "tokenId",
												"keyNameLocation": "1140:7:4",
												"keyType": {
													"id": 1695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1132:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "1124:34:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
													"typeString": "mapping(uint256 => string)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1696,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1151:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC721URIStorageStorage",
									"nameLocation": "1047:23:4",
									"nodeType": "StructDefinition",
									"scope": 1835,
									"src": "1040:136:4",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1702,
									"mutability": "constant",
									"name": "ERC721URIStorageStorageLocation",
									"nameLocation": "1327:31:4",
									"nodeType": "VariableDeclaration",
									"scope": 1835,
									"src": "1302:125:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1700,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1302:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830353432613431383831656531323861333635613732376232383263383666613835393537393439306239626234356161623835303336343863386537393030",
										"id": 1701,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1361:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2379308696314521910557677063879631722299242421128561970643328499819886835968_by_1",
											"typeString": "int_const 2379...(68 digits omitted)...5968"
										},
										"value": "0x0542a41881ee128a365a727b282c86fa859579490b9bb45aab8503648c8e7900"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1709,
										"nodeType": "Block",
										"src": "1530:90:4",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1549:65:4",
													"nodeType": "YulBlock",
													"src": "1549:65:4",
													"statements": [
														{
															"nativeSrc": "1563:41:4",
															"nodeType": "YulAssignment",
															"src": "1563:41:4",
															"value": {
																"name": "ERC721URIStorageStorageLocation",
																"nativeSrc": "1573:31:4",
																"nodeType": "YulIdentifier",
																"src": "1573:31:4"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1563:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1563:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1706,
														"isOffset": false,
														"isSlot": true,
														"src": "1563:6:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1702,
														"isOffset": false,
														"isSlot": false,
														"src": "1573:31:4",
														"valueSize": 1
													}
												],
												"id": 1708,
												"nodeType": "InlineAssembly",
												"src": "1540:74:4"
											}
										]
									},
									"id": 1710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getERC721URIStorageStorage",
									"nameLocation": "1443:27:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1470:2:4"
									},
									"returnParameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1527:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "1495:33:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ERC721URIStorageStorage_$1699_storage_ptr",
													"typeString": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage"
												},
												"typeName": {
													"id": 1705,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1704,
														"name": "ERC721URIStorageStorage",
														"nameLocations": [
															"1495:23:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1699,
														"src": "1495:23:4"
													},
													"referencedDeclaration": 1699,
													"src": "1495:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC721URIStorageStorage_$1699_storage_ptr",
														"typeString": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1494:35:4"
									},
									"scope": 1835,
									"src": "1434:186:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1715,
										"nodeType": "Block",
										"src": "1687:7:4",
										"statements": []
									},
									"id": 1716,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1713,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1712,
												"name": "onlyInitializing",
												"nameLocations": [
													"1670:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1670:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1670:16:4"
										}
									],
									"name": "__ERC721URIStorage_init",
									"nameLocation": "1635:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1658:2:4"
									},
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1687:0:4"
									},
									"scope": 1835,
									"src": "1626:68:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1721,
										"nodeType": "Block",
										"src": "1771:7:4",
										"statements": []
									},
									"id": 1722,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1719,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1718,
												"name": "onlyInitializing",
												"nameLocations": [
													"1754:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1754:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1754:16:4"
										}
									],
									"name": "__ERC721URIStorage_init_unchained",
									"nameLocation": "1709:33:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1742:2:4"
									},
									"returnParameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1771:0:4"
									},
									"scope": 1835,
									"src": "1700:78:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										679,
										2519
									],
									"body": {
										"id": 1742,
										"nodeType": "Block",
										"src": "1962:99:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1733,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1725,
															"src": "1979:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1734,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1693,
															"src": "1994:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1979:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1738,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1725,
																"src": "2042:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1736,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2018:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorageUpgradeable_$1835_$",
																	"typeString": "type(contract super ERC721URIStorageUpgradeable)"
																}
															},
															"id": 1737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2024:17:4",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 679,
															"src": "2018:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2018:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1979:75:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1732,
												"id": 1741,
												"nodeType": "Return",
												"src": "1972:82:4"
											}
										]
									},
									"documentation": {
										"id": 1723,
										"nodeType": "StructuredDocumentation",
										"src": "1783:55:4",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1852:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1729,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1727,
												"name": "ERC721Upgradeable",
												"nameLocations": [
													"1919:17:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1665,
												"src": "1919:17:4"
											},
											{
												"id": 1728,
												"name": "IERC165",
												"nameLocations": [
													"1938:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2520,
												"src": "1938:7:4"
											}
										],
										"src": "1910:36:4"
									},
									"parameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1877:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "1870:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1724,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1870:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1869:20:4"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "1956:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1730,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1956:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1955:6:4"
									},
									"scope": 1835,
									"src": "1843:218:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										795
									],
									"body": {
										"id": 1806,
										"nodeType": "Block",
										"src": "2215:582:4",
										"statements": [
											{
												"assignments": [
													1754
												],
												"declarations": [
													{
														"constant": false,
														"id": 1754,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2257:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1806,
														"src": "2225:33:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC721URIStorageStorage_$1699_storage_ptr",
															"typeString": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage"
														},
														"typeName": {
															"id": 1753,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1752,
																"name": "ERC721URIStorageStorage",
																"nameLocations": [
																	"2225:23:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1699,
																"src": "2225:23:4"
															},
															"referencedDeclaration": 1699,
															"src": "2225:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC721URIStorageStorage_$1699_storage_ptr",
																"typeString": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1757,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1755,
														"name": "_getERC721URIStorageStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1710,
														"src": "2261:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC721URIStorageStorage_$1699_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage storage pointer)"
														}
													},
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC721URIStorageStorage_$1699_storage_ptr",
														"typeString": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2225:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1759,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "2314:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1758,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "2300:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2300:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1761,
												"nodeType": "ExpressionStatement",
												"src": "2300:22:4"
											},
											{
												"assignments": [
													1763
												],
												"declarations": [
													{
														"constant": false,
														"id": 1763,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "2347:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 1806,
														"src": "2333:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1762,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2333:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1768,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1764,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1754,
															"src": "2359:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC721URIStorageStorage_$1699_storage_ptr",
																"typeString": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage storage pointer"
															}
														},
														"id": 1765,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2361:10:4",
														"memberName": "_tokenURIs",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1698,
														"src": "2359:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1767,
													"indexExpression": {
														"id": 1766,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1746,
														"src": "2372:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2359:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2333:47:4"
											},
											{
												"assignments": [
													1770
												],
												"declarations": [
													{
														"constant": false,
														"id": 1770,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "2404:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1806,
														"src": "2390:18:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1769,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2390:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1773,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1771,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "2411:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2411:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2390:31:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1776,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1770,
																	"src": "2500:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2494:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1774,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2494:5:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2494:11:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2506:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2494:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1779,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2516:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2494:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1784,
												"nodeType": "IfStatement",
												"src": "2490:70:4",
												"trueBody": {
													"id": 1783,
													"nodeType": "Block",
													"src": "2519:41:4",
													"statements": [
														{
															"expression": {
																"id": 1781,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1763,
																"src": "2540:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1751,
															"id": 1782,
															"nodeType": "Return",
															"src": "2533:16:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1787,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1763,
																	"src": "2665:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1786,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2659:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1785,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2659:5:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2659:16:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2676:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2659:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1790,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2685:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2659:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1800,
												"nodeType": "IfStatement",
												"src": "2655:95:4",
												"trueBody": {
													"id": 1799,
													"nodeType": "Block",
													"src": "2688:62:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1795,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1770,
																		"src": "2723:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1796,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1763,
																		"src": "2729:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2709:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1792,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "2709:6:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2716:6:4",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "2709:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2709:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1751,
															"id": 1798,
															"nodeType": "Return",
															"src": "2702:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1803,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "2782:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1801,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2767:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorageUpgradeable_$1835_$",
																"typeString": "type(contract super ERC721URIStorageUpgradeable)"
															}
														},
														"id": 1802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2773:8:4",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 795,
														"src": "2767:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2767:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1751,
												"id": 1805,
												"nodeType": "Return",
												"src": "2760:30:4"
											}
										]
									},
									"documentation": {
										"id": 1744,
										"nodeType": "StructuredDocumentation",
										"src": "2067:55:4",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2136:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1748,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2182:8:4"
									},
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2153:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "2145:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2145:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2144:17:4"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "2200:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1749,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2200:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2199:15:4"
									},
									"scope": 1835,
									"src": "2127:670:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1833,
										"nodeType": "Block",
										"src": "2997:163:4",
										"statements": [
											{
												"assignments": [
													1817
												],
												"declarations": [
													{
														"constant": false,
														"id": 1817,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3039:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1833,
														"src": "3007:33:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC721URIStorageStorage_$1699_storage_ptr",
															"typeString": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage"
														},
														"typeName": {
															"id": 1816,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1815,
																"name": "ERC721URIStorageStorage",
																"nameLocations": [
																	"3007:23:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1699,
																"src": "3007:23:4"
															},
															"referencedDeclaration": 1699,
															"src": "3007:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC721URIStorageStorage_$1699_storage_ptr",
																"typeString": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1820,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1818,
														"name": "_getERC721URIStorageStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1710,
														"src": "3043:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC721URIStorageStorage_$1699_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage storage pointer)"
														}
													},
													"id": 1819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3043:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC721URIStorageStorage_$1699_storage_ptr",
														"typeString": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3007:65:4"
											},
											{
												"expression": {
													"id": 1827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 1821,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1817,
																"src": "3082:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC721URIStorageStorage_$1699_storage_ptr",
																	"typeString": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage storage pointer"
																}
															},
															"id": 1824,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3084:10:4",
															"memberName": "_tokenURIs",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1698,
															"src": "3082:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1825,
														"indexExpression": {
															"id": 1823,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "3095:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3082:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1826,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "3106:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3082:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1828,
												"nodeType": "ExpressionStatement",
												"src": "3082:33:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1830,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "3145:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1829,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1941,
														"src": "3130:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3130:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1832,
												"nodeType": "EmitStatement",
												"src": "3125:28:4"
											}
										]
									},
									"documentation": {
										"id": 1808,
										"nodeType": "StructuredDocumentation",
										"src": "2803:108:4",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 1834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "2925:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2946:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "2938:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2938:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "2969:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "2955:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1811,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2955:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2937:42:4"
									},
									"returnParameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2997:0:4"
									},
									"scope": 1835,
									"src": "2916:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1836,
							"src": "577:2585:4",
							"usedErrors": [
								211,
								214,
								2001,
								2006,
								2015,
								2020,
								2025,
								2032,
								2037,
								2042
							],
							"usedEvents": [
								219,
								1941,
								1948,
								2106,
								2115,
								2124
							]
						}
					],
					"src": "128:3035:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1881
						],
						"Initializable": [
							448
						]
					},
					"id": 1882,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1837,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1839,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1882,
							"sourceUnit": 449,
							"src": "126:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1838,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1841,
										"name": "Initializable",
										"nameLocations": [
											"728:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:5"
									},
									"id": 1842,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:5"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1840,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1881,
							"linearizedBaseContracts": [
								1881,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1847,
										"nodeType": "Block",
										"src": "800:7:5",
										"statements": []
									},
									"id": 1848,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1845,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1844,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:5"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:5"
									},
									"returnParameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:5"
									},
									"scope": 1881,
									"src": "748:59:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1853,
										"nodeType": "Block",
										"src": "875:7:5",
										"statements": []
									},
									"id": 1854,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1851,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1850,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:5"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:5"
									},
									"returnParameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:5"
									},
									"scope": 1881,
									"src": "813:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1862,
										"nodeType": "Block",
										"src": "949:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1859,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1858,
												"id": 1861,
												"nodeType": "Return",
												"src": "959:17:5"
											}
										]
									},
									"id": 1863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:5"
									},
									"returnParameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "940:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:5"
									},
									"scope": 1881,
									"src": "887:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1871,
										"nodeType": "Block",
										"src": "1056:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1868,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1867,
												"id": 1870,
												"nodeType": "Return",
												"src": "1066:15:5"
											}
										]
									},
									"id": 1872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:5"
									},
									"returnParameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "1040:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1865,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:5"
									},
									"scope": 1881,
									"src": "989:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1879,
										"nodeType": "Block",
										"src": "1166:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1876,
												"id": 1878,
												"nodeType": "Return",
												"src": "1176:8:5"
											}
										]
									},
									"id": 1880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:5"
									},
									"returnParameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "1157:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:5"
									},
									"scope": 1881,
									"src": "1094:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1882,
							"src": "688:505:5",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
					"exportedSymbols": {
						"ERC165Upgradeable": [
							1921
						],
						"IERC165": [
							2520
						],
						"Initializable": [
							448
						]
					},
					"id": 1922,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1883,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 1885,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1922,
							"sourceUnit": 2521,
							"src": "140:80:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1884,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2520,
										"src": "148:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 1887,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1922,
							"sourceUnit": 449,
							"src": "221:66:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1886,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "229:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1889,
										"name": "Initializable",
										"nameLocations": [
											"807:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "807:13:6"
									},
									"id": 1890,
									"nodeType": "InheritanceSpecifier",
									"src": "807:13:6"
								},
								{
									"baseName": {
										"id": 1891,
										"name": "IERC165",
										"nameLocations": [
											"822:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2520,
										"src": "822:7:6"
									},
									"id": 1892,
									"nodeType": "InheritanceSpecifier",
									"src": "822:7:6"
								}
							],
							"canonicalName": "ERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1888,
								"nodeType": "StructuredDocumentation",
								"src": "289:478:6",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1921,
							"linearizedBaseContracts": [
								1921,
								2520,
								448
							],
							"name": "ERC165Upgradeable",
							"nameLocation": "786:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1897,
										"nodeType": "Block",
										"src": "887:7:6",
										"statements": []
									},
									"id": 1898,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1895,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1894,
												"name": "onlyInitializing",
												"nameLocations": [
													"870:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "870:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "870:16:6"
										}
									],
									"name": "__ERC165_init",
									"nameLocation": "845:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:2:6"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "887:0:6"
									},
									"scope": 1921,
									"src": "836:58:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1903,
										"nodeType": "Block",
										"src": "961:7:6",
										"statements": []
									},
									"id": 1904,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1901,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1900,
												"name": "onlyInitializing",
												"nameLocations": [
													"944:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "944:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "944:16:6"
										}
									],
									"name": "__ERC165_init_unchained",
									"nameLocation": "909:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:2:6"
									},
									"returnParameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "961:0:6"
									},
									"scope": 1921,
									"src": "900:68:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2519
									],
									"body": {
										"id": 1919,
										"nodeType": "Block",
										"src": "1116:64:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1912,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1907,
														"src": "1133:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1914,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2520,
																	"src": "1153:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2520_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2520_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1913,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1148:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1148:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2520",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1916,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1162:11:6",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1148:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1133:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1911,
												"id": 1918,
												"nodeType": "Return",
												"src": "1126:47:6"
											}
										]
									},
									"documentation": {
										"id": 1905,
										"nodeType": "StructuredDocumentation",
										"src": "973:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1043:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1068:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1920,
												"src": "1061:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1906,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:20:6"
									},
									"returnParameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1920,
												"src": "1110:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1909,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1110:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1109:6:6"
									},
									"scope": 1921,
									"src": "1034:146:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1922,
							"src": "768:414:6",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "114:1069:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2520
						]
					},
					"id": 1926,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1923,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 1925,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1926,
							"sourceUnit": 2521,
							"src": "132:59:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1924,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2520,
										"src": "140:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							2520
						],
						"IERC4906": [
							1949
						],
						"IERC721": [
							2207
						]
					},
					"id": 1950,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1927,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1929,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1950,
							"sourceUnit": 1926,
							"src": "133:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1928,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2520,
										"src": "141:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 1931,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1950,
							"sourceUnit": 1954,
							"src": "172:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1930,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2207,
										"src": "180:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1933,
										"name": "IERC165",
										"nameLocations": [
											"279:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2520,
										"src": "279:7:8"
									},
									"id": 1934,
									"nodeType": "InheritanceSpecifier",
									"src": "279:7:8"
								},
								{
									"baseName": {
										"id": 1935,
										"name": "IERC721",
										"nameLocations": [
											"288:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2207,
										"src": "288:7:8"
									},
									"id": 1936,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:8"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1932,
								"nodeType": "StructuredDocumentation",
								"src": "212:45:8",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 1949,
							"linearizedBaseContracts": [
								1949,
								2207,
								2520
							],
							"name": "IERC4906",
							"nameLocation": "267:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1937,
										"nodeType": "StructuredDocumentation",
										"src": "302:201:8",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 1941,
									"name": "MetadataUpdate",
									"nameLocation": "514:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "537:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "529:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:18:8"
									},
									"src": "508:39:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1942,
										"nodeType": "StructuredDocumentation",
										"src": "553:212:8",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 1948,
									"name": "BatchMetadataUpdate",
									"nameLocation": "776:19:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "804:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "796:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1946,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "826:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "818:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:42:8"
									},
									"src": "770:68:8"
								}
							],
							"scope": 1950,
							"src": "257:583:8",
							"usedErrors": [],
							"usedEvents": [
								1941,
								1948,
								2106,
								2115,
								2124
							]
						}
					],
					"src": "107:734:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							2207
						]
					},
					"id": 1954,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1951,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 1953,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1954,
							"sourceUnit": 2208,
							"src": "132:52:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1952,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2207,
										"src": "140:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:79:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							2090
						],
						"IERC20Errors": [
							1995
						],
						"IERC721Errors": [
							2043
						]
					},
					"id": 2091,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1955,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1956,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:10",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 1995,
							"linearizedBaseContracts": [
								1995
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1957,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:10",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 1965,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "652:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "668:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "685:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:10"
									},
									"src": "621:80:10"
								},
								{
									"documentation": {
										"id": 1966,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:10",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 1970,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "889:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:10"
									},
									"src": "864:41:10"
								},
								{
									"documentation": {
										"id": 1971,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:10",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 1975,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "1102:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:10"
									},
									"src": "1075:45:10"
								},
								{
									"documentation": {
										"id": 1976,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:10",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 1984,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "1509:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "1526:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "1545:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:10"
									},
									"src": "1476:85:10"
								},
								{
									"documentation": {
										"id": 1985,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:10",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 1989,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "1773:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:10"
									},
									"src": "1746:45:10"
								},
								{
									"documentation": {
										"id": 1990,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:10",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 1994,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "2023:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:10"
									},
									"src": "1997:43:10"
								}
							],
							"scope": 2091,
							"src": "278:1764:10",
							"usedErrors": [
								1965,
								1970,
								1975,
								1984,
								1989,
								1994
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1996,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:10",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 2043,
							"linearizedBaseContracts": [
								2043
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1997,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:10",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 2001,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "2465:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:10"
									},
									"src": "2440:40:10"
								},
								{
									"documentation": {
										"id": 2002,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:10",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 2006,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "2652:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:10"
									},
									"src": "2623:46:10"
								},
								{
									"documentation": {
										"id": 2007,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:10",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 2015,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "2996:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "3012:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "3029:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:10"
									},
									"src": "2969:75:10"
								},
								{
									"documentation": {
										"id": 2016,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:10",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 2020,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "3233:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:10"
									},
									"src": "3207:42:10"
								},
								{
									"documentation": {
										"id": 2021,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:10",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 2025,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2025,
												"src": "3447:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:10"
									},
									"src": "3419:46:10"
								},
								{
									"documentation": {
										"id": 2026,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:10",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 2032,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "3756:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "3774:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:10"
									},
									"src": "3723:68:10"
								},
								{
									"documentation": {
										"id": 2033,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:10",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 2037,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "4004:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:10"
									},
									"src": "3976:46:10"
								},
								{
									"documentation": {
										"id": 2038,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:10",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 2042,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "4258:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:10"
									},
									"src": "4230:46:10"
								}
							],
							"scope": 2091,
							"src": "2186:2092:10",
							"usedErrors": [
								2001,
								2006,
								2015,
								2020,
								2025,
								2032,
								2037,
								2042
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2044,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:10",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 2090,
							"linearizedBaseContracts": [
								2090
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2045,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:10",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 2055,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "4854:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "4870:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "4887:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "4903:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:10"
									},
									"src": "4821:99:10"
								},
								{
									"documentation": {
										"id": 2056,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:10",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 2060,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "5110:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:10"
									},
									"src": "5083:43:10"
								},
								{
									"documentation": {
										"id": 2061,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:10",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 2065,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2065,
												"src": "5325:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:10"
									},
									"src": "5296:47:10"
								},
								{
									"documentation": {
										"id": 2066,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:10",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 2072,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "5645:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "5663:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:10"
									},
									"src": "5610:68:10"
								},
								{
									"documentation": {
										"id": 2073,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:10",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 2077,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "5892:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:10"
									},
									"src": "5863:47:10"
								},
								{
									"documentation": {
										"id": 2078,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:10",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 2082,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "6147:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:10"
									},
									"src": "6118:47:10"
								},
								{
									"documentation": {
										"id": 2083,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:10",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 2089,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "6488:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "6507:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:10"
									},
									"src": "6456:73:10"
								}
							],
							"scope": 2091,
							"src": "4424:2107:10",
							"usedErrors": [
								2055,
								2060,
								2065,
								2072,
								2077,
								2082,
								2089
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2520
						],
						"IERC721": [
							2207
						]
					},
					"id": 2208,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2092,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 2094,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2208,
							"sourceUnit": 2521,
							"src": "134:62:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2093,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2520,
										"src": "142:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2096,
										"name": "IERC165",
										"nameLocations": [
											"287:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2520,
										"src": "287:7:11"
									},
									"id": 2097,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:11"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2095,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:11",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 2207,
							"linearizedBaseContracts": [
								2207,
								2520
							],
							"name": "IERC721",
							"nameLocation": "276:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2098,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:11",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2106,
									"name": "Transfer",
									"nameLocation": "400:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "409:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2102,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "431:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2104,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "451:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:11"
									},
									"src": "394:82:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2107,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:11",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2115,
									"name": "Approval",
									"nameLocation": "587:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2109,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "596:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2111,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "619:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2113,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "645:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:11"
									},
									"src": "581:89:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2116,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:11",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 2124,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "819:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2120,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "842:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2122,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "868:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2121,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:11"
									},
									"src": "798:85:11"
								},
								{
									"documentation": {
										"id": 2125,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:11",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 2132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "989:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:11"
									},
									"returnParameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "1027:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:11"
									},
									"scope": 2207,
									"src": "970:74:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2133,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:11",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 2140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "1203:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:11"
									},
									"returnParameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "1243:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:11"
									},
									"scope": 2207,
									"src": "1186:72:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2141,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:11",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 2152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "1860:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "1874:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "1886:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2149,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "1903:19:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2148,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:11"
									},
									"returnParameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:11"
									},
									"scope": 2207,
									"src": "1834:99:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2153,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:11",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 2162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2162,
												"src": "2675:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2162,
												"src": "2689:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2162,
												"src": "2701:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:11"
									},
									"returnParameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:11"
									},
									"scope": 2207,
									"src": "2649:78:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2163,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:11",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2165,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "3492:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "3506:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "3518:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:11"
									},
									"returnParameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:11"
									},
									"scope": 2207,
									"src": "3470:74:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2173,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:11",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "4024:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "4036:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:11"
									},
									"returnParameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:11"
									},
									"scope": 2207,
									"src": "4007:55:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2181,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:11",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 2188,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2188,
												"src": "4415:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2188,
												"src": "4433:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2184,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:11"
									},
									"returnParameters": {
										"id": 2187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:11"
									},
									"scope": 2207,
									"src": "4388:69:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2189,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:11",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 2196,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2191,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "4628:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:11"
									},
									"returnParameters": {
										"id": 2195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2194,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "4668:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:11"
									},
									"scope": 2207,
									"src": "4607:79:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2197,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:11",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 2206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "4861:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "4876:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:11"
									},
									"returnParameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "4917:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:11"
									},
									"scope": 2207,
									"src": "4835:88:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2208,
							"src": "266:4659:11",
							"usedErrors": [],
							"usedEvents": [
								2106,
								2115,
								2124
							]
						}
					],
					"src": "108:4818:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							2225
						]
					},
					"id": 2226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2209,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2210,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:12",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 2225,
							"linearizedBaseContracts": [
								2225
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2211,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:12",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 2224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "867:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "893:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "915:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "940:19:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2218,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:12"
									},
									"returnParameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "984:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2221,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:12"
									},
									"scope": 2225,
									"src": "832:160:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2226,
							"src": "295:699:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							2207
						],
						"IERC721Metadata": [
							2253
						]
					},
					"id": 2254,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 2229,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2254,
							"sourceUnit": 2208,
							"src": "153:39:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2228,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2207,
										"src": "161:7:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2231,
										"name": "IERC721",
										"nameLocations": [
											"357:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2207,
										"src": "357:7:13"
									},
									"id": 2232,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:13"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2230,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:13",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 2253,
							"linearizedBaseContracts": [
								2253,
								2207,
								2520
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2233,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:13",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 2238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:13"
									},
									"returnParameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "473:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:13"
									},
									"scope": 2253,
									"src": "434:54:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2239,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:13",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 2244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:13"
									},
									"returnParameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "600:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:13"
									},
									"scope": 2253,
									"src": "559:56:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2245,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:13",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 2252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "734:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:13"
									},
									"returnParameters": {
										"id": 2251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "774:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2249,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:13"
									},
									"scope": 2253,
									"src": "716:73:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2254,
							"src": "328:463:13",
							"usedErrors": [],
							"usedEvents": [
								2106,
								2115,
								2124
							]
						}
					],
					"src": "127:665:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3574
						],
						"SignedMath": [
							3679
						],
						"Strings": [
							2508
						]
					},
					"id": 2509,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2255,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 2257,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2509,
							"sourceUnit": 3575,
							"src": "127:37:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2256,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3574,
										"src": "135:4:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 2259,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2509,
							"sourceUnit": 3680,
							"src": "165:49:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2258,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3679,
										"src": "173:10:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2260,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:14",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2508,
							"linearizedBaseContracts": [
								2508
							],
							"name": "Strings",
							"nameLocation": "259:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2263,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:14",
									"nodeType": "VariableDeclaration",
									"scope": 2508,
									"src": "273:56:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 2261,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 2262,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:14",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2266,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:14",
									"nodeType": "VariableDeclaration",
									"scope": 2508,
									"src": "335:42:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2264,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 2265,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 2267,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:14",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 2273,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2273,
												"src": "505:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2273,
												"src": "520:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:14"
									},
									"src": "470:66:14"
								},
								{
									"body": {
										"id": 2320,
										"nodeType": "Block",
										"src": "708:627:14",
										"statements": [
											{
												"id": 2319,
												"nodeType": "UncheckedBlock",
												"src": "718:611:14",
												"statements": [
													{
														"assignments": [
															2282
														],
														"declarations": [
															{
																"constant": false,
																"id": 2282,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2319,
																"src": "742:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2281,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2289,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2285,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2276,
																		"src": "770:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2283,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3574,
																		"src": "759:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3574_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 2284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:14",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3394,
																	"src": "759:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 2286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:14"
													},
													{
														"assignments": [
															2291
														],
														"declarations": [
															{
																"constant": false,
																"id": 2291,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2319,
																"src": "794:20:14",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 2290,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2296,
														"initialValue": {
															"arguments": [
																{
																	"id": 2294,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2282,
																	"src": "828:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 2292,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 2295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:14"
													},
													{
														"assignments": [
															2298
														],
														"declarations": [
															{
																"constant": false,
																"id": 2298,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:14",
																"nodeType": "VariableDeclaration",
																"scope": 2319,
																"src": "849:11:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2297,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2299,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:14"
													},
													{
														"AST": {
															"nativeSrc": "930:67:14",
															"nodeType": "YulBlock",
															"src": "930:67:14",
															"statements": [
																{
																	"nativeSrc": "948:35:14",
																	"nodeType": "YulAssignment",
																	"src": "948:35:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:14",
																						"nodeType": "YulLiteral",
																						"src": "971:2:14",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:14"
																				},
																				"nativeSrc": "967:15:14",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:14"
																		},
																		"nativeSrc": "955:28:14",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:14"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:14"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2291,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:14",
																"valueSize": 1
															},
															{
																"declaration": 2282,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:14",
																"valueSize": 1
															},
															{
																"declaration": 2298,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:14",
																"valueSize": 1
															}
														],
														"id": 2300,
														"nodeType": "InlineAssembly",
														"src": "921:76:14"
													},
													{
														"body": {
															"id": 2315,
															"nodeType": "Block",
															"src": "1023:269:14",
															"statements": [
																{
																	"expression": {
																		"id": 2303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:14",
																		"subExpression": {
																			"id": 2302,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2298,
																			"src": "1041:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2304,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:14"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:14",
																		"nodeType": "YulBlock",
																		"src": "1124:86:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:14",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:14",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:14"
																									},
																									"nativeSrc": "1164:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:14"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:14",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:14"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:14",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:14"
																							},
																							"nativeSrc": "1159:32:14",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:14"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:14",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:14"
																					},
																					"nativeSrc": "1146:46:14",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:14"
																				},
																				"nativeSrc": "1146:46:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:14"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 2263,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:14",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2298,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:14",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2276,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:14",
																			"valueSize": 1
																		}
																	],
																	"id": 2305,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:14"
																},
																{
																	"expression": {
																		"id": 2308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2306,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2276,
																			"src": "1227:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 2307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2309,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:14"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2310,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2276,
																			"src": "1260:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2314,
																	"nodeType": "IfStatement",
																	"src": "1256:21:14",
																	"trueBody": {
																		"id": 2313,
																		"nodeType": "Break",
																		"src": "1272:5:14"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 2301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 2316,
														"nodeType": "WhileStatement",
														"src": "1010:282:14"
													},
													{
														"expression": {
															"id": 2317,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2291,
															"src": "1312:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2280,
														"id": 2318,
														"nodeType": "Return",
														"src": "1305:13:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2274,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "655:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:14"
									},
									"returnParameters": {
										"id": 2280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "693:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2278,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:14"
									},
									"scope": 2508,
									"src": "637:698:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2346,
										"nodeType": "Block",
										"src": "1511:92:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2332,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2324,
																	"src": "1542:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 2336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 2337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:14",
															"trueExpression": {
																"hexValue": "2d",
																"id": 2335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2341,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2324,
																			"src": "1588:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 2339,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3679,
																			"src": "1573:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3679_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 2340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:14",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3678,
																		"src": "1573:14:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 2342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2338,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2321,
																"src": "1564:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 2343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 2330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 2329,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:14",
																"typeDescriptions": {}
															}
														},
														"id": 2331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:14",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 2344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2328,
												"id": 2345,
												"nodeType": "Return",
												"src": "1521:75:14"
											}
										]
									},
									"documentation": {
										"id": 2322,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:14",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 2347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2347,
												"src": "1459:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2323,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:14"
									},
									"returnParameters": {
										"id": 2328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2347,
												"src": "1496:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2326,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:14"
									},
									"scope": 2508,
									"src": "1435:168:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2366,
										"nodeType": "Block",
										"src": "1782:100:14",
										"statements": [
											{
												"id": 2365,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:14",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2356,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2350,
																	"src": "1835:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2359,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2350,
																				"src": "1854:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2357,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3574,
																				"src": "1842:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3574_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 2358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:14",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3516,
																			"src": "1842:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2355,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2367,
																	2450,
																	2470
																],
																"referencedDeclaration": 2450,
																"src": "1823:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 2363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2354,
														"id": 2364,
														"nodeType": "Return",
														"src": "1816:49:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2348,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2367,
												"src": "1729:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:14"
									},
									"returnParameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2367,
												"src": "1767:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2352,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:14"
									},
									"scope": 2508,
									"src": "1708:174:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2449,
										"nodeType": "Block",
										"src": "2095:435:14",
										"statements": [
											{
												"assignments": [
													2378
												],
												"declarations": [
													{
														"constant": false,
														"id": 2378,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 2449,
														"src": "2105:18:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2377,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2380,
												"initialValue": {
													"id": 2379,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2370,
													"src": "2126:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:14"
											},
											{
												"assignments": [
													2382
												],
												"declarations": [
													{
														"constant": false,
														"id": 2382,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2449,
														"src": "2141:19:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2381,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2391,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2386,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2372,
																	"src": "2177:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2384,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2383,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:14"
											},
											{
												"expression": {
													"id": 2396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2392,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2382,
															"src": "2198:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2394,
														"indexExpression": {
															"hexValue": "30",
															"id": 2393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2397,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:14"
											},
											{
												"expression": {
													"id": 2402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2398,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2382,
															"src": "2223:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2400,
														"indexExpression": {
															"hexValue": "31",
															"id": 2399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2401,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2403,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:14"
											},
											{
												"body": {
													"id": 2432,
													"nodeType": "Block",
													"src": "2293:95:14",
													"statements": [
														{
															"expression": {
																"id": 2426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2418,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2382,
																		"src": "2307:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2420,
																	"indexExpression": {
																		"id": 2419,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2405,
																		"src": "2314:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2421,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2263,
																		"src": "2319:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2425,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2422,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2378,
																			"src": "2330:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2427,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:14"
														},
														{
															"expression": {
																"id": 2430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2428,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2378,
																	"src": "2361:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2431,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2412,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2405,
														"src": "2281:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2413,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2433,
												"initializationExpression": {
													"assignments": [
														2405
													],
													"declarations": [
														{
															"constant": false,
															"id": 2405,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 2433,
															"src": "2253:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2404,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2411,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2407,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2372,
																"src": "2269:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:14"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:14",
														"subExpression": {
															"id": 2415,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2405,
															"src": "2290:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2417,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:14"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2434,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2378,
														"src": "2401:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2435,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2443,
												"nodeType": "IfStatement",
												"src": "2397:96:14",
												"trueBody": {
													"id": 2442,
													"nodeType": "Block",
													"src": "2418:75:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2438,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2370,
																		"src": "2468:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2439,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2372,
																		"src": "2475:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2437,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2273,
																	"src": "2439:28:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 2440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2441,
															"nodeType": "RevertStatement",
															"src": "2432:50:14"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2446,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2382,
															"src": "2516:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2444,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:14",
															"typeDescriptions": {}
														}
													},
													"id": 2447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2376,
												"id": 2448,
												"nodeType": "Return",
												"src": "2502:21:14"
											}
										]
									},
									"documentation": {
										"id": 2368,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "2026:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "2041:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:14"
									},
									"returnParameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "2080:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2374,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:14"
									},
									"scope": 2508,
									"src": "2005:525:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2469,
										"nodeType": "Block",
										"src": "2762:75:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2463,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2453,
																			"src": "2807:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2461,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2459,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2466,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2266,
															"src": "2815:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2458,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2367,
															2450,
															2470
														],
														"referencedDeclaration": 2450,
														"src": "2779:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2457,
												"id": 2468,
												"nodeType": "Return",
												"src": "2772:58:14"
											}
										]
									},
									"documentation": {
										"id": 2451,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:14",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 2470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2453,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2470,
												"src": "2710:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:14"
									},
									"returnParameters": {
										"id": 2457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2470,
												"src": "2747:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2455,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:14"
									},
									"scope": 2508,
									"src": "2689:148:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2506,
										"nodeType": "Block",
										"src": "2992:104:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2482,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2473,
																		"src": "3015:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2480,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:14",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2487,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2475,
																		"src": "3034:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2485,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:14",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2494,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2473,
																			"src": "3063:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2492,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2491,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2500,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2475,
																			"src": "3086:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2498,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2497,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2479,
												"id": 2505,
												"nodeType": "Return",
												"src": "3002:87:14"
											}
										]
									},
									"documentation": {
										"id": 2471,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:14",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2507,
												"src": "2929:15:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2472,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2507,
												"src": "2946:15:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2474,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:14"
									},
									"returnParameters": {
										"id": 2479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2507,
												"src": "2986:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2477,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:14"
									},
									"scope": 2508,
									"src": "2914:182:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2509,
							"src": "251:2847:14",
							"usedErrors": [
								2273
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2520
						]
					},
					"id": 2521,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2510,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2511,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:15",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2520,
							"linearizedBaseContracts": [
								2520
							],
							"name": "IERC165",
							"nameLocation": "431:7:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2512,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:15",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2519,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2519,
												"src": "817:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2513,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:15"
									},
									"returnParameters": {
										"id": 2518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2519,
												"src": "860:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2516,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:15"
									},
									"scope": 2520,
									"src": "790:76:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2521,
							"src": "421:447:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3574
						]
					},
					"id": 3575,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2522,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2523,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:16",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3574,
							"linearizedBaseContracts": [
								3574
							],
							"name": "Math",
							"nameLocation": "211:4:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2524,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:16",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2526,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:16"
									},
									"src": "277:29:16"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2531,
									"members": [
										{
											"id": 2527,
											"name": "Floor",
											"nameLocation": "336:5:16",
											"nodeType": "EnumValue",
											"src": "336:5:16"
										},
										{
											"id": 2528,
											"name": "Ceil",
											"nameLocation": "379:4:16",
											"nodeType": "EnumValue",
											"src": "379:4:16"
										},
										{
											"id": 2529,
											"name": "Trunc",
											"nameLocation": "421:5:16",
											"nodeType": "EnumValue",
											"src": "421:5:16"
										},
										{
											"id": 2530,
											"name": "Expand",
											"nameLocation": "451:6:16",
											"nodeType": "EnumValue",
											"src": "451:6:16"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:16",
									"nodeType": "EnumDefinition",
									"src": "312:169:16"
								},
								{
									"body": {
										"id": 2562,
										"nodeType": "Block",
										"src": "661:140:16",
										"statements": [
											{
												"id": 2561,
												"nodeType": "UncheckedBlock",
												"src": "671:124:16",
												"statements": [
													{
														"assignments": [
															2544
														],
														"declarations": [
															{
																"constant": false,
																"id": 2544,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2561,
																"src": "695:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2543,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2548,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2545,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2534,
																"src": "707:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2546,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2536,
																"src": "711:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2549,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2544,
																"src": "730:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2550,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2534,
																"src": "734:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2556,
														"nodeType": "IfStatement",
														"src": "726:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2554,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2542,
															"id": 2555,
															"nodeType": "Return",
															"src": "737:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2558,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2544,
																	"src": "782:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2559,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2542,
														"id": 2560,
														"nodeType": "Return",
														"src": "768:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2532,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:16",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2534,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2563,
												"src": "601:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2536,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2563,
												"src": "612:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:16"
									},
									"returnParameters": {
										"id": 2542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2563,
												"src": "646:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2538,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2563,
												"src": "652:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:16"
									},
									"scope": 3574,
									"src": "585:216:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2590,
										"nodeType": "Block",
										"src": "984:113:16",
										"statements": [
											{
												"id": 2589,
												"nodeType": "UncheckedBlock",
												"src": "994:97:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2575,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2568,
																"src": "1022:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2576,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2566,
																"src": "1026:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2582,
														"nodeType": "IfStatement",
														"src": "1018:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2580,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2574,
															"id": 2581,
															"nodeType": "Return",
															"src": "1029:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2584,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2566,
																		"src": "1074:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2585,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2568,
																		"src": "1078:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2587,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2574,
														"id": 2588,
														"nodeType": "Return",
														"src": "1060:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2564,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:16",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2566,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "924:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2568,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "935:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:16"
									},
									"returnParameters": {
										"id": 2574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "969:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2570,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "975:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:16"
									},
									"scope": 3574,
									"src": "908:189:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2632,
										"nodeType": "Block",
										"src": "1283:417:16",
										"statements": [
											{
												"id": 2631,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2603,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2594,
																"src": "1551:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2610,
														"nodeType": "IfStatement",
														"src": "1547:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2608,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2602,
															"id": 2609,
															"nodeType": "Return",
															"src": "1559:16:16"
														}
													},
													{
														"assignments": [
															2612
														],
														"declarations": [
															{
																"constant": false,
																"id": 2612,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2631,
																"src": "1589:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2611,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2616,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2613,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2594,
																"src": "1601:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2614,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2596,
																"src": "1605:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2617,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2612,
																	"src": "1624:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2618,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2594,
																	"src": "1628:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2620,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2596,
																"src": "1633:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2626,
														"nodeType": "IfStatement",
														"src": "1620:33:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2624,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2602,
															"id": 2625,
															"nodeType": "Return",
															"src": "1636:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2628,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2612,
																	"src": "1681:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2629,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2602,
														"id": 2630,
														"nodeType": "Return",
														"src": "1667:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2592,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:16",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2633,
												"src": "1223:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2596,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2633,
												"src": "1234:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:16"
									},
									"returnParameters": {
										"id": 2602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2633,
												"src": "1268:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2598,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2633,
												"src": "1274:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:16"
									},
									"scope": 3574,
									"src": "1207:493:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2660,
										"nodeType": "Block",
										"src": "1887:114:16",
										"statements": [
											{
												"id": 2659,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2645,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2638,
																"src": "1925:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2652,
														"nodeType": "IfStatement",
														"src": "1921:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2650,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2644,
															"id": 2651,
															"nodeType": "Return",
															"src": "1933:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2654,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2636,
																		"src": "1978:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2655,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2638,
																		"src": "1982:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2657,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2644,
														"id": 2658,
														"nodeType": "Return",
														"src": "1964:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2634,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:16",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2636,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2661,
												"src": "1827:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2638,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2661,
												"src": "1838:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:16"
									},
									"returnParameters": {
										"id": 2644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2661,
												"src": "1872:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2640,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2661,
												"src": "1878:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:16"
									},
									"scope": 3574,
									"src": "1811:190:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2688,
										"nodeType": "Block",
										"src": "2198:114:16",
										"statements": [
											{
												"id": 2687,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2673,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2666,
																"src": "2236:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2680,
														"nodeType": "IfStatement",
														"src": "2232:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2678,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2672,
															"id": 2679,
															"nodeType": "Return",
															"src": "2244:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2682,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2664,
																		"src": "2289:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2683,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2666,
																		"src": "2293:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2685,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2672,
														"id": 2686,
														"nodeType": "Return",
														"src": "2275:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2662,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:16",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2664,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2689,
												"src": "2138:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2666,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2689,
												"src": "2149:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:16"
									},
									"returnParameters": {
										"id": 2672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2689,
												"src": "2183:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2668,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2689,
												"src": "2189:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:16"
									},
									"scope": 3574,
									"src": "2122:190:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2706,
										"nodeType": "Block",
										"src": "2449:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2701,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2699,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2692,
															"src": "2466:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2700,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2694,
															"src": "2470:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2703,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2694,
														"src": "2478:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:16",
													"trueExpression": {
														"id": 2702,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2692,
														"src": "2474:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2698,
												"id": 2705,
												"nodeType": "Return",
												"src": "2459:20:16"
											}
										]
									},
									"documentation": {
										"id": 2690,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:16",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2707,
												"src": "2395:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2707,
												"src": "2406:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:16"
									},
									"returnParameters": {
										"id": 2698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2707,
												"src": "2440:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:16"
									},
									"scope": 3574,
									"src": "2382:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2724,
										"nodeType": "Block",
										"src": "2624:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2717,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2710,
															"src": "2641:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2718,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2712,
															"src": "2645:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2721,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2712,
														"src": "2653:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:16",
													"trueExpression": {
														"id": 2720,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2710,
														"src": "2649:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2716,
												"id": 2723,
												"nodeType": "Return",
												"src": "2634:20:16"
											}
										]
									},
									"documentation": {
										"id": 2708,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:16",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2710,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2725,
												"src": "2570:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2712,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2725,
												"src": "2581:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:16"
									},
									"returnParameters": {
										"id": 2716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2725,
												"src": "2615:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:16"
									},
									"scope": 3574,
									"src": "2557:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2747,
										"nodeType": "Block",
										"src": "2845:82:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2735,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2728,
																	"src": "2900:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2736,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2730,
																	"src": "2904:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2738,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2744,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2739,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2728,
																		"src": "2910:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2740,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2730,
																		"src": "2914:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2742,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2734,
												"id": 2746,
												"nodeType": "Return",
												"src": "2892:28:16"
											}
										]
									},
									"documentation": {
										"id": 2726,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:16",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2728,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "2791:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2730,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "2802:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:16"
									},
									"returnParameters": {
										"id": 2734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "2836:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:16"
									},
									"scope": 3574,
									"src": "2774:153:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2781,
										"nodeType": "Block",
										"src": "3219:260:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2758,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2753,
														"src": "3233:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2759,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2766,
												"nodeType": "IfStatement",
												"src": "3229:127:16",
												"trueBody": {
													"id": 2765,
													"nodeType": "Block",
													"src": "3241:115:16",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2761,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2751,
																	"src": "3340:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2762,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2753,
																	"src": "3344:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2757,
															"id": 2764,
															"nodeType": "Return",
															"src": "3333:12:16"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2767,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2751,
															"src": "3444:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2768,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2771,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2751,
																			"src": "3458:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2774,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2775,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2753,
																"src": "3467:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:16",
													"trueExpression": {
														"hexValue": "30",
														"id": 2770,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2757,
												"id": 2780,
												"nodeType": "Return",
												"src": "3437:35:16"
											}
										]
									},
									"documentation": {
										"id": 2749,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:16",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2751,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "3165:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2753,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "3176:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:16"
									},
									"returnParameters": {
										"id": 2757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "3210:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:16"
									},
									"scope": 3574,
									"src": "3148:331:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2907,
										"nodeType": "Block",
										"src": "3901:4018:16",
										"statements": [
											{
												"id": 2906,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:16",
												"statements": [
													{
														"assignments": [
															2795
														],
														"declarations": [
															{
																"constant": false,
																"id": 2795,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2906,
																"src": "4232:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2794,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2799,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2796,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2785,
																"src": "4248:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2797,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2787,
																"src": "4252:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:16"
													},
													{
														"assignments": [
															2801
														],
														"declarations": [
															{
																"constant": false,
																"id": 2801,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2906,
																"src": "4312:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2800,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2802,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:16"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:16",
															"nodeType": "YulBlock",
															"src": "4392:122:16",
															"statements": [
																{
																	"nativeSrc": "4410:30:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:16",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:16"
																				},
																				"nativeSrc": "4433:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:16"
																		},
																		"nativeSrc": "4420:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:16"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:16",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:16",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:16"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:16"
																				},
																				"nativeSrc": "4470:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:16"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:16"
																				},
																				"nativeSrc": "4486:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:16"
																		},
																		"nativeSrc": "4466:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2795,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2795,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2801,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2785,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2787,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:16",
																"valueSize": 1
															}
														],
														"id": 2803,
														"nodeType": "InlineAssembly",
														"src": "4383:131:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2804,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2801,
																"src": "4595:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2812,
														"nodeType": "IfStatement",
														"src": "4591:368:16",
														"trueBody": {
															"id": 2811,
															"nodeType": "Block",
															"src": "4607:352:16",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2807,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2795,
																			"src": "4925:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2808,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2789,
																			"src": "4933:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2793,
																	"id": 2810,
																	"nodeType": "Return",
																	"src": "4918:26:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2813,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2789,
																"src": "5065:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2814,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2801,
																"src": "5080:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2820,
														"nodeType": "IfStatement",
														"src": "5061:88:16",
														"trueBody": {
															"id": 2819,
															"nodeType": "Block",
															"src": "5087:62:16",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2816,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2526,
																			"src": "5112:20:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2818,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:16"
																}
															]
														}
													},
													{
														"assignments": [
															2822
														],
														"declarations": [
															{
																"constant": false,
																"id": 2822,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:16",
																"nodeType": "VariableDeclaration",
																"scope": 2906,
																"src": "5404:17:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2821,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2823,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:16"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:16",
															"nodeType": "YulBlock",
															"src": "5444:291:16",
															"statements": [
																{
																	"nativeSrc": "5513:38:16",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:16"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:16"
																		},
																		"nativeSrc": "5526:25:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:16"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:16",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:16"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:16",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:16"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:16"
																				},
																				"nativeSrc": "5653:20:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:16"
																		},
																		"nativeSrc": "5642:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:16",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:16"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:16"
																		},
																		"nativeSrc": "5700:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2789,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2795,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2795,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2795,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2801,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2801,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2822,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2822,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2822,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2785,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2787,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:16",
																"valueSize": 1
															}
														],
														"id": 2824,
														"nodeType": "InlineAssembly",
														"src": "5435:300:16"
													},
													{
														"assignments": [
															2826
														],
														"declarations": [
															{
																"constant": false,
																"id": 2826,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:16",
																"nodeType": "VariableDeclaration",
																"scope": 2906,
																"src": "5939:12:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2825,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2833,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2827,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2789,
																"src": "5954:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2829,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2789,
																			"src": "5973:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2831,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:16"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:16",
															"nodeType": "YulBlock",
															"src": "6008:362:16",
															"statements": [
																{
																	"nativeSrc": "6073:37:16",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:16"
																		},
																		"nativeSrc": "6088:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:16"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:16",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:16",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:16"
																		},
																		"nativeSrc": "6186:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:16",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:16",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:16",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:16",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:16"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:16"
																						},
																						"nativeSrc": "6333:12:16",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:16"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:16"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:16"
																				},
																				"nativeSrc": "6329:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:16",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:16"
																		},
																		"nativeSrc": "6325:31:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:16"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:16",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2789,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2789,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2795,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2795,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2826,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2826,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2826,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2826,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2826,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:16",
																"valueSize": 1
															}
														],
														"id": 2834,
														"nodeType": "InlineAssembly",
														"src": "5999:371:16"
													},
													{
														"expression": {
															"id": 2839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2835,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2795,
																"src": "6436:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2836,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2801,
																	"src": "6445:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2837,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2826,
																	"src": "6453:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2840,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:16"
													},
													{
														"assignments": [
															2842
														],
														"declarations": [
															{
																"constant": false,
																"id": 2842,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:16",
																"nodeType": "VariableDeclaration",
																"scope": 2906,
																"src": "6775:15:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2841,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2849,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2844,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2789,
																			"src": "6798:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2846,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:16"
													},
													{
														"expression": {
															"id": 2856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2850,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2842,
																"src": "7031:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2852,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2789,
																		"src": "7046:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2853,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2842,
																		"src": "7060:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2857,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:16"
													},
													{
														"expression": {
															"id": 2864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2858,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2842,
																"src": "7100:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2860,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2789,
																		"src": "7115:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2861,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2842,
																		"src": "7129:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2865,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:16"
													},
													{
														"expression": {
															"id": 2872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2866,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2842,
																"src": "7170:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2868,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2789,
																		"src": "7185:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2869,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2842,
																		"src": "7199:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2873,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:16"
													},
													{
														"expression": {
															"id": 2880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2874,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2842,
																"src": "7240:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2876,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2789,
																		"src": "7255:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2877,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2842,
																		"src": "7269:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2881,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:16"
													},
													{
														"expression": {
															"id": 2888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2882,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2842,
																"src": "7310:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2884,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2789,
																		"src": "7325:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2885,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2842,
																		"src": "7339:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2889,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:16"
													},
													{
														"expression": {
															"id": 2896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2890,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2842,
																"src": "7381:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2892,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2789,
																		"src": "7396:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2893,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2842,
																		"src": "7410:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2897,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:16"
													},
													{
														"expression": {
															"id": 2902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2898,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2792,
																"src": "7851:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2899,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2795,
																	"src": "7860:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2900,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2842,
																	"src": "7868:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2903,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:16"
													},
													{
														"expression": {
															"id": 2904,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2792,
															"src": "7896:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2793,
														"id": 2905,
														"nodeType": "Return",
														"src": "7889:13:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2783,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:16",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2785,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2908,
												"src": "3819:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2787,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2908,
												"src": "3830:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2789,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2908,
												"src": "3841:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:16"
									},
									"returnParameters": {
										"id": 2793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2792,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2908,
												"src": "3885:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:16"
									},
									"scope": 3574,
									"src": "3803:4116:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2950,
										"nodeType": "Block",
										"src": "8161:192:16",
										"statements": [
											{
												"assignments": [
													2924
												],
												"declarations": [
													{
														"constant": false,
														"id": 2924,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2950,
														"src": "8171:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2923,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2930,
												"initialValue": {
													"arguments": [
														{
															"id": 2926,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2911,
															"src": "8195:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2927,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2913,
															"src": "8198:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2928,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2915,
															"src": "8201:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2925,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2908,
															2951
														],
														"referencedDeclaration": 2908,
														"src": "8188:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2932,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2918,
																"src": "8244:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2531",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2531",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2931,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3573,
															"src": "8227:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2531_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2933,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2940,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2935,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2911,
																	"src": "8264:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2936,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2913,
																	"src": "8267:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2937,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2915,
																	"src": "8270:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2934,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2947,
												"nodeType": "IfStatement",
												"src": "8223:101:16",
												"trueBody": {
													"id": 2946,
													"nodeType": "Block",
													"src": "8288:36:16",
													"statements": [
														{
															"expression": {
																"id": 2944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2942,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2924,
																	"src": "8302:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2945,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:16"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2948,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2924,
													"src": "8340:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2922,
												"id": 2949,
												"nodeType": "Return",
												"src": "8333:13:16"
											}
										]
									},
									"documentation": {
										"id": 2909,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:16",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2911,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2951,
												"src": "8067:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2913,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2951,
												"src": "8078:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2915,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2951,
												"src": "8089:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2918,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2951,
												"src": "8110:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2531",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2917,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2916,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2531,
														"src": "8110:8:16"
													},
													"referencedDeclaration": 2531,
													"src": "8110:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2531",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:16"
									},
									"returnParameters": {
										"id": 2922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2951,
												"src": "8152:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:16"
									},
									"scope": 3574,
									"src": "8051:302:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3062,
										"nodeType": "Block",
										"src": "8644:1585:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2959,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2954,
														"src": "8658:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2960,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2965,
												"nodeType": "IfStatement",
												"src": "8654:45:16",
												"trueBody": {
													"id": 2964,
													"nodeType": "Block",
													"src": "8666:33:16",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2962,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2958,
															"id": 2963,
															"nodeType": "Return",
															"src": "8680:8:16"
														}
													]
												}
											},
											{
												"assignments": [
													2967
												],
												"declarations": [
													{
														"constant": false,
														"id": 2967,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3062,
														"src": "9378:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2966,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2976,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2968,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2970,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2954,
																			"src": "9406:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2969,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			3230,
																			3265
																		],
																		"referencedDeclaration": 3230,
																		"src": "9401:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2974,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:16"
											},
											{
												"id": 3061,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:16",
												"statements": [
													{
														"expression": {
															"id": 2986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2977,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2967,
																"src": "9839:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2982,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2978,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2967,
																				"src": "9849:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2981,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2979,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2954,
																					"src": "9858:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2980,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2967,
																					"src": "9862:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2983,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2987,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:16"
													},
													{
														"expression": {
															"id": 2997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2988,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2967,
																"src": "9888:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2989,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2967,
																				"src": "9898:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2992,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2990,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2954,
																					"src": "9907:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2991,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2967,
																					"src": "9911:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2994,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2998,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:16"
													},
													{
														"expression": {
															"id": 3008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2999,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2967,
																"src": "9937:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3000,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2967,
																				"src": "9947:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3003,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3001,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2954,
																					"src": "9956:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3002,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2967,
																					"src": "9960:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3005,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3009,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:16"
													},
													{
														"expression": {
															"id": 3019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3010,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2967,
																"src": "9986:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3011,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2967,
																				"src": "9996:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3014,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3012,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2954,
																					"src": "10005:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3013,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2967,
																					"src": "10009:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3016,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3020,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:16"
													},
													{
														"expression": {
															"id": 3030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3021,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2967,
																"src": "10035:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3022,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2967,
																				"src": "10045:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3023,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2954,
																					"src": "10054:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3024,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2967,
																					"src": "10058:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3027,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3031,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:16"
													},
													{
														"expression": {
															"id": 3041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3032,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2967,
																"src": "10084:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3033,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2967,
																				"src": "10094:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3036,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3034,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2954,
																					"src": "10103:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3035,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2967,
																					"src": "10107:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3038,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3042,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:16"
													},
													{
														"expression": {
															"id": 3052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3043,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2967,
																"src": "10133:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3044,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2967,
																				"src": "10143:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3047,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3045,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2954,
																					"src": "10152:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3046,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2967,
																					"src": "10156:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3049,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3053,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:16"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 3055,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2967,
																	"src": "10193:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3056,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2954,
																		"src": "10201:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 3057,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2967,
																		"src": "10205:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3054,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2725,
																"src": "10189:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2958,
														"id": 3060,
														"nodeType": "Return",
														"src": "10182:30:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2952,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:16",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 3063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2954,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3063,
												"src": "8601:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:16"
									},
									"returnParameters": {
										"id": 2958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2957,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3063,
												"src": "8635:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:16"
									},
									"scope": 3574,
									"src": "8587:1642:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3097,
										"nodeType": "Block",
										"src": "10405:164:16",
										"statements": [
											{
												"id": 3096,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:16",
												"statements": [
													{
														"assignments": [
															3075
														],
														"declarations": [
															{
																"constant": false,
																"id": 3075,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3096,
																"src": "10439:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3074,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3079,
														"initialValue": {
															"arguments": [
																{
																	"id": 3077,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3066,
																	"src": "10461:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3076,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3063,
																	3098
																],
																"referencedDeclaration": 3063,
																"src": "10456:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3080,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3075,
																"src": "10484:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3082,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3069,
																						"src": "10511:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2531",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2531",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3081,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3573,
																					"src": "10494:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2531_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3083,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3088,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3086,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3084,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3075,
																						"src": "10524:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 3085,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3075,
																						"src": "10533:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3087,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3066,
																					"src": "10542:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3090,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3093,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3073,
														"id": 3095,
														"nodeType": "Return",
														"src": "10477:75:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3064,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:16",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 3098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3066,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3098,
												"src": "10343:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3069,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3098,
												"src": "10354:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2531",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3068,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3067,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2531,
														"src": "10354:8:16"
													},
													"referencedDeclaration": 2531,
													"src": "10354:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2531",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:16"
									},
									"returnParameters": {
										"id": 3073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3098,
												"src": "10396:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:16"
									},
									"scope": 3574,
									"src": "10329:240:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3229,
										"nodeType": "Block",
										"src": "10760:922:16",
										"statements": [
											{
												"assignments": [
													3107
												],
												"declarations": [
													{
														"constant": false,
														"id": 3107,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3229,
														"src": "10770:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3106,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3109,
												"initialValue": {
													"hexValue": "30",
													"id": 3108,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:16"
											},
											{
												"id": 3226,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3110,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3101,
																	"src": "10826:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3124,
														"nodeType": "IfStatement",
														"src": "10822:99:16",
														"trueBody": {
															"id": 3123,
															"nodeType": "Block",
															"src": "10844:77:16",
															"statements": [
																{
																	"expression": {
																		"id": 3117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3115,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3101,
																			"src": "10862:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3118,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:16"
																},
																{
																	"expression": {
																		"id": 3121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3119,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3107,
																			"src": "10893:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3122,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3125,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3101,
																	"src": "10938:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3139,
														"nodeType": "IfStatement",
														"src": "10934:96:16",
														"trueBody": {
															"id": 3138,
															"nodeType": "Block",
															"src": "10955:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 3132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3130,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3101,
																			"src": "10973:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3133,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:16"
																},
																{
																	"expression": {
																		"id": 3136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3134,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3107,
																			"src": "11003:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3137,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3140,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3101,
																	"src": "11047:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3154,
														"nodeType": "IfStatement",
														"src": "11043:96:16",
														"trueBody": {
															"id": 3153,
															"nodeType": "Block",
															"src": "11064:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 3147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3145,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3101,
																			"src": "11082:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3148,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:16"
																},
																{
																	"expression": {
																		"id": 3151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3149,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3107,
																			"src": "11112:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3152,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3155,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3101,
																	"src": "11156:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3169,
														"nodeType": "IfStatement",
														"src": "11152:96:16",
														"trueBody": {
															"id": 3168,
															"nodeType": "Block",
															"src": "11173:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 3162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3160,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3101,
																			"src": "11191:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3163,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:16"
																},
																{
																	"expression": {
																		"id": 3166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3164,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3107,
																			"src": "11221:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3167,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3170,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3101,
																	"src": "11265:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3184,
														"nodeType": "IfStatement",
														"src": "11261:93:16",
														"trueBody": {
															"id": 3183,
															"nodeType": "Block",
															"src": "11281:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 3177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3175,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3101,
																			"src": "11299:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3178,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:16"
																},
																{
																	"expression": {
																		"id": 3181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3179,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3107,
																			"src": "11328:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3182,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3185,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3101,
																	"src": "11371:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3199,
														"nodeType": "IfStatement",
														"src": "11367:93:16",
														"trueBody": {
															"id": 3198,
															"nodeType": "Block",
															"src": "11387:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 3192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3190,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3101,
																			"src": "11405:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3193,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:16"
																},
																{
																	"expression": {
																		"id": 3196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3194,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3107,
																			"src": "11434:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3197,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3200,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3101,
																	"src": "11477:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3214,
														"nodeType": "IfStatement",
														"src": "11473:93:16",
														"trueBody": {
															"id": 3213,
															"nodeType": "Block",
															"src": "11493:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 3207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3205,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3101,
																			"src": "11511:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3208,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:16"
																},
																{
																	"expression": {
																		"id": 3211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3209,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3107,
																			"src": "11540:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3212,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3215,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3101,
																	"src": "11583:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3225,
														"nodeType": "IfStatement",
														"src": "11579:64:16",
														"trueBody": {
															"id": 3224,
															"nodeType": "Block",
															"src": "11599:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 3222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3220,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3107,
																			"src": "11617:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3223,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3227,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3107,
													"src": "11669:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3105,
												"id": 3228,
												"nodeType": "Return",
												"src": "11662:13:16"
											}
										]
									},
									"documentation": {
										"id": 3099,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:16",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3101,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3230,
												"src": "10713:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:16"
									},
									"returnParameters": {
										"id": 3105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3230,
												"src": "10751:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:16"
									},
									"scope": 3574,
									"src": "10699:983:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3264,
										"nodeType": "Block",
										"src": "11915:168:16",
										"statements": [
											{
												"id": 3263,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:16",
												"statements": [
													{
														"assignments": [
															3242
														],
														"declarations": [
															{
																"constant": false,
																"id": 3242,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3263,
																"src": "11949:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3241,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3246,
														"initialValue": {
															"arguments": [
																{
																	"id": 3244,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3233,
																	"src": "11971:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3243,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3230,
																	3265
																],
																"referencedDeclaration": 3230,
																"src": "11966:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3247,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3242,
																"src": "11998:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3256,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3249,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3236,
																						"src": "12025:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2531",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2531",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3248,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3573,
																					"src": "12008:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2531_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3250,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3255,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3253,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3251,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 3252,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3242,
																						"src": "12043:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3254,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3233,
																					"src": "12052:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3260,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3240,
														"id": 3262,
														"nodeType": "Return",
														"src": "11991:75:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3231,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:16",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3233,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3265,
												"src": "11849:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3236,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3265,
												"src": "11864:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2531",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3235,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3234,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2531,
														"src": "11864:8:16"
													},
													"referencedDeclaration": 2531,
													"src": "11864:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2531",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:16"
									},
									"returnParameters": {
										"id": 3240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3265,
												"src": "11906:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:16"
									},
									"scope": 3574,
									"src": "11835:248:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3393,
										"nodeType": "Block",
										"src": "12276:854:16",
										"statements": [
											{
												"assignments": [
													3274
												],
												"declarations": [
													{
														"constant": false,
														"id": 3274,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3393,
														"src": "12286:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3273,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3276,
												"initialValue": {
													"hexValue": "30",
													"id": 3275,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:16"
											},
											{
												"id": 3390,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3277,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3268,
																"src": "12342:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 3280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3293,
														"nodeType": "IfStatement",
														"src": "12338:103:16",
														"trueBody": {
															"id": 3292,
															"nodeType": "Block",
															"src": "12361:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 3286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3282,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3268,
																			"src": "12379:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 3285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3283,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3284,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3287,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:16"
																},
																{
																	"expression": {
																		"id": 3290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3288,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3274,
																			"src": "12414:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3291,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3294,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3268,
																"src": "12458:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 3297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3310,
														"nodeType": "IfStatement",
														"src": "12454:103:16",
														"trueBody": {
															"id": 3309,
															"nodeType": "Block",
															"src": "12477:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 3303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3299,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3268,
																			"src": "12495:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 3302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3300,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3301,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3304,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:16"
																},
																{
																	"expression": {
																		"id": 3307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3305,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3274,
																			"src": "12530:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3308,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3311,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3268,
																"src": "12574:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 3314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3327,
														"nodeType": "IfStatement",
														"src": "12570:103:16",
														"trueBody": {
															"id": 3326,
															"nodeType": "Block",
															"src": "12593:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 3320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3316,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3268,
																			"src": "12611:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3317,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3318,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3321,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:16"
																},
																{
																	"expression": {
																		"id": 3324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3322,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3274,
																			"src": "12646:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3325,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3328,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3268,
																"src": "12690:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3344,
														"nodeType": "IfStatement",
														"src": "12686:100:16",
														"trueBody": {
															"id": 3343,
															"nodeType": "Block",
															"src": "12708:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 3337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3333,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3268,
																			"src": "12726:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3334,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3335,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3338,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:16"
																},
																{
																	"expression": {
																		"id": 3341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3339,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3274,
																			"src": "12760:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3342,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3345,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3268,
																"src": "12803:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3361,
														"nodeType": "IfStatement",
														"src": "12799:100:16",
														"trueBody": {
															"id": 3360,
															"nodeType": "Block",
															"src": "12821:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 3354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3350,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3268,
																			"src": "12839:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3351,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3352,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3355,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:16"
																},
																{
																	"expression": {
																		"id": 3358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3356,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3274,
																			"src": "12873:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3359,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3362,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3268,
																"src": "12916:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3378,
														"nodeType": "IfStatement",
														"src": "12912:100:16",
														"trueBody": {
															"id": 3377,
															"nodeType": "Block",
															"src": "12934:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 3371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3367,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3268,
																			"src": "12952:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3369,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3372,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:16"
																},
																{
																	"expression": {
																		"id": 3375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3373,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3274,
																			"src": "12986:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3376,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3379,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3268,
																"src": "13029:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3389,
														"nodeType": "IfStatement",
														"src": "13025:66:16",
														"trueBody": {
															"id": 3388,
															"nodeType": "Block",
															"src": "13047:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 3386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3384,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3274,
																			"src": "13065:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3387,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3391,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3274,
													"src": "13117:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3272,
												"id": 3392,
												"nodeType": "Return",
												"src": "13110:13:16"
											}
										]
									},
									"documentation": {
										"id": 3266,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:16",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3268,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3394,
												"src": "12229:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:16"
									},
									"returnParameters": {
										"id": 3272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3394,
												"src": "12267:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:16"
									},
									"scope": 3574,
									"src": "12214:916:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3428,
										"nodeType": "Block",
										"src": "13365:170:16",
										"statements": [
											{
												"id": 3427,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:16",
												"statements": [
													{
														"assignments": [
															3406
														],
														"declarations": [
															{
																"constant": false,
																"id": 3406,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3427,
																"src": "13399:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3405,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3410,
														"initialValue": {
															"arguments": [
																{
																	"id": 3408,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3397,
																	"src": "13422:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3407,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3394,
																	3429
																],
																"referencedDeclaration": 3394,
																"src": "13416:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3411,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3406,
																"src": "13449:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3413,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3400,
																						"src": "13476:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2531",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2531",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3412,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3573,
																					"src": "13459:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2531_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3414,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3417,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3415,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3416,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3406,
																						"src": "13495:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3418,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3397,
																					"src": "13504:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3424,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3404,
														"id": 3426,
														"nodeType": "Return",
														"src": "13442:76:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3395,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:16",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3397,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3429,
												"src": "13299:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3400,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3429,
												"src": "13314:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2531",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3399,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3398,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2531,
														"src": "13314:8:16"
													},
													"referencedDeclaration": 2531,
													"src": "13314:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2531",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:16"
									},
									"returnParameters": {
										"id": 3404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3429,
												"src": "13356:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:16"
									},
									"scope": 3574,
									"src": "13284:251:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3515,
										"nodeType": "Block",
										"src": "13855:600:16",
										"statements": [
											{
												"assignments": [
													3438
												],
												"declarations": [
													{
														"constant": false,
														"id": 3438,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3515,
														"src": "13865:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3437,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3440,
												"initialValue": {
													"hexValue": "30",
													"id": 3439,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:16"
											},
											{
												"id": 3512,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3441,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3432,
																	"src": "13921:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3444,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3455,
														"nodeType": "IfStatement",
														"src": "13917:98:16",
														"trueBody": {
															"id": 3454,
															"nodeType": "Block",
															"src": "13939:76:16",
															"statements": [
																{
																	"expression": {
																		"id": 3448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3446,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3432,
																			"src": "13957:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3449,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:16"
																},
																{
																	"expression": {
																		"id": 3452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3450,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3438,
																			"src": "13988:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3453,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3456,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3432,
																	"src": "14032:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3470,
														"nodeType": "IfStatement",
														"src": "14028:95:16",
														"trueBody": {
															"id": 3469,
															"nodeType": "Block",
															"src": "14049:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3461,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3432,
																			"src": "14067:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3464,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:16"
																},
																{
																	"expression": {
																		"id": 3467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3465,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3438,
																			"src": "14097:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3468,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3471,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3432,
																	"src": "14140:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3485,
														"nodeType": "IfStatement",
														"src": "14136:95:16",
														"trueBody": {
															"id": 3484,
															"nodeType": "Block",
															"src": "14157:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3476,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3432,
																			"src": "14175:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3479,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:16"
																},
																{
																	"expression": {
																		"id": 3482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3480,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3438,
																			"src": "14205:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3483,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3486,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3432,
																	"src": "14248:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3500,
														"nodeType": "IfStatement",
														"src": "14244:95:16",
														"trueBody": {
															"id": 3499,
															"nodeType": "Block",
															"src": "14265:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3491,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3432,
																			"src": "14283:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3494,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:16"
																},
																{
																	"expression": {
																		"id": 3497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3495,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3438,
																			"src": "14313:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3498,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3501,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3432,
																	"src": "14356:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3511,
														"nodeType": "IfStatement",
														"src": "14352:64:16",
														"trueBody": {
															"id": 3510,
															"nodeType": "Block",
															"src": "14372:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 3508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3506,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3438,
																			"src": "14390:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3509,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3513,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3438,
													"src": "14442:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3436,
												"id": 3514,
												"nodeType": "Return",
												"src": "14435:13:16"
											}
										]
									},
									"documentation": {
										"id": 3430,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:16",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3432,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3516,
												"src": "13808:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:16"
									},
									"returnParameters": {
										"id": 3436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3516,
												"src": "13846:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:16"
									},
									"scope": 3574,
									"src": "13792:663:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3553,
										"nodeType": "Block",
										"src": "14692:177:16",
										"statements": [
											{
												"id": 3552,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:16",
												"statements": [
													{
														"assignments": [
															3528
														],
														"declarations": [
															{
																"constant": false,
																"id": 3528,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3552,
																"src": "14726:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3527,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3532,
														"initialValue": {
															"arguments": [
																{
																	"id": 3530,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3519,
																	"src": "14750:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3529,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3516,
																	3554
																],
																"referencedDeclaration": 3516,
																"src": "14743:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3533,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3528,
																"src": "14777:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3535,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3522,
																						"src": "14804:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2531",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2531",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3534,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3573,
																					"src": "14787:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2531_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3536,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3544,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3542,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3537,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3540,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3538,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3528,
																									"src": "14823:6:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3539,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3541,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3543,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3519,
																					"src": "14838:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3549,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3526,
														"id": 3551,
														"nodeType": "Return",
														"src": "14770:82:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3517,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:16",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3519,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3554,
												"src": "14626:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3522,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3554,
												"src": "14641:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2531",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3521,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3520,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2531,
														"src": "14641:8:16"
													},
													"referencedDeclaration": 2531,
													"src": "14641:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2531",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:16"
									},
									"returnParameters": {
										"id": 3526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3554,
												"src": "14683:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:16"
									},
									"scope": 3574,
									"src": "14610:259:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3572,
										"nodeType": "Block",
										"src": "15067:48:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3565,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3558,
																	"src": "15090:8:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2531",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2531",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3563,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3562,
												"id": 3571,
												"nodeType": "Return",
												"src": "15077:31:16"
											}
										]
									},
									"documentation": {
										"id": 3555,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:16",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3558,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3573,
												"src": "15019:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2531",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3557,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3556,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2531,
														"src": "15019:8:16"
													},
													"referencedDeclaration": 2531,
													"src": "15019:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2531",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:16"
									},
									"returnParameters": {
										"id": 3562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3573,
												"src": "15061:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3560,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:16"
									},
									"scope": 3574,
									"src": "14993:122:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3575,
							"src": "203:14914:16",
							"usedErrors": [
								2526
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3679
						]
					},
					"id": 3680,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3576,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3577,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:17",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3679,
							"linearizedBaseContracts": [
								3679
							],
							"name": "SignedMath",
							"nameLocation": "224:10:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3594,
										"nodeType": "Block",
										"src": "376:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3587,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3580,
															"src": "393:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3588,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3582,
															"src": "397:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3591,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3582,
														"src": "405:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:17",
													"trueExpression": {
														"id": 3590,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3580,
														"src": "401:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3586,
												"id": 3593,
												"nodeType": "Return",
												"src": "386:20:17"
											}
										]
									},
									"documentation": {
										"id": 3578,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:17",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3580,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3595,
												"src": "325:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3579,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3582,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3595,
												"src": "335:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3581,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:17"
									},
									"returnParameters": {
										"id": 3586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3595,
												"src": "368:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3584,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:17"
									},
									"scope": 3679,
									"src": "312:101:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3612,
										"nodeType": "Block",
										"src": "555:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3605,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3598,
															"src": "572:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3606,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3600,
															"src": "576:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3609,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3600,
														"src": "584:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:17",
													"trueExpression": {
														"id": 3608,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3598,
														"src": "580:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3604,
												"id": 3611,
												"nodeType": "Return",
												"src": "565:20:17"
											}
										]
									},
									"documentation": {
										"id": 3596,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:17",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3598,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3613,
												"src": "504:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3597,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3600,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3613,
												"src": "514:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3599,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:17"
									},
									"returnParameters": {
										"id": 3604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3613,
												"src": "547:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3602,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:17"
									},
									"scope": 3679,
									"src": "491:101:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3656,
										"nodeType": "Block",
										"src": "797:162:17",
										"statements": [
											{
												"assignments": [
													3624
												],
												"declarations": [
													{
														"constant": false,
														"id": 3624,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:17",
														"nodeType": "VariableDeclaration",
														"scope": 3656,
														"src": "859:8:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3623,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3637,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3625,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3616,
																	"src": "871:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3626,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3618,
																	"src": "875:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3628,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3629,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3616,
																				"src": "882:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3630,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3618,
																				"src": "886:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3632,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3635,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:17"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3638,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3624,
														"src": "911:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3643,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3624,
																						"src": "931:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3642,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3641,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:17",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3645,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3639,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3648,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3616,
																				"src": "945:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3649,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3618,
																				"src": "949:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3651,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3653,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3622,
												"id": 3655,
												"nodeType": "Return",
												"src": "904:48:17"
											}
										]
									},
									"documentation": {
										"id": 3614,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:17",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3616,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3657,
												"src": "746:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3615,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3618,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3657,
												"src": "756:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3617,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:17"
									},
									"returnParameters": {
										"id": 3622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3657,
												"src": "789:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3620,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:17"
									},
									"scope": 3679,
									"src": "729:230:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3677,
										"nodeType": "Block",
										"src": "1103:158:17",
										"statements": [
											{
												"id": 3676,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:17",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3667,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3660,
																			"src": "1228:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:17",
																		"subExpression": {
																			"id": 3671,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3660,
																			"src": "1242:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:17",
																	"trueExpression": {
																		"id": 3670,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3660,
																		"src": "1237:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3666,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3665,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 3674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3664,
														"id": 3675,
														"nodeType": "Return",
														"src": "1213:31:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3658,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:17",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3660,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3678,
												"src": "1061:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3659,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:17"
									},
									"returnParameters": {
										"id": 3664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3678,
												"src": "1094:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:17"
									},
									"scope": 3679,
									"src": "1048:213:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3680,
							"src": "216:1047:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:17"
				},
				"id": 17
			},
			"contracts/MQT.sol": {
				"ast": {
					"absolutePath": "contracts/MQT.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1881
						],
						"ERC721URIStorageUpgradeable": [
							1835
						],
						"ERC721Upgradeable": [
							1665
						],
						"IERC165": [
							2520
						],
						"IERC4906": [
							1949
						],
						"Initializable": [
							448
						],
						"MQTOpenCollection": [
							3866
						],
						"OwnableUpgradeable": [
							194
						],
						"ReentrancyGuardUpgradeable": [
							533
						],
						"Strings": [
							2508
						]
					},
					"id": 3867,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3681,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:18"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol",
							"id": 3682,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3867,
							"sourceUnit": 1836,
							"src": "57:101:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 3683,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3867,
							"sourceUnit": 195,
							"src": "159:75:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"id": 3684,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3867,
							"sourceUnit": 534,
							"src": "235:85:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 3685,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3867,
							"sourceUnit": 449,
							"src": "321:75:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3686,
										"name": "Initializable",
										"nameLocations": [
											"428:13:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "428:13:18"
									},
									"id": 3687,
									"nodeType": "InheritanceSpecifier",
									"src": "428:13:18"
								},
								{
									"baseName": {
										"id": 3688,
										"name": "ERC721URIStorageUpgradeable",
										"nameLocations": [
											"443:27:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1835,
										"src": "443:27:18"
									},
									"id": 3689,
									"nodeType": "InheritanceSpecifier",
									"src": "443:27:18"
								},
								{
									"baseName": {
										"id": 3690,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"472:18:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "472:18:18"
									},
									"id": 3691,
									"nodeType": "InheritanceSpecifier",
									"src": "472:18:18"
								},
								{
									"baseName": {
										"id": 3692,
										"name": "ReentrancyGuardUpgradeable",
										"nameLocations": [
											"492:26:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 533,
										"src": "492:26:18"
									},
									"id": 3693,
									"nodeType": "InheritanceSpecifier",
									"src": "492:26:18"
								}
							],
							"canonicalName": "MQTOpenCollection",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3866,
							"linearizedBaseContracts": [
								3866,
								533,
								194,
								1835,
								1665,
								2043,
								2253,
								1949,
								2207,
								1921,
								2520,
								1881,
								448
							],
							"name": "MQTOpenCollection",
							"nameLocation": "407:17:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3695,
									"mutability": "mutable",
									"name": "_tokenIds",
									"nameLocation": "541:9:18",
									"nodeType": "VariableDeclaration",
									"scope": 3866,
									"src": "525:25:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3694,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "525:7:18",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "a2682c1d",
									"id": 3697,
									"mutability": "mutable",
									"name": "mintPaymentReceiver",
									"nameLocation": "579:19:18",
									"nodeType": "VariableDeclaration",
									"scope": 3866,
									"src": "556:42:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 3696,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "556:15:18",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6817c76c",
									"id": 3699,
									"mutability": "mutable",
									"name": "mintPrice",
									"nameLocation": "619:9:18",
									"nodeType": "VariableDeclaration",
									"scope": 3866,
									"src": "604:24:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3698,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "604:7:18",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "463ec2a62c46678a81e23cde640446ca4b512f102bb3309cf5a3e2a4ae831464",
									"id": 3709,
									"name": "TokenCreated",
									"nameLocation": "641:12:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3701,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "670:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3709,
												"src": "654:23:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3703,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "695:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3709,
												"src": "679:21:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "679:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3705,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenURI",
												"nameLocation": "709:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3709,
												"src": "702:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3704,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "702:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3707,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "727:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3709,
												"src": "719:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "719:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:80:18"
									},
									"src": "635:99:18"
								},
								{
									"body": {
										"id": 3742,
										"nodeType": "Block",
										"src": "841:249:18",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3718,
														"name": "__ERC721URIStorage_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1716,
														"src": "851:23:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "851:25:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3720,
												"nodeType": "ExpressionStatement",
												"src": "851:25:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3722,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "901:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "905:6:18",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "901:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3721,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "886:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "886:26:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3725,
												"nodeType": "ExpressionStatement",
												"src": "886:26:18"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3726,
														"name": "__ReentrancyGuard_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "922:22:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "922:24:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3728,
												"nodeType": "ExpressionStatement",
												"src": "922:24:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "4d6574617165657572546f6b656e",
															"id": 3730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "971:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3834e6c50c0431da8b2ef8ec9eef3742cd40d10d63c37a627868fc4149238e77",
																"typeString": "literal_string \"MetaqeeurToken\""
															},
															"value": "MetaqeeurToken"
														},
														{
															"hexValue": "4d5154",
															"id": 3731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "989:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f7667b830154877377062a54010ecc3ee32929a6c09a2ec8704e490c01aa40d1",
																"typeString": "literal_string \"MQT\""
															},
															"value": "MQT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_3834e6c50c0431da8b2ef8ec9eef3742cd40d10d63c37a627868fc4149238e77",
																"typeString": "literal_string \"MetaqeeurToken\""
															},
															{
																"typeIdentifier": "t_stringliteral_f7667b830154877377062a54010ecc3ee32929a6c09a2ec8704e490c01aa40d1",
																"typeString": "literal_string \"MQT\""
															}
														],
														"id": 3729,
														"name": "__ERC721_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 620,
														"src": "957:13:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 3732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "957:38:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3733,
												"nodeType": "ExpressionStatement",
												"src": "957:38:18"
											},
											{
												"expression": {
													"id": 3736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3734,
														"name": "mintPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3699,
														"src": "1005:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3735,
														"name": "_mintPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3711,
														"src": "1017:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1005:22:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3737,
												"nodeType": "ExpressionStatement",
												"src": "1005:22:18"
											},
											{
												"expression": {
													"id": 3740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3738,
														"name": "mintPaymentReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3697,
														"src": "1037:19:18",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3739,
														"name": "_mintPaymentReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3713,
														"src": "1059:20:18",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1037:42:18",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 3741,
												"nodeType": "ExpressionStatement",
												"src": "1037:42:18"
											}
										]
									},
									"functionSelector": "da35a26f",
									"id": 3743,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3716,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3715,
												"name": "initializer",
												"nameLocations": [
													"829:11:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "829:11:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "829:11:18"
										}
									],
									"name": "initialize",
									"nameLocation": "753:10:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3711,
												"mutability": "mutable",
												"name": "_mintPrice",
												"nameLocation": "772:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 3743,
												"src": "764:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "764:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3713,
												"mutability": "mutable",
												"name": "_mintPaymentReceiver",
												"nameLocation": "800:20:18",
												"nodeType": "VariableDeclaration",
												"scope": 3743,
												"src": "784:36:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 3712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:15:18",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "763:58:18"
									},
									"returnParameters": {
										"id": 3717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "841:0:18"
									},
									"scope": 3866,
									"src": "744:346:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3754,
										"nodeType": "Block",
										"src": "1168:48:18",
										"statements": [
											{
												"expression": {
													"id": 3752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3750,
														"name": "mintPaymentReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3697,
														"src": "1178:19:18",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3751,
														"name": "_receiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3745,
														"src": "1200:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1178:31:18",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 3753,
												"nodeType": "ExpressionStatement",
												"src": "1178:31:18"
											}
										]
									},
									"functionSelector": "65ebf99a",
									"id": 3755,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3748,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3747,
												"name": "onlyOwner",
												"nameLocations": [
													"1158:9:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "1158:9:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "1158:9:18"
										}
									],
									"name": "setPaymentReceiver",
									"nameLocation": "1105:18:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3745,
												"mutability": "mutable",
												"name": "_receiver",
												"nameLocation": "1140:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 3755,
												"src": "1124:25:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 3744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1124:15:18",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1123:27:18"
									},
									"returnParameters": {
										"id": 3749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1168:0:18"
									},
									"scope": 3866,
									"src": "1096:120:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3773,
										"nodeType": "Block",
										"src": "1277:103:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3763,
																"name": "_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3757,
																"src": "1295:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3764,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1304:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1295:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d696e745072696365206d757374206265206120706f736974697665206e756d626572",
															"id": 3766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1307:37:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_286b15b37e2bf53146aa048647a24c582b1912850fe58d31cf21c0384de0c864",
																"typeString": "literal_string \"mintPrice must be a positive number\""
															},
															"value": "mintPrice must be a positive number"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_286b15b37e2bf53146aa048647a24c582b1912850fe58d31cf21c0384de0c864",
																"typeString": "literal_string \"mintPrice must be a positive number\""
															}
														],
														"id": 3762,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1287:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1287:58:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3768,
												"nodeType": "ExpressionStatement",
												"src": "1287:58:18"
											},
											{
												"expression": {
													"id": 3771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3769,
														"name": "mintPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3699,
														"src": "1355:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3770,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3757,
														"src": "1367:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1355:18:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3772,
												"nodeType": "ExpressionStatement",
												"src": "1355:18:18"
											}
										]
									},
									"functionSelector": "f4a0a528",
									"id": 3774,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3760,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3759,
												"name": "onlyOwner",
												"nameLocations": [
													"1267:9:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "1267:9:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "1267:9:18"
										}
									],
									"name": "setMintPrice",
									"nameLocation": "1231:12:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3757,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "1252:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 3774,
												"src": "1244:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:16:18"
									},
									"returnParameters": {
										"id": 3761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1277:0:18"
									},
									"scope": 3866,
									"src": "1222:158:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3828,
										"nodeType": "Block",
										"src": "1488:450:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3786,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1506:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1510:5:18",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1506:9:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 3788,
																"name": "mintPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3699,
																"src": "1519:9:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1506:22:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072696365206d7573742062652067726561746572207468616e206d696e745072696365",
															"id": 3790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1530:38:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9a5e950ca93becddd09d65f9483491477a3ef6c5b9e7978b524dc1807f938867",
																"typeString": "literal_string \"Price must be greater than mintPrice\""
															},
															"value": "Price must be greater than mintPrice"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9a5e950ca93becddd09d65f9483491477a3ef6c5b9e7978b524dc1807f938867",
																"typeString": "literal_string \"Price must be greater than mintPrice\""
															}
														],
														"id": 3785,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1498:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1498:71:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3792,
												"nodeType": "ExpressionStatement",
												"src": "1498:71:18"
											},
											{
												"expression": {
													"id": 3794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1580:11:18",
													"subExpression": {
														"id": 3793,
														"name": "_tokenIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3695,
														"src": "1580:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3795,
												"nodeType": "ExpressionStatement",
												"src": "1580:11:18"
											},
											{
												"assignments": [
													3797
												],
												"declarations": [
													{
														"constant": false,
														"id": 3797,
														"mutability": "mutable",
														"name": "newTokenId",
														"nameLocation": "1609:10:18",
														"nodeType": "VariableDeclaration",
														"scope": 3828,
														"src": "1601:18:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3796,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1601:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3799,
												"initialValue": {
													"id": 3798,
													"name": "_tokenIds",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3695,
													"src": "1622:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1601:30:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3801,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1647:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1651:6:18",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1647:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3803,
															"name": "newTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3797,
															"src": "1659:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3800,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "1641:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1641:29:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3805,
												"nodeType": "ExpressionStatement",
												"src": "1641:29:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3807,
															"name": "newTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3797,
															"src": "1693:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3808,
															"name": "tokenURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3776,
															"src": "1705:8:18",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3806,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1834,
														"src": "1680:12:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1680:34:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3810,
												"nodeType": "ExpressionStatement",
												"src": "1680:34:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3814,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1825:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1829:5:18",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1825:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3811,
															"name": "mintPaymentReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3697,
															"src": "1796:19:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1816:8:18",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1796:28:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1796:39:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3817,
												"nodeType": "ExpressionStatement",
												"src": "1796:39:18"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3819,
															"name": "newTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3797,
															"src": "1864:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3820,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1876:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1880:6:18",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1876:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3822,
															"name": "tokenURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3776,
															"src": "1888:8:18",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 3823,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3778,
															"src": "1898:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3818,
														"name": "TokenCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3709,
														"src": "1851:12:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,string memory,uint256)"
														}
													},
													"id": 3824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1851:53:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3825,
												"nodeType": "EmitStatement",
												"src": "1846:58:18"
											},
											{
												"expression": {
													"id": 3826,
													"name": "newTokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3797,
													"src": "1921:10:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3784,
												"id": 3827,
												"nodeType": "Return",
												"src": "1914:17:18"
											}
										]
									},
									"functionSelector": "5afa3a72",
									"id": 3829,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3781,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3780,
												"name": "nonReentrant",
												"nameLocations": [
													"1457:12:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 493,
												"src": "1457:12:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "1457:12:18"
										}
									],
									"name": "mintNFT",
									"nameLocation": "1395:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3776,
												"mutability": "mutable",
												"name": "tokenURI",
												"nameLocation": "1417:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3829,
												"src": "1403:22:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3775,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1403:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3778,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1435:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3829,
												"src": "1427:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1427:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:39:18"
									},
									"returnParameters": {
										"id": 3784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3783,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3829,
												"src": "1479:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1479:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1478:9:18"
									},
									"scope": 3866,
									"src": "1386:552:18",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3864,
										"nodeType": "Block",
										"src": "2027:248:18",
										"statements": [
											{
												"assignments": [
													3833
												],
												"declarations": [
													{
														"constant": false,
														"id": 3833,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "2045:7:18",
														"nodeType": "VariableDeclaration",
														"scope": 3864,
														"src": "2037:15:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3832,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2037:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3839,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 3836,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2063:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_MQTOpenCollection_$3866",
																	"typeString": "contract MQTOpenCollection"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_MQTOpenCollection_$3866",
																	"typeString": "contract MQTOpenCollection"
																}
															],
															"id": 3835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2055:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3834,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2055:7:18",
																"typeDescriptions": {}
															}
														},
														"id": 3837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2055:13:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2069:7:18",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2055:21:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2037:39:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3841,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3833,
																"src": "2094:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3842,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2104:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2094:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2062616c616e636520746f207769746864726177",
															"id": 3844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2107:24:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5",
																"typeString": "literal_string \"No balance to withdraw\""
															},
															"value": "No balance to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5",
																"typeString": "literal_string \"No balance to withdraw\""
															}
														],
														"id": 3840,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2086:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2086:46:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3846,
												"nodeType": "ExpressionStatement",
												"src": "2086:46:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 3854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3850,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2158:3:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2162:6:18",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2158:10:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2150:8:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 3848,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2150:8:18",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 3852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2150:19:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3853,
																"name": "mintPaymentReceiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3697,
																"src": "2173:19:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2150:42:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420746865207061796d656e74207265636569766572",
															"id": 3855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2194:26:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cf616f29bbf2da0f655773e6b1629cda188a288c705b27a3713e96ee928d9c47",
																"typeString": "literal_string \"Not the payment receiver\""
															},
															"value": "Not the payment receiver"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cf616f29bbf2da0f655773e6b1629cda188a288c705b27a3713e96ee928d9c47",
																"typeString": "literal_string \"Not the payment receiver\""
															}
														],
														"id": 3847,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2142:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2142:79:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3857,
												"nodeType": "ExpressionStatement",
												"src": "2142:79:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3861,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3833,
															"src": "2260:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3858,
															"name": "mintPaymentReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3697,
															"src": "2231:19:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2251:8:18",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2231:28:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2231:37:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3863,
												"nodeType": "ExpressionStatement",
												"src": "2231:37:18"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 3865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "2009:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2017:2:18"
									},
									"returnParameters": {
										"id": 3831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2027:0:18"
									},
									"scope": 3866,
									"src": "2000:275:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3867,
							"src": "398:1879:18",
							"usedErrors": [
								30,
								35,
								211,
								214,
								2001,
								2006,
								2015,
								2020,
								2025,
								2032,
								2037,
								2042
							],
							"usedEvents": [
								41,
								219,
								1941,
								1948,
								2106,
								2115,
								2124,
								3709
							]
						}
					],
					"src": "32:2246:18"
				},
				"id": 18
			}
		}
	}
}